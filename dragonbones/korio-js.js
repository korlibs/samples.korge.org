(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'kotlin', 'klogger-js', 'kotlinx-coroutines-core', 'kds-js', 'korlibstd-js', 'kmem-js', 'klock-js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('kotlin'), require('klogger-js'), require('kotlinx-coroutines-core'), require('kds-js'), require('korlibstd-js'), require('kmem-js'), require('klock-js'));
  else {
    if (typeof kotlin === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'korio-js'.");
    }
    if (typeof this['klogger-js'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'klogger-js' was not found. Please, check whether 'klogger-js' is loaded prior to 'korio-js'.");
    }
    if (typeof this['kotlinx-coroutines-core'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'kotlinx-coroutines-core' was not found. Please, check whether 'kotlinx-coroutines-core' is loaded prior to 'korio-js'.");
    }
    if (typeof this['kds-js'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'kds-js' was not found. Please, check whether 'kds-js' is loaded prior to 'korio-js'.");
    }
    if (typeof this['korlibstd-js'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'korlibstd-js' was not found. Please, check whether 'korlibstd-js' is loaded prior to 'korio-js'.");
    }
    if (typeof this['kmem-js'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'kmem-js' was not found. Please, check whether 'kmem-js' is loaded prior to 'korio-js'.");
    }
    if (typeof this['klock-js'] === 'undefined') {
      throw new Error("Error loading module 'korio-js'. Its dependency 'klock-js' was not found. Please, check whether 'klock-js' is loaded prior to 'korio-js'.");
    }
    root['korio-js'] = factory(typeof this['korio-js'] === 'undefined' ? {} : this['korio-js'], kotlin, this['klogger-js'], this['kotlinx-coroutines-core'], this['kds-js'], this['korlibstd-js'], this['kmem-js'], this['klock-js']);
  }
}(this, function (_, Kotlin, $module$klogger_js, $module$kotlinx_coroutines_core, $module$kds_js, $module$korlibstd_js, $module$kmem_js, $module$klock_js) {
  'use strict';
  var $$importsForInline$$ = _.$$importsForInline$$ || (_.$$importsForInline$$ = {});
  var Unit = Kotlin.kotlin.Unit;
  var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
  var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
  var Kind_OBJECT = Kotlin.Kind.OBJECT;
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var Annotation = Kotlin.kotlin.Annotation;
  var Logger = $module$klogger_js.com.soywiz.klogger.Logger;
  var Regex_init = Kotlin.kotlin.text.Regex_init_61zpoe$;
  var toByte = Kotlin.toByte;
  var split = Kotlin.kotlin.text.split_o64adg$;
  var to = Kotlin.kotlin.to_ujzrz7$;
  var equals = Kotlin.equals;
  var toLongOrNull = Kotlin.kotlin.text.toLongOrNull_pdl1vz$;
  var Job = $module$kotlinx_coroutines_core.kotlinx.coroutines.Job_5dx9e$;
  var CompletableDeferred = $module$kotlinx_coroutines_core.kotlinx.coroutines.CompletableDeferred_xptg6w$;
  var StringBuilder_init = Kotlin.kotlin.text.StringBuilder_init;
  var withContext = $module$kotlinx_coroutines_core.kotlinx.coroutines.withContext_p810p1$;
  var CoroutineDispatcher = $module$kotlinx_coroutines_core.kotlinx.coroutines.CoroutineDispatcher;
  var delay = $module$kotlinx_coroutines_core.kotlinx.coroutines.delay_za3lpa$;
  var Kind_INTERFACE = Kotlin.Kind.INTERFACE;
  var ContinuationInterceptor = Kotlin.kotlin.coroutines.ContinuationInterceptor;
  var ensureNotNull = Kotlin.ensureNotNull;
  var Continuation = Kotlin.kotlin.coroutines.Continuation;
  var startCoroutine = Kotlin.kotlin.coroutines.startCoroutine_x18nsh$;
  var L0 = Kotlin.Long.ZERO;
  var PriorityQueue = $module$kds_js.com.soywiz.kds.PriorityQueue;
  var Delay = $module$kotlinx_coroutines_core.kotlinx.coroutines.Delay;
  var CoroutineStart = $module$kotlinx_coroutines_core.kotlinx.coroutines.CoroutineStart;
  var launch = $module$kotlinx_coroutines_core.kotlinx.coroutines.launch_aj7k42$;
  var async = $module$kotlinx_coroutines_core.kotlinx.coroutines.async_rwfjlp$;
  var get_0 = $module$korlibstd_js.com.soywiz.std.get_oy43sc$;
  var addAndGet = $module$korlibstd_js.com.soywiz.std.addAndGet_ne5qq6$;
  var NewAtomicInt = $module$korlibstd_js.com.soywiz.std.NewAtomicInt_za3lpa$;
  var CompletableDeferred_0 = $module$kotlinx_coroutines_core.kotlinx.coroutines.CompletableDeferred_mh5how$;
  var Throwable = Error;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
  var coroutines = Kotlin.kotlin.coroutines;
  var createCoroutine = Kotlin.kotlin.coroutines.createCoroutine_3a617i$;
  var Enum = Kotlin.kotlin.Enum;
  var throwISE = Kotlin.throwISE;
  var IllegalStateException_init = Kotlin.kotlin.IllegalStateException_init_pdl1vj$;
  var Any = Object;
  var throwCCE = Kotlin.throwCCE;
  var NoSuchElementException_init = Kotlin.kotlin.NoSuchElementException_init;
  var defineInlineFunction = Kotlin.defineInlineFunction;
  var wrapFunction = Kotlin.wrapFunction;
  var toList = Kotlin.kotlin.collections.toList_7wnvza$;
  var RuntimeException_init = Kotlin.kotlin.RuntimeException_init_pdl1vj$;
  var Extra = $module$kds_js.com.soywiz.kds.Extra;
  var Extra$Mixin = $module$kds_js.com.soywiz.kds.Extra.Mixin;
  var CancellationException = $module$kotlinx_coroutines_core.kotlinx.coroutines.CancellationException;
  var LinkedList_init = $module$kds_js.com.soywiz.kds.LinkedList_init_287e2$;
  var startCoroutineCancellable = $module$kotlinx_coroutines_core.kotlinx.coroutines.intrinsics.startCoroutineCancellable_3a617i$;
  var arraycopy = $module$kmem_js.com.soywiz.kmem.arraycopy_nlwz52$;
  var startCoroutineUndispatched = $module$kotlinx_coroutines_core.kotlinx.coroutines.intrinsics.startCoroutineUndispatched_x18nsh$;
  var throwUPAE = Kotlin.throwUPAE;
  var withTimeout = $module$kotlinx_coroutines_core.kotlinx.coroutines.withTimeout_u6y7q0$;
  var ByteArrayBuffer_init = $module$kmem_js.com.soywiz.kmem.ByteArrayBuffer_init_za3lpa$;
  var L65535 = Kotlin.Long.fromInt(65535);
  var until = Kotlin.kotlin.ranges.until_dqglrj$;
  var sliceArray = Kotlin.kotlin.collections.sliceArray_bo8l67$;
  var Pair = Kotlin.kotlin.Pair;
  var toUnsigned = $module$kmem_js.com.soywiz.kmem.toUnsigned_mz3mee$;
  var Exception_init = Kotlin.kotlin.Exception_init_pdl1vj$;
  var L_1 = Kotlin.Long.NEG_ONE;
  var toInt = Kotlin.kotlin.text.toInt_pdl1vz$;
  var startsWith = Kotlin.kotlin.text.startsWith_7epoxm$;
  var NumberFormatException = Kotlin.kotlin.NumberFormatException;
  var equals_0 = Kotlin.kotlin.text.equals_igcy3c$;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var toShort = Kotlin.toShort;
  var L4278190080 = new Kotlin.Long(-16777216, 0);
  var L16777215 = Kotlin.Long.fromInt(16777215);
  var shr = $module$kmem_js.com.soywiz.kmem.shr_798l30$;
  var shl = $module$kmem_js.com.soywiz.kmem.shl_798l30$;
  var and = $module$kmem_js.com.soywiz.kmem.and_798l30$;
  var readU8 = $module$kmem_js.com.soywiz.kmem.readU8_mrm5p$;
  var readU16_le = $module$kmem_js.com.soywiz.kmem.readU16_le_mrm5p$;
  var readS32_le = $module$kmem_js.com.soywiz.kmem.readS32_le_mrm5p$;
  var readS32_be = $module$kmem_js.com.soywiz.kmem.readS32_be_mrm5p$;
  var max = Kotlin.kotlin.collections.max_tmsbgo$;
  var UnsupportedOperationException_init = Kotlin.kotlin.UnsupportedOperationException_init;
  var ByteArraySlice = $module$kmem_js.com.soywiz.kmem.ByteArraySlice;
  var PropertyMetadata = Kotlin.PropertyMetadata;
  var lazy = Kotlin.kotlin.lazy_klfg04$;
  var write32_le = $module$kmem_js.com.soywiz.kmem.write32_le_ietg8x$;
  var copyOf = Kotlin.kotlin.collections.copyOf_mrm5p$;
  var UByteArray = $module$kmem_js.com.soywiz.kmem.UByteArray;
  var StringBuilder_init_0 = Kotlin.kotlin.text.StringBuilder_init_za3lpa$;
  var readU24_be = $module$kmem_js.com.soywiz.kmem.readU24_be_mrm5p$;
  var CharRange = Kotlin.kotlin.ranges.CharRange;
  var toBoxedChar = Kotlin.toBoxedChar;
  var iterator = Kotlin.kotlin.text.iterator_gw00vp$;
  var unboxChar = Kotlin.unboxChar;
  var joinToString = Kotlin.kotlin.collections.joinToString_fmv235$;
  var replace = Kotlin.kotlin.text.replace_680rmw$;
  var numberToInt = Kotlin.numberToInt;
  var toChar = Kotlin.toChar;
  var numberToDouble = Kotlin.numberToDouble;
  var MutableList = Kotlin.kotlin.collections.MutableList;
  var Uint8Buffer = $module$kmem_js.com.soywiz.kmem.Uint8Buffer;
  var Uint16Buffer = $module$kmem_js.com.soywiz.kmem.Uint16Buffer;
  var IntArrayList = $module$kds_js.com.soywiz.kds.IntArrayList;
  var DoubleArrayList = $module$kds_js.com.soywiz.kds.DoubleArrayList;
  var List = Kotlin.kotlin.collections.List;
  var toString = Kotlin.toString;
  var Set = Kotlin.kotlin.collections.Set;
  var toSet = Kotlin.kotlin.collections.toSet_7wnvza$;
  var downTo = Kotlin.kotlin.ranges.downTo_dqglrj$;
  var ListIterator = Kotlin.kotlin.collections.ListIterator;
  var Exception = Kotlin.kotlin.Exception;
  var UnsupportedOperationException_init_0 = Kotlin.kotlin.UnsupportedOperationException_init_pdl1vj$;
  var replace_0 = Kotlin.kotlin.text.replace_r2fvfm$;
  var substringAfterLast = Kotlin.kotlin.text.substringAfterLast_8cymmc$;
  var substringBeforeLast = Kotlin.kotlin.text.substringBeforeLast_8cymmc$;
  var substringBefore = Kotlin.kotlin.text.substringBefore_8cymmc$;
  var substringAfter = Kotlin.kotlin.text.substringAfter_8cymmc$;
  var get_indices = Kotlin.kotlin.text.get_indices_gw00vp$;
  var L2147483646 = Kotlin.Long.fromInt(2147483646);
  var IllegalArgumentException_init = Kotlin.kotlin.IllegalArgumentException_init_pdl1vj$;
  var contains = Kotlin.kotlin.text.contains_sgbm27$;
  var DateTime = $module$klock_js.com.soywiz.klock.DateTime;
  var toList_0 = Kotlin.kotlin.collections.toList_us0mfu$;
  var lines = Kotlin.kotlin.text.lines_gw00vp$;
  var lmapOf = $module$kds_js.com.soywiz.kds.lmapOf_qfcya0$;
  var klogger = $module$klogger_js.com.soywiz.klogger;
  var indexOf = Kotlin.kotlin.text.indexOf_l5u8uk$;
  var split_0 = Kotlin.kotlin.text.split_ip8yn$;
  var trimEnd = Kotlin.kotlin.text.trimEnd_wqw3xr$;
  var trim = Kotlin.kotlin.text.trim_wqw3xr$;
  var trimStart = Kotlin.kotlin.text.trimStart_wqw3xr$;
  var LinkedHashMap_init = Kotlin.kotlin.collections.LinkedHashMap_init_q3lmfv$;
  var toLongArray = Kotlin.kotlin.collections.toLongArray_558emf$;
  var toIntOrNull = Kotlin.kotlin.text.toIntOrNull_pdl1vz$;
  var L2048 = Kotlin.Long.fromInt(2048);
  var LinkedHashSet_init = Kotlin.kotlin.collections.LinkedHashSet_init_287e2$;
  var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
  var hashMapOf = Kotlin.kotlin.collections.hashMapOf_qfcya0$;
  var HashMap = Kotlin.kotlin.collections.HashMap;
  var Map = Kotlin.kotlin.collections.Map;
  var numberToLong = Kotlin.numberToLong;
  var Iterable = Kotlin.kotlin.collections.Iterable;
  var klock = $module$klock_js.com.soywiz.klock;
  var plus = Kotlin.kotlin.collections.plus_qloxvw$;
  var toMap = Kotlin.kotlin.collections.toMap_6hr0sd$;
  var first = Kotlin.kotlin.collections.first_2p1efm$;
  var ArrayList_init_0 = Kotlin.kotlin.collections.ArrayList_init_mqih57$;
  var removeAll = Kotlin.kotlin.collections.removeAll_qafx1e$;
  var startCoroutine_0 = Kotlin.kotlin.coroutines.startCoroutine_3a617i$;
  var startsWith_0 = Kotlin.kotlin.text.startsWith_sgbm27$;
  var plus_0 = Kotlin.kotlin.collections.plus_iwxh38$;
  var mapOf = Kotlin.kotlin.collections.mapOf_x2b85n$;
  var listOf = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var toIntClamp = $module$kmem_js.com.soywiz.kmem.toIntClamp_jfhjuu$;
  var indexOf_0 = $module$kmem_js.com.soywiz.kmem.indexOf_ndt7zj$;
  var endsWith = Kotlin.kotlin.text.endsWith_7epoxm$;
  var toUInt = $module$kmem_js.com.soywiz.kmem.toUInt_s8ev3n$;
  var listOf_0 = Kotlin.kotlin.collections.listOf_mh5how$;
  var plus_1 = Kotlin.kotlin.collections.plus_mydzjv$;
  var getBits = $module$kmem_js.com.soywiz.kmem.getBits_e4yvb3$;
  var filterNotNull = Kotlin.kotlin.collections.filterNotNull_m3lr2h$;
  var firstOrNull = Kotlin.kotlin.collections.firstOrNull_2p1efm$;
  var contentEquals = Kotlin.arrayEquals;
  var contentHashCode = Kotlin.arrayHashCode;
  var contentToString = Kotlin.arrayToString;
  var withIndex = Kotlin.kotlin.text.withIndex_gw00vp$;
  var readS16_LEBE = $module$kmem_js.com.soywiz.kmem.readS16_LEBE_v6bsu2$;
  var write16_LEBE = $module$kmem_js.com.soywiz.kmem.write16_LEBE_vahp5y$;
  var MutableMap = Kotlin.kotlin.collections.MutableMap;
  var toDoubleOrNull = Kotlin.kotlin.text.toDoubleOrNull_pdl1vz$;
  var numberToByte = Kotlin.numberToByte;
  var first_0 = Kotlin.kotlin.text.first_gw00vp$;
  var numberToChar = Kotlin.numberToChar;
  var numberToShort = Kotlin.numberToShort;
  var toIntOrNull_0 = Kotlin.kotlin.text.toIntOrNull_6ic1pp$;
  var toLongOrNull_0 = Kotlin.kotlin.text.toLongOrNull_6ic1pp$;
  var toDouble = Kotlin.kotlin.text.toDouble_pdl1vz$;
  var toIntArray = Kotlin.kotlin.collections.toIntArray_fx3nzu$;
  var toFloatArray = Kotlin.kotlin.collections.toFloatArray_zwy31$;
  var toDoubleArray = Kotlin.kotlin.collections.toDoubleArray_tcduak$;
  var substring = Kotlin.kotlin.text.substring_fc3b62$;
  var indexOf_1 = Kotlin.kotlin.text.indexOf_8eortd$;
  var get_lastIndex = Kotlin.kotlin.text.get_lastIndex_gw00vp$;
  var lastIndexOf = Kotlin.kotlin.text.lastIndexOf_8eortd$;
  var clamp = $module$kmem_js.com.soywiz.kmem.clamp_e4yvb3$;
  var toLong = Kotlin.kotlin.text.toLong_6ic1pp$;
  var NewAtomicLong = $module$korlibstd_js.com.soywiz.std.NewAtomicLong_s8cxhz$;
  var dropLast = Kotlin.kotlin.text.dropLast_6ic1pp$;
  var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
  var reversed = Kotlin.kotlin.collections.reversed_7wnvza$;
  var toInt_0 = Kotlin.kotlin.text.toInt_6ic1pp$;
  var sortedBy2 = $module$kds_js.com.soywiz.kds.sortedBy2_nd8ern$;
  var contains_0 = Kotlin.kotlin.collections.contains_2ws7j4$;
  var getCyclic = $module$kds_js.com.soywiz.kds.getCyclic_yzln2o$;
  var slice = Kotlin.kotlin.collections.slice_6bjbi1$;
  var SimplerDateFormat = $module$klock_js.com.soywiz.klock.SimplerDateFormat;
  var HashSet_init = Kotlin.kotlin.collections.HashSet_init_mqih57$;
  var toLinkedMap = $module$kds_js.com.soywiz.kds.toLinkedMap_6hr0sd$;
  var PrimitiveClasses$booleanClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.booleanClass;
  var PrimitiveClasses$byteClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.byteClass;
  var getKClass = Kotlin.getKClass;
  var Char = Kotlin.BoxedChar;
  var PrimitiveClasses$shortClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.shortClass;
  var PrimitiveClasses$intClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.intClass;
  var Long = Kotlin.Long;
  var PrimitiveClasses$floatClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.floatClass;
  var PrimitiveClasses$doubleClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.doubleClass;
  var toMutableList = Kotlin.kotlin.collections.toMutableList_4c7yge$;
  var PrimitiveClasses$stringClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.stringClass;
  var plus_2 = Kotlin.kotlin.collections.plus_2ws7j4$;
  var NoSuchElementException = Kotlin.kotlin.NoSuchElementException;
  var toList_1 = Kotlin.kotlin.collections.toList_abgq59$;
  var firstOrNull_0 = Kotlin.kotlin.collections.firstOrNull_7wnvza$;
  var toLong_0 = Kotlin.kotlin.text.toLong_pdl1vz$;
  var toCaseInsensitiveTreeMap = $module$kds_js.com.soywiz.kds.toCaseInsensitiveTreeMap_yrl0k6$;
  var first_1 = Kotlin.kotlin.collections.first_7wnvza$;
  var flip = $module$kds_js.com.soywiz.kds.flip_go3l1a$;
  var Iterator = Kotlin.kotlin.collections.Iterator;
  var ListReader = $module$kds_js.com.soywiz.kds.ListReader;
  var repeat = Kotlin.kotlin.text.repeat_94bcnn$;
  var isWhitespace = Kotlin.kotlin.text.isWhitespace_myv2d0$;
  var last = Kotlin.kotlin.collections.last_2p1efm$;
  var last_0 = Kotlin.kotlin.collections.last_964n91$;
  var clamp_0 = $module$kmem_js.com.soywiz.kmem.clamp_ekzx8g$;
  var indexOf_2 = Kotlin.kotlin.collections.indexOf_jlnu8a$;
  var readS8 = $module$kmem_js.com.soywiz.kmem.readS8_mrm5p$;
  var readU24_le = $module$kmem_js.com.soywiz.kmem.readU24_le_mrm5p$;
  var readU32_le = $module$kmem_js.com.soywiz.kmem.readU32_le_mrm5p$;
  var readS16_le = $module$kmem_js.com.soywiz.kmem.readS16_le_mrm5p$;
  var readS24_le = $module$kmem_js.com.soywiz.kmem.readS24_le_mrm5p$;
  var readS64_le = $module$kmem_js.com.soywiz.kmem.readS64_le_mrm5p$;
  var readF32_le = $module$kmem_js.com.soywiz.kmem.readF32_le_mrm5p$;
  var readF64_le = $module$kmem_js.com.soywiz.kmem.readF64_le_mrm5p$;
  var readU16_be = $module$kmem_js.com.soywiz.kmem.readU16_be_mrm5p$;
  var readU32_be = $module$kmem_js.com.soywiz.kmem.readU32_be_mrm5p$;
  var readS16_be = $module$kmem_js.com.soywiz.kmem.readS16_be_mrm5p$;
  var readS24_be = $module$kmem_js.com.soywiz.kmem.readS24_be_mrm5p$;
  var readS64_be = $module$kmem_js.com.soywiz.kmem.readS64_be_mrm5p$;
  var readF32_be = $module$kmem_js.com.soywiz.kmem.readF32_be_mrm5p$;
  var readF64_be = $module$kmem_js.com.soywiz.kmem.readF64_be_mrm5p$;
  var readShortArray_le = $module$kmem_js.com.soywiz.kmem.readShortArray_le_ietg8x$;
  var readShortArray_be = $module$kmem_js.com.soywiz.kmem.readShortArray_be_ietg8x$;
  var readCharArray_le = $module$kmem_js.com.soywiz.kmem.readCharArray_le_ietg8x$;
  var readCharArray_be = $module$kmem_js.com.soywiz.kmem.readCharArray_be_ietg8x$;
  var readIntArray_le = $module$kmem_js.com.soywiz.kmem.readIntArray_le_ietg8x$;
  var readIntArray_be = $module$kmem_js.com.soywiz.kmem.readIntArray_be_ietg8x$;
  var readLongArray_le = $module$kmem_js.com.soywiz.kmem.readLongArray_le_ietg8x$;
  var readFloatArray_le = $module$kmem_js.com.soywiz.kmem.readFloatArray_le_ietg8x$;
  var readFloatArray_be = $module$kmem_js.com.soywiz.kmem.readFloatArray_be_ietg8x$;
  var readDoubleArray_le = $module$kmem_js.com.soywiz.kmem.readDoubleArray_le_ietg8x$;
  var readDoubleArray_be = $module$kmem_js.com.soywiz.kmem.readDoubleArray_be_ietg8x$;
  var write8 = $module$kmem_js.com.soywiz.kmem.write8_ietg8x$;
  var write16_le = $module$kmem_js.com.soywiz.kmem.write16_le_ietg8x$;
  var write24_le = $module$kmem_js.com.soywiz.kmem.write24_le_ietg8x$;
  var write32_le_0 = $module$kmem_js.com.soywiz.kmem.write32_le_2iihii$;
  var write64_le = $module$kmem_js.com.soywiz.kmem.write64_le_2iihii$;
  var writeF32_le = $module$kmem_js.com.soywiz.kmem.writeF32_le_6tgd4e$;
  var writeF64_le = $module$kmem_js.com.soywiz.kmem.writeF64_le_2mkvlt$;
  var write16_be = $module$kmem_js.com.soywiz.kmem.write16_be_ietg8x$;
  var write24_be = $module$kmem_js.com.soywiz.kmem.write24_be_ietg8x$;
  var write32_be = $module$kmem_js.com.soywiz.kmem.write32_be_ietg8x$;
  var write32_be_0 = $module$kmem_js.com.soywiz.kmem.write32_be_2iihii$;
  var write64_be = $module$kmem_js.com.soywiz.kmem.write64_be_2iihii$;
  var writeF32_be = $module$kmem_js.com.soywiz.kmem.writeF32_be_6tgd4e$;
  var writeF64_be = $module$kmem_js.com.soywiz.kmem.writeF64_be_2mkvlt$;
  var nextAlignedTo = $module$kmem_js.com.soywiz.kmem.nextAlignedTo_2p08ub$;
  var writeArray_le = $module$kmem_js.com.soywiz.kmem.writeArray_le_ns39l7$;
  var writeArray_le_0 = $module$kmem_js.com.soywiz.kmem.writeArray_le_744o0l$;
  var writeArray_le_1 = $module$kmem_js.com.soywiz.kmem.writeArray_le_ir5l5k$;
  var writeArray_le_2 = $module$kmem_js.com.soywiz.kmem.writeArray_le_nitnbj$;
  var writeArray_le_3 = $module$kmem_js.com.soywiz.kmem.writeArray_le_l7896z$;
  var writeArray_le_4 = $module$kmem_js.com.soywiz.kmem.writeArray_le_t2mdne$;
  var writeArray_be = $module$kmem_js.com.soywiz.kmem.writeArray_be_ns39l7$;
  var writeArray_be_0 = $module$kmem_js.com.soywiz.kmem.writeArray_be_744o0l$;
  var writeArray_be_1 = $module$kmem_js.com.soywiz.kmem.writeArray_be_ir5l5k$;
  var writeArray_be_2 = $module$kmem_js.com.soywiz.kmem.writeArray_be_nitnbj$;
  var writeArray_be_3 = $module$kmem_js.com.soywiz.kmem.writeArray_be_l7896z$;
  var writeArray_be_4 = $module$kmem_js.com.soywiz.kmem.writeArray_be_t2mdne$;
  var contains_1 = Kotlin.kotlin.ranges.contains_8sy4e8$;
  var nextAlignedTo_0 = $module$kmem_js.com.soywiz.kmem.nextAlignedTo_dqglrj$;
  var readByteArray = $module$kmem_js.com.soywiz.kmem.readByteArray_ietg8x$;
  var readLongArray_be = $module$kmem_js.com.soywiz.kmem.readLongArray_be_ietg8x$;
  var Queue = $module$kds_js.com.soywiz.kds.Queue;
  var toIntSafe = $module$kmem_js.com.soywiz.kmem.toIntSafe_mts6qi$;
  var Long$Companion$MAX_VALUE = Kotlin.Long.MAX_VALUE;
  var ByteArrayBuffer = $module$kmem_js.com.soywiz.kmem.ByteArrayBuffer;
  var Deferred = $module$kotlinx_coroutines_core.kotlinx.coroutines.Deferred;
  var TimeProvider = $module$klock_js.com.soywiz.klock.TimeProvider;
  var endsWith_0 = Kotlin.kotlin.text.endsWith_sgbm27$;
  var first_2 = Kotlin.kotlin.collections.first_us0mfu$;
  var max_0 = Kotlin.kotlin.collections.max_exjks8$;
  var arrayListOf = Kotlin.kotlin.collections.arrayListOf_i5x0yv$;
  var abs = Kotlin.kotlin.math.abs_s8cxhz$;
  var abs_0 = Kotlin.kotlin.math.abs_za3lpa$;
  var urem = $module$kmem_js.com.soywiz.kmem.urem_dqglrj$;
  var udiv = $module$kmem_js.com.soywiz.kmem.udiv_dqglrj$;
  var urem_0 = $module$kmem_js.com.soywiz.kmem.urem_2p08ub$;
  var udiv_0 = $module$kmem_js.com.soywiz.kmem.udiv_2p08ub$;
  var contains_2 = Kotlin.kotlin.text.contains_li3zpu$;
  var toCollection = Kotlin.kotlin.collections.toCollection_5n4o2z$;
  var sorted = Kotlin.kotlin.collections.sorted_exjks8$;
  var distinct = Kotlin.kotlin.collections.distinct_7wnvza$;
  var joinToString_0 = Kotlin.kotlin.collections.joinToString_cgipc5$;
  var Pointer = $module$kmem_js.com.soywiz.kmem.Pointer;
  var UByteArray_init = $module$kmem_js.com.soywiz.kmem.UByteArray_init_za3lpa$;
  var RegexOption = Kotlin.kotlin.text.RegexOption;
  var Regex_init_0 = Kotlin.kotlin.text.Regex_init_sb3q2$;
  var buildSequence = Kotlin.kotlin.sequences.buildSequence_wz63th$;
  var L1 = Kotlin.Long.ONE;
  var toList_2 = Kotlin.kotlin.collections.toList_964n91$;
  var toTypedArray = Kotlin.kotlin.collections.toTypedArray_964n91$;
  var zipWithNext = Kotlin.kotlin.collections.zipWithNext_7wnvza$;
  var coroutines_0 = $module$kotlinx_coroutines_core.kotlinx.coroutines;
  HttpServer$Request.prototype = Object.create(HttpServer$BaseRequest.prototype);
  HttpServer$Request.prototype.constructor = HttpServer$Request;
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype = Object.create(HttpServer$Request.prototype);
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype.constructor = KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral;
  KorioNativeDefaults$createServer$ObjectLiteral.prototype = Object.create(HttpServer.prototype);
  KorioNativeDefaults$createServer$ObjectLiteral.prototype.constructor = KorioNativeDefaults$createServer$ObjectLiteral;
  TestCoroutineDispatcher.prototype = Object.create(CoroutineDispatcher.prototype);
  TestCoroutineDispatcher.prototype.constructor = TestCoroutineDispatcher;
  EmptyContinuation.prototype = Object.create(OldContinuationAdaptor.prototype);
  EmptyContinuation.prototype.constructor = EmptyContinuation;
  EmptyContinuation$Companion.prototype = Object.create(EmptyContinuation.prototype);
  EmptyContinuation$Companion.prototype.constructor = EmptyContinuation$Companion;
  SuspendingIteratorCoroutine$State.prototype = Object.create(Enum.prototype);
  SuspendingIteratorCoroutine$State.prototype.constructor = SuspendingIteratorCoroutine$State;
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype = Object.create(CoroutineDispatcher.prototype);
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.constructor = runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral;
  runBlockingNoSuspensions$ObjectLiteral.prototype = Object.create(OldContinuationAdaptor.prototype);
  runBlockingNoSuspensions$ObjectLiteral.prototype.constructor = runBlockingNoSuspensions$ObjectLiteral;
  Deflate$Companion.prototype = Object.create(Deflate.prototype);
  Deflate$Companion.prototype.constructor = Deflate$Companion;
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype = Object.create(SevenZip$LzmaEncoder$LenEncoder.prototype);
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.constructor = SevenZip$LzmaEncoder$LenPriceTableEncoder;
  SevenZip$LzBinTree.prototype = Object.create(SevenZip$LzInWindow.prototype);
  SevenZip$LzBinTree.prototype.constructor = SevenZip$LzBinTree;
  AsyncHash$MessageDigestHash.prototype = Object.create(AsyncHash.prototype);
  AsyncHash$MessageDigestHash.prototype.constructor = AsyncHash$MessageDigestHash;
  AsyncHash$CRC32Hash.prototype = Object.create(AsyncHash.prototype);
  AsyncHash$CRC32Hash.prototype.constructor = AsyncHash$CRC32Hash;
  SyncHash$MessageDigestHash.prototype = Object.create(SyncHash.prototype);
  SyncHash$MessageDigestHash.prototype.constructor = SyncHash$MessageDigestHash;
  InvalidOperationException.prototype = Object.create(Exception.prototype);
  InvalidOperationException.prototype.constructor = InvalidOperationException;
  OutOfBoundsException.prototype = Object.create(Exception.prototype);
  OutOfBoundsException.prototype.constructor = OutOfBoundsException;
  KeyNotFoundException.prototype = Object.create(Exception.prototype);
  KeyNotFoundException.prototype.constructor = KeyNotFoundException;
  NotImplementedException.prototype = Object.create(Exception.prototype);
  NotImplementedException.prototype.constructor = NotImplementedException;
  InvalidArgumentException.prototype = Object.create(Exception.prototype);
  InvalidArgumentException.prototype.constructor = InvalidArgumentException;
  MustValidateCodeException.prototype = Object.create(Exception.prototype);
  MustValidateCodeException.prototype.constructor = MustValidateCodeException;
  MustOverrideException.prototype = Object.create(Exception.prototype);
  MustOverrideException.prototype.constructor = MustOverrideException;
  DeprecatedException.prototype = Object.create(Exception.prototype);
  DeprecatedException.prototype.constructor = DeprecatedException;
  UnexpectedException.prototype = Object.create(Exception.prototype);
  UnexpectedException.prototype.constructor = UnexpectedException;
  Vfs$Proxy.prototype = Object.create(Vfs.prototype);
  Vfs$Proxy.prototype.constructor = Vfs$Proxy;
  Vfs$Decorator.prototype = Object.create(Vfs$Proxy.prototype);
  Vfs$Decorator.prototype.constructor = Vfs$Decorator;
  Vfs$FileEvent$Kind.prototype = Object.create(Enum.prototype);
  Vfs$FileEvent$Kind.prototype.constructor = Vfs$FileEvent$Kind;
  VfsOpenMode.prototype = Object.create(Enum.prototype);
  VfsOpenMode.prototype.constructor = VfsOpenMode;
  IOException.prototype = Object.create(Exception.prototype);
  IOException.prototype.constructor = IOException;
  VfsProcessException.prototype = Object.create(IOException.prototype);
  VfsProcessException.prototype.constructor = VfsProcessException;
  VfsFile$execToString$ObjectLiteral.prototype = Object.create(VfsProcessHandler.prototype);
  VfsFile$execToString$ObjectLiteral.prototype.constructor = VfsFile$execToString$ObjectLiteral;
  VfsFile$passthru$ObjectLiteral.prototype = Object.create(VfsProcessHandler.prototype);
  VfsFile$passthru$ObjectLiteral.prototype.constructor = VfsFile$passthru$ObjectLiteral;
  VfsFile$redirected$ObjectLiteral.prototype = Object.create(Vfs$Proxy.prototype);
  VfsFile$redirected$ObjectLiteral.prototype.constructor = VfsFile$redirected$ObjectLiteral;
  VfsFile.prototype = Object.create(VfsNamed.prototype);
  VfsFile.prototype.constructor = VfsFile;
  IsoVfs_1.prototype = Object.create(Vfs.prototype);
  IsoVfs_1.prototype.constructor = IsoVfs_1;
  JailVfs$ObjectLiteral.prototype = Object.create(Vfs$Proxy.prototype);
  JailVfs$ObjectLiteral.prototype.constructor = JailVfs$ObjectLiteral;
  LocalVfs.prototype = Object.create(Vfs.prototype);
  LocalVfs.prototype.constructor = LocalVfs;
  LogVfs$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  LogVfs$open$ObjectLiteral.prototype.constructor = LogVfs$open$ObjectLiteral;
  LogVfs.prototype = Object.create(Vfs$Proxy.prototype);
  LogVfs.prototype.constructor = LogVfs;
  MapLikeStorageVfs$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  MapLikeStorageVfs$open$ObjectLiteral.prototype.constructor = MapLikeStorageVfs$open$ObjectLiteral;
  MapLikeStorageVfs.prototype = Object.create(Vfs.prototype);
  MapLikeStorageVfs.prototype.constructor = MapLikeStorageVfs;
  MergedVfs.prototype = Object.create(Vfs$Proxy.prototype);
  MergedVfs.prototype.constructor = MergedVfs;
  MountableVfs$lambda$ObjectLiteral.prototype = Object.create(Vfs$Proxy.prototype);
  MountableVfs$lambda$ObjectLiteral.prototype.constructor = MountableVfs$lambda$ObjectLiteral;
  MountableVfs$lambda$ObjectLiteral_0.prototype = Object.create(OldContinuationAdaptor.prototype);
  MountableVfs$lambda$ObjectLiteral_0.prototype.constructor = MountableVfs$lambda$ObjectLiteral_0;
  NodeVfs$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  NodeVfs$open$ObjectLiteral.prototype.constructor = NodeVfs$open$ObjectLiteral;
  NodeVfs.prototype = Object.create(Vfs.prototype);
  NodeVfs.prototype.constructor = NodeVfs;
  UrlVfs$open$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  UrlVfs$open$ObjectLiteral.prototype.constructor = UrlVfs$open$ObjectLiteral;
  UrlVfs_1.prototype = Object.create(Vfs.prototype);
  UrlVfs_1.prototype.constructor = UrlVfs_1;
  ZipVfs$Impl.prototype = Object.create(Vfs.prototype);
  ZipVfs$Impl.prototype.constructor = ZipVfs$Impl;
  Language_0.prototype = Object.create(Enum.prototype);
  Language_0.prototype.constructor = Language_0;
  UTC8CharsetBase.prototype = Object.create(Charset.prototype);
  UTC8CharsetBase.prototype.constructor = UTC8CharsetBase;
  SingleByteCharset.prototype = Object.create(Charset.prototype);
  SingleByteCharset.prototype.constructor = SingleByteCharset;
  ISO_8859_1.prototype = Object.create(SingleByteCharset.prototype);
  ISO_8859_1.prototype.constructor = ISO_8859_1;
  UTF8.prototype = Object.create(UTC8CharsetBase.prototype);
  UTF8.prototype.constructor = UTF8;
  UTF16Charset.prototype = Object.create(Charset.prototype);
  UTF16Charset.prototype.constructor = UTF16Charset;
  ASCII.prototype = Object.create(Charset.prototype);
  ASCII.prototype.constructor = ASCII;
  threadLocal$local$ObjectLiteral.prototype = Object.create(KorioNative$NativeThreadLocal.prototype);
  threadLocal$local$ObjectLiteral.prototype.constructor = threadLocal$local$ObjectLiteral;
  Http$Methods.prototype = Object.create(Enum.prototype);
  Http$Methods.prototype.constructor = Http$Methods;
  Http$HttpException.prototype = Object.create(IOException.prototype);
  Http$HttpException.prototype.constructor = Http$HttpException;
  Http$RedirectException.prototype = Object.create(Http$HttpException.prototype);
  Http$RedirectException.prototype.constructor = Http$RedirectException;
  DelayedHttpClient.prototype = Object.create(HttpClient.prototype);
  DelayedHttpClient.prototype.constructor = DelayedHttpClient;
  FakeHttpClient.prototype = Object.create(HttpClient.prototype);
  FakeHttpClient.prototype.constructor = FakeHttpClient;
  HttpServer$WsRequest.prototype = Object.create(HttpServer$BaseRequest.prototype);
  HttpServer$WsRequest.prototype.constructor = HttpServer$WsRequest;
  FakeRequest.prototype = Object.create(HttpServer$Request.prototype);
  FakeRequest.prototype.constructor = FakeRequest;
  WebSocketException.prototype = Object.create(IOException.prototype);
  WebSocketException.prototype.constructor = WebSocketException;
  Xml$Type.prototype = Object.create(Enum.prototype);
  Xml$Type.prototype.constructor = Xml$Type;
  XmlStream$Element$ProcessingInstructionTag.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$ProcessingInstructionTag.prototype.constructor = XmlStream$Element$ProcessingInstructionTag;
  XmlStream$Element$OpenCloseTag.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$OpenCloseTag.prototype.constructor = XmlStream$Element$OpenCloseTag;
  XmlStream$Element$OpenTag.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$OpenTag.prototype.constructor = XmlStream$Element$OpenTag;
  XmlStream$Element$CommentTag.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$CommentTag.prototype.constructor = XmlStream$Element$CommentTag;
  XmlStream$Element$CloseTag.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$CloseTag.prototype.constructor = XmlStream$Element$CloseTag;
  XmlStream$Element$Text.prototype = Object.create(XmlStream$Element.prototype);
  XmlStream$Element$Text.prototype.constructor = XmlStream$Element$Text;
  toAsyncStream$ObjectLiteral.prototype = Object.create(AsyncStreamBase.prototype);
  toAsyncStream$ObjectLiteral.prototype.constructor = toAsyncStream$ObjectLiteral;
  SliceAsyncStreamBase.prototype = Object.create(AsyncStreamBase.prototype);
  SliceAsyncStreamBase.prototype.constructor = SliceAsyncStreamBase;
  BufferedStreamBase.prototype = Object.create(AsyncStreamBase.prototype);
  BufferedStreamBase.prototype.constructor = BufferedStreamBase;
  SyncAsyncStreamBase.prototype = Object.create(AsyncStreamBase.prototype);
  SyncAsyncStreamBase.prototype.constructor = SyncAsyncStreamBase;
  SyncAsyncStreamBaseInWorker.prototype = Object.create(AsyncStreamBase.prototype);
  SyncAsyncStreamBaseInWorker.prototype.constructor = SyncAsyncStreamBaseInWorker;
  MemoryAsyncStreamBase.prototype = Object.create(AsyncStreamBase.prototype);
  MemoryAsyncStreamBase.prototype.constructor = MemoryAsyncStreamBase;
  SliceSyncStreamBase.prototype = Object.create(SyncStreamBase.prototype);
  SliceSyncStreamBase.prototype.constructor = SliceSyncStreamBase;
  FillSyncStreamBase.prototype = Object.create(SyncStreamBase.prototype);
  FillSyncStreamBase.prototype.constructor = FillSyncStreamBase;
  MemorySyncStreamBase.prototype = Object.create(SyncStreamBase.prototype);
  MemorySyncStreamBase.prototype.constructor = MemorySyncStreamBase;
  ExpectedException.prototype = Object.create(Exception.prototype);
  ExpectedException.prototype.constructor = ExpectedException;
  EOFException.prototype = Object.create(IOException.prototype);
  EOFException.prototype.constructor = EOFException;
  FileNotFoundException.prototype = Object.create(IOException.prototype);
  FileNotFoundException.prototype.constructor = FileNotFoundException;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  KorioNative$asyncEntryPoint$lambda$ObjectLiteral.prototype = Object.create(OldContinuationAdaptor.prototype);
  KorioNative$asyncEntryPoint$lambda$ObjectLiteral.prototype.constructor = KorioNative$asyncEntryPoint$lambda$ObjectLiteral;
  KorioNative$suspendTest$lambda$ObjectLiteral.prototype = Object.create(OldContinuationAdaptor.prototype);
  KorioNative$suspendTest$lambda$ObjectLiteral.prototype.constructor = KorioNative$suspendTest$lambda$ObjectLiteral;
  KorioNative$asyncSocketFactory$lambda$ObjectLiteral.prototype = Object.create(AsyncSocketFactory.prototype);
  KorioNative$asyncSocketFactory$lambda$ObjectLiteral.prototype.constructor = KorioNative$asyncSocketFactory$lambda$ObjectLiteral;
  HttpClientBrowserJs.prototype = Object.create(HttpClient.prototype);
  HttpClientBrowserJs.prototype.constructor = HttpClientBrowserJs;
  JsWebSocketClientFactory.prototype = Object.create(WebSocketClientFactory.prototype);
  JsWebSocketClientFactory.prototype.constructor = JsWebSocketClientFactory;
  JsWebSocketClient.prototype = Object.create(WebSocketClient.prototype);
  JsWebSocketClient.prototype.constructor = JsWebSocketClient;
  HttpClientNodeJs.prototype = Object.create(HttpClient.prototype);
  HttpClientNodeJs.prototype.constructor = HttpClientNodeJs;
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype = Object.create(HttpServer$Request.prototype);
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype.constructor = HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral;
  HttpSeverNodeJs.prototype = Object.create(HttpServer.prototype);
  HttpSeverNodeJs.prototype.constructor = HttpSeverNodeJs;
  NodeJsLocalVfs.prototype = Object.create(LocalVfs.prototype);
  NodeJsLocalVfs.prototype.constructor = NodeJsLocalVfs;
  NodeFDStream.prototype = Object.create(AsyncStreamBase.prototype);
  NodeFDStream.prototype.constructor = NodeFDStream;
  function Korio(entry) {
    Korio_0(KorioDefaultDispatcher, entry);
  }
  function Korio$lambda(closure$entry_0, closure$context_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Korio$lambda(closure$entry_0, closure$context_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Korio$lambda(closure$entry_0, closure$context_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$entry = closure$entry_0;
    this.local$closure$context = closure$context_0;
  }
  Coroutine$Korio$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Korio$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Korio$lambda.prototype.constructor = Coroutine$Korio$lambda;
  Coroutine$Korio$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$entry(this.local$closure$context, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Korio_0(context, entry) {
    KorioNative_getInstance().asyncEntryPoint_ykkwzu$(context, Korio$lambda(entry, context));
  }
  function Korio_1() {
    Korio_instance = this;
    this.VERSION = KORIO_VERSION;
  }
  Korio_1.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Korio',
    interfaces: []
  };
  var Korio_instance = null;
  function Korio_getInstance() {
    if (Korio_instance === null) {
      new Korio_1();
    }
    return Korio_instance;
  }
  function Language(value, prefix, suffix) {
    if (prefix === void 0)
      prefix = '';
    if (suffix === void 0)
      suffix = '';
    this.value = value;
    this.prefix = prefix;
    this.suffix = suffix;
  }
  Language.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Language',
    interfaces: [Annotation]
  };
  function KorioNativeDefaults() {
    KorioNativeDefaults_instance = this;
  }
  var Logger$Level = $module$klogger_js.com.soywiz.klogger.Logger.Level;
  KorioNativeDefaults.prototype.printStackTrace_tcv7n7$ = function (e) {
    var $this = Logger.Companion.invoke_61zpoe$('KorioNativeDefaults');
    var level = Logger$Level.ERROR;
    if ($this.isEnabled_fs4ikx$(level)) {
      $this.actualLog_pwm3k3$(level, 'printStackTrace:');
    }
    var $this_0 = Logger.Companion.invoke_61zpoe$('KorioNativeDefaults');
    var level_0 = Logger$Level.ERROR;
    if ($this_0.isEnabled_fs4ikx$(level_0)) {
      var tmp$;
      $this_0.actualLog_pwm3k3$(level_0, (tmp$ = e.message) != null ? tmp$ : 'Error');
    }
  };
  function KorioNativeDefaults$createServer$ObjectLiteral(closure$HeaderRegex) {
    this.closure$HeaderRegex = closure$HeaderRegex;
    HttpServer.call(this);
    this.BodyChunkSize = 1024;
    this.LimitRequestFieldSize = 8190;
    this.LimitRequestFields = 100;
    this.wshandler = KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda;
    this.handler = KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda;
    this.onClose = new Signal();
    this.actualPort_jhxtmc$_0 = -1;
  }
  Object.defineProperty(KorioNativeDefaults$createServer$ObjectLiteral.prototype, 'actualPort', {
    get: function () {
      return this.actualPort_jhxtmc$_0;
    },
    set: function (actualPort) {
      this.actualPort_jhxtmc$_0 = actualPort;
    }
  });
  KorioNativeDefaults$createServer$ObjectLiteral.prototype.websocketHandlerInternal_d3ycxo$ = function (handler, continuation) {
    this.wshandler = handler;
  };
  KorioNativeDefaults$createServer$ObjectLiteral.prototype.httpHandlerInternal_b59mbs$ = function (handler, continuation) {
    this.handler = handler;
  };
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda(it) {
    return Unit;
  }
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda_0() {
    return Unit;
  }
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral(closure$bodyHandler, closure$endHandler, closure$httpVersion, closure$client, closure$requestCompleted, method, uri, headers, requestConfig) {
    this.closure$bodyHandler = closure$bodyHandler;
    this.closure$endHandler = closure$endHandler;
    this.closure$httpVersion = closure$httpVersion;
    this.closure$client = closure$client;
    this.closure$requestCompleted = closure$requestCompleted;
    HttpServer$Request.call(this, method, uri, headers, requestConfig);
  }
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype._handler_949j03$ = function (handler, continuation) {
    this.closure$bodyHandler;
    this.closure$bodyHandler.v = handler;
    return Unit;
  };
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype._endHandler_o14v8n$ = function (handler, continuation) {
    this.closure$endHandler;
    this.closure$endHandler.v = handler;
    return Unit;
  };
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype._sendHeader_j29v25$ = function (code_0, message_0, headers_0, continuation_0, suspended) {
    var instance = new Coroutine$_sendHeader_j29v25$(this, code_0, message_0, headers_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_sendHeader_j29v25$($this, code_0, message_0, headers_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$code = code_0;
    this.local$message = message_0;
    this.local$headers = headers_0;
  }
  Coroutine$_sendHeader_j29v25$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_sendHeader_j29v25$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_sendHeader_j29v25$.prototype.constructor = Coroutine$_sendHeader_j29v25$;
  Coroutine$_sendHeader_j29v25$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var sb = StringBuilder_init();
            sb.append_gw00v9$(this.$this.closure$httpVersion + ' ' + this.local$code + ' ' + this.local$message + '\r' + '\n');
            tmp$ = this.local$headers.iterator();
            while (tmp$.hasNext()) {
              var header = tmp$.next();
              sb.append_gw00v9$(header.first + ': ' + header.second + '\r' + '\n');
            }

            sb.append_gw00v9$('\r\n');
            this.state_0 = 2;
            this.result_0 = this.$this.closure$client.write_mj6st8$(toByteArray(sb.toString(), UTF8_getInstance()), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype._write_mj6st8$$default = function (data_0, offset_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$_write_mj6st8$$default(this, data_0, offset_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_write_mj6st8$$default($this, data_0, offset_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$offset = offset_0;
    this.local$size = size_0;
  }
  Coroutine$_write_mj6st8$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_write_mj6st8$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_write_mj6st8$$default.prototype.constructor = Coroutine$_write_mj6st8$$default;
  Coroutine$_write_mj6st8$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$client.write_mj6st8$(this.local$data, this.local$offset, this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.prototype._end = function (continuation) {
    this.closure$requestCompleted.complete_11rb$(Unit);
  };
  KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [HttpServer$Request]
  };
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda_1(this$_0, closure$bodyHandler_0, closure$endHandler_0, closure$httpVersion_0, closure$client_0, closure$requestCompleted_0, closure$method_0, closure$url_0, closure$headers_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda(this$_0, closure$bodyHandler_0, closure$endHandler_0, closure$httpVersion_0, closure$client_0, closure$requestCompleted_0, closure$method_0, closure$url_0, closure$headers_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda(this$_0, closure$bodyHandler_0, closure$endHandler_0, closure$httpVersion_0, closure$client_0, closure$requestCompleted_0, closure$method_0, closure$url_0, closure$headers_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$closure$bodyHandler = closure$bodyHandler_0;
    this.local$closure$endHandler = closure$endHandler_0;
    this.local$closure$httpVersion = closure$httpVersion_0;
    this.local$closure$client = closure$client_0;
    this.local$closure$requestCompleted = closure$requestCompleted_0;
    this.local$closure$method = closure$method_0;
    this.local$closure$url = closure$url_0;
    this.local$closure$headers = closure$headers_0;
  }
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda.prototype.constructor = Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda;
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$.handler(new KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda$ObjectLiteral(this.local$closure$bodyHandler, this.local$closure$endHandler, this.local$closure$httpVersion, this.local$closure$client, this.local$closure$requestCompleted, Http$Method$Companion_getInstance().invoke_61zpoe$(this.local$closure$method), this.local$closure$url, this.local$closure$headers), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var trim_0 = Kotlin.kotlin.text.trim_gw00vp$;
  var get_lastIndex_0 = Kotlin.kotlin.collections.get_lastIndex_55thoc$;
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda(this$_0, closure$HeaderRegex_0) {
    return function (client_0, continuation_0, suspended) {
      var instance = new Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda(this$_0, closure$HeaderRegex_0, client_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda(this$_0, closure$HeaderRegex_0, client_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$closure$HeaderRegex = closure$HeaderRegex_0;
    this.local$tmp$_0 = void 0;
    this.local$cb = void 0;
    this.local$method = void 0;
    this.local$url = void 0;
    this.local$httpVersion = void 0;
    this.local$headerList = void 0;
    this.local$n = void 0;
    this.local$line = void 0;
    this.local$keepAlive = void 0;
    this.local$contentLength = void 0;
    this.local$requestCompleted = void 0;
    this.local$bodyHandler = void 0;
    this.local$endHandler = void 0;
    this.local$remaining = void 0;
    this.local$client = client_0;
  }
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda.prototype.constructor = Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda;
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var tmp$_0, tmp$_1;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$cb = toBuffered(this.local$client);
            this.state_0 = 3;
            this.result_0 = this.local$cb.readUntil_vlsdy4$(toByte(10 | 0), void 0, this.local$this$.LimitRequestFieldSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var $receiver = toString_0(this.result_0, UTF8_getInstance());
            var tmp$_2;
            var fline = trim_0(Kotlin.isCharSequence(tmp$_2 = $receiver) ? tmp$_2 : throwCCE()).toString();
            tmp$ = this.local$closure$HeaderRegex.matchEntire_6bul2c$(fline);
            if (tmp$ == null) {
              throw new IllegalStateException("Not a valid request '" + fline + "'");
            }

            var match = tmp$;
            this.local$method = match.groupValues.get_za3lpa$(1);
            this.local$url = match.groupValues.get_za3lpa$(2);
            this.local$httpVersion = match.groupValues.get_za3lpa$(3);
            this.local$headerList = ArrayList_init();
            this.local$tmp$_0 = this.local$this$.LimitRequestFields;
            this.local$n = 0;
            this.state_0 = 4;
            continue;
          case 4:
            if (this.local$n >= this.local$tmp$_0) {
              this.state_0 = 8;
              continue;
            }

            this.state_0 = 5;
            this.result_0 = this.local$cb.readUntil_vlsdy4$(toByte(10 | 0), void 0, this.local$this$.LimitRequestFieldSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var $receiver_0 = toString_0(this.result_0, UTF8_getInstance());
            var tmp$_3;
            this.local$line = trim_0(Kotlin.isCharSequence(tmp$_3 = $receiver_0) ? tmp$_3 : throwCCE()).toString();
            if (this.local$line.length === 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            var parts = split(this.local$line, Kotlin.charArrayOf(58), void 0, 2);
            var $receiver_1 = 0 >= 0 && 0 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(0) : '';
            var tmp$_4;
            var tmp$_5 = trim_0(Kotlin.isCharSequence(tmp$_4 = $receiver_1) ? tmp$_4 : throwCCE()).toString();
            var $receiver_2 = 1 >= 0 && 1 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(1) : '';
            var tmp$_6;
            var element = to(tmp$_5, trim_0(Kotlin.isCharSequence(tmp$_6 = $receiver_2) ? tmp$_6 : throwCCE()).toString());
            this.local$headerList.add_11rb$(element);
            this.state_0 = 7;
            continue;
          case 7:
            this.local$n++;
            this.state_0 = 4;
            continue;
          case 8:
            var headers = new Http$Headers(this.local$headerList);
            this.local$keepAlive = equals((tmp$_0 = headers.get_61zpoe$('connection')) != null ? tmp$_0.toLowerCase() : null, 'keep-alive');
            this.local$contentLength = (tmp$_1 = headers.get_61zpoe$('content-length')) != null ? toLongOrNull(tmp$_1) : null;
            this.local$requestCompleted = CompletableDeferred(Job());
            this.local$bodyHandler = {v: KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda};
            this.local$endHandler = {v: KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda_0};
            this.state_0 = 9;
            this.result_0 = launchImmediately(void 0, KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda$lambda_1(this.local$this$, this.local$bodyHandler, this.local$endHandler, this.local$httpVersion, this.local$client, this.local$requestCompleted, this.local$method, this.local$url, headers), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            if (this.local$contentLength != null) {
              this.local$remaining = this.local$contentLength;
              this.state_0 = 10;
              continue;
            }
             else {
              this.state_0 = 13;
              continue;
            }

          case 10:
            if (this.local$remaining.toNumber() <= 0) {
              this.state_0 = 12;
              continue;
            }

            var a = Kotlin.Long.fromInt(this.local$this$.BodyChunkSize);
            var b = this.local$remaining;
            var toRead = (a.compareTo_11rb$(b) <= 0 ? a : b).toInt();
            this.state_0 = 11;
            this.result_0 = readBytesUpToFirst(this.local$cb, toRead, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            var read = this.result_0;
            this.local$bodyHandler.v(read);
            this.local$remaining = this.local$remaining.subtract(Kotlin.Long.fromInt(read.length));
            this.state_0 = 10;
            continue;
          case 12:
            this.state_0 = 13;
            continue;
          case 13:
            this.local$endHandler.v();
            this.state_0 = 14;
            this.result_0 = this.local$requestCompleted.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            if (this.local$keepAlive) {
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 15;
              continue;
            }

          case 15:
            this.state_0 = 16;
            this.result_0 = this.local$client.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 16:
            this.state_0 = 17;
            continue;
          case 17:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda_0(closure$close) {
    return function (it) {
      closure$close.close();
      return Unit;
    };
  }
  KorioNativeDefaults$createServer$ObjectLiteral.prototype.listenInternal_19mbxw$$default = function (port_0, host_0, continuation_0, suspended) {
    var instance = new Coroutine$listenInternal_19mbxw$$default(this, port_0, host_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listenInternal_19mbxw$$default($this, port_0, host_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$port = port_0;
    this.local$host = host_0;
  }
  Coroutine$listenInternal_19mbxw$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listenInternal_19mbxw$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listenInternal_19mbxw$$default.prototype.constructor = Coroutine$listenInternal_19mbxw$$default;
  Coroutine$listenInternal_19mbxw$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = KorioNative_getInstance().asyncSocketFactory.createServer_jl0c9m$(this.local$port, this.local$host, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var socket = this.result_0;
            this.$this.actualPort = socket.port;
            this.state_0 = 3;
            this.result_0 = socket.listen_lsub1v$(KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda(this.$this, this.$this.closure$HeaderRegex), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var close = this.result_0;
            this.$this.onClose.invoke_qlkmfe$(KorioNativeDefaults$createServer$ObjectLiteral$listenInternal$lambda_0(close));
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KorioNativeDefaults$createServer$ObjectLiteral.prototype.closeInternal = function (continuation) {
    invoke_0(this.onClose);
  };
  function KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda(it, continuation_0, suspended) {
    var instance = new Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda(it, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda(it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda.prototype.constructor = Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda;
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$wshandler$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda(it, continuation_0, suspended) {
    var instance = new Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda(it, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda(it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda.prototype.constructor = Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda;
  Coroutine$KorioNativeDefaults$createServer$ObjectLiteral$handler$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  KorioNativeDefaults$createServer$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [HttpServer]
  };
  KorioNativeDefaults.prototype.createServer = function () {
    var HeaderRegex = Regex_init('^(\\w+)\\s+(.*)\\s+(HTTP/1.[01])$');
    return new KorioNativeDefaults$createServer$ObjectLiteral(HeaderRegex);
  };
  KorioNativeDefaults.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KorioNativeDefaults',
    interfaces: []
  };
  var KorioNativeDefaults_instance = null;
  function KorioNativeDefaults_getInstance() {
    if (KorioNativeDefaults_instance === null) {
      new KorioNativeDefaults();
    }
    return KorioNativeDefaults_instance;
  }
  function createBase64URLForData(data, contentType) {
    return 'data:' + contentType + ';base64,' + Base64_getInstance().encode_fqrh44$(data);
  }
  var KORIO_VERSION;
  function await$lambda(this$await_0, closure$receiver_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$await$lambda(this$await_0, closure$receiver_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$await$lambda(this$await_0, closure$receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$await = this$await_0;
    this.local$closure$receiver = closure$receiver_0;
  }
  Coroutine$await$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$await$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$await$lambda.prototype.constructor = Coroutine$await$lambda;
  Coroutine$await$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$await(this.local$closure$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function await_0($receiver, receiver, continuation) {
    return withContext(get_dispatcher(continuation.context), void 0, await$lambda($receiver, receiver), continuation);
  }
  function await$lambda_0(this$await_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$await$lambda_0(this$await_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$await$lambda_0(this$await_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$await = this$await_0;
  }
  Coroutine$await$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$await$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$await$lambda_0.prototype.constructor = Coroutine$await$lambda_0;
  Coroutine$await$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function await_1($receiver, continuation) {
    return withContext(get_dispatcher(continuation.context), void 0, await$lambda_0($receiver), continuation);
  }
  function get_tryDispatcher($receiver) {
    var tmp$;
    return (tmp$ = $receiver) == null || Kotlin.isType(tmp$, CoroutineDispatcher) ? tmp$ : null;
  }
  function get_dispatcher($receiver) {
    var tmp$;
    return (tmp$ = get_tryDispatcher($receiver)) != null ? tmp$ : KorioDefaultDispatcher;
  }
  function delayNextFrame(continuation) {
    return _delayNextFrame(continuation);
  }
  function DelayFrame() {
  }
  var SuccessOrFailure = Kotlin.kotlin.SuccessOrFailure;
  function DelayFrame$delayFrame$lambda(closure$continuation_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$DelayFrame$delayFrame$lambda(closure$continuation_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DelayFrame$delayFrame$lambda(closure$continuation_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$continuation = closure$continuation_0;
  }
  Coroutine$DelayFrame$delayFrame$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DelayFrame$delayFrame$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DelayFrame$delayFrame$lambda.prototype.constructor = Coroutine$DelayFrame$delayFrame$lambda;
  Coroutine$DelayFrame$delayFrame$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(16, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$closure$continuation.resumeWith_i5d895$(new SuccessOrFailure(Unit));
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DelayFrame.prototype.delayFrame_fefoe3$ = function (continuation) {
    launchImmediately_0(continuation.context, void 0, DelayFrame$delayFrame$lambda(continuation));
  };
  DelayFrame.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'DelayFrame',
    interfaces: []
  };
  function delayFrame$lambda(this$delayFrame) {
    return function (c) {
      this$delayFrame.delayFrame_fefoe3$(c);
      return Unit;
    };
  }
  var intercepted = Kotlin.kotlin.coroutines.intrinsics.intercepted_f9mg25$;
  var CancellableContinuationImpl_init = $module$kotlinx_coroutines_core.kotlinx.coroutines.CancellableContinuationImpl;
  function suspendCancellableCoroutine$lambda(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function delayFrame($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$delayFrame($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$delayFrame($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$delayFrame.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delayFrame.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delayFrame.prototype.constructor = Coroutine$delayFrame;
  Coroutine$delayFrame.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda(false, delayFrame$lambda(this.local$$receiver))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DefaultDelayFrame$ObjectLiteral() {
  }
  DefaultDelayFrame$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [DelayFrame]
  };
  var DefaultDelayFrame;
  function get_delayFrame($receiver) {
    var tmp$, tmp$_0;
    return (tmp$_0 = Kotlin.isType(tmp$ = $receiver.get_j3r2sn$(ContinuationInterceptor.Key), DelayFrame) ? tmp$ : null) != null ? tmp$_0 : DefaultDelayFrame;
  }
  function _delayNextFrame(continuation_0, suspended) {
    var instance = new Coroutine$_delayNextFrame(continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$_delayNextFrame(continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$_delayNextFrame.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_delayNextFrame.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_delayNextFrame.prototype.constructor = Coroutine$_delayNextFrame;
  Coroutine$_delayNextFrame.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delayFrame(get_delayFrame(this.context), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function delayNextFrame_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$delayNextFrame($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$delayNextFrame($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$delayNextFrame.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delayNextFrame.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delayNextFrame.prototype.constructor = Coroutine$delayNextFrame;
  Coroutine$delayNextFrame.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delayFrame(get_delayFrame(this.local$$receiver), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function delayMs$lambda(closure$time_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$delayMs$lambda(closure$time_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$delayMs$lambda(closure$time_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$time = closure$time_0;
  }
  Coroutine$delayMs$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delayMs$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delayMs$lambda.prototype.constructor = Coroutine$delayMs$lambda;
  Coroutine$delayMs$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(this.local$closure$time, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function delayMs($receiver_0, time_0, continuation_0, suspended) {
    var instance = new Coroutine$delayMs($receiver_0, time_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$delayMs($receiver_0, time_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$time = time_0;
  }
  Coroutine$delayMs.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delayMs.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delayMs.prototype.constructor = Coroutine$delayMs;
  Coroutine$delayMs.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = withContext(this.local$$receiver, void 0, delayMs$lambda(this.local$time), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function delay_0(time, continuation) {
    return delay(time.milliseconds, continuation);
  }
  function delay_1($receiver, time, continuation) {
    return delayMs($receiver, time.milliseconds, continuation);
  }
  function animationFrameLoop$lambda(closure$running) {
    return function () {
      closure$running.v = false;
      return Unit;
    };
  }
  function animationFrameLoop$lambda_0(closure$running_0, closure$callback_0, closure$close_0, this$animationFrameLoop_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$animationFrameLoop$lambda(closure$running_0, closure$callback_0, closure$close_0, this$animationFrameLoop_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$animationFrameLoop$lambda(closure$running_0, closure$callback_0, closure$close_0, this$animationFrameLoop_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$running = closure$running_0;
    this.local$closure$callback = closure$callback_0;
    this.local$closure$close = closure$close_0;
    this.local$this$animationFrameLoop = this$animationFrameLoop_0;
  }
  Coroutine$animationFrameLoop$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$animationFrameLoop$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$animationFrameLoop$lambda.prototype.constructor = Coroutine$animationFrameLoop$lambda;
  Coroutine$animationFrameLoop$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$closure$running.v) {
              this.state_0 = 5;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = this.local$closure$callback(this.local$closure$close, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = delayNextFrame_0(this.local$this$animationFrameLoop, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function animationFrameLoop($receiver, callback) {
    var running = {v: true};
    var close = Closeable_0(animationFrameLoop$lambda(running));
    launchImmediately_0($receiver, void 0, animationFrameLoop$lambda_0(running, callback, close, $receiver));
    return close;
  }
  function CoroutineContextHolder() {
  }
  CoroutineContextHolder.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'CoroutineContextHolder',
    interfaces: []
  };
  var Comparator = Kotlin.kotlin.Comparator;
  function Comparator$ObjectLiteral(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  function TestCoroutineDispatcher(frameTime) {
    if (frameTime === void 0)
      frameTime = 16;
    CoroutineDispatcher.call(this);
    this.frameTime = frameTime;
    this.time_7jhuh6$_0 = L0;
    this.tasks = new PriorityQueue(new Comparator$ObjectLiteral(TestCoroutineDispatcher$tasks$lambda));
    this.exception = null;
  }
  Object.defineProperty(TestCoroutineDispatcher.prototype, 'time', {
    get: function () {
      return this.time_7jhuh6$_0;
    },
    set: function (time) {
      this.time_7jhuh6$_0 = time;
    }
  });
  function TestCoroutineDispatcher$TimedTask(time, callback) {
    this.time = time;
    this.callback = callback;
  }
  TestCoroutineDispatcher$TimedTask.prototype.toString = function () {
    return 'TimedTask(time=' + this.time + ')';
  };
  TestCoroutineDispatcher$TimedTask.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TimedTask',
    interfaces: []
  };
  function TestCoroutineDispatcher$interceptContinuation$ObjectLiteral(closure$continuation) {
    this.closure$continuation = closure$continuation;
    this.context_dnrqfc$_0 = closure$continuation.context;
  }
  Object.defineProperty(TestCoroutineDispatcher$interceptContinuation$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_dnrqfc$_0;
    }
  });
  var SuccessOrFailure$SuccessOrFailure$Failure_init = Kotlin.kotlin.SuccessOrFailure.Failure;
  TestCoroutineDispatcher$interceptContinuation$ObjectLiteral.prototype.resumeWith_i5d895$ = function (result) {
    if (result.isSuccess) {
      var $receiver = this.closure$continuation;
      var value = result.getOrThrow();
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
    }
     else {
      var $receiver_0 = this.closure$continuation;
      var exception = ensureNotNull(result.exceptionOrNull());
      $receiver_0.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(exception)));
    }
  };
  TestCoroutineDispatcher$interceptContinuation$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  TestCoroutineDispatcher.prototype.interceptContinuation_wj8d80$ = function (continuation) {
    return new TestCoroutineDispatcher$interceptContinuation$ObjectLiteral(continuation);
  };
  function TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda;
  Coroutine$TestCoroutineDispatcher$scheduleAfter$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TestCoroutineDispatcher.prototype.scheduleAfter_0 = function (time, callback) {
    var $receiver = this.tasks;
    var element = new TestCoroutineDispatcher$TimedTask(this.time.add(Kotlin.Long.fromInt(time)), TestCoroutineDispatcher$scheduleAfter$lambda(callback));
    $receiver.add_11rb$(element);
  };
  function TestCoroutineDispatcher$dispatch$lambda(closure$block_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$dispatch$lambda(closure$block_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$TestCoroutineDispatcher$dispatch$lambda(closure$block_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$block = closure$block_0;
  }
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$dispatch$lambda;
  Coroutine$TestCoroutineDispatcher$dispatch$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$block.run(), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TestCoroutineDispatcher.prototype.dispatch_5bn72i$ = function (context, block) {
    this.scheduleAfter_0(0, TestCoroutineDispatcher$dispatch$lambda(block));
  };
  function TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(closure$continuation_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$continuation = closure$continuation_0;
  }
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda;
  Coroutine$TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$continuation.resumeWith_i5d895$(new SuccessOrFailure(Unit));
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TestCoroutineDispatcher.prototype.scheduleResumeAfterDelay_hzpi9w$ = function (time, unit, continuation) {
    this.scheduleAfter_0(unit.toMillis_s8cxhz$(time).toInt(), TestCoroutineDispatcher$scheduleResumeAfterDelay$lambda(continuation));
  };
  function TestCoroutineDispatcher$delayFrame$lambda(closure$continuation_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$TestCoroutineDispatcher$delayFrame$lambda(closure$continuation_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$TestCoroutineDispatcher$delayFrame$lambda(closure$continuation_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$continuation = closure$continuation_0;
  }
  Coroutine$TestCoroutineDispatcher$delayFrame$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TestCoroutineDispatcher$delayFrame$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TestCoroutineDispatcher$delayFrame$lambda.prototype.constructor = Coroutine$TestCoroutineDispatcher$delayFrame$lambda;
  Coroutine$TestCoroutineDispatcher$delayFrame$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$closure$continuation.resumeWith_i5d895$(new SuccessOrFailure(Unit));
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TestCoroutineDispatcher.prototype.delayFrame_fefoe3$ = function (continuation) {
    this.scheduleAfter_0(this.frameTime, TestCoroutineDispatcher$delayFrame$lambda(continuation));
  };
  function TestCoroutineDispatcher$loop$ObjectLiteral(this$TestCoroutineDispatcher) {
    this.this$TestCoroutineDispatcher = this$TestCoroutineDispatcher;
    this.context_phdxqv$_0 = this$TestCoroutineDispatcher;
  }
  Object.defineProperty(TestCoroutineDispatcher$loop$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_phdxqv$_0;
    }
  });
  TestCoroutineDispatcher$loop$ObjectLiteral.prototype.resumeWith_i5d895$ = function (result) {
    var exception = result.exceptionOrNull();
    if (exception != null) {
      printStackTrace(exception);
      this.this$TestCoroutineDispatcher.exception = exception;
    }
  };
  TestCoroutineDispatcher$loop$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  TestCoroutineDispatcher.prototype.loop = function () {
    var tmp$;
    if (this.exception != null) {
      var tmp$_0;
      if ((tmp$ = this.exception) != null)
        tmp$_0 = tmp$;
      else {
        throw IllegalStateException_init('error'.toString());
      }
      throw tmp$_0;
    }
    while (!this.tasks.isEmpty()) {
      var task = this.tasks.removeHead();
      this.time = task.time;
      startCoroutine(task.callback, new TestCoroutineDispatcher$loop$ObjectLiteral(this));
    }
  };
  function TestCoroutineDispatcher$loop$ObjectLiteral_0(this$TestCoroutineDispatcher) {
    this.this$TestCoroutineDispatcher = this$TestCoroutineDispatcher;
    this.context_phdxqv$_0 = this$TestCoroutineDispatcher;
  }
  Object.defineProperty(TestCoroutineDispatcher$loop$ObjectLiteral_0.prototype, 'context', {
    get: function () {
      return this.context_phdxqv$_0;
    }
  });
  TestCoroutineDispatcher$loop$ObjectLiteral_0.prototype.resumeWith_i5d895$ = function (result) {
    var exception = result.exceptionOrNull();
    if (exception != null) {
      printStackTrace(exception);
      this.this$TestCoroutineDispatcher.exception = exception;
    }
  };
  TestCoroutineDispatcher$loop$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  TestCoroutineDispatcher.prototype.loop_g2bo5h$ = function (entry) {
    startCoroutine(entry, new TestCoroutineDispatcher$loop$ObjectLiteral_0(this));
    this.loop();
  };
  function TestCoroutineDispatcher$tasks$lambda(a, b) {
    return a.time.compareTo_11rb$(b.time);
  }
  TestCoroutineDispatcher.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TestCoroutineDispatcher',
    interfaces: [DelayFrame, Delay, CoroutineDispatcher, ContinuationInterceptor]
  };
  function executeInNewThread(task, continuation) {
    return KorioNative_getInstance().executeInWorker_lnyleu$(task, continuation);
  }
  function executeInWorker(task, continuation) {
    return KorioNative_getInstance().executeInWorker_lnyleu$(task, continuation);
  }
  function suspendTest$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$suspendTest$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$suspendTest$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$suspendTest$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$suspendTest$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$suspendTest$lambda.prototype.constructor = Coroutine$suspendTest$lambda;
  Coroutine$suspendTest$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function suspendTest(callback) {
    return KorioNative_getInstance().suspendTest_g2bo5h$(suspendTest$lambda(callback));
  }
  function suspendTest$lambda$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$suspendTest$lambda$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$suspendTest$lambda$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$suspendTest$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$suspendTest$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$suspendTest$lambda$lambda.prototype.constructor = Coroutine$suspendTest$lambda$lambda;
  Coroutine$suspendTest$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function suspendTest$lambda_0(closure$context_0, closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$suspendTest$lambda_0(closure$context_0, closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$suspendTest$lambda_0(closure$context_0, closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$context = closure$context_0;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$suspendTest$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$suspendTest$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$suspendTest$lambda_0.prototype.constructor = Coroutine$suspendTest$lambda_0;
  Coroutine$suspendTest$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = withContext(this.local$closure$context, void 0, suspendTest$lambda$lambda(this.local$closure$callback), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function suspendTest_0(context, callback) {
    return KorioNative_getInstance().suspendTest_g2bo5h$(suspendTest$lambda_0(context, callback));
  }
  function suspendTestExceptJs(callback) {
    return OS_getInstance().isJs ? Unit : suspendTest(callback);
  }
  function launchImmediately(job, callback, continuation) {
    if (job === void 0)
      job = null;
    return launchImmediately_0(continuation.context, job, callback);
  }
  function launchAsap(job, callback, continuation) {
    if (job === void 0)
      job = null;
    return launchAsap_0(continuation.context, job, callback);
  }
  function asyncImmediately(job, callback, continuation) {
    if (job === void 0)
      job = null;
    return asyncImmediately_0(continuation.context, job, callback);
  }
  function asyncAsap(job, callback, continuation) {
    if (job === void 0)
      job = null;
    return asyncAsap_0(continuation.context, job, callback);
  }
  function launchImmediately$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$launchImmediately$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$launchImmediately$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$launchImmediately$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$launchImmediately$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$launchImmediately$lambda.prototype.constructor = Coroutine$launchImmediately$lambda;
  Coroutine$launchImmediately$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function launchImmediately_0(coroutineContext, job, callback) {
    if (job === void 0)
      job = null;
    return launch(coroutineContext, CoroutineStart.UNDISPATCHED, job, void 0, launchImmediately$lambda(callback));
  }
  function launchAsap$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$launchAsap$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$launchAsap$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$launchAsap$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$launchAsap$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$launchAsap$lambda.prototype.constructor = Coroutine$launchAsap$lambda;
  Coroutine$launchAsap$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function launchAsap_0(coroutineContext, job, callback) {
    if (job === void 0)
      job = null;
    return launch(coroutineContext, CoroutineStart.DEFAULT, job, void 0, launchAsap$lambda(callback));
  }
  function asyncImmediately$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$asyncImmediately$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$asyncImmediately$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$asyncImmediately$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$asyncImmediately$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$asyncImmediately$lambda.prototype.constructor = Coroutine$asyncImmediately$lambda;
  Coroutine$asyncImmediately$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function asyncImmediately_0(coroutineContext, job, callback) {
    if (job === void 0)
      job = null;
    return async(coroutineContext, CoroutineStart.UNDISPATCHED, job, void 0, asyncImmediately$lambda(callback));
  }
  function asyncAsap$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$asyncAsap$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$asyncAsap$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$asyncAsap$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$asyncAsap$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$asyncAsap$lambda.prototype.constructor = Coroutine$asyncAsap$lambda;
  Coroutine$asyncAsap$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function asyncAsap_0(coroutineContext, job, callback) {
    if (job === void 0)
      job = null;
    return async(coroutineContext, CoroutineStart.DEFAULT, job, void 0, asyncAsap$lambda(callback));
  }
  function AsyncPool(maxItems, create) {
    if (maxItems === void 0)
      maxItems = 2147483647;
    this.maxItems = maxItems;
    this.create = create;
    this.createdItems = NewAtomicInt(0);
    this.freedItem_0 = new ProduceConsumer();
  }
  AsyncPool.prototype.tempAlloc_v7st1v$ = function (callback_0, continuation_0, suspended) {
    var instance = new Coroutine$tempAlloc_v7st1v$(this, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$tempAlloc_v7st1v$($this, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$item = void 0;
    this.local$callback = callback_0;
  }
  Coroutine$tempAlloc_v7st1v$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$tempAlloc_v7st1v$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$tempAlloc_v7st1v$.prototype.constructor = Coroutine$tempAlloc_v7st1v$;
  Coroutine$tempAlloc_v7st1v$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.alloc(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$item = this.result_0;
            this.exceptionState_0 = 5;
            this.state_0 = 2;
            this.result_0 = this.local$callback(this.local$item, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 6;
            this.$returnValue = this.result_0;
            continue;
          case 3:
            return this.$returnValue;
          case 4:
            return;
          case 5:
            this.finallyPath_0 = [7];
            this.state_0 = 6;
            continue;
          case 6:
            this.$this.free_11rb$(this.local$item);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncPool.prototype.alloc = function (continuation_0, suspended) {
    var instance = new Coroutine$alloc(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$alloc($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
  }
  Coroutine$alloc.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$alloc.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$alloc.prototype.constructor = Coroutine$alloc;
  Coroutine$alloc.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (get_0(this.$this.createdItems) >= this.$this.maxItems) {
              this.state_0 = 3;
              this.result_0 = this.$this.freedItem_0.consume_4l50dc$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              addAndGet(this.$this.createdItems, 1);
              this.state_0 = 2;
              this.result_0 = this.$this.create(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 4;
            continue;
          case 3:
            this.local$tmp$ = ensureNotNull(this.result_0);
            this.state_0 = 4;
            continue;
          case 4:
            return this.local$tmp$;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncPool.prototype.free_11rb$ = function (item) {
    this.freedItem_0.produce_11rb$(item);
  };
  AsyncPool.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncPool',
    interfaces: []
  };
  function AsyncQueue() {
    this.thread = new AsyncThread();
  }
  AsyncQueue.prototype.invoke_g2bo5h$ = function (func, continuation) {
    return this.invoke_ykkwzu$(continuation.context, func);
  };
  function AsyncQueue$invoke$lambda(closure$func_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncQueue$invoke$lambda(closure$func_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncQueue$invoke$lambda(closure$func_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$func = closure$func_0;
  }
  Coroutine$AsyncQueue$invoke$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncQueue$invoke$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncQueue$invoke$lambda.prototype.constructor = Coroutine$AsyncQueue$invoke$lambda;
  Coroutine$AsyncQueue$invoke$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$func(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncQueue.prototype.invoke_ykkwzu$ = function (context, func) {
    this.thread.sync_nt96rv$(context, AsyncQueue$invoke$lambda(func));
    return this;
  };
  AsyncQueue.prototype.await_g2bo5h$ = function (func_0, continuation_0, suspended) {
    var instance = new Coroutine$await_g2bo5h$(this, func_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$await_g2bo5h$($this, func_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$func = func_0;
  }
  Coroutine$await_g2bo5h$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$await_g2bo5h$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$await_g2bo5h$.prototype.constructor = Coroutine$await_g2bo5h$;
  Coroutine$await_g2bo5h$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.invoke_g2bo5h$(this.local$func, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncQueue.prototype.await = function (continuation_0, suspended) {
    var instance = new Coroutine$await(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$await($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$await.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$await.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$await.prototype.constructor = Coroutine$await;
  Coroutine$await.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.thread.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncQueue.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncQueue',
    interfaces: []
  };
  function withContext_0($receiver, ctx) {
    return new AsyncQueueWithContext($receiver, ctx);
  }
  function withContext_1($receiver, continuation) {
    return new AsyncQueueWithContext($receiver, continuation.context);
  }
  function AsyncQueueWithContext(queue, context) {
    this.queue = queue;
    this.context = context;
  }
  AsyncQueueWithContext.prototype.invoke_g2bo5h$ = function (func) {
    return this.queue.invoke_ykkwzu$(this.context, func);
  };
  AsyncQueueWithContext.prototype.await_g2bo5h$ = function (func, continuation) {
    return this.queue.await_g2bo5h$(func, continuation);
  };
  AsyncQueueWithContext.prototype.await = function (continuation) {
    return this.queue.await(continuation);
  };
  AsyncQueueWithContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncQueueWithContext',
    interfaces: []
  };
  function AsyncThread() {
    var $receiver = CompletableDeferred_0(Unit);
    $receiver.complete_11rb$(Unit);
    this.lastPromise_0 = $receiver;
  }
  AsyncThread.prototype.await = function (continuation_0, suspended) {
    var instance = new Coroutine$await_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$await_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$cpromise = void 0;
  }
  Coroutine$await_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$await_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$await_0.prototype.constructor = Coroutine$await_0;
  Coroutine$await_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$cpromise = this.$this.lastPromise_0;
            this.state_0 = 3;
            this.result_0 = this.$this.lastPromise_0.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (equals(this.local$cpromise, this.$this.lastPromise_0)) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncThread.prototype.cancel = function () {
    this.lastPromise_0.cancel_dbl4no$();
    this.lastPromise_0 = CompletableDeferred_0(Unit);
    return this;
  };
  AsyncThread.prototype.cancelAndQueue_lnyleu$ = function (func, continuation) {
    this.cancel();
    return this.queue_lnyleu$(func, continuation);
  };
  AsyncThread.prototype.queue_lnyleu$ = function (func, continuation) {
    return this.invoke_lnyleu$(func, continuation);
  };
  AsyncThread.prototype.invoke_lnyleu$ = function (func_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_lnyleu$(this, func_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$invoke_lnyleu$($this, func_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 4;
    this.$this = $this;
    this.local$func = func_0;
  }
  Coroutine$invoke_lnyleu$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_lnyleu$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_lnyleu$.prototype.constructor = Coroutine$invoke_lnyleu$;
  Coroutine$invoke_lnyleu$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var task = this.$this.sync_nt96rv$(this.context, this.local$func);
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = task.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            var res = this.result_0;
            return res;
          case 2:
            this.exceptionState_0 = 4;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              throw e;
            }
             else
              throw e;
          case 3:
            return;
          case 4:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 4) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncThread.prototype.sync_lnyleu$ = function (func, continuation) {
    return this.sync_nt96rv$(continuation.context, func);
  };
  function AsyncThread$sync$lambda(closure$oldPromise_0, closure$func_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncThread$sync$lambda(closure$oldPromise_0, closure$func_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncThread$sync$lambda(closure$oldPromise_0, closure$func_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$oldPromise = closure$oldPromise_0;
    this.local$closure$func = closure$func_0;
  }
  Coroutine$AsyncThread$sync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncThread$sync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncThread$sync$lambda.prototype.constructor = Coroutine$AsyncThread$sync$lambda;
  Coroutine$AsyncThread$sync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$oldPromise.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$closure$func(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncThread.prototype.sync_nt96rv$ = function (context, func) {
    var oldPromise = this.lastPromise_0;
    var promise = asyncImmediately_0(context, void 0, AsyncThread$sync$lambda(oldPromise, func));
    this.lastPromise_0 = promise;
    return promise;
  };
  AsyncThread.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncThread',
    interfaces: []
  };
  function AsyncSemaphore() {
    this.available_0 = 0;
    this.signal_0 = new Signal();
  }
  AsyncSemaphore.prototype.release = function () {
    this.available_0 = this.available_0 + 1 | 0;
    this.signal_0.invoke_11rb$(Unit);
  };
  AsyncSemaphore.prototype.acquire = function (continuation_0, suspended) {
    var instance = new Coroutine$acquire(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$acquire($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$acquire.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$acquire.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$acquire.prototype.constructor = Coroutine$acquire;
  Coroutine$acquire.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.available_0 > 0) {
              this.$this.available_0 = this.$this.available_0 - 1 | 0;
              return;
            }
             else {
              this.state_0 = 3;
              this.result_0 = waitOne_1(this.$this.signal_0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncSemaphore.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncSemaphore',
    interfaces: []
  };
  function AsyncSignal(onRegister) {
    if (onRegister === void 0)
      onRegister = AsyncSignal_init$lambda;
    this.onRegister = onRegister;
    this.handlers_0 = ArrayList_init();
  }
  function AsyncSignal$Node($outer, once, item) {
    this.$outer = $outer;
    this.once = once;
    this.item = item;
  }
  AsyncSignal$Node.prototype.close = function () {
    this.$outer.handlers_0.remove_11rb$(this);
  };
  AsyncSignal$Node.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Node',
    interfaces: [Closeable]
  };
  Object.defineProperty(AsyncSignal.prototype, 'listenerCount', {
    get: function () {
      return this.handlers_0.size;
    }
  });
  AsyncSignal.prototype.once_25kf2w$ = function (handler) {
    return this._add_0(true, handler);
  };
  AsyncSignal.prototype.add_25kf2w$ = function (handler) {
    return this._add_0(false, handler);
  };
  AsyncSignal.prototype._add_0 = function (once, handler) {
    this.onRegister();
    var node = new AsyncSignal$Node(this, once, handler);
    this.handlers_0.add_11rb$(node);
    return node;
  };
  AsyncSignal.prototype.invoke_11rb$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$invoke_11rb$(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$invoke_11rb$($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$it = void 0;
    this.local$value = value_0;
  }
  Coroutine$invoke_11rb$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$invoke_11rb$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$invoke_11rb$.prototype.constructor = Coroutine$invoke_11rb$;
  Coroutine$invoke_11rb$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$it = this.$this.handlers_0.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$it.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var node = this.local$it.next();
            if (node.once)
              this.local$it.remove();
            this.state_0 = 3;
            this.result_0 = node.item(this.local$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncSignal.prototype.invoke_25kf2w$ = function (handler) {
    return this.add_25kf2w$(handler);
  };
  function AsyncSignal$listen$lambda(this$AsyncSignal_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$AsyncSignal$listen$lambda(this$AsyncSignal_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncSignal$listen$lambda(this$AsyncSignal_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$AsyncSignal = this$AsyncSignal_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$AsyncSignal$listen$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncSignal$listen$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncSignal$listen$lambda.prototype.constructor = Coroutine$AsyncSignal$listen$lambda;
  Coroutine$AsyncSignal$listen$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = waitOne(this.local$this$AsyncSignal, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$$receiver.yield_11rb$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncSignal.prototype.listen = function (continuation) {
    return asyncGenerate_0(AsyncSignal$listen$lambda(this), continuation);
  };
  function AsyncSignal_init$lambda() {
    return Unit;
  }
  AsyncSignal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncSignal',
    interfaces: []
  };
  function mapSignal$lambda(closure$out_0, closure$transform_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$mapSignal$lambda(closure$out_0, closure$transform_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$mapSignal$lambda(closure$out_0, closure$transform_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$out = closure$out_0;
    this.local$closure$transform = closure$transform_0;
    this.local$it = it_0;
  }
  Coroutine$mapSignal$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mapSignal$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mapSignal$lambda.prototype.constructor = Coroutine$mapSignal$lambda;
  Coroutine$mapSignal$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$out.invoke_11rb$(this.local$closure$transform(this.local$it), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function mapSignal($receiver, transform) {
    var out = new AsyncSignal();
    $receiver.add_25kf2w$(mapSignal$lambda(out, transform));
    return out;
  }
  function invoke($receiver, continuation) {
    return $receiver.invoke_11rb$(Unit, continuation);
  }
  function waitOne$lambda$lambda(closure$close_0, closure$c_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$waitOne$lambda$lambda(closure$close_0, closure$c_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$waitOne$lambda$lambda(closure$close_0, closure$c_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$close = closure$close_0;
    this.local$closure$c = closure$c_0;
    this.local$it = it_0;
  }
  Coroutine$waitOne$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitOne$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitOne$lambda$lambda.prototype.constructor = Coroutine$waitOne$lambda$lambda;
  Coroutine$waitOne$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            (tmp$ = this.local$closure$close.v) != null ? (tmp$.close(), Unit) : null;
            this.local$closure$c.resumeWith_i5d895$(new SuccessOrFailure(this.local$it));
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitOne$lambda$lambda_0(closure$close) {
    return function (it) {
      closure$close.v.close();
      return Unit;
    };
  }
  function waitOne$lambda(this$waitOne) {
    return function (c) {
      var close = {v: null};
      close.v = this$waitOne.once_25kf2w$(waitOne$lambda$lambda(close, c));
      c.invokeOnCancellation_f05bi3$(waitOne$lambda$lambda_0(close));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_0(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function waitOne($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$waitOne($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitOne($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$waitOne.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitOne.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitOne.prototype.constructor = Coroutine$waitOne;
  Coroutine$waitOne.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_0(false, waitOne$lambda(this.local$$receiver))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function addSuspend$lambda$lambda(closure$handler_0, closure$value_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$addSuspend$lambda$lambda(closure$handler_0, closure$value_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$addSuspend$lambda$lambda(closure$handler_0, closure$value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$value = closure$value_0;
  }
  Coroutine$addSuspend$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$addSuspend$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$addSuspend$lambda$lambda.prototype.constructor = Coroutine$addSuspend$lambda$lambda;
  Coroutine$addSuspend$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function addSuspend$lambda(closure$cc, closure$handler) {
    return function (value) {
      launchImmediately_0(closure$cc, void 0, addSuspend$lambda$lambda(closure$handler, value));
      return Unit;
    };
  }
  function addSuspend($receiver, handler, continuation) {
    var cc = continuation.context;
    return $receiver.invoke_qlkmfe$(addSuspend$lambda(cc, handler));
  }
  function addSuspend$lambda$lambda_0(closure$handler_0, closure$value_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$addSuspend$lambda$lambda_0(closure$handler_0, closure$value_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$addSuspend$lambda$lambda_0(closure$handler_0, closure$value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$value = closure$value_0;
  }
  Coroutine$addSuspend$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$addSuspend$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$addSuspend$lambda$lambda_0.prototype.constructor = Coroutine$addSuspend$lambda$lambda_0;
  Coroutine$addSuspend$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function addSuspend$lambda_0(closure$context, closure$handler) {
    return function (value) {
      launchImmediately_0(closure$context, void 0, addSuspend$lambda$lambda_0(closure$handler, value));
      return Unit;
    };
  }
  function addSuspend_0($receiver, context, handler) {
    return $receiver.invoke_qlkmfe$(addSuspend$lambda_0(context, handler));
  }
  function toContinuation$ObjectLiteral(closure$deferred, closure$context) {
    this.closure$deferred = closure$deferred;
    this.context_u83e2$_0 = closure$context;
  }
  Object.defineProperty(toContinuation$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_u83e2$_0;
    }
  });
  toContinuation$ObjectLiteral.prototype.resumeWith_i5d895$ = function (result) {
    if (result.isSuccess) {
      this.closure$deferred.complete_11rb$(result.getOrThrow());
    }
     else {
      this.closure$deferred.completeExceptionally_tcv7n7$(ensureNotNull(result.exceptionOrNull()));
    }
  };
  toContinuation$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Continuation]
  };
  function toContinuation($receiver, context, job) {
    if (job === void 0)
      job = null;
    var deferred = CompletableDeferred(job);
    return new toContinuation$ObjectLiteral(deferred, context);
  }
  function EmptyContinuation(context) {
    EmptyContinuation$Companion_getInstance();
    OldContinuationAdaptor.call(this);
    this.context_t0vs1j$_0 = context;
  }
  Object.defineProperty(EmptyContinuation.prototype, 'context', {
    get: function () {
      return this.context_t0vs1j$_0;
    }
  });
  EmptyContinuation.prototype.resume_11rb$ = function (value) {
  };
  EmptyContinuation.prototype.resumeWithException_tcv7n7$ = function (exception) {
    printStackTrace(exception);
  };
  function EmptyContinuation$Companion() {
    EmptyContinuation$Companion_instance = this;
    EmptyContinuation.call(this, coroutines.EmptyCoroutineContext);
  }
  EmptyContinuation$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [EmptyContinuation]
  };
  var EmptyContinuation$Companion_instance = null;
  function EmptyContinuation$Companion_getInstance() {
    if (EmptyContinuation$Companion_instance === null) {
      new EmptyContinuation$Companion();
    }
    return EmptyContinuation$Companion_instance;
  }
  EmptyContinuation.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EmptyContinuation',
    interfaces: [OldContinuationAdaptor]
  };
  function OldContinuationAdaptor() {
  }
  OldContinuationAdaptor.prototype.resumeWith_i5d895$ = function (result) {
    if (result.isSuccess) {
      this.resume_11rb$(result.getOrThrow());
    }
     else {
      this.resumeWithException_tcv7n7$(ensureNotNull(result.exceptionOrNull()));
    }
  };
  OldContinuationAdaptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OldContinuationAdaptor',
    interfaces: [Continuation]
  };
  function Signal(onRegister) {
    if (onRegister === void 0)
      onRegister = Signal_init$lambda;
    this.onRegister = onRegister;
    this.handlersToRun_0 = ArrayList_init();
    this.handlers_0 = ArrayList_init();
    this.handlersNoOnce_0 = ArrayList_init();
  }
  function Signal$Node($outer, once, item) {
    this.$outer = $outer;
    this.once = once;
    this.item = item;
  }
  Signal$Node.prototype.close = function () {
    this.$outer.handlers_0.remove_11rb$(this);
  };
  Signal$Node.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Node',
    interfaces: [Closeable]
  };
  Object.defineProperty(Signal.prototype, 'listenerCount', {
    get: function () {
      return this.handlers_0.size;
    }
  });
  Signal.prototype.once_qlkmfe$ = function (handler) {
    return this._add_0(true, handler);
  };
  Signal.prototype.add_qlkmfe$ = function (handler) {
    return this._add_0(false, handler);
  };
  Signal.prototype.clear = function () {
    this.handlers_0.clear();
  };
  Signal.prototype._add_0 = function (once, handler) {
    this.onRegister();
    var node = new Signal$Node(this, once, handler);
    this.handlers_0.add_11rb$(node);
    return node;
  };
  Signal.prototype.invoke_11rb$ = function (value) {
    var tmp$, tmp$_0;
    var oldHandlers = this.handlers_0;
    this.handlersNoOnce_0.clear();
    this.handlersToRun_0.clear();
    tmp$ = oldHandlers.iterator();
    while (tmp$.hasNext()) {
      var handler = tmp$.next();
      this.handlersToRun_0.add_11rb$(handler);
      if (!handler.once)
        this.handlersNoOnce_0.add_11rb$(handler);
    }
    var temp = this.handlers_0;
    this.handlers_0 = this.handlersNoOnce_0;
    this.handlersNoOnce_0 = temp;
    tmp$_0 = this.handlersToRun_0.iterator();
    while (tmp$_0.hasNext()) {
      var handler_0 = tmp$_0.next();
      handler_0.item(value);
    }
  };
  Signal.prototype.invoke_qlkmfe$ = function (handler) {
    return this.add_qlkmfe$(handler);
  };
  function Signal$listen$lambda(this$Signal_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Signal$listen$lambda(this$Signal_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Signal$listen$lambda(this$Signal_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$Signal = this$Signal_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Signal$listen$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Signal$listen$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Signal$listen$lambda.prototype.constructor = Coroutine$Signal$listen$lambda;
  Coroutine$Signal$listen$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = waitOne_1(this.local$this$Signal, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$$receiver.yield_11rb$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Signal.prototype.listen = function (continuation) {
    return asyncGenerate_0(Signal$listen$lambda(this), continuation);
  };
  function Signal_init$lambda() {
    return Unit;
  }
  Signal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Signal',
    interfaces: []
  };
  function mapSignal$lambda_0(closure$out, closure$transform) {
    return function (it) {
      closure$out.invoke_11rb$(closure$transform(it));
      return Unit;
    };
  }
  function mapSignal_0($receiver, transform) {
    var out = new Signal();
    $receiver.add_qlkmfe$(mapSignal$lambda_0(out, transform));
    return out;
  }
  function invoke_0($receiver) {
    $receiver.invoke_11rb$(Unit);
  }
  function waitOne$lambda$lambda_1(closure$closes, closure$c) {
    return function (it) {
      close(closure$closes);
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(it));
      return Unit;
    };
  }
  function waitOne$lambda$lambda_2(closure$closes) {
    return function (it) {
      close(closure$closes);
      return Unit;
    };
  }
  function waitOne$lambda_0(this$waitOne) {
    return function (c) {
      var tmp$;
      var closes = ArrayList_init();
      tmp$ = this$waitOne.iterator();
      while (tmp$.hasNext()) {
        var signal = tmp$.next();
        var element = signal.once_qlkmfe$(waitOne$lambda$lambda_1(closes, c));
        closes.add_11rb$(element);
      }
      c.invokeOnCancellation_f05bi3$(waitOne$lambda$lambda_2(closes));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_1(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function waitOne_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$waitOne_0($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitOne_0($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$waitOne_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitOne_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitOne_0.prototype.constructor = Coroutine$waitOne_0;
  Coroutine$waitOne_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_1(false, waitOne$lambda_0(this.local$$receiver))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitOne$lambda$lambda_3(closure$close, closure$c) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(it));
      return Unit;
    };
  }
  function waitOne$lambda$lambda_4(closure$close) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      return Unit;
    };
  }
  function waitOne$lambda_1(this$waitOne) {
    return function (c) {
      var close = {v: null};
      close.v = this$waitOne.once_qlkmfe$(waitOne$lambda$lambda_3(close, c));
      c.invokeOnCancellation_f05bi3$(waitOne$lambda$lambda_4(close));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_2(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  function waitOne_1($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$waitOne_1($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$waitOne_1($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$waitOne_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$waitOne_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$waitOne_1.prototype.constructor = Coroutine$waitOne_1;
  Coroutine$waitOne_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_2(false, waitOne$lambda_1(this.local$$receiver))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function waitOnePromise$lambda(closure$close, closure$deferred) {
    return function (it) {
      var tmp$;
      (tmp$ = closure$close.v) != null ? (tmp$.close(), Unit) : null;
      closure$deferred.complete_11rb$(it);
      return Unit;
    };
  }
  function waitOnePromise$lambda_0(closure$close) {
    return function (it) {
      closure$close.v.close();
      return Unit;
    };
  }
  function waitOnePromise($receiver) {
    var deferred = CompletableDeferred(Job());
    var close = {v: null};
    close.v = $receiver.once_qlkmfe$(waitOnePromise$lambda(close, deferred));
    deferred.invokeOnCompletion_f05bi3$(waitOnePromise$lambda_0(close));
    return deferred;
  }
  function SuspendingSequenceBuilder() {
  }
  SuspendingSequenceBuilder.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SuspendingSequenceBuilder',
    interfaces: []
  };
  function SuspendingSequence() {
  }
  SuspendingSequence.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SuspendingSequence',
    interfaces: []
  };
  function SuspendingSuspendSequence() {
  }
  SuspendingSuspendSequence.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SuspendingSuspendSequence',
    interfaces: []
  };
  function SuspendingIterator() {
  }
  SuspendingIterator.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SuspendingIterator',
    interfaces: []
  };
  function suspendingSequence$ObjectLiteral(closure$context, closure$block) {
    this.closure$context = closure$context;
    this.closure$block = closure$block;
  }
  suspendingSequence$ObjectLiteral.prototype.iterator = function () {
    return suspendingIterator(this.closure$context, this.closure$block);
  };
  suspendingSequence$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence]
  };
  function suspendingSequence(context, block) {
    return new suspendingSequence$ObjectLiteral(context, block);
  }
  function suspendingIterator(context, block) {
    var $receiver = new SuspendingIteratorCoroutine(context);
    $receiver.nextStep = createCoroutine(block, $receiver, $receiver);
    return $receiver;
  }
  function SuspendingIteratorCoroutine(context) {
    this.context_v8m0nr$_0 = context;
    this.state = SuspendingIteratorCoroutine$State$INITIAL_getInstance();
    this.nextValue = null;
    this.nextStep = null;
    this.computeContinuation = null;
  }
  Object.defineProperty(SuspendingIteratorCoroutine.prototype, 'context', {
    get: function () {
      return this.context_v8m0nr$_0;
    }
  });
  function SuspendingIteratorCoroutine$State(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function SuspendingIteratorCoroutine$State_initFields() {
    SuspendingIteratorCoroutine$State_initFields = function () {
    };
    SuspendingIteratorCoroutine$State$INITIAL_instance = new SuspendingIteratorCoroutine$State('INITIAL', 0);
    SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_instance = new SuspendingIteratorCoroutine$State('COMPUTING_HAS_NEXT', 1);
    SuspendingIteratorCoroutine$State$COMPUTING_NEXT_instance = new SuspendingIteratorCoroutine$State('COMPUTING_NEXT', 2);
    SuspendingIteratorCoroutine$State$COMPUTED_instance = new SuspendingIteratorCoroutine$State('COMPUTED', 3);
    SuspendingIteratorCoroutine$State$DONE_instance = new SuspendingIteratorCoroutine$State('DONE', 4);
  }
  var SuspendingIteratorCoroutine$State$INITIAL_instance;
  function SuspendingIteratorCoroutine$State$INITIAL_getInstance() {
    SuspendingIteratorCoroutine$State_initFields();
    return SuspendingIteratorCoroutine$State$INITIAL_instance;
  }
  var SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_instance;
  function SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_getInstance() {
    SuspendingIteratorCoroutine$State_initFields();
    return SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_instance;
  }
  var SuspendingIteratorCoroutine$State$COMPUTING_NEXT_instance;
  function SuspendingIteratorCoroutine$State$COMPUTING_NEXT_getInstance() {
    SuspendingIteratorCoroutine$State_initFields();
    return SuspendingIteratorCoroutine$State$COMPUTING_NEXT_instance;
  }
  var SuspendingIteratorCoroutine$State$COMPUTED_instance;
  function SuspendingIteratorCoroutine$State$COMPUTED_getInstance() {
    SuspendingIteratorCoroutine$State_initFields();
    return SuspendingIteratorCoroutine$State$COMPUTED_instance;
  }
  var SuspendingIteratorCoroutine$State$DONE_instance;
  function SuspendingIteratorCoroutine$State$DONE_getInstance() {
    SuspendingIteratorCoroutine$State_initFields();
    return SuspendingIteratorCoroutine$State$DONE_instance;
  }
  SuspendingIteratorCoroutine$State.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'State',
    interfaces: [Enum]
  };
  function SuspendingIteratorCoroutine$State$values() {
    return [SuspendingIteratorCoroutine$State$INITIAL_getInstance(), SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_getInstance(), SuspendingIteratorCoroutine$State$COMPUTING_NEXT_getInstance(), SuspendingIteratorCoroutine$State$COMPUTED_getInstance(), SuspendingIteratorCoroutine$State$DONE_getInstance()];
  }
  SuspendingIteratorCoroutine$State.values = SuspendingIteratorCoroutine$State$values;
  function SuspendingIteratorCoroutine$State$valueOf(name) {
    switch (name) {
      case 'INITIAL':
        return SuspendingIteratorCoroutine$State$INITIAL_getInstance();
      case 'COMPUTING_HAS_NEXT':
        return SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_getInstance();
      case 'COMPUTING_NEXT':
        return SuspendingIteratorCoroutine$State$COMPUTING_NEXT_getInstance();
      case 'COMPUTED':
        return SuspendingIteratorCoroutine$State$COMPUTED_getInstance();
      case 'DONE':
        return SuspendingIteratorCoroutine$State$DONE_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.async.SuspendingIteratorCoroutine.State.' + name);
    }
  }
  SuspendingIteratorCoroutine$State.valueOf_61zpoe$ = SuspendingIteratorCoroutine$State$valueOf;
  function SuspendingIteratorCoroutine$computeHasNext$lambda(this$SuspendingIteratorCoroutine) {
    return function (c) {
      this$SuspendingIteratorCoroutine.state = SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_getInstance();
      this$SuspendingIteratorCoroutine.computeContinuation = c;
      ensureNotNull(this$SuspendingIteratorCoroutine.nextStep).resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_3(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  SuspendingIteratorCoroutine.prototype.computeHasNext = function (continuation_0, suspended) {
    var instance = new Coroutine$computeHasNext(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$computeHasNext($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$computeHasNext.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$computeHasNext.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$computeHasNext.prototype.constructor = Coroutine$computeHasNext;
  Coroutine$computeHasNext.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_3(false, SuspendingIteratorCoroutine$computeHasNext$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SuspendingIteratorCoroutine$computeNext$lambda(this$SuspendingIteratorCoroutine) {
    return function (c) {
      this$SuspendingIteratorCoroutine.state = SuspendingIteratorCoroutine$State$COMPUTING_NEXT_getInstance();
      this$SuspendingIteratorCoroutine.computeContinuation = c;
      ensureNotNull(this$SuspendingIteratorCoroutine.nextStep).resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_4(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  SuspendingIteratorCoroutine.prototype.computeNext = function (continuation_0, suspended) {
    var instance = new Coroutine$computeNext(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$computeNext($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$computeNext.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$computeNext.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$computeNext.prototype.constructor = Coroutine$computeNext;
  Coroutine$computeNext.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_4(false, SuspendingIteratorCoroutine$computeNext$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SuspendingIteratorCoroutine.prototype.hasNext = function (continuation_0, suspended) {
    var instance = new Coroutine$hasNext(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hasNext($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hasNext.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasNext.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasNext.prototype.constructor = Coroutine$hasNext;
  Coroutine$hasNext.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            switch (this.$this.state.name) {
              case 'INITIAL':
                this.state_0 = 2;
                this.result_0 = this.$this.computeHasNext(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 'COMPUTED':
                return true;
              case 'DONE':
                return false;
              default:throw IllegalStateException_init('Recursive dependency detected -- already computing next');
            }

          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SuspendingIteratorCoroutine.prototype.next = function (continuation_0, suspended) {
    var instance = new Coroutine$next(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$next($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$next.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$next.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$next.prototype.constructor = Coroutine$next;
  Coroutine$next.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            switch (this.$this.state.name) {
              case 'INITIAL':
                this.state_0 = 2;
                this.result_0 = this.$this.computeNext(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 'COMPUTED':
                this.$this.state = SuspendingIteratorCoroutine$State$INITIAL_getInstance();
                return (tmp$ = this.$this.nextValue) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
              case 'DONE':
                throw NoSuchElementException_init();
              default:throw IllegalStateException_init('Recursive dependency detected -- already computing next');
            }

          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SuspendingIteratorCoroutine.prototype.resumeIterator_6taknv$ = function (hasNext) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    switch (this.state.name) {
      case 'COMPUTING_HAS_NEXT':
        this.state = SuspendingIteratorCoroutine$State$COMPUTED_getInstance();
        (Kotlin.isType(tmp$ = this.computeContinuation, Continuation) ? tmp$ : throwCCE()).resumeWith_i5d895$(new SuccessOrFailure(hasNext));
        break;
      case 'COMPUTING_NEXT':
        this.state = SuspendingIteratorCoroutine$State$INITIAL_getInstance();
        tmp$_2 = Kotlin.isType(tmp$_0 = this.computeContinuation, Continuation) ? tmp$_0 : throwCCE();
        var value = (tmp$_1 = this.nextValue) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
        tmp$_2.resumeWith_i5d895$(new SuccessOrFailure(value));
        break;
      default:throw IllegalStateException_init('Was not supposed to be computing next value. Spurious yield?');
    }
  };
  SuspendingIteratorCoroutine.prototype.resumeWith_i5d895$ = function (result) {
    if (result.isSuccess) {
      this.nextStep = null;
      this.resumeIterator_6taknv$(false);
    }
     else {
      this.nextStep = null;
      this.state = SuspendingIteratorCoroutine$State$DONE_getInstance();
      var $receiver = ensureNotNull(this.computeContinuation);
      var exception = ensureNotNull(result.exceptionOrNull());
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(exception)));
    }
  };
  function SuspendingIteratorCoroutine$yield$lambda(closure$value, this$SuspendingIteratorCoroutine) {
    return function (c) {
      this$SuspendingIteratorCoroutine.nextValue = closure$value;
      this$SuspendingIteratorCoroutine.nextStep = c;
      this$SuspendingIteratorCoroutine.resumeIterator_6taknv$(true);
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_5(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  SuspendingIteratorCoroutine.prototype.yield_11rb$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$yield_11rb$(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$yield_11rb$($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$yield_11rb$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$yield_11rb$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$yield_11rb$.prototype.constructor = Coroutine$yield_11rb$;
  Coroutine$yield_11rb$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_5(false, SuspendingIteratorCoroutine$yield$lambda(this.local$value, this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SuspendingIteratorCoroutine.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SuspendingIteratorCoroutine',
    interfaces: [Continuation, SuspendingSequenceBuilder, SuspendingIterator]
  };
  function toAsync$ObjectLiteral(this$toAsync) {
    this.this$toAsync = this$toAsync;
  }
  toAsync$ObjectLiteral.prototype.hasNext = function (continuation) {
    return this.this$toAsync.hasNext();
  };
  toAsync$ObjectLiteral.prototype.next = function (continuation) {
    return this.this$toAsync.next();
  };
  toAsync$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingIterator]
  };
  function toAsync($receiver) {
    return new toAsync$ObjectLiteral($receiver);
  }
  function SuspendingSequence_0(items) {
    return toAsync_0(items);
  }
  function toAsync$ObjectLiteral_0(this$toAsync) {
    this.this$toAsync = this$toAsync;
  }
  toAsync$ObjectLiteral_0.prototype.iterator = function () {
    return toAsync(this.this$toAsync.iterator());
  };
  toAsync$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence]
  };
  function toAsync_0($receiver) {
    return new toAsync$ObjectLiteral_0($receiver);
  }
  function asyncGenerate$ObjectLiteral(closure$context, closure$block) {
    this.closure$context = closure$context;
    this.closure$block = closure$block;
  }
  asyncGenerate$ObjectLiteral.prototype.iterator = function () {
    return suspendingIterator(this.closure$context, this.closure$block);
  };
  asyncGenerate$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence]
  };
  function asyncGenerate(context, block) {
    return new asyncGenerate$ObjectLiteral(context, block);
  }
  function asyncGenerate_0(block, continuation) {
    return asyncGenerate(continuation.context, block);
  }
  function map($receiver_0, transform_0, continuation) {
    return asyncGenerate(map$lambda($receiver_0, transform_0), continuation);
  }
  defineInlineFunction('korio-js.com.soywiz.korio.async.map_g3zs6d$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var asyncGenerate = _.com.soywiz.korio.async.asyncGenerate_4utg50$;
    function map$lambda(this$map_0, closure$transform_0) {
      return function ($receiver_0, continuation_0, suspended) {
        var instance = new Coroutine$map$lambda(this$map_0, closure$transform_0, $receiver_0, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function Coroutine$map$lambda(this$map_0, closure$transform_0, $receiver_0, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$this$map = this$map_0;
      this.local$closure$transform = closure$transform_0;
      this.local$tmp$ = void 0;
      this.local$$receiver = $receiver_0;
    }
    Coroutine$map$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$map$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$map$lambda.prototype.constructor = Coroutine$map$lambda;
    Coroutine$map$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.local$tmp$ = this.local$this$map.iterator();
              this.state_0 = 2;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              this.state_0 = 3;
              this.result_0 = this.local$tmp$.hasNext(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 3:
              if (!this.result_0) {
                this.state_0 = 7;
                continue;
              }
               else {
                this.state_0 = 4;
                continue;
              }

            case 4:
              this.state_0 = 5;
              this.result_0 = this.local$tmp$.next(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 5:
              var e_0 = this.result_0;
              this.state_0 = 6;
              this.result_0 = this.local$$receiver.yield_11rb$(this.local$closure$transform(e_0), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 6:
              this.state_0 = 2;
              continue;
            case 7:
              return Unit;
          }
        }
         catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          }
           else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    return function ($receiver_0, transform_0, continuation) {
      Kotlin.suspendCall(asyncGenerate(map$lambda($receiver_0, transform_0), Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function filter($receiver_0, filter_0, continuation) {
    return asyncGenerate(filter$lambda($receiver_0, filter_0), continuation);
  }
  defineInlineFunction('korio-js.com.soywiz.korio.async.filter_socpx8$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var asyncGenerate = _.com.soywiz.korio.async.asyncGenerate_4utg50$;
    function filter$lambda(this$filter_0, closure$filter_0) {
      return function ($receiver_0, continuation_0, suspended) {
        var instance = new Coroutine$filter$lambda(this$filter_0, closure$filter_0, $receiver_0, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function Coroutine$filter$lambda(this$filter_0, closure$filter_0, $receiver_0, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$this$filter = this$filter_0;
      this.local$closure$filter = closure$filter_0;
      this.local$tmp$ = void 0;
      this.local$$receiver = $receiver_0;
    }
    Coroutine$filter$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$filter$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$filter$lambda.prototype.constructor = Coroutine$filter$lambda;
    Coroutine$filter$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.local$tmp$ = this.local$this$filter.iterator();
              this.state_0 = 2;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              this.state_0 = 3;
              this.result_0 = this.local$tmp$.hasNext(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 3:
              if (!this.result_0) {
                this.state_0 = 8;
                continue;
              }
               else {
                this.state_0 = 4;
                continue;
              }

            case 4:
              this.state_0 = 5;
              this.result_0 = this.local$tmp$.next(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 5:
              var e_0 = this.result_0;
              if (this.local$closure$filter(e_0)) {
                this.state_0 = 6;
                this.result_0 = this.local$$receiver.yield_11rb$(e_0, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 7;
                continue;
              }

            case 6:
              this.state_0 = 7;
              continue;
            case 7:
              this.state_0 = 2;
              continue;
            case 8:
              return Unit;
          }
        }
         catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          }
           else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    return function ($receiver_0, filter_0, continuation) {
      Kotlin.suspendCall(asyncGenerate(filter$lambda($receiver_0, filter_0), Kotlin.coroutineReceiver()));
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  function chunks$lambda(this$chunks_0, closure$count_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$chunks$lambda(this$chunks_0, closure$count_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$chunks$lambda(this$chunks_0, closure$count_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$chunks = this$chunks_0;
    this.local$closure$count = closure$count_0;
    this.local$tmp$ = void 0;
    this.local$chunk = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$chunks$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$chunks$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$chunks$lambda.prototype.constructor = Coroutine$chunks$lambda;
  Coroutine$chunks$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$chunk = ArrayList_init();
            this.local$tmp$ = this.local$this$chunks.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$chunk.add_11rb$(e_0);
            if (this.local$chunk.size > this.local$closure$count) {
              this.state_0 = 6;
              this.result_0 = this.local$$receiver.yield_11rb$(toList(this.local$chunk), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 6:
            this.local$chunk.clear();
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            if (this.local$chunk.size > 0) {
              this.state_0 = 9;
              this.result_0 = this.local$$receiver.yield_11rb$(toList(this.local$chunk), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 10;
              continue;
            }

          case 9:
            return Unit;
          case 10:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function chunks($receiver, count, continuation) {
    return asyncGenerate_0(chunks$lambda($receiver, count), continuation);
  }
  function toList_3($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$toList($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$toList($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$out = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$toList.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$toList.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$toList.prototype.constructor = Coroutine$toList;
  Coroutine$toList.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$out = ArrayList_init();
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$out.add_11rb$(e_0);
            this.state_0 = 2;
            continue;
          case 6:
            return this.local$out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function fold($receiver, initial, folder, continuation, suspended) {
    var instance = new Coroutine$fold($receiver, initial, folder, continuation);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$fold($receiver, initial, folder, continuation) {
    CoroutineImpl.call(this, continuation);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$result = void 0;
    this.local$$receiver = $receiver;
    this.local$initial = initial;
    this.local$folder = folder;
  }
  Coroutine$fold.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$fold.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$fold.prototype.constructor = Coroutine$fold;
  Coroutine$fold.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$result = this.local$initial;
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e = this.result_0;
            this.local$result = this.local$folder(e, this.local$result);
            this.state_0 = 2;
            continue;
          case 6:
            return this.local$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  defineInlineFunction('korio-js.com.soywiz.korio.async.fold_u821dp$', function ($receiver, initial, folder, continuation) {
    var tmp$;
    var result = initial;
    tmp$ = $receiver.iterator();
    while (true) {
      Kotlin.suspendCall(tmp$.hasNext(Kotlin.coroutineReceiver()));
      if (!Kotlin.coroutineResult(Kotlin.coroutineReceiver()))
        break;
      Kotlin.suspendCall(tmp$.next(Kotlin.coroutineReceiver()));
      var e = Kotlin.coroutineResult(Kotlin.coroutineReceiver());
      result = folder(e, result);
    }
    return result;
  });
  function sum$lambda(a, b) {
    return a + b | 0;
  }
  function sum($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$sum($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$sum($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$result = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sum.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sum.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sum.prototype.constructor = Coroutine$sum;
  Coroutine$sum.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$result = 0;
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$result = sum$lambda(e_0, this.local$result);
            this.state_0 = 2;
            continue;
          case 6:
            this.result_0 = this.local$result;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function isEmpty($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$isEmpty($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$isEmpty($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$hasItems = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$isEmpty.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$isEmpty.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$isEmpty.prototype.constructor = Coroutine$isEmpty;
  Coroutine$isEmpty.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$hasItems = false;
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$hasItems = true;
            this.state_0 = 6;
            continue;
          case 6:
            return this.local$hasItems;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function isNotEmpty($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$isNotEmpty($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$isNotEmpty($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$hasItems = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$isNotEmpty.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$isNotEmpty.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$isNotEmpty.prototype.constructor = Coroutine$isNotEmpty;
  Coroutine$isNotEmpty.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$hasItems = false;
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$hasItems = true;
            this.state_0 = 6;
            continue;
          case 6:
            return !this.local$hasItems;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function firstOrNull_1($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$firstOrNull($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$firstOrNull($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$result = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$firstOrNull.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$firstOrNull.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$firstOrNull.prototype.constructor = Coroutine$firstOrNull;
  Coroutine$firstOrNull.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$result = null;
            this.local$tmp$ = this.local$$receiver.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var e_0 = this.result_0;
            this.local$result = e_0;
            this.state_0 = 6;
            continue;
          case 6:
            return this.local$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function take$lambda(this$take_0, closure$count_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$take$lambda(this$take_0, closure$count_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$take$lambda(this$take_0, closure$count_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$take = this$take_0;
    this.local$closure$count = closure$count_0;
    this.local$current = void 0;
    this.local$iterator = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$take$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$take$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$take$lambda.prototype.constructor = Coroutine$take$lambda;
  Coroutine$take$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$current = 0;
            this.local$iterator = this.local$this$take.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$current < this.local$closure$count) {
              this.state_0 = 3;
              this.result_0 = this.local$iterator.hasNext(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = false;
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            if (!this.result_0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$iterator.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = this.local$$receiver.yield_11rb$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.local$current = this.local$current + 1 | 0;
            this.state_0 = 2;
            continue;
          case 8:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function take($receiver, count, continuation) {
    return asyncGenerate_0(take$lambda($receiver, count), continuation);
  }
  function AsyncSequenceEmitter() {
    this.$delegate_x4y2y5$_0 = new Extra$Mixin();
    this.signal_0 = new Signal();
    this.queuedElements_0 = ArrayList_init();
    this.closed_0 = false;
  }
  AsyncSequenceEmitter.prototype.close = function () {
    this.closed_0 = true;
    invoke_0(this.signal_0);
  };
  AsyncSequenceEmitter.prototype.emit_trkh7z$ = function (v) {
    this.queuedElements_0.add_11rb$(v);
    invoke_0(this.signal_0);
  };
  AsyncSequenceEmitter.prototype.invoke_trkh7z$ = function (v) {
    this.emit_trkh7z$(v);
  };
  function AsyncSequenceEmitter$toSequence$ObjectLiteral(this$AsyncSequenceEmitter) {
    this.this$AsyncSequenceEmitter = this$AsyncSequenceEmitter;
  }
  function AsyncSequenceEmitter$toSequence$ObjectLiteral$iterator$ObjectLiteral(this$AsyncSequenceEmitter) {
    this.this$AsyncSequenceEmitter = this$AsyncSequenceEmitter;
  }
  AsyncSequenceEmitter$toSequence$ObjectLiteral$iterator$ObjectLiteral.prototype.hasNext = function (continuation_0, suspended) {
    var instance = new Coroutine$hasNext_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hasNext_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$hasNext_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasNext_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasNext_0.prototype.constructor = Coroutine$hasNext_0;
  Coroutine$hasNext_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.this$AsyncSequenceEmitter;
            this.$this.this$AsyncSequenceEmitter;
            var this$AsyncSequenceEmitter = this.$this.this$AsyncSequenceEmitter;
            if (!(this$AsyncSequenceEmitter.queuedElements_0.isEmpty() && !this$AsyncSequenceEmitter.closed_0)) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.state_0 = 4;
            this.result_0 = waitOne_1(this.$this.this$AsyncSequenceEmitter.signal_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return !this.$this.this$AsyncSequenceEmitter.queuedElements_0.isEmpty() || !this.$this.this$AsyncSequenceEmitter.closed_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncSequenceEmitter$toSequence$ObjectLiteral$iterator$ObjectLiteral.prototype.next = function (continuation_0, suspended) {
    var instance = new Coroutine$next_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$next_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$next_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$next_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$next_0.prototype.constructor = Coroutine$next_0;
  Coroutine$next_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.this$AsyncSequenceEmitter;
            this.$this.this$AsyncSequenceEmitter;
            var this$AsyncSequenceEmitter = this.$this.this$AsyncSequenceEmitter;
            if (!(this$AsyncSequenceEmitter.queuedElements_0.isEmpty() && !this$AsyncSequenceEmitter.closed_0)) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.state_0 = 4;
            this.result_0 = waitOne_1(this.$this.this$AsyncSequenceEmitter.signal_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            if (this.$this.this$AsyncSequenceEmitter.queuedElements_0.isEmpty() && this.$this.this$AsyncSequenceEmitter.closed_0)
              throw RuntimeException_init('Already closed');
            this.$this.this$AsyncSequenceEmitter;
            this.$this.this$AsyncSequenceEmitter;
            var this$AsyncSequenceEmitter_0 = this.$this.this$AsyncSequenceEmitter;
            return this$AsyncSequenceEmitter_0.queuedElements_0.removeAt_za3lpa$(this$AsyncSequenceEmitter_0.queuedElements_0.size - 1 | 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncSequenceEmitter$toSequence$ObjectLiteral$iterator$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingIterator]
  };
  AsyncSequenceEmitter$toSequence$ObjectLiteral.prototype.iterator = function () {
    return new AsyncSequenceEmitter$toSequence$ObjectLiteral$iterator$ObjectLiteral(this.this$AsyncSequenceEmitter);
  };
  AsyncSequenceEmitter$toSequence$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence]
  };
  AsyncSequenceEmitter.prototype.toSequence = function () {
    return new AsyncSequenceEmitter$toSequence$ObjectLiteral(this);
  };
  Object.defineProperty(AsyncSequenceEmitter.prototype, 'extra', {
    get: function () {
      return this.$delegate_x4y2y5$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_x4y2y5$_0.extra = tmp$;
    }
  });
  AsyncSequenceEmitter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncSequenceEmitter',
    interfaces: [Extra]
  };
  function SuspendingSequenceBuilder2() {
    this.emitter = new AsyncSequenceEmitter();
  }
  SuspendingSequenceBuilder2.prototype.yield_trkh7z$ = function (value) {
    this.emitter.emit_trkh7z$(value);
  };
  SuspendingSequenceBuilder2.prototype.close = function () {
    this.emitter.close();
  };
  SuspendingSequenceBuilder2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SuspendingSequenceBuilder2',
    interfaces: []
  };
  function SuspendingSequence2() {
  }
  SuspendingSequence2.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SuspendingSequence2',
    interfaces: []
  };
  function asyncGenerate2$ObjectLiteral(closure$block) {
    this.closure$block = closure$block;
  }
  asyncGenerate2$ObjectLiteral.prototype.iterator = function (continuation_0, suspended) {
    var instance = new Coroutine$iterator(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$iterator($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$builder = void 0;
  }
  Coroutine$iterator.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$iterator.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$iterator.prototype.constructor = Coroutine$iterator;
  Coroutine$iterator.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$builder = new SuspendingSequenceBuilder2();
            this.state_0 = 2;
            this.result_0 = this.$this.closure$block(this.local$builder, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$builder.emitter.toSequence().iterator();
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  asyncGenerate2$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence2]
  };
  function asyncGenerate2(block, continuation) {
    return new asyncGenerate2$ObjectLiteral(block);
  }
  function asyncGenerate3$ObjectLiteral(closure$block) {
    this.closure$block = closure$block;
  }
  asyncGenerate3$ObjectLiteral.prototype.iterator = function () {
    var builder = new SuspendingSequenceBuilder2();
    this.closure$block(builder);
    return builder.emitter.toSequence().iterator();
  };
  asyncGenerate3$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SuspendingSequence]
  };
  function asyncGenerate3(block) {
    return new asyncGenerate3$ObjectLiteral(block);
  }
  function Consumer() {
  }
  Consumer.prototype.consume_4l50dc$ = function (cancel, continuation, callback$default) {
    if (cancel === void 0)
      cancel = null;
    return callback$default ? callback$default(cancel, continuation) : this.consume_4l50dc$$default(cancel, continuation);
  };
  Consumer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Consumer',
    interfaces: [Closeable]
  };
  function Producer() {
  }
  Producer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Producer',
    interfaces: [Closeable]
  };
  function ProduceConsumer() {
    this.items_fetw3w$_0 = LinkedList_init();
    this.consumers_29a91z$_0 = LinkedList_init();
    this.closed_17zdik$_0 = false;
  }
  Object.defineProperty(ProduceConsumer.prototype, 'availableCount', {
    get: function () {
      return this.items_fetw3w$_0.size;
    }
  });
  ProduceConsumer.prototype.produce_11rb$ = function (v) {
    this.items_fetw3w$_0.addLast_11rb$(v);
    this.flush_gy2s28$_0();
  };
  ProduceConsumer.prototype.close = function () {
    this.items_fetw3w$_0.addLast_11rb$(null);
    this.closed_17zdik$_0 = true;
    this.flush_gy2s28$_0();
  };
  ProduceConsumer.prototype.flush_gy2s28$_0 = function () {
    while (true) {
      var done = {v: false};
      var consumer = {v: null};
      var item = {v: null};
      var tmp$ = !this.consumers_29a91z$_0.isEmpty();
      if (tmp$) {
        tmp$ = !this.items_fetw3w$_0.isEmpty();
      }
      if (tmp$) {
        consumer.v = this.consumers_29a91z$_0.removeFirst();
        item.v = this.items_fetw3w$_0.removeFirst();
      }
       else {
        done.v = true;
      }
      if (done.v)
        break;
      ensureNotNull(consumer.v)(item.v);
    }
  };
  function ProduceConsumer$consume$lambda$lambda(closure$c) {
    return function (it) {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(it));
      return Unit;
    };
  }
  function ProduceConsumer$consume$lambda$lambda_0(this$ProduceConsumer, closure$consumer, closure$c) {
    return function (it) {
      var this$ProduceConsumer_0 = this$ProduceConsumer;
      var closure$consumer_0 = closure$consumer;
      this$ProduceConsumer_0.consumers_29a91z$_0.remove_11rb$(closure$consumer_0);
      var $receiver = closure$c;
      var exception = new CancellationException('');
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(exception)));
      return Unit;
    };
  }
  function ProduceConsumer$consume$lambda(closure$cancel, this$ProduceConsumer) {
    return function (c) {
      var consumer = ProduceConsumer$consume$lambda$lambda(c);
      if (closure$cancel != null) {
        closure$cancel.invoke_qlkmfe$(ProduceConsumer$consume$lambda$lambda_0(this$ProduceConsumer, consumer, c));
      }
      this$ProduceConsumer.consumers_29a91z$_0.add_11rb$(consumer);
      this$ProduceConsumer.flush_gy2s28$_0();
      return Unit;
    };
  }
  function suspendCancellableCoroutine$lambda_6(closure$holdCancellability, closure$block) {
    return function (uCont) {
      var cancellable = new CancellableContinuationImpl_init(intercepted(uCont), 1);
      if (!closure$holdCancellability)
        cancellable.initCancellability();
      closure$block(cancellable);
      return cancellable.getResult();
    };
  }
  ProduceConsumer.prototype.consume_4l50dc$$default = function (cancel_0, continuation_0, suspended) {
    var instance = new Coroutine$consume_4l50dc$$default(this, cancel_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$consume_4l50dc$$default($this, cancel_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$cancel = cancel_0;
  }
  Coroutine$consume_4l50dc$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$consume_4l50dc$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$consume_4l50dc$$default.prototype.constructor = Coroutine$consume_4l50dc$$default;
  Coroutine$consume_4l50dc$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCancellableCoroutine$lambda_6(false, ProduceConsumer$consume$lambda(this.local$cancel, this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ProduceConsumer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProduceConsumer',
    interfaces: [Producer, Consumer]
  };
  function asyncProducer(context, callback) {
    var p = new ProduceConsumer();
    startCoroutineCancellable(callback, p, new EmptyContinuation(context));
    return p;
  }
  function toAsyncOutputStream($receiver) {
    return new AsyncProducerStream($receiver);
  }
  function toAsyncInputStream($receiver) {
    return new AsyncConsumerStream($receiver);
  }
  function AsyncProducerStream(producer) {
    this.producer = producer;
  }
  AsyncProducerStream.prototype.write_mj6st8$$default = function (buffer, offset, len, continuation) {
    var tmp$ = this.producer;
    var toIndex = offset + len | 0;
    tmp$.produce_11rb$(buffer.slice(offset, toIndex));
  };
  AsyncProducerStream.prototype.close = function (continuation) {
    this.producer.close();
  };
  AsyncProducerStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncProducerStream',
    interfaces: [AsyncOutputStream]
  };
  function AsyncConsumerStream(consumer) {
    this.consumer = consumer;
    this.eof = false;
    this.current = BYTES_EMPTY;
    this.currentPos = 0;
  }
  Object.defineProperty(AsyncConsumerStream.prototype, 'available', {
    get: function () {
      return this.current.length - this.currentPos | 0;
    }
  });
  AsyncConsumerStream.prototype.ensureNonEmptyBuffer_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$ensureNonEmptyBuffer_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$ensureNonEmptyBuffer_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$ensureNonEmptyBuffer_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ensureNonEmptyBuffer_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ensureNonEmptyBuffer_0.prototype.constructor = Coroutine$ensureNonEmptyBuffer_0;
  Coroutine$ensureNonEmptyBuffer_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.available !== 0) {
              this.state_0 = 5;
              continue;
            }

            this.$this.currentPos = 0;
            this.state_0 = 3;
            this.result_0 = this.$this.consumer.consume_4l50dc$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var item = this.result_0;
            if (item != null) {
              this.$this.current = item;
              this.state_0 = 4;
              continue;
            }
             else {
              this.$this.current = BYTES_EMPTY;
              this.$this.eof = true;
              this.state_0 = 5;
              continue;
            }

          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var Math_0 = Math;
  AsyncConsumerStream.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$.prototype.constructor = Coroutine$read_mj6st8$;
  Coroutine$read_mj6st8$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.ensureNonEmptyBuffer_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.eof) {
              return -1;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            var b = this.$this.available;
            var actualRead = Math_0.min(this.local$len, b);
            arraycopy(this.$this.current, this.$this.currentPos, this.local$buffer, this.local$offset, actualRead);
            this.$this.currentPos = this.$this.currentPos + actualRead | 0;
            return actualRead;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncConsumerStream.prototype.close = function (continuation) {
    this.consumer.close();
  };
  AsyncConsumerStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncConsumerStream',
    interfaces: [AsyncInputStream]
  };
  function getCoroutineContext(continuation) {
    return continuation.context;
  }
  function ParallelContext() {
    ParallelContext_instance = this;
  }
  ParallelContext.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ParallelContext',
    interfaces: []
  };
  var ParallelContext_instance = null;
  function ParallelContext_getInstance() {
    if (ParallelContext_instance === null) {
      new ParallelContext();
    }
    return ParallelContext_instance;
  }
  function parallel$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$parallel$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$parallel$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$parallel$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$parallel$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$parallel$lambda.prototype.constructor = Coroutine$parallel$lambda;
  Coroutine$parallel$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$closure$callback(ParallelContext_getInstance());
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function parallel(callback_0, continuation_0, suspended) {
    var instance = new Coroutine$parallel(callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$parallel(callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$callback = callback_0;
  }
  Coroutine$parallel.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$parallel.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$parallel.prototype.constructor = Coroutine$parallel;
  Coroutine$parallel.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var res = launch(KorioDefaultDispatcher, void 0, Job(), void 0, parallel$lambda(this.local$callback));
            this.state_0 = 2;
            this.result_0 = res.join(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sequence$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$sequence$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$sequence$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$sequence$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sequence$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sequence$lambda.prototype.constructor = Coroutine$sequence$lambda;
  Coroutine$sequence$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(ParallelContext_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sequence($receiver, callback) {
    async(KorioDefaultDispatcher, void 0, void 0, void 0, sequence$lambda(callback));
  }
  function runBlockingNoSuspensions$ObjectLiteral(closure$result, closure$completed, closure$resultEx, closure$suspendCount) {
    this.closure$result = closure$result;
    this.closure$completed = closure$completed;
    this.closure$resultEx = closure$resultEx;
    OldContinuationAdaptor.call(this);
    this.context_5wsim1$_0 = new runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral(closure$suspendCount);
  }
  Object.defineProperty(runBlockingNoSuspensions$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_5wsim1$_0;
    }
  });
  runBlockingNoSuspensions$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    var tmp$;
    var rvalue = value != null ? value : Kotlin.isType(tmp$ = Unit, Any) ? tmp$ : throwCCE();
    this.closure$result.v = rvalue;
    this.closure$completed.v = true;
  };
  runBlockingNoSuspensions$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    this.closure$resultEx.v = exception;
    this.closure$completed.v = true;
    printStackTrace(exception);
  };
  function runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral(closure$suspendCount) {
    this.closure$suspendCount = closure$suspendCount;
    CoroutineDispatcher.call(this);
    this.key_hb9ir1$_0 = ContinuationInterceptor.Key;
  }
  Object.defineProperty(runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype, 'key', {
    get: function () {
      return this.key_hb9ir1$_0;
    }
  });
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.interceptContinuation_wj8d80$ = function (continuation) {
    var tmp$;
    tmp$ = this.closure$suspendCount.v;
    this.closure$suspendCount.v = tmp$ + 1 | 0;
    return continuation;
  };
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.dispatch_5bn72i$ = function (context, block) {
    block.run();
  };
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.scheduleResumeAfterDelay_hzpi9w$ = function (time, unit, continuation) {
    continuation.resumeWith_i5d895$(new SuccessOrFailure(Unit));
  };
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Delay, CoroutineDispatcher, ContinuationInterceptor]
  };
  runBlockingNoSuspensions$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [OldContinuationAdaptor]
  };
  function runBlockingNoSuspensions(callback) {
    var completed = {v: false};
    var result = {v: null};
    var resultEx = {v: null};
    var suspendCount = {v: 0};
    startCoroutineUndispatched(callback, new runBlockingNoSuspensions$ObjectLiteral(result, completed, resultEx, suspendCount));
    if (!completed.v)
      invalidOp('ioSync was not completed synchronously! suspendCount=' + suspendCount.v);
    if (resultEx.v != null)
      throw ensureNotNull(resultEx.v);
    return result.v == null ? throwUPAE('result') : result.v;
  }
  function withOptTimeout$lambda(closure$callback_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$withOptTimeout$lambda(closure$callback_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$withOptTimeout$lambda(closure$callback_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$withOptTimeout$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$withOptTimeout$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$withOptTimeout$lambda.prototype.constructor = Coroutine$withOptTimeout$lambda;
  Coroutine$withOptTimeout$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function withOptTimeout(ms_0, name_0, callback_0, continuation_0, suspended) {
    var instance = new Coroutine$withOptTimeout(ms_0, name_0, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$withOptTimeout(ms_0, name_0, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$ms = ms_0;
    this.local$name = name_0;
    this.local$callback = callback_0;
  }
  Coroutine$withOptTimeout.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$withOptTimeout.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$withOptTimeout.prototype.constructor = Coroutine$withOptTimeout;
  Coroutine$withOptTimeout.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$name === void 0)
              this.local$name = 'timeout';
            if (this.local$ms == null) {
              this.state_0 = 2;
              this.result_0 = this.local$callback(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          case 3:
            this.state_0 = 4;
            this.result_0 = withTimeout(this.local$ms, withOptTimeout$lambda(this.local$callback), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function CompressionContext(level) {
    if (level === void 0)
      level = 6;
    this.level = level;
    this.name = null;
    this.custom = null;
  }
  CompressionContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CompressionContext',
    interfaces: []
  };
  function CompressionMethod() {
  }
  CompressionMethod.prototype.uncompress_5oegxh$ = function (i, o, continuation) {
    return unsupported_0();
  };
  CompressionMethod.prototype.compress_k0b7q8$$default = function (i, o, context, continuation) {
    return unsupported_0();
  };
  CompressionMethod.prototype.compress_k0b7q8$ = function (i, o, context, continuation, callback$default) {
    if (context === void 0)
      context = new CompressionContext(6);
    return callback$default ? callback$default(i, o, context, continuation) : this.compress_k0b7q8$$default(i, o, context, continuation);
  };
  CompressionMethod.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'CompressionMethod',
    interfaces: []
  };
  function compress$lambda(closure$data_0, closure$context_0, this$compress_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$compress$lambda(closure$data_0, closure$context_0, this$compress_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$compress$lambda(closure$data_0, closure$context_0, this$compress_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$data = closure$data_0;
    this.local$closure$context = closure$context_0;
    this.local$this$compress = this$compress_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$compress$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress$lambda.prototype.constructor = Coroutine$compress$lambda;
  Coroutine$compress$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$compress.compress_k0b7q8$(openAsync(this.local$closure$data), toAsync_1(this.local$$receiver), this.local$closure$context, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function compress($receiver_0, data_0, context_0, continuation_0, suspended) {
    var instance = new Coroutine$compress($receiver_0, data_0, context_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$compress($receiver_0, data_0, context_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$buffer = void 0;
    this.local$$receiver = $receiver_0;
    this.local$data = data_0;
    this.local$context = context_0;
  }
  Coroutine$compress.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress.prototype.constructor = Coroutine$compress;
  Coroutine$compress.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$context === void 0)
              this.local$context = new CompressionContext(6);
            this.local$buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(this.local$buffer);
            this.state_0 = 2;
            this.result_0 = compress$lambda(this.local$data, this.local$context, this.local$$receiver)(s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0 = this.local$buffer.toByteArray();
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function uncompress($receiver_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress($receiver_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$uncompress($receiver_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$buffer = void 0;
    this.local$$receiver = $receiver_0;
    this.local$data = data_0;
  }
  Coroutine$uncompress.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress.prototype.constructor = Coroutine$uncompress;
  Coroutine$uncompress.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(this.local$buffer);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.uncompress_5oegxh$(openAsync(this.local$data), toAsync_1(s), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var out = this.local$buffer.toByteArray();
            return out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function uncompressTo($receiver_0, data_0, out_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompressTo($receiver_0, data_0, out_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$uncompressTo($receiver_0, data_0, out_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$data = data_0;
    this.local$out = out_0;
  }
  Coroutine$uncompressTo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompressTo.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompressTo.prototype.constructor = Coroutine$uncompressTo;
  Coroutine$uncompressTo.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.uncompress_5oegxh$(openAsync(this.local$data), this.local$out, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Uncompressed() {
    Uncompressed_instance = this;
  }
  Uncompressed.prototype.uncompress_5oegxh$ = function (i_0, o_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_5oegxh$(this, i_0, o_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_5oegxh$($this, i_0, o_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$uncompress_5oegxh$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_5oegxh$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_5oegxh$.prototype.constructor = Coroutine$uncompress_5oegxh$;
  Coroutine$uncompress_5oegxh$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = copyTo(this.local$i, this.local$o, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Uncompressed.prototype.compress_k0b7q8$$default = function (i_0, o_0, context, continuation_0, suspended) {
    var instance = new Coroutine$compress_k0b7q8$$default(this, i_0, o_0, context, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$compress_k0b7q8$$default($this, i_0, o_0, context, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$compress_k0b7q8$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress_k0b7q8$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress_k0b7q8$$default.prototype.constructor = Coroutine$compress_k0b7q8$$default;
  Coroutine$compress_k0b7q8$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = copyTo(this.local$i, this.local$o, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Uncompressed.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Uncompressed',
    interfaces: [CompressionMethod]
  };
  var Uncompressed_instance = null;
  function Uncompressed_getInstance() {
    if (Uncompressed_instance === null) {
      new Uncompressed();
    }
    return Uncompressed_instance;
  }
  function uncompress_0($receiver, method, continuation) {
    return uncompress(method, $receiver, continuation);
  }
  function compress_0($receiver, method, context, continuation) {
    if (context === void 0)
      context = new CompressionContext();
    return compress(method, $receiver, context, continuation);
  }
  function syncUncompress$lambda(closure$method_0, this$syncUncompress_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$syncUncompress$lambda(closure$method_0, this$syncUncompress_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$syncUncompress$lambda(closure$method_0, this$syncUncompress_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$method = closure$method_0;
    this.local$this$syncUncompress = this$syncUncompress_0;
  }
  Coroutine$syncUncompress$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$syncUncompress$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$syncUncompress$lambda.prototype.constructor = Coroutine$syncUncompress$lambda;
  Coroutine$syncUncompress$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = uncompress(this.local$closure$method, this.local$this$syncUncompress, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var out = this.result_0;
            return out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function syncUncompress($receiver, method) {
    return runBlockingNoSuspensions(syncUncompress$lambda(method, $receiver));
  }
  function syncCompress$lambda(closure$method_0, this$syncCompress_0, closure$context_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$syncCompress$lambda(closure$method_0, this$syncCompress_0, closure$context_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$syncCompress$lambda(closure$method_0, this$syncCompress_0, closure$context_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$method = closure$method_0;
    this.local$this$syncCompress = this$syncCompress_0;
    this.local$closure$context = closure$context_0;
  }
  Coroutine$syncCompress$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$syncCompress$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$syncCompress$lambda.prototype.constructor = Coroutine$syncCompress$lambda;
  Coroutine$syncCompress$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = compress(this.local$closure$method, this.local$this$syncCompress, this.local$closure$context, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function syncCompress($receiver, method, context) {
    if (context === void 0)
      context = new CompressionContext();
    return runBlockingNoSuspensions(syncCompress$lambda(method, $receiver, context));
  }
  function syncUncompress$lambda_0(closure$i_0, closure$o_0, this$syncUncompress_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$syncUncompress$lambda_0(closure$i_0, closure$o_0, this$syncUncompress_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$syncUncompress$lambda_0(closure$i_0, closure$o_0, this$syncUncompress_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$i = closure$i_0;
    this.local$closure$o = closure$o_0;
    this.local$this$syncUncompress = this$syncUncompress_0;
  }
  Coroutine$syncUncompress$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$syncUncompress$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$syncUncompress$lambda_0.prototype.constructor = Coroutine$syncUncompress$lambda_0;
  Coroutine$syncUncompress$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$syncUncompress.uncompress_5oegxh$(toAsyncInputStream_0(this.local$closure$i), toAsyncOutputStream_0(this.local$closure$o), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function syncUncompress_0($receiver, i, o) {
    runBlockingNoSuspensions(syncUncompress$lambda_0(i, o, $receiver));
  }
  function Deflate(windowBits) {
    Deflate$Companion_getInstance();
    this.windowBits = windowBits;
  }
  Deflate.prototype.compress_k0b7q8$$default = function (i_0, o_0, context, continuation_0, suspended) {
    var instance = new Coroutine$compress_k0b7q8$$default_0(this, i_0, o_0, context, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$compress_k0b7q8$$default_0($this, i_0, o_0, context, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$chunkSize = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$compress_k0b7q8$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress_k0b7q8$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress_k0b7q8$$default_0.prototype.constructor = Coroutine$compress_k0b7q8$$default_0;
  Coroutine$compress_k0b7q8$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = hasAvailable(this.local$i, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 11;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = getAvailable(this.local$i, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var available = this.result_0;
            var b = L65535;
            this.local$chunkSize = (available.compareTo_11rb$(b) <= 0 ? available : b).toInt();
            this.state_0 = 6;
            this.result_0 = write8_0(this.local$o, this.local$chunkSize >= available.toNumber() ? 1 : 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = write16_le_0(this.local$o, this.local$chunkSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = write16_le_0(this.local$o, ~this.local$chunkSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = readBytesExact(this.local$i, this.local$chunkSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = writeBytes(this.local$o, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 2;
            continue;
          case 11:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Deflate.prototype.uncompress_5oegxh$ = function (i_0, o_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_5oegxh$_0(this, i_0, o_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_5oegxh$_0($this, i_0, o_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$uncompress_5oegxh$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_5oegxh$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_5oegxh$_0.prototype.constructor = Coroutine$uncompress_5oegxh$_0;
  Coroutine$uncompress_5oegxh$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.uncompress_lvg59t$(new BitReader(this.local$i), this.local$o, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Deflate.prototype.uncompress_lvg59t$ = function (reader_0, out_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_lvg59t$(this, reader_0, out_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_lvg59t$($this, reader_0, out_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tempResult = void 0;
    this.local$sout = void 0;
    this.local$lastBlock = void 0;
    this.local$btype = void 0;
    this.local$len = void 0;
    this.local$tree = void 0;
    this.local$dist = void 0;
    this.local$value = void 0;
    this.local$reader = reader_0;
    this.local$out = out_0;
  }
  Coroutine$uncompress_lvg59t$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_lvg59t$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_lvg59t$.prototype.constructor = Coroutine$uncompress_lvg59t$;
  Coroutine$uncompress_lvg59t$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tempResult = new HuffmanTree$Result(0, 0, 0);
            var ring = new SlidingWindow(this.$this.windowBits);
            this.local$sout = new SlidingWindowWithOutput(ring, this.local$out);
            this.local$lastBlock = false;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$lastBlock) {
              this.state_0 = 21;
              continue;
            }

            if (this.local$reader.requirePrepare) {
              this.state_0 = 3;
              this.result_0 = this.local$reader.prepareBigChunk(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.local$lastBlock = this.local$reader.sreadBit();
            this.local$btype = this.local$reader.readBits_za3lpa$(2);
            if (!(0 <= this.local$btype && this.local$btype <= 2)) {
              throw IllegalStateException_init('invalid bit'.toString());
            }

            if (this.local$btype === 0) {
              this.local$reader.bitdata = 0;
              this.local$reader.bitsavailable = 0;
              if (this.local$reader.requirePrepare) {
                this.state_0 = 17;
                this.result_0 = this.local$reader.prepareBigChunk(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 18;
                continue;
              }
            }
             else {
              if (this.local$reader.requirePrepare) {
                this.state_0 = 5;
                this.result_0 = this.local$reader.prepareBigChunk(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 6;
                continue;
              }
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            var tmp$ = this.local$btype === 1 ? Deflate$Companion_getInstance().FIXED_TREE_DIST_0 : this.$this.readDynamicTree_7bux6z$_0(this.local$reader);
            this.local$tree = tmp$.component1(), this.local$dist = tmp$.component2();
            this.state_0 = 7;
            continue;
          case 7:
            if (this.local$reader.requirePrepare) {
              this.state_0 = 8;
              this.result_0 = this.local$reader.prepareBigChunk(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 9;
              continue;
            }

          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.local$value = this.local$tree.sreadOne_zfzl8c$(this.local$reader, this.local$tempResult).value;
            if (this.local$value === 256) {
              this.state_0 = 16;
              continue;
            }
             else {
              this.state_0 = 10;
              continue;
            }

          case 10:
            if (this.local$value < 256) {
              this.local$sout.putOut_s8j3t7$(toByte(this.local$value));
              this.state_0 = 13;
              continue;
            }
             else {
              if (this.local$reader.requirePrepare) {
                this.state_0 = 11;
                this.result_0 = this.local$reader.prepareBigChunk(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 12;
                continue;
              }
            }

          case 11:
            this.state_0 = 12;
            continue;
          case 12:
            var lengthInfo = Deflate$Companion_getInstance().INFOS_LZ_0[this.local$value - 257 | 0];
            var lengthExtra = this.local$reader.readBits_za3lpa$(lengthInfo.extra);
            var distanceData = this.local$dist.sreadOne_zfzl8c$(this.local$reader, this.local$tempResult).value;
            var distanceInfo = Deflate$Companion_getInstance().INFOS_LZ2_0[distanceData];
            var distanceExtra = this.local$reader.readBits_za3lpa$(distanceInfo.extra);
            var distance = distanceInfo.offset + distanceExtra | 0;
            var length = lengthInfo.offset + lengthExtra | 0;
            this.local$sout.getPutCopyOut_vux9f0$(distance, length);
            this.state_0 = 13;
            continue;
          case 13:
            if (this.local$sout.mustFlush) {
              this.state_0 = 14;
              this.result_0 = this.local$sout.flush_6taknv$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 15;
              continue;
            }

          case 14:
            this.state_0 = 15;
            continue;
          case 15:
            this.state_0 = 7;
            continue;
          case 16:
            this.state_0 = 20;
            continue;
          case 17:
            this.state_0 = 18;
            continue;
          case 18:
            this.local$len = this.local$reader.su16_le();
            var nlen = this.local$reader.su16_le();
            var nnlen = ~nlen & 65535;
            if (this.local$len !== nnlen) {
              throw IllegalStateException_init(('Invalid deflate stream: len(' + this.local$len + ') != ~nlen(' + nnlen + ') :: nlen=' + nlen).toString());
            }

            this.state_0 = 19;
            this.result_0 = this.local$reader.abytes_3fbn1q$(this.local$len, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 19:
            var bytes = this.result_0;
            this.local$sout.putOut_mj6st8$(bytes, 0, this.local$len);
            this.state_0 = 20;
            continue;
          case 20:
            this.state_0 = 2;
            continue;
          case 21:
            this.state_0 = 22;
            this.result_0 = this.local$sout.flush_6taknv$(true, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 22:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Deflate.prototype.readDynamicTree_7bux6z$_0 = function (reader) {
    var tmp$, tmp$_0;
    var tempResult = new HuffmanTree$Result(0, 0, 0);
    var hlit = reader.readBits_za3lpa$(5) + 257 | 0;
    var hdist = reader.readBits_za3lpa$(5) + 1 | 0;
    var hclen = reader.readBits_za3lpa$(4) + 4 | 0;
    var codeLenCodeLen = new Int32Array(19);
    for (var i = 0; i < hclen; i++)
      codeLenCodeLen[Deflate$Companion_getInstance().HCLENPOS_0[i]] = reader.readBits_za3lpa$(3);
    var codeLen = HuffmanTree$Companion_getInstance().fromLengths_q5rwfd$(codeLenCodeLen);
    var lengths = new Int32Array(hlit + hdist | 0);
    var n = 0;
    var hlithdist = hlit + hdist | 0;
    while (n < hlithdist) {
      var value = codeLen.sreadOne_zfzl8c$(reader, tempResult).value;
      if (!(0 <= value && value <= 18)) {
        throw IllegalStateException_init('Invalid'.toString());
      }
      switch (value) {
        case 16:
          tmp$ = reader.readBits_za3lpa$(2) + 3 | 0;
          break;
        case 17:
          tmp$ = reader.readBits_za3lpa$(3) + 3 | 0;
          break;
        case 18:
          tmp$ = reader.readBits_za3lpa$(7) + 11 | 0;
          break;
        default:tmp$ = 1;
          break;
      }
      var len = tmp$;
      switch (value) {
        case 16:
          tmp$_0 = lengths[n - 1 | 0];
          break;
        case 17:
          tmp$_0 = 0;
          break;
        case 18:
          tmp$_0 = 0;
          break;
        default:tmp$_0 = value;
          break;
      }
      var vv = tmp$_0;
      var start = n;
      var end = n + len | 0;
      lengths.fill(vv, start, end);
      n = n + len | 0;
    }
    return new Pair(HuffmanTree$Companion_getInstance().fromLengths_q5rwfd$(sliceArray(lengths, until(0, hlit))), HuffmanTree$Companion_getInstance().fromLengths_q5rwfd$(sliceArray(lengths, until(hlit, lengths.length))));
  };
  function Deflate$Companion() {
    Deflate$Companion_instance = this;
    Deflate.call(this, 15);
    var $receiver = new Int32Array(288);
    for (var n = 0; n <= 143; n++)
      $receiver[n] = 8;
    for (var n_0 = 144; n_0 <= 255; n_0++)
      $receiver[n_0] = 9;
    for (var n_1 = 256; n_1 <= 279; n_1++)
      $receiver[n_1] = 7;
    for (var n_2 = 280; n_2 <= 287; n_2++)
      $receiver[n_2] = 8;
    this.LENGTH0_0 = $receiver;
    this.FIXED_TREE_0 = HuffmanTree$Companion_getInstance().fromLengths_q5rwfd$(this.LENGTH0_0);
    var tmp$ = HuffmanTree$Companion_getInstance();
    var array = new Int32Array(32);
    var tmp$_0;
    tmp$_0 = array.length - 1 | 0;
    for (var i = 0; i <= tmp$_0; i++) {
      array[i] = 5;
    }
    this.FIXED_DIST_0 = tmp$.fromLengths_q5rwfd$(array);
    this.FIXED_TREE_DIST_0 = to(this.FIXED_TREE_0, this.FIXED_DIST_0);
    this.INFOS_LZ_0 = [new Deflate$Companion$Info(0, 3), new Deflate$Companion$Info(0, 4), new Deflate$Companion$Info(0, 5), new Deflate$Companion$Info(0, 6), new Deflate$Companion$Info(0, 7), new Deflate$Companion$Info(0, 8), new Deflate$Companion$Info(0, 9), new Deflate$Companion$Info(0, 10), new Deflate$Companion$Info(1, 11), new Deflate$Companion$Info(1, 13), new Deflate$Companion$Info(1, 15), new Deflate$Companion$Info(1, 17), new Deflate$Companion$Info(2, 19), new Deflate$Companion$Info(2, 23), new Deflate$Companion$Info(2, 27), new Deflate$Companion$Info(2, 31), new Deflate$Companion$Info(3, 35), new Deflate$Companion$Info(3, 43), new Deflate$Companion$Info(3, 51), new Deflate$Companion$Info(3, 59), new Deflate$Companion$Info(4, 67), new Deflate$Companion$Info(4, 83), new Deflate$Companion$Info(4, 99), new Deflate$Companion$Info(4, 115), new Deflate$Companion$Info(5, 131), new Deflate$Companion$Info(5, 163), new Deflate$Companion$Info(5, 195), new Deflate$Companion$Info(5, 227), new Deflate$Companion$Info(0, 258)];
    this.INFOS_LZ2_0 = [new Deflate$Companion$Info(0, 1), new Deflate$Companion$Info(0, 2), new Deflate$Companion$Info(0, 3), new Deflate$Companion$Info(0, 4), new Deflate$Companion$Info(1, 5), new Deflate$Companion$Info(1, 7), new Deflate$Companion$Info(2, 9), new Deflate$Companion$Info(2, 13), new Deflate$Companion$Info(3, 17), new Deflate$Companion$Info(3, 25), new Deflate$Companion$Info(4, 33), new Deflate$Companion$Info(4, 49), new Deflate$Companion$Info(5, 65), new Deflate$Companion$Info(5, 97), new Deflate$Companion$Info(6, 129), new Deflate$Companion$Info(6, 193), new Deflate$Companion$Info(7, 257), new Deflate$Companion$Info(7, 385), new Deflate$Companion$Info(8, 513), new Deflate$Companion$Info(8, 769), new Deflate$Companion$Info(9, 1025), new Deflate$Companion$Info(9, 1537), new Deflate$Companion$Info(10, 2049), new Deflate$Companion$Info(10, 3073), new Deflate$Companion$Info(11, 4097), new Deflate$Companion$Info(11, 6145), new Deflate$Companion$Info(12, 8193), new Deflate$Companion$Info(12, 12289), new Deflate$Companion$Info(13, 16385), new Deflate$Companion$Info(13, 24577)];
    this.HCLENPOS_0 = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  }
  function Deflate$Companion$Info(extra, offset) {
    this.extra = extra;
    this.offset = offset;
  }
  Deflate$Companion$Info.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Info',
    interfaces: []
  };
  Deflate$Companion$Info.prototype.component1 = function () {
    return this.extra;
  };
  Deflate$Companion$Info.prototype.component2 = function () {
    return this.offset;
  };
  Deflate$Companion$Info.prototype.copy_vux9f0$ = function (extra, offset) {
    return new Deflate$Companion$Info(extra === void 0 ? this.extra : extra, offset === void 0 ? this.offset : offset);
  };
  Deflate$Companion$Info.prototype.toString = function () {
    return 'Info(extra=' + Kotlin.toString(this.extra) + (', offset=' + Kotlin.toString(this.offset)) + ')';
  };
  Deflate$Companion$Info.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.extra) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    return result;
  };
  Deflate$Companion$Info.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.extra, other.extra) && Kotlin.equals(this.offset, other.offset)))));
  };
  Deflate$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: [Deflate]
  };
  var Deflate$Companion_instance = null;
  function Deflate$Companion_getInstance() {
    if (Deflate$Companion_instance === null) {
      new Deflate$Companion();
    }
    return Deflate$Companion_instance;
  }
  Deflate.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Deflate',
    interfaces: [CompressionMethod]
  };
  function SlidingWindowWithOutput(sliding, out) {
    this.sliding = sliding;
    this.out = out;
    this.bab = ByteArrayBuffer_init(8192);
  }
  Object.defineProperty(SlidingWindowWithOutput.prototype, 'output', {
    get: function () {
      return this.bab.size;
    }
  });
  Object.defineProperty(SlidingWindowWithOutput.prototype, 'mustFlush', {
    get: function () {
      return this.bab.size >= 4096;
    }
  });
  SlidingWindowWithOutput.prototype.getPutCopyOut_vux9f0$ = function (distance, length) {
    for (var n = 0; n < length; n++) {
      var v = this.sliding.getPut_za3lpa$(distance);
      this.bab.append_s8j3t7$(toByte(v));
    }
  };
  SlidingWindowWithOutput.prototype.putOut_mj6st8$ = function (bytes, offset, len) {
    this.bab.append_mj6st8$(bytes, offset, len);
    this.sliding.putBytes_mj6st8$(bytes, offset, len);
  };
  SlidingWindowWithOutput.prototype.putOut_s8j3t7$ = function (byte) {
    this.bab.append_s8j3t7$(byte);
    this.sliding.put_za3lpa$(toUnsigned(byte));
  };
  SlidingWindowWithOutput.prototype.flush_6taknv$ = function (finish_0, continuation_0, suspended) {
    var instance = new Coroutine$flush_6taknv$(this, finish_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$flush_6taknv$($this, finish_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$finish = finish_0;
  }
  Coroutine$flush_6taknv$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$flush_6taknv$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$flush_6taknv$.prototype.constructor = Coroutine$flush_6taknv$;
  Coroutine$flush_6taknv$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$finish === void 0)
              this.local$finish = false;
            if (this.local$finish || this.$this.mustFlush) {
              this.state_0 = 2;
              this.result_0 = this.$this.out.write_mj6st8$(this.$this.bab.data, 0, this.$this.bab.size, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.$this.bab.clear();
            this.state_0 = 3;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SlidingWindowWithOutput.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SlidingWindowWithOutput',
    interfaces: []
  };
  var GZIP;
  var GZIPNoCrc;
  function GZIPBase(checkCrc) {
    this.checkCrc = checkCrc;
  }
  function GZIPBase$uncompress$ObjectLiteral(closure$chash, closure$csize, closure$o) {
    this.closure$chash = closure$chash;
    this.closure$csize = closure$csize;
    this.closure$o = closure$o;
    this.$delegate_bj6lmc$_0 = closure$o;
  }
  GZIPBase$uncompress$ObjectLiteral.prototype.write_mj6st8$$default = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_mj6st8$$default(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_mj6st8$$default($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_mj6st8$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_mj6st8$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_mj6st8$$default.prototype.constructor = Coroutine$write_mj6st8$$default;
  Coroutine$write_mj6st8$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$chash.v = CRC32_getInstance().update_3fge6q$(this.$this.closure$chash.v, this.local$buffer, this.local$offset, this.local$len);
            this.$this.closure$csize.v = this.$this.closure$csize.v + this.local$len | 0;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$o.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  GZIPBase$uncompress$ObjectLiteral.prototype.close = function (continuation) {
    return this.$delegate_bj6lmc$_0.close(continuation);
  };
  GZIPBase$uncompress$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncOutputStream]
  };
  GZIPBase.prototype.uncompress_5oegxh$ = function (i_0, o_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_5oegxh$_1(this, i_0, o_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_5oegxh$_1($this, i_0, o_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$s = void 0;
    this.local$fhcrc = void 0;
    this.local$fname = void 0;
    this.local$fcomment = void 0;
    this.local$chash = void 0;
    this.local$csize = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$uncompress_5oegxh$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_5oegxh$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_5oegxh$_1.prototype.constructor = Coroutine$uncompress_5oegxh$_1;
  Coroutine$uncompress_5oegxh$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$s = new BitReader(this.local$i);
            this.state_0 = 2;
            this.result_0 = this.local$s.prepareBigChunk(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$s.su8() !== 31 || this.local$s.su8() !== 139) {
              throw IllegalStateException_init('Not a GZIP file'.toString());
            }

            var method = this.local$s.su8();
            if (method !== 8) {
              throw IllegalStateException_init('Just supported deflate in GZIP'.toString());
            }

            var ftext = this.local$s.sreadBit();
            this.local$fhcrc = this.local$s.sreadBit();
            var fextra = this.local$s.sreadBit();
            this.local$fname = this.local$s.sreadBit();
            this.local$fcomment = this.local$s.sreadBit();
            var reserved = this.local$s.readBits_za3lpa$(3);
            var mtime = this.local$s.su32_le();
            var xfl = this.local$s.su8();
            var os = this.local$s.su8();
            if (fextra) {
              this.state_0 = 3;
              this.result_0 = this.local$s.abytes_3fbn1q$(this.local$s.su16_le(), void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$tmp$ = new Int8Array([]);
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.local$tmp$ = this.result_0;
            this.state_0 = 4;
            continue;
          case 4:
            var extra = this.local$tmp$;
            if (this.local$fname) {
              this.state_0 = 5;
              this.result_0 = this.local$s.strz(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$tmp$_0 = null;
              this.state_0 = 6;
              continue;
            }

          case 5:
            this.local$tmp$_0 = this.result_0;
            this.state_0 = 6;
            continue;
          case 6:
            var name = this.local$tmp$_0;
            if (this.local$fcomment) {
              this.state_0 = 7;
              this.result_0 = this.local$s.strz(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$tmp$_1 = null;
              this.state_0 = 8;
              continue;
            }

          case 7:
            this.local$tmp$_1 = this.result_0;
            this.state_0 = 8;
            continue;
          case 8:
            var comment = this.local$tmp$_1;
            var crc16 = this.local$fhcrc ? this.local$s.su16_le() : 0;
            this.local$chash = {v: CRC32_getInstance().INITIAL};
            this.local$csize = {v: 0};
            this.state_0 = 9;
            this.result_0 = Deflate$Companion_getInstance().uncompress_lvg59t$(this.local$s, new GZIPBase$uncompress$ObjectLiteral(this.local$chash, this.local$csize, this.local$o), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = this.local$s.prepareBigChunk(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var crc32 = this.local$s.su32_le();
            var size = this.local$s.su32_le();
            if (this.$this.checkCrc) {
              if (this.local$chash.v !== crc32)
                invalidOp("CRC32 doesn't match " + get_hex_0(this.local$chash.v) + ' != ' + get_hex_0(crc32));
              if (this.local$csize.v !== size)
                invalidOp("Size doesn't match " + get_hex_0(this.local$csize.v) + ' != ' + get_hex_0(size));
            }

            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GZIPBase$compress$ObjectLiteral(closure$i, closure$crc32, closure$size) {
    this.closure$i = closure$i;
    this.closure$crc32 = closure$crc32;
    this.closure$size = closure$size;
    this.$delegate_qfbs2b$_0 = closure$i;
  }
  GZIPBase$compress$ObjectLiteral.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_0(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_0($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_0.prototype.constructor = Coroutine$read_mj6st8$_0;
  Coroutine$read_mj6st8$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$i.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            if (read > 0) {
              this.$this.closure$crc32.v = CRC32_getInstance().update_3fge6q$(this.$this.closure$crc32.v, this.local$buffer, this.local$offset, this.local$len);
              this.$this.closure$size.v = this.$this.closure$size.v + read | 0;
            }

            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  GZIPBase$compress$ObjectLiteral.prototype.close = function (continuation) {
    return this.$delegate_qfbs2b$_0.close(continuation);
  };
  GZIPBase$compress$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.$delegate_qfbs2b$_0.getLength(continuation);
  };
  GZIPBase$compress$ObjectLiteral.prototype.getPosition = function (continuation) {
    return this.$delegate_qfbs2b$_0.getPosition(continuation);
  };
  GZIPBase$compress$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncInputWithLengthStream]
  };
  GZIPBase.prototype.compress_k0b7q8$$default = function (i_0, o_0, context_0, continuation_0, suspended) {
    var instance = new Coroutine$compress_k0b7q8$$default_1(this, i_0, o_0, context_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$compress_k0b7q8$$default_1($this, i_0, o_0, context_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$size = void 0;
    this.local$crc32 = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
    this.local$context = context_0;
  }
  Coroutine$compress_k0b7q8$$default_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress_k0b7q8$$default_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress_k0b7q8$$default_1.prototype.constructor = Coroutine$compress_k0b7q8$$default_1;
  Coroutine$compress_k0b7q8$$default_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = write8_0(this.local$o, 31, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = write8_0(this.local$o, 139, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = write8_0(this.local$o, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = write8_0(this.local$o, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = write32_le_1(this.local$o, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = write8_0(this.local$o, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = write8_0(this.local$o, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.local$size = {v: 0};
            this.local$crc32 = {v: CRC32_getInstance().INITIAL};
            this.state_0 = 9;
            this.result_0 = Deflate$Companion_getInstance().compress_k0b7q8$(new GZIPBase$compress$ObjectLiteral(this.local$i, this.local$crc32, this.local$size), this.local$o, this.local$context, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = write32_le_1(this.local$o, this.local$crc32.v, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            this.result_0 = write32_le_1(this.local$o, this.local$size.v, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  GZIPBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GZIPBase',
    interfaces: [CompressionMethod]
  };
  function ZLib() {
    ZLib_instance = this;
  }
  function ZLib$uncompress$ObjectLiteral(closure$o, closure$chash) {
    this.closure$o = closure$o;
    this.closure$chash = closure$chash;
  }
  ZLib$uncompress$ObjectLiteral.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close.prototype.constructor = Coroutine$close;
  Coroutine$close.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$o.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZLib$uncompress$ObjectLiteral.prototype.write_mj6st8$$default = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_mj6st8$$default_0(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_mj6st8$$default_0($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_mj6st8$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_mj6st8$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_mj6st8$$default_0.prototype.constructor = Coroutine$write_mj6st8$$default_0;
  Coroutine$write_mj6st8$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$o.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.closure$chash.v = Adler32_getInstance().update_3fge6q$(this.$this.closure$chash.v, this.local$buffer, this.local$offset, this.local$len);
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZLib$uncompress$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncOutputStream]
  };
  var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;
  ZLib.prototype.uncompress_5oegxh$ = function (i_0, o_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_5oegxh$_2(this, i_0, o_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_5oegxh$_2($this, i_0, o_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = void 0;
    this.local$chash = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$uncompress_5oegxh$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_5oegxh$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_5oegxh$_2.prototype.constructor = Coroutine$uncompress_5oegxh$_2;
  Coroutine$uncompress_5oegxh$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$s = new BitReader(this.local$i);
            this.state_0 = 2;
            this.result_0 = this.local$s.prepareBigChunk(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var compressionMethod = this.local$s.readBits_za3lpa$(4);
            if (compressionMethod !== 8) {
              throw IllegalStateException_init(('Invalid zlib stream compressionMethod=' + compressionMethod).toString());
            }

            var windowBits = this.local$s.readBits_za3lpa$(4) + 8 | 0;
            var fcheck = this.local$s.readBits_za3lpa$(5);
            var hasDict = this.local$s.sreadBit();
            var flevel = this.local$s.readBits_za3lpa$(2);
            var dictid = 0;
            if (hasDict) {
              dictid = this.local$s.su32_le();
              throw new NotImplementedError_init('An operation is not implemented: ' + ('Unsupported custom dictionaries (Provided DICTID=' + dictid + ')'));
            }

            this.local$chash = {v: Adler32_getInstance().INITIAL};
            this.state_0 = 3;
            this.result_0 = (new Deflate(windowBits)).uncompress_lvg59t$(this.local$s, new ZLib$uncompress$ObjectLiteral(this.local$o, this.local$chash), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$s.prepareBigChunk(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            var adler32 = this.local$s.su32_be();
            if (this.local$chash.v !== adler32)
              invalidOp("Adler32 doesn't match " + get_hex_0(this.local$chash.v) + ' != ' + get_hex_0(adler32));
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ZLib$compress$ObjectLiteral(closure$i, closure$chash) {
    this.closure$i = closure$i;
    this.closure$chash = closure$chash;
    this.$delegate_f96thv$_0 = closure$i;
  }
  ZLib$compress$ObjectLiteral.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_1(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_1($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_1.prototype.constructor = Coroutine$read_mj6st8$_1;
  Coroutine$read_mj6st8$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$i.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            if (read > 0) {
              this.$this.closure$chash.v = Adler32_getInstance().update_3fge6q$(this.$this.closure$chash.v, this.local$buffer, this.local$offset, read);
            }

            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZLib$compress$ObjectLiteral.prototype.close = function (continuation) {
    return this.$delegate_f96thv$_0.close(continuation);
  };
  ZLib$compress$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.$delegate_f96thv$_0.getLength(continuation);
  };
  ZLib$compress$ObjectLiteral.prototype.getPosition = function (continuation) {
    return this.$delegate_f96thv$_0.getPosition(continuation);
  };
  ZLib$compress$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncInputWithLengthStream]
  };
  ZLib.prototype.compress_k0b7q8$$default = function (i_0, o_0, context_0, continuation_0, suspended) {
    var instance = new Coroutine$compress_k0b7q8$$default_2(this, i_0, o_0, context_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$compress_k0b7q8$$default_2($this, i_0, o_0, context_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$slidingBits = void 0;
    this.local$chash = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
    this.local$context = context_0;
  }
  Coroutine$compress_k0b7q8$$default_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress_k0b7q8$$default_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress_k0b7q8$$default_2.prototype.constructor = Coroutine$compress_k0b7q8$$default_2;
  Coroutine$compress_k0b7q8$$default_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$slidingBits = 15;
            this.state_0 = 2;
            this.result_0 = write8_0(this.local$o, 8 | this.local$slidingBits - 8 << 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = write8_0(this.local$o, 0 | this.local$context.level << 6, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$chash = {v: Adler32_getInstance().INITIAL};
            this.state_0 = 4;
            this.result_0 = (new Deflate(this.local$slidingBits)).compress_k0b7q8$(new ZLib$compress$ObjectLiteral(this.local$i, this.local$chash), this.local$o, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = write32_be_1(this.local$o, this.local$chash.v, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZLib.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ZLib',
    interfaces: [CompressionMethod]
  };
  var ZLib_instance = null;
  function ZLib_getInstance() {
    if (ZLib_instance === null) {
      new ZLib();
    }
    return ZLib_instance;
  }
  function Lzma() {
    Lzma_instance = this;
  }
  Lzma.prototype.uncompress_5oegxh$ = function (i_0, o_0, continuation_0, suspended) {
    var instance = new Coroutine$uncompress_5oegxh$_3(this, i_0, o_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$uncompress_5oegxh$_3($this, i_0, o_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$uncompress_5oegxh$_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$uncompress_5oegxh$_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$uncompress_5oegxh$_3.prototype.constructor = Coroutine$uncompress_5oegxh$_3;
  Coroutine$uncompress_5oegxh$_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readAll(this.local$i, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var input = openSync(this.result_0);
            var properties = readBytesExact_0(input, 5);
            var decoder = new SevenZip$LzmaDecoder();
            if (!decoder.SetDecoderProperties_fqrh44$(properties))
              throw Exception_init('Incorrect stream properties');
            var outSize = readS64_le_1(input);
            var buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(buffer);
            if (!decoder.Code_ybf00i$(input, s, outSize))
              throw Exception_init('Error in data stream');
            var out = buffer.toByteArray();
            this.state_0 = 3;
            this.result_0 = writeBytes(this.local$o, out, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Lzma.prototype.compress_k0b7q8$$default = function (i_0, o_0, context, continuation_0, suspended) {
    var instance = new Coroutine$compress_k0b7q8$$default_3(this, i_0, o_0, context, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$compress_k0b7q8$$default_3($this, i_0, o_0, context, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$algorithm = void 0;
    this.local$matchFinder = void 0;
    this.local$dictionarySize = void 0;
    this.local$lc = void 0;
    this.local$lp = void 0;
    this.local$pb = void 0;
    this.local$fb = void 0;
    this.local$eos = void 0;
    this.local$i = i_0;
    this.local$o = o_0;
  }
  Coroutine$compress_k0b7q8$$default_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$compress_k0b7q8$$default_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$compress_k0b7q8$$default_3.prototype.constructor = Coroutine$compress_k0b7q8$$default_3;
  Coroutine$compress_k0b7q8$$default_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$algorithm = 2;
            this.local$matchFinder = 1;
            this.local$dictionarySize = 8388608;
            this.local$lc = 3;
            this.local$lp = 0;
            this.local$pb = 2;
            this.local$fb = 128;
            this.local$eos = false;
            this.state_0 = 2;
            this.result_0 = readAll(this.local$i, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var input = this.result_0;
            var buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(buffer);
            var encoder = new SevenZip$LzmaEncoder();
            if (!encoder.SetAlgorithm_za3lpa$(this.local$algorithm))
              throw Exception_init('Incorrect compression mode');
            if (!encoder.SetDictionarySize_za3lpa$(this.local$dictionarySize))
              throw Exception_init('Incorrect dictionary size');
            if (!encoder.SetNumFastBytes_za3lpa$(this.local$fb))
              throw Exception_init('Incorrect -fb value');
            if (!encoder.SetMatchFinder_za3lpa$(this.local$matchFinder))
              throw Exception_init('Incorrect -mf value');
            if (!encoder.SetLcLpPb_qt1dr2$(this.local$lc, this.local$lp, this.local$pb))
              throw Exception_init('Incorrect -lc or -lp or -pb value');
            encoder.SetEndMarkerMode_6taknv$(this.local$eos);
            encoder.WriteCoderProperties_ceqwhy$(s);
            var fileSize = this.local$eos ? L_1 : Kotlin.Long.fromInt(input.length);
            write64_le_1(s, fileSize);
            encoder.Code_bvprln$(openSync(input), s, L_1, L_1, null);
            var out = buffer.toByteArray();
            this.state_0 = 3;
            this.result_0 = writeBytes(this.local$o, out, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Lzma.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Lzma',
    interfaces: [CompressionMethod]
  };
  var Lzma_instance = null;
  function Lzma_getInstance() {
    if (Lzma_instance === null) {
      new Lzma();
    }
    return Lzma_instance;
  }
  function SevenZip() {
    SevenZip_instance = this;
  }
  function SevenZip$LzmaAlone() {
    SevenZip$LzmaAlone_instance = this;
  }
  function SevenZip$LzmaAlone$CommandLine() {
    SevenZip$LzmaAlone$CommandLine$Companion_getInstance();
    this.Command = -1;
    this.NumBenchmarkPasses = 10;
    this.DictionarySize = 8388608;
    this.DictionarySizeIsDefined = false;
    this.Lc = 3;
    this.Lp = 0;
    this.Pb = 2;
    this.Fb = 128;
    this.FbIsDefined = false;
    this.Eos = false;
    this.Algorithm = 2;
    this.MatchFinder = 1;
    this.InFile = '';
    this.OutFile = '';
  }
  SevenZip$LzmaAlone$CommandLine.prototype.parseInt_pdl1vz$ = function ($receiver) {
    return toInt($receiver);
  };
  SevenZip$LzmaAlone$CommandLine.prototype.ParseSwitch_y4putb$ = function (s) {
    if (startsWith(s, 'd')) {
      this.DictionarySize = 1 << this.parseInt_pdl1vz$(s.substring(1));
      this.DictionarySizeIsDefined = true;
    }
     else if (startsWith(s, 'fb')) {
      this.Fb = this.parseInt_pdl1vz$(s.substring(2));
      this.FbIsDefined = true;
    }
     else if (startsWith(s, 'a')) {
      this.Algorithm = this.parseInt_pdl1vz$(s.substring(1));
    }
     else if (startsWith(s, 'lc')) {
      this.Lc = this.parseInt_pdl1vz$(s.substring(2));
    }
     else if (startsWith(s, 'lp')) {
      this.Lp = this.parseInt_pdl1vz$(s.substring(2));
    }
     else if (startsWith(s, 'pb')) {
      this.Pb = this.parseInt_pdl1vz$(s.substring(2));
    }
     else if (startsWith(s, 'eos'))
      this.Eos = true;
    else if (startsWith(s, 'mf')) {
      var mfs = s.substring(2);
      if (equals(mfs, 'bt2'))
        this.MatchFinder = 0;
      else if (equals(mfs, 'bt4'))
        this.MatchFinder = 1;
      else if (equals(mfs, 'bt4b'))
        this.MatchFinder = 2;
      else
        return false;
    }
     else
      return false;
    return true;
  };
  SevenZip$LzmaAlone$CommandLine.prototype.Parse_kand9s$ = function (args) {
    var pos = 0;
    var switchMode = true;
    for (var i = 0; i !== args.length; ++i) {
      var s = args[i];
      if (s.length === 0)
        return false;
      if (switchMode) {
        if (Kotlin.compareTo(s, '--') === 0) {
          switchMode = false;
          continue;
        }
        if (s.charCodeAt(0) === 45) {
          var sw = s.substring(1).toLowerCase();
          if (sw.length === 0)
            return false;
          try {
            if (!this.ParseSwitch_y4putb$(sw))
              return false;
          }
           catch (e) {
            if (Kotlin.isType(e, NumberFormatException)) {
              return false;
            }
             else
              throw e;
          }
          continue;
        }
      }
      if (pos === 0) {
        if (equals_0(s, 'e', true))
          this.Command = SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kEncode;
        else if (equals_0(s, 'd', true))
          this.Command = SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kDecode;
        else if (equals_0(s, 'b', true))
          this.Command = SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kBenchmak;
        else
          return false;
      }
       else if (pos === 1) {
        if (this.Command === SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kBenchmak) {
          try {
            this.NumBenchmarkPasses = this.parseInt_pdl1vz$(s);
            if (this.NumBenchmarkPasses < 1)
              return false;
          }
           catch (e) {
            if (Kotlin.isType(e, NumberFormatException)) {
              return false;
            }
             else
              throw e;
          }
        }
         else
          this.InFile = s;
      }
       else if (pos === 2)
        this.OutFile = s;
      else
        return false;
      pos = pos + 1 | 0;
      continue;
    }
    return true;
  };
  function SevenZip$LzmaAlone$CommandLine$Companion() {
    SevenZip$LzmaAlone$CommandLine$Companion_instance = this;
    this.kEncode = 0;
    this.kDecode = 1;
    this.kBenchmak = 2;
  }
  SevenZip$LzmaAlone$CommandLine$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$LzmaAlone$CommandLine$Companion_instance = null;
  function SevenZip$LzmaAlone$CommandLine$Companion_getInstance() {
    if (SevenZip$LzmaAlone$CommandLine$Companion_instance === null) {
      new SevenZip$LzmaAlone$CommandLine$Companion();
    }
    return SevenZip$LzmaAlone$CommandLine$Companion_instance;
  }
  SevenZip$LzmaAlone$CommandLine.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CommandLine',
    interfaces: []
  };
  SevenZip$LzmaAlone.prototype.PrintHelp_8be2vx$ = function () {
    println('\nUsage:  LZMA <e|d> [<switches>...] inputFile outputFile\n' + '  e: encode file\n' + '  d: decode file\n' + '  b: Benchmark\n' + '<Switches>\n' + '  -d{N}:  set dictionary - [0,28], default: 23 (8MB)\n' + '  -fb{N}: set number of fast bytes - [5, 273], default: 128\n' + '  -lc{N}: set number of literal context bits - [0, 8], default: 3\n' + '  -lp{N}: set number of literal pos bits - [0, 4], default: 0\n' + '  -pb{N}: set number of pos bits - [0, 4], default: 2\n' + '  -mf{MF_ID}: set Match Finder: [bt2, bt4], default: bt4\n' + '  -eos:   write End Of Stream marker\n');
  };
  function SevenZip$LzmaAlone$main$lambda(closure$args_0, this$LzmaAlone_0) {
    return function ($receiver, continuation_0, suspended) {
      var instance = new Coroutine$SevenZip$LzmaAlone$main$lambda(closure$args_0, this$LzmaAlone_0, $receiver, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SevenZip$LzmaAlone$main$lambda(closure$args_0, this$LzmaAlone_0, $receiver, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$args = closure$args_0;
    this.local$this$LzmaAlone = this$LzmaAlone_0;
    this.local$params = void 0;
    this.local$inStream = void 0;
    this.local$outStream = void 0;
  }
  Coroutine$SevenZip$LzmaAlone$main$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SevenZip$LzmaAlone$main$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SevenZip$LzmaAlone$main$lambda.prototype.constructor = Coroutine$SevenZip$LzmaAlone$main$lambda;
  Coroutine$SevenZip$LzmaAlone$main$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            println('\nLZMA (Kotlin) 4.61  2008-11-23\n');
            if (this.local$closure$args.length < 1) {
              this.local$this$LzmaAlone.PrintHelp_8be2vx$();
              return;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$params = new SevenZip$LzmaAlone$CommandLine();
            if (!this.local$params.Parse_kand9s$(this.local$closure$args)) {
              println('\nIncorrect command');
              return;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            if (this.local$params.Command === SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kBenchmak) {
              var dictionary = 2097152;
              if (this.local$params.DictionarySizeIsDefined)
                dictionary = this.local$params.DictionarySize;
              if (this.local$params.MatchFinder > 1)
                throw Exception_init('Unsupported match finder');
              throw new NotImplementedError_init();
            }
             else {
              if (this.local$params.Command === SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kEncode || this.local$params.Command === SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kDecode) {
                this.state_0 = 4;
                this.result_0 = get_uniVfs(this.local$params.InFile).readAll(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                throw Exception_init('Incorrect command');
              }
            }

          case 4:
            var inFile = this.result_0;
            var ba = ByteArrayBuffer_init();
            this.local$inStream = openSync(inFile);
            this.local$outStream = MemorySyncStream_0(ba);
            var eos = false;
            if (this.local$params.Eos)
              eos = true;
            if (this.local$params.Command === SevenZip$LzmaAlone$CommandLine$Companion_getInstance().kEncode) {
              var encoder = new SevenZip$LzmaEncoder();
              if (!encoder.SetAlgorithm_za3lpa$(this.local$params.Algorithm))
                throw Exception_init('Incorrect compression mode');
              if (!encoder.SetDictionarySize_za3lpa$(this.local$params.DictionarySize))
                throw Exception_init('Incorrect dictionary size');
              if (!encoder.SetNumFastBytes_za3lpa$(this.local$params.Fb))
                throw Exception_init('Incorrect -fb value');
              if (!encoder.SetMatchFinder_za3lpa$(this.local$params.MatchFinder))
                throw Exception_init('Incorrect -mf value');
              if (!encoder.SetLcLpPb_qt1dr2$(this.local$params.Lc, this.local$params.Lp, this.local$params.Pb))
                throw Exception_init('Incorrect -lc or -lp or -pb value');
              encoder.SetEndMarkerMode_6taknv$(eos);
              encoder.WriteCoderProperties_ceqwhy$(this.local$outStream);
              var fileSize = eos ? L_1 : Kotlin.Long.fromInt(inFile.length);
              for (var i = 0; i <= 7; i++)
                write8_1(this.local$outStream, fileSize.shiftRightUnsigned(8 * i | 0).toInt() & 255);
              encoder.Code_bvprln$(this.local$inStream, this.local$outStream, L_1, L_1, null);
            }
             else {
              var propertiesSize = 5;
              var properties = new Int8Array(propertiesSize);
              if (this.local$inStream.read_mj6st8$(properties, 0, propertiesSize) !== propertiesSize)
                throw Exception_init('input .lzma file is too short');
              var decoder = new SevenZip$LzmaDecoder();
              if (!decoder.SetDecoderProperties_fqrh44$(properties))
                throw Exception_init('Incorrect stream properties');
              var outSize = L0;
              for (var i_0 = 0; i_0 <= 7; i_0++) {
                var v = read_3(this.local$inStream);
                if (v < 0)
                  throw Exception_init("Can't read stream size");
                outSize = outSize.or(Kotlin.Long.fromInt(v).shiftLeft(8 * i_0 | 0));
              }
              if (!decoder.Code_ybf00i$(this.local$inStream, this.local$outStream, outSize))
                throw Exception_init('Error in data stream');
            }

            this.state_0 = 5;
            this.result_0 = get_uniVfs(this.local$params.OutFile).writeBytes_bdsgvo$(ba.toByteArray(), [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.local$outStream.flush();
            this.local$outStream.close();
            this.local$inStream.close();
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SevenZip$LzmaAlone.prototype.main_kand9s$ = function (args) {
    Korio(SevenZip$LzmaAlone$main$lambda(args, this));
  };
  SevenZip$LzmaAlone.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LzmaAlone',
    interfaces: []
  };
  var SevenZip$LzmaAlone_instance = null;
  function SevenZip$LzmaAlone_getInstance() {
    if (SevenZip$LzmaAlone_instance === null) {
      new SevenZip$LzmaAlone();
    }
    return SevenZip$LzmaAlone_instance;
  }
  function SevenZip$ICodeProgress() {
  }
  SevenZip$ICodeProgress.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'ICodeProgress',
    interfaces: []
  };
  function SevenZip$BitTreeEncoder(NumBitLevels) {
    SevenZip$BitTreeEncoder$Companion_getInstance();
    this.NumBitLevels_8be2vx$ = NumBitLevels;
    this.Models_8be2vx$ = null;
    this.Models_8be2vx$ = new Int16Array(1 << this.NumBitLevels_8be2vx$);
  }
  SevenZip$BitTreeEncoder.prototype.Init = function () {
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.Models_8be2vx$);
  };
  SevenZip$BitTreeEncoder.prototype.Encode_m7qcon$ = function (rangeEncoder, symbol) {
    var m = 1;
    var bitIndex = this.NumBitLevels_8be2vx$;
    while (bitIndex !== 0) {
      bitIndex = bitIndex - 1 | 0;
      var bit = symbol >>> bitIndex & 1;
      rangeEncoder.Encode_359eei$(this.Models_8be2vx$, m, bit);
      m = m << 1 | bit;
    }
  };
  SevenZip$BitTreeEncoder.prototype.ReverseEncode_m7qcon$ = function (rangeEncoder, symbol) {
    var tmp$;
    var symbol_0 = symbol;
    var m = 1;
    tmp$ = this.NumBitLevels_8be2vx$;
    for (var i = 0; i < tmp$; i++) {
      var bit = symbol_0 & 1;
      rangeEncoder.Encode_359eei$(this.Models_8be2vx$, m, bit);
      m = m << 1 | bit;
      symbol_0 = symbol_0 >> 1;
    }
  };
  SevenZip$BitTreeEncoder.prototype.GetPrice_za3lpa$ = function (symbol) {
    var price = 0;
    var m = 1;
    var bitIndex = this.NumBitLevels_8be2vx$;
    while (bitIndex !== 0) {
      bitIndex = bitIndex - 1 | 0;
      var bit = symbol >>> bitIndex & 1;
      price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(this.Models_8be2vx$[m], bit) | 0;
      m = (m << 1) + bit | 0;
    }
    return price;
  };
  SevenZip$BitTreeEncoder.prototype.ReverseGetPrice_za3lpa$ = function (symbol) {
    var symbol_0 = symbol;
    var price = 0;
    var m = 1;
    for (var i = this.NumBitLevels_8be2vx$; i >= 1; i--) {
      var bit = symbol_0 & 1;
      symbol_0 = symbol_0 >>> 1;
      price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(this.Models_8be2vx$[m], bit) | 0;
      m = m << 1 | bit;
    }
    return price;
  };
  function SevenZip$BitTreeEncoder$Companion() {
    SevenZip$BitTreeEncoder$Companion_instance = this;
  }
  SevenZip$BitTreeEncoder$Companion.prototype.ReverseGetPrice_rbjysc$ = function (Models, startIndex, NumBitLevels, symbol) {
    var symbol_0 = symbol;
    var price = 0;
    var m = 1;
    for (var i = NumBitLevels; i >= 1; i--) {
      var bit = symbol_0 & 1;
      symbol_0 = symbol_0 >>> 1;
      price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(Models[startIndex + m | 0], bit) | 0;
      m = m << 1 | bit;
    }
    return price;
  };
  SevenZip$BitTreeEncoder$Companion.prototype.ReverseEncode_wskkkj$ = function (Models, startIndex, rangeEncoder, NumBitLevels, symbol) {
    var symbol_0 = symbol;
    var m = 1;
    for (var i = 0; i < NumBitLevels; i++) {
      var bit = symbol_0 & 1;
      rangeEncoder.Encode_359eei$(Models, startIndex + m | 0, bit);
      m = m << 1 | bit;
      symbol_0 = symbol_0 >> 1;
    }
  };
  SevenZip$BitTreeEncoder$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$BitTreeEncoder$Companion_instance = null;
  function SevenZip$BitTreeEncoder$Companion_getInstance() {
    if (SevenZip$BitTreeEncoder$Companion_instance === null) {
      new SevenZip$BitTreeEncoder$Companion();
    }
    return SevenZip$BitTreeEncoder$Companion_instance;
  }
  SevenZip$BitTreeEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BitTreeEncoder',
    interfaces: []
  };
  function SevenZip$BitTreeDecoder(NumBitLevels) {
    SevenZip$BitTreeDecoder$Companion_getInstance();
    this.NumBitLevels_8be2vx$ = NumBitLevels;
    this.Models_8be2vx$ = null;
    this.Models_8be2vx$ = new Int16Array(1 << this.NumBitLevels_8be2vx$);
  }
  SevenZip$BitTreeDecoder.prototype.Init = function () {
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.Models_8be2vx$);
  };
  SevenZip$BitTreeDecoder.prototype.Decode_zgofv1$ = function (rangeDecoder) {
    var m = 1;
    for (var bitIndex = this.NumBitLevels_8be2vx$; bitIndex >= 1; bitIndex--)
      m = (m << 1) + rangeDecoder.DecodeBit_3y3ajg$(this.Models_8be2vx$, m) | 0;
    return m - (1 << this.NumBitLevels_8be2vx$) | 0;
  };
  SevenZip$BitTreeDecoder.prototype.ReverseDecode_zgofv1$ = function (rangeDecoder) {
    var tmp$;
    var m = 1;
    var symbol = 0;
    tmp$ = this.NumBitLevels_8be2vx$;
    for (var bitIndex = 0; bitIndex < tmp$; bitIndex++) {
      var bit = rangeDecoder.DecodeBit_3y3ajg$(this.Models_8be2vx$, m);
      m = m << 1;
      m = m + bit | 0;
      symbol = symbol | bit << bitIndex;
    }
    return symbol;
  };
  function SevenZip$BitTreeDecoder$Companion() {
    SevenZip$BitTreeDecoder$Companion_instance = this;
  }
  SevenZip$BitTreeDecoder$Companion.prototype.ReverseDecode_2q3ht5$ = function (Models, startIndex, rangeDecoder, NumBitLevels) {
    var m = 1;
    var symbol = 0;
    for (var bitIndex = 0; bitIndex < NumBitLevels; bitIndex++) {
      var bit = rangeDecoder.DecodeBit_3y3ajg$(Models, startIndex + m | 0);
      m = m << 1;
      m = m + bit | 0;
      symbol = symbol | bit << bitIndex;
    }
    return symbol;
  };
  SevenZip$BitTreeDecoder$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$BitTreeDecoder$Companion_instance = null;
  function SevenZip$BitTreeDecoder$Companion_getInstance() {
    if (SevenZip$BitTreeDecoder$Companion_instance === null) {
      new SevenZip$BitTreeDecoder$Companion();
    }
    return SevenZip$BitTreeDecoder$Companion_instance;
  }
  SevenZip$BitTreeDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BitTreeDecoder',
    interfaces: []
  };
  function SevenZip$RangeDecoder() {
    SevenZip$RangeDecoder$Companion_getInstance();
    this.Range_8be2vx$ = 0;
    this.Code_8be2vx$ = 0;
    this.Stream_8be2vx$ = null;
  }
  SevenZip$RangeDecoder.prototype.SetStream_sayfrj$ = function (stream) {
    this.Stream_8be2vx$ = stream;
  };
  SevenZip$RangeDecoder.prototype.ReleaseStream = function () {
    this.Stream_8be2vx$ = null;
  };
  SevenZip$RangeDecoder.prototype.Init = function () {
    this.Code_8be2vx$ = 0;
    this.Range_8be2vx$ = -1;
    for (var i = 0; i <= 4; i++)
      this.Code_8be2vx$ = this.Code_8be2vx$ << 8 | read_3(ensureNotNull(this.Stream_8be2vx$));
  };
  SevenZip$RangeDecoder.prototype.DecodeDirectBits_za3lpa$ = function (numTotalBits) {
    var result = 0;
    for (var i = numTotalBits; i >= 1; i--) {
      this.Range_8be2vx$ = this.Range_8be2vx$ >>> 1;
      var t = this.Code_8be2vx$ - this.Range_8be2vx$ >>> 31;
      this.Code_8be2vx$ = this.Code_8be2vx$ - (this.Range_8be2vx$ & t - 1) | 0;
      result = result << 1 | 1 - t;
      if ((this.Range_8be2vx$ & SevenZip$RangeDecoder$Companion_getInstance().kTopMask_8be2vx$) === 0) {
        this.Code_8be2vx$ = this.Code_8be2vx$ << 8 | read_3(ensureNotNull(this.Stream_8be2vx$));
        this.Range_8be2vx$ = this.Range_8be2vx$ << 8;
      }
    }
    return result;
  };
  SevenZip$RangeDecoder.prototype.DecodeBit_3y3ajg$ = function (probs, index) {
    var prob = probs[index];
    var newBound = Kotlin.imul(this.Range_8be2vx$ >>> SevenZip$RangeDecoder$Companion_getInstance().kNumBitModelTotalBits_8be2vx$, prob);
    if ((this.Code_8be2vx$ ^ -2147483648) < (newBound ^ -2147483648)) {
      this.Range_8be2vx$ = newBound;
      probs[index] = toShort(prob + (SevenZip$RangeDecoder$Companion_getInstance().kBitModelTotal_8be2vx$ - prob >>> SevenZip$RangeDecoder$Companion_getInstance().kNumMoveBits_8be2vx$) | 0);
      if ((this.Range_8be2vx$ & SevenZip$RangeDecoder$Companion_getInstance().kTopMask_8be2vx$) === 0) {
        this.Code_8be2vx$ = this.Code_8be2vx$ << 8 | read_3(ensureNotNull(this.Stream_8be2vx$));
        this.Range_8be2vx$ = this.Range_8be2vx$ << 8;
      }
      return 0;
    }
     else {
      this.Range_8be2vx$ = this.Range_8be2vx$ - newBound | 0;
      this.Code_8be2vx$ = this.Code_8be2vx$ - newBound | 0;
      probs[index] = toShort(prob - (prob >>> SevenZip$RangeDecoder$Companion_getInstance().kNumMoveBits_8be2vx$) | 0);
      if ((this.Range_8be2vx$ & SevenZip$RangeDecoder$Companion_getInstance().kTopMask_8be2vx$) === 0) {
        this.Code_8be2vx$ = this.Code_8be2vx$ << 8 | read_3(ensureNotNull(this.Stream_8be2vx$));
        this.Range_8be2vx$ = this.Range_8be2vx$ << 8;
      }
      return 1;
    }
  };
  function SevenZip$RangeDecoder$Companion() {
    SevenZip$RangeDecoder$Companion_instance = this;
    this.kTopMask_8be2vx$ = -16777216;
    this.kNumBitModelTotalBits_8be2vx$ = 11;
    this.kBitModelTotal_8be2vx$ = 1 << this.kNumBitModelTotalBits_8be2vx$;
    this.kNumMoveBits_8be2vx$ = 5;
  }
  SevenZip$RangeDecoder$Companion.prototype.InitBitModels_gmedm2$ = function (probs) {
    for (var i = 0; i !== probs.length; ++i) {
      probs[i] = toShort(this.kBitModelTotal_8be2vx$ >>> 1);
    }
  };
  SevenZip$RangeDecoder$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$RangeDecoder$Companion_instance = null;
  function SevenZip$RangeDecoder$Companion_getInstance() {
    if (SevenZip$RangeDecoder$Companion_instance === null) {
      new SevenZip$RangeDecoder$Companion();
    }
    return SevenZip$RangeDecoder$Companion_instance;
  }
  SevenZip$RangeDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RangeDecoder',
    interfaces: []
  };
  function SevenZip$RangeEncoder() {
    SevenZip$RangeEncoder$Companion_getInstance();
    this.Stream_8be2vx$ = null;
    this.Low_8be2vx$ = L0;
    this.Range_8be2vx$ = 0;
    this._cacheSize_8be2vx$ = 0;
    this._cache_8be2vx$ = 0;
    this._position_8be2vx$ = L0;
  }
  SevenZip$RangeEncoder.prototype.SetStream_ceqwhy$ = function (stream) {
    this.Stream_8be2vx$ = stream;
  };
  SevenZip$RangeEncoder.prototype.ReleaseStream = function () {
    this.Stream_8be2vx$ = null;
  };
  SevenZip$RangeEncoder.prototype.Init = function () {
    this._position_8be2vx$ = L0;
    this.Low_8be2vx$ = L0;
    this.Range_8be2vx$ = -1;
    this._cacheSize_8be2vx$ = 1;
    this._cache_8be2vx$ = 0;
  };
  SevenZip$RangeEncoder.prototype.FlushData = function () {
    for (var i = 0; i <= 4; i++)
      this.ShiftLow();
  };
  SevenZip$RangeEncoder.prototype.FlushStream = function () {
    flush(ensureNotNull(this.Stream_8be2vx$));
  };
  SevenZip$RangeEncoder.prototype.ShiftLow = function () {
    var LowHi = this.Low_8be2vx$.shiftRightUnsigned(32).toInt();
    if (LowHi !== 0 || this.Low_8be2vx$.compareTo_11rb$(L4278190080) < 0) {
      this._position_8be2vx$ = this._position_8be2vx$.add(Kotlin.Long.fromInt(this._cacheSize_8be2vx$));
      var temp = this._cache_8be2vx$;
      do {
        write8_1(ensureNotNull(this.Stream_8be2vx$), temp + LowHi | 0);
        temp = 255;
      }
       while ((this._cacheSize_8be2vx$ = this._cacheSize_8be2vx$ - 1 | 0, this._cacheSize_8be2vx$) !== 0);
      this._cache_8be2vx$ = this.Low_8be2vx$.toInt() >>> 24;
    }
    this._cacheSize_8be2vx$ = this._cacheSize_8be2vx$ + 1 | 0;
    this.Low_8be2vx$ = this.Low_8be2vx$.and(L16777215).shiftLeft(8);
  };
  SevenZip$RangeEncoder.prototype.EncodeDirectBits_vux9f0$ = function (v, numTotalBits) {
    for (var i = numTotalBits - 1 | 0; i >= 0; i--) {
      this.Range_8be2vx$ = this.Range_8be2vx$ >>> 1;
      if ((v >>> i & 1) === 1)
        this.Low_8be2vx$ = this.Low_8be2vx$.add(Kotlin.Long.fromInt(this.Range_8be2vx$));
      if ((this.Range_8be2vx$ & SevenZip$RangeEncoder$Companion_getInstance().kTopMask_8be2vx$) === 0) {
        this.Range_8be2vx$ = this.Range_8be2vx$ << 8;
        this.ShiftLow();
      }
    }
  };
  SevenZip$RangeEncoder.prototype.GetProcessedSizeAdd = function () {
    return Kotlin.Long.fromInt(this._cacheSize_8be2vx$).add(this._position_8be2vx$).add(Kotlin.Long.fromInt(4));
  };
  SevenZip$RangeEncoder.prototype.Encode_359eei$ = function (probs, index, symbol) {
    var prob = probs[index];
    var newBound = Kotlin.imul(this.Range_8be2vx$ >>> SevenZip$RangeEncoder$Companion_getInstance().kNumBitModelTotalBits_8be2vx$, prob);
    if (symbol === 0) {
      this.Range_8be2vx$ = newBound;
      probs[index] = toShort(prob + (SevenZip$RangeEncoder$Companion_getInstance().kBitModelTotal_8be2vx$ - prob >>> SevenZip$RangeEncoder$Companion_getInstance().kNumMoveBits_8be2vx$) | 0);
    }
     else {
      this.Low_8be2vx$ = this.Low_8be2vx$.add(Kotlin.Long.fromInt(newBound & -1));
      this.Range_8be2vx$ = this.Range_8be2vx$ - newBound | 0;
      probs[index] = toShort(prob - (prob >>> SevenZip$RangeEncoder$Companion_getInstance().kNumMoveBits_8be2vx$) | 0);
    }
    if ((this.Range_8be2vx$ & SevenZip$RangeEncoder$Companion_getInstance().kTopMask_8be2vx$) === 0) {
      this.Range_8be2vx$ = this.Range_8be2vx$ << 8;
      this.ShiftLow();
    }
  };
  function SevenZip$RangeEncoder$Companion() {
    SevenZip$RangeEncoder$Companion_instance = this;
    this.kTopMask_8be2vx$ = -16777216;
    this.kNumBitModelTotalBits_8be2vx$ = 11;
    this.kBitModelTotal_8be2vx$ = 1 << this.kNumBitModelTotalBits_8be2vx$;
    this.kNumMoveBits_8be2vx$ = 5;
    this.kNumMoveReducingBits_8be2vx$ = 2;
    this.kNumBitPriceShiftBits = 6;
    this.ProbPrices_0 = new Int32Array(this.kBitModelTotal_8be2vx$ >>> this.kNumMoveReducingBits_8be2vx$);
    var kNumBits = this.kNumBitModelTotalBits_8be2vx$ - this.kNumMoveReducingBits_8be2vx$ | 0;
    for (var i = kNumBits - 1 | 0; i >= 0; i--) {
      var start = 1 << kNumBits - i - 1;
      var end = 1 << kNumBits - i;
      for (var j = start; j < end; j++)
        this.ProbPrices_0[j] = (i << this.kNumBitPriceShiftBits) + (end - j << this.kNumBitPriceShiftBits >>> kNumBits - i - 1) | 0;
    }
  }
  SevenZip$RangeEncoder$Companion.prototype.InitBitModels_gmedm2$ = function (probs) {
    for (var i = 0; i !== probs.length; ++i) {
      probs[i] = toShort(this.kBitModelTotal_8be2vx$ >>> 1);
    }
  };
  SevenZip$RangeEncoder$Companion.prototype.GetPrice_vux9f0$ = function (Prob, symbol) {
    return this.ProbPrices_0[((Prob - symbol ^ (-symbol | 0)) & this.kBitModelTotal_8be2vx$ - 1) >>> this.kNumMoveReducingBits_8be2vx$];
  };
  SevenZip$RangeEncoder$Companion.prototype.GetPrice0_za3lpa$ = function (Prob) {
    return this.ProbPrices_0[Prob >>> this.kNumMoveReducingBits_8be2vx$];
  };
  SevenZip$RangeEncoder$Companion.prototype.GetPrice1_za3lpa$ = function (Prob) {
    return this.ProbPrices_0[this.kBitModelTotal_8be2vx$ - Prob >>> this.kNumMoveReducingBits_8be2vx$];
  };
  SevenZip$RangeEncoder$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$RangeEncoder$Companion_instance = null;
  function SevenZip$RangeEncoder$Companion_getInstance() {
    if (SevenZip$RangeEncoder$Companion_instance === null) {
      new SevenZip$RangeEncoder$Companion();
    }
    return SevenZip$RangeEncoder$Companion_instance;
  }
  SevenZip$RangeEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RangeEncoder',
    interfaces: []
  };
  function SevenZip$LzmaBase() {
    SevenZip$LzmaBase_instance = this;
    this.kNumRepDistances = 4;
    this.kNumStates = 12;
    this.kNumPosSlotBits = 6;
    this.kDicLogSizeMin = 0;
    this.kNumLenToPosStatesBits = 2;
    this.kNumLenToPosStates = 1 << this.kNumLenToPosStatesBits;
    this.kMatchMinLen = 2;
    this.kNumAlignBits = 4;
    this.kAlignTableSize = 1 << this.kNumAlignBits;
    this.kAlignMask = this.kAlignTableSize - 1 | 0;
    this.kStartPosModelIndex = 4;
    this.kEndPosModelIndex = 14;
    this.kNumPosModels = this.kEndPosModelIndex - this.kStartPosModelIndex | 0;
    this.kNumFullDistances = 1 << (this.kEndPosModelIndex / 2 | 0);
    this.kNumLitPosStatesBitsEncodingMax = 4;
    this.kNumLitContextBitsMax = 8;
    this.kNumPosStatesBitsMax = 4;
    this.kNumPosStatesMax = 1 << this.kNumPosStatesBitsMax;
    this.kNumPosStatesBitsEncodingMax = 4;
    this.kNumPosStatesEncodingMax = 1 << this.kNumPosStatesBitsEncodingMax;
    this.kNumLowLenBits = 3;
    this.kNumMidLenBits = 3;
    this.kNumHighLenBits = 8;
    this.kNumLowLenSymbols = 1 << this.kNumLowLenBits;
    this.kNumMidLenSymbols = 1 << this.kNumMidLenBits;
    this.kNumLenSymbols = this.kNumLowLenSymbols + this.kNumMidLenSymbols + (1 << this.kNumHighLenBits) | 0;
    this.kMatchMaxLen = this.kMatchMinLen + this.kNumLenSymbols - 1 | 0;
  }
  SevenZip$LzmaBase.prototype.StateInit = function () {
    return 0;
  };
  SevenZip$LzmaBase.prototype.StateUpdateChar_za3lpa$ = function (index) {
    if (index < 4)
      return 0;
    else if (index < 10)
      return index - 3 | 0;
    else
      return index - 6 | 0;
  };
  SevenZip$LzmaBase.prototype.StateUpdateMatch_za3lpa$ = function (index) {
    return index < 7 ? 7 : 10;
  };
  SevenZip$LzmaBase.prototype.StateUpdateRep_za3lpa$ = function (index) {
    return index < 7 ? 8 : 11;
  };
  SevenZip$LzmaBase.prototype.StateUpdateShortRep_za3lpa$ = function (index) {
    return index < 7 ? 9 : 11;
  };
  SevenZip$LzmaBase.prototype.StateIsCharState_za3lpa$ = function (index) {
    return index < 7;
  };
  SevenZip$LzmaBase.prototype.GetLenToPosState_za3lpa$ = function (len) {
    var len_0 = len;
    len_0 = len_0 - this.kMatchMinLen | 0;
    return len_0 < this.kNumLenToPosStates ? len_0 : this.kNumLenToPosStates - 1 | 0;
  };
  SevenZip$LzmaBase.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LzmaBase',
    interfaces: []
  };
  var SevenZip$LzmaBase_instance = null;
  function SevenZip$LzmaBase_getInstance() {
    if (SevenZip$LzmaBase_instance === null) {
      new SevenZip$LzmaBase();
    }
    return SevenZip$LzmaBase_instance;
  }
  function SevenZip$LzmaDecoder() {
    this.m_OutWindow_8be2vx$ = new SevenZip$LzOutWindow();
    this.m_RangeDecoder_8be2vx$ = new SevenZip$RangeDecoder();
    this.m_IsMatchDecoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax);
    this.m_IsRepDecoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this.m_IsRepG0Decoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this.m_IsRepG1Decoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this.m_IsRepG2Decoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this.m_IsRep0LongDecoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax);
    this.m_PosSlotDecoder_8be2vx$ = Kotlin.newArray(SevenZip$LzmaBase_getInstance().kNumLenToPosStates, null);
    this.m_PosDecoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumFullDistances - SevenZip$LzmaBase_getInstance().kEndPosModelIndex | 0);
    this.m_PosAlignDecoder_8be2vx$ = new SevenZip$BitTreeDecoder(SevenZip$LzmaBase_getInstance().kNumAlignBits);
    this.m_LenDecoder_8be2vx$ = new SevenZip$LzmaDecoder$LenDecoder(this);
    this.m_RepLenDecoder_8be2vx$ = new SevenZip$LzmaDecoder$LenDecoder(this);
    this.m_LiteralDecoder_8be2vx$ = new SevenZip$LzmaDecoder$LiteralDecoder(this);
    this.m_DictionarySize_8be2vx$ = -1;
    this.m_DictionarySizeCheck_8be2vx$ = -1;
    this.m_PosStateMask_8be2vx$ = 0;
    var tmp$;
    tmp$ = SevenZip$LzmaBase_getInstance().kNumLenToPosStates;
    for (var i = 0; i < tmp$; i++)
      this.m_PosSlotDecoder_8be2vx$[i] = new SevenZip$BitTreeDecoder(SevenZip$LzmaBase_getInstance().kNumPosSlotBits);
  }
  function SevenZip$LzmaDecoder$LenDecoder($outer) {
    this.$outer = $outer;
    this.m_Choice = new Int16Array(2);
    this.m_LowCoder = Kotlin.newArray(SevenZip$LzmaBase_getInstance().kNumPosStatesMax, null);
    this.m_MidCoder = Kotlin.newArray(SevenZip$LzmaBase_getInstance().kNumPosStatesMax, null);
    this.m_HighCoder = new SevenZip$BitTreeDecoder(SevenZip$LzmaBase_getInstance().kNumHighLenBits);
    this.m_NumPosStates = 0;
  }
  SevenZip$LzmaDecoder$LenDecoder.prototype.Create_za3lpa$ = function (numPosStates) {
    while (this.m_NumPosStates < numPosStates) {
      this.m_LowCoder[this.m_NumPosStates] = new SevenZip$BitTreeDecoder(SevenZip$LzmaBase_getInstance().kNumLowLenBits);
      this.m_MidCoder[this.m_NumPosStates] = new SevenZip$BitTreeDecoder(SevenZip$LzmaBase_getInstance().kNumMidLenBits);
      this.m_NumPosStates = this.m_NumPosStates + 1 | 0;
    }
  };
  SevenZip$LzmaDecoder$LenDecoder.prototype.Init = function () {
    var tmp$;
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_Choice);
    tmp$ = this.m_NumPosStates;
    for (var posState = 0; posState < tmp$; posState++) {
      ensureNotNull(this.m_LowCoder[posState]).Init();
      ensureNotNull(this.m_MidCoder[posState]).Init();
    }
    this.m_HighCoder.Init();
  };
  SevenZip$LzmaDecoder$LenDecoder.prototype.Decode_5xpf6p$ = function (rangeDecoder, posState) {
    if (rangeDecoder.DecodeBit_3y3ajg$(this.m_Choice, 0) === 0)
      return ensureNotNull(this.m_LowCoder[posState]).Decode_zgofv1$(rangeDecoder);
    var symbol = SevenZip$LzmaBase_getInstance().kNumLowLenSymbols;
    if (rangeDecoder.DecodeBit_3y3ajg$(this.m_Choice, 1) === 0)
      symbol = symbol + ensureNotNull(this.m_MidCoder[posState]).Decode_zgofv1$(rangeDecoder) | 0;
    else
      symbol = symbol + (SevenZip$LzmaBase_getInstance().kNumMidLenSymbols + this.m_HighCoder.Decode_zgofv1$(rangeDecoder)) | 0;
    return symbol;
  };
  SevenZip$LzmaDecoder$LenDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LenDecoder',
    interfaces: []
  };
  function SevenZip$LzmaDecoder$LiteralDecoder($outer) {
    this.$outer = $outer;
    this.m_Coders = null;
    this.m_NumPrevBits = 0;
    this.m_NumPosBits = 0;
    this.m_PosMask = 0;
  }
  function SevenZip$LzmaDecoder$LiteralDecoder$Decoder2($outer) {
    this.$outer = $outer;
    this.m_Decoders = new Int16Array(768);
  }
  SevenZip$LzmaDecoder$LiteralDecoder$Decoder2.prototype.Init = function () {
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_Decoders);
  };
  SevenZip$LzmaDecoder$LiteralDecoder$Decoder2.prototype.DecodeNormal_zgofv1$ = function (rangeDecoder) {
    var symbol = 1;
    do
      symbol = symbol << 1 | rangeDecoder.DecodeBit_3y3ajg$(this.m_Decoders, symbol);
    while (symbol < 256);
    return toByte(symbol);
  };
  SevenZip$LzmaDecoder$LiteralDecoder$Decoder2.prototype.DecodeWithMatchByte_t2kbu2$ = function (rangeDecoder, matchByte) {
    var matchByte_0 = matchByte;
    var symbol = 1;
    do {
      var matchBit = shr(matchByte_0, 7) & 1;
      matchByte_0 = toByte(shl(matchByte_0, 1));
      var bit = rangeDecoder.DecodeBit_3y3ajg$(this.m_Decoders, (1 + matchBit << 8) + symbol | 0);
      symbol = symbol << 1 | bit;
      if (matchBit !== bit) {
        while (symbol < 256)
          symbol = symbol << 1 | rangeDecoder.DecodeBit_3y3ajg$(this.m_Decoders, symbol);
        break;
      }
    }
     while (symbol < 256);
    return toByte(symbol);
  };
  SevenZip$LzmaDecoder$LiteralDecoder$Decoder2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Decoder2',
    interfaces: []
  };
  var Array_0 = Array;
  SevenZip$LzmaDecoder$LiteralDecoder.prototype.Create_vux9f0$ = function (numPosBits, numPrevBits) {
    if (this.m_Coders != null && this.m_NumPrevBits === numPrevBits && this.m_NumPosBits === numPosBits)
      return;
    this.m_NumPosBits = numPosBits;
    this.m_PosMask = (1 << numPosBits) - 1 | 0;
    this.m_NumPrevBits = numPrevBits;
    var numStates = 1 << this.m_NumPrevBits + this.m_NumPosBits;
    var array = Array_0(numStates);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new SevenZip$LzmaDecoder$LiteralDecoder$Decoder2(this);
    }
    this.m_Coders = array;
  };
  SevenZip$LzmaDecoder$LiteralDecoder.prototype.Init = function () {
    var numStates = 1 << this.m_NumPrevBits + this.m_NumPosBits;
    for (var i = 0; i < numStates; i++)
      ensureNotNull(this.m_Coders)[i].Init();
  };
  SevenZip$LzmaDecoder$LiteralDecoder.prototype.GetDecoder_6t1wet$ = function (pos, prevByte) {
    return ensureNotNull(this.m_Coders)[((pos & this.m_PosMask) << this.m_NumPrevBits) + (and(prevByte, 255) >>> 8 - this.m_NumPrevBits) | 0];
  };
  SevenZip$LzmaDecoder$LiteralDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LiteralDecoder',
    interfaces: []
  };
  SevenZip$LzmaDecoder.prototype.SetDictionarySize_kcn2v3$ = function (dictionarySize) {
    if (dictionarySize < 0)
      return false;
    if (this.m_DictionarySize_8be2vx$ !== dictionarySize) {
      this.m_DictionarySize_8be2vx$ = dictionarySize;
      var a = this.m_DictionarySize_8be2vx$;
      this.m_DictionarySizeCheck_8be2vx$ = Math_0.max(a, 1);
      var tmp$ = this.m_OutWindow_8be2vx$;
      var a_0 = this.m_DictionarySizeCheck_8be2vx$;
      tmp$.Create_za3lpa$(Math_0.max(a_0, 4096));
    }
    return true;
  };
  SevenZip$LzmaDecoder.prototype.SetLcLpPb_cub51b$ = function (lc, lp, pb) {
    if (lc > SevenZip$LzmaBase_getInstance().kNumLitContextBitsMax || lp > 4 || pb > SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax)
      return false;
    this.m_LiteralDecoder_8be2vx$.Create_vux9f0$(lp, lc);
    var numPosStates = 1 << pb;
    this.m_LenDecoder_8be2vx$.Create_za3lpa$(numPosStates);
    this.m_RepLenDecoder_8be2vx$.Create_za3lpa$(numPosStates);
    this.m_PosStateMask_8be2vx$ = numPosStates - 1 | 0;
    return true;
  };
  SevenZip$LzmaDecoder.prototype.Init_8be2vx$ = function () {
    this.m_OutWindow_8be2vx$.Init_6taknv$(false);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsMatchDecoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsRep0LongDecoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsRepDecoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsRepG0Decoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsRepG1Decoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_IsRepG2Decoders_8be2vx$);
    SevenZip$RangeDecoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_PosDecoders_8be2vx$);
    this.m_LiteralDecoder_8be2vx$.Init();
    var i;
    i = 0;
    while (i < SevenZip$LzmaBase_getInstance().kNumLenToPosStates) {
      ensureNotNull(this.m_PosSlotDecoder_8be2vx$[i]).Init();
      i = i + 1 | 0;
    }
    this.m_LenDecoder_8be2vx$.Init();
    this.m_RepLenDecoder_8be2vx$.Init();
    this.m_PosAlignDecoder_8be2vx$.Init();
    this.m_RangeDecoder_8be2vx$.Init();
  };
  SevenZip$LzmaDecoder.prototype.Code_ybf00i$ = function (inStream, outStream, outSize) {
    this.m_RangeDecoder_8be2vx$.SetStream_sayfrj$(inStream);
    this.m_OutWindow_8be2vx$.SetStream_ceqwhy$(outStream);
    this.Init_8be2vx$();
    var state = SevenZip$LzmaBase_getInstance().StateInit();
    var rep0 = 0;
    var rep1 = 0;
    var rep2 = 0;
    var rep3 = 0;
    var nowPos64 = L0;
    var prevByte = 0;
    while (outSize.toNumber() < 0 || nowPos64.compareTo_11rb$(outSize) < 0) {
      var posState = nowPos64.toInt() & this.m_PosStateMask_8be2vx$;
      if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsMatchDecoders_8be2vx$, (state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0) === 0) {
        var decoder2 = this.m_LiteralDecoder_8be2vx$.GetDecoder_6t1wet$(nowPos64.toInt(), prevByte);
        if (!SevenZip$LzmaBase_getInstance().StateIsCharState_za3lpa$(state))
          prevByte = decoder2.DecodeWithMatchByte_t2kbu2$(this.m_RangeDecoder_8be2vx$, this.m_OutWindow_8be2vx$.GetByte_za3lpa$(rep0));
        else
          prevByte = decoder2.DecodeNormal_zgofv1$(this.m_RangeDecoder_8be2vx$);
        this.m_OutWindow_8be2vx$.PutByte_s8j3t7$(prevByte);
        state = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state);
        nowPos64 = nowPos64.inc();
      }
       else {
        var len;
        if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsRepDecoders_8be2vx$, state) === 1) {
          len = 0;
          if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsRepG0Decoders_8be2vx$, state) === 0) {
            if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsRep0LongDecoders_8be2vx$, (state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0) === 0) {
              state = SevenZip$LzmaBase_getInstance().StateUpdateShortRep_za3lpa$(state);
              len = 1;
            }
          }
           else {
            var distance;
            if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsRepG1Decoders_8be2vx$, state) === 0)
              distance = rep1;
            else {
              if (this.m_RangeDecoder_8be2vx$.DecodeBit_3y3ajg$(this.m_IsRepG2Decoders_8be2vx$, state) === 0)
                distance = rep2;
              else {
                distance = rep3;
                rep3 = rep2;
              }
              rep2 = rep1;
            }
            rep1 = rep0;
            rep0 = distance;
          }
          if (len === 0) {
            len = this.m_RepLenDecoder_8be2vx$.Decode_5xpf6p$(this.m_RangeDecoder_8be2vx$, posState) + SevenZip$LzmaBase_getInstance().kMatchMinLen | 0;
            state = SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(state);
          }
        }
         else {
          rep3 = rep2;
          rep2 = rep1;
          rep1 = rep0;
          len = SevenZip$LzmaBase_getInstance().kMatchMinLen + this.m_LenDecoder_8be2vx$.Decode_5xpf6p$(this.m_RangeDecoder_8be2vx$, posState) | 0;
          state = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(state);
          var posSlot = ensureNotNull(this.m_PosSlotDecoder_8be2vx$[SevenZip$LzmaBase_getInstance().GetLenToPosState_za3lpa$(len)]).Decode_zgofv1$(this.m_RangeDecoder_8be2vx$);
          if (posSlot >= SevenZip$LzmaBase_getInstance().kStartPosModelIndex) {
            var numDirectBits = (posSlot >> 1) - 1 | 0;
            rep0 = (2 | posSlot & 1) << numDirectBits;
            if (posSlot < SevenZip$LzmaBase_getInstance().kEndPosModelIndex)
              rep0 = rep0 + SevenZip$BitTreeDecoder$Companion_getInstance().ReverseDecode_2q3ht5$(this.m_PosDecoders_8be2vx$, rep0 - posSlot - 1 | 0, this.m_RangeDecoder_8be2vx$, numDirectBits) | 0;
            else {
              rep0 = rep0 + (this.m_RangeDecoder_8be2vx$.DecodeDirectBits_za3lpa$(numDirectBits - SevenZip$LzmaBase_getInstance().kNumAlignBits | 0) << SevenZip$LzmaBase_getInstance().kNumAlignBits) | 0;
              rep0 = rep0 + this.m_PosAlignDecoder_8be2vx$.ReverseDecode_zgofv1$(this.m_RangeDecoder_8be2vx$) | 0;
              if (rep0 < 0) {
                if (rep0 === -1)
                  break;
                return false;
              }
            }
          }
           else
            rep0 = posSlot;
        }
        if (rep0 >= nowPos64.toNumber() || rep0 >= this.m_DictionarySizeCheck_8be2vx$) {
          return false;
        }
        this.m_OutWindow_8be2vx$.CopyBlock_vux9f0$(rep0, len);
        nowPos64 = nowPos64.add(Kotlin.Long.fromInt(len));
        prevByte = this.m_OutWindow_8be2vx$.GetByte_za3lpa$(0);
      }
    }
    this.m_OutWindow_8be2vx$.Flush();
    this.m_OutWindow_8be2vx$.ReleaseStream();
    this.m_RangeDecoder_8be2vx$.ReleaseStream();
    return true;
  };
  SevenZip$LzmaDecoder.prototype.SetDecoderProperties_fqrh44$ = function (properties) {
    if (properties.length < 5)
      return false;
    var val = and(properties[0], 255);
    var lc = val % 9;
    var remainder = val / 9 | 0;
    var lp = remainder % 5;
    var pb = remainder / 5 | 0;
    var dictionarySize = 0;
    for (var i = 0; i <= 3; i++)
      dictionarySize = dictionarySize + ((properties[1 + i | 0] & 255) << (i * 8 | 0)) | 0;
    return !this.SetLcLpPb_cub51b$(lc, lp, pb) ? false : this.SetDictionarySize_kcn2v3$(dictionarySize);
  };
  SevenZip$LzmaDecoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LzmaDecoder',
    interfaces: []
  };
  function SevenZip$LzmaEncoder() {
    SevenZip$LzmaEncoder$Companion_getInstance();
    this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateInit();
    this._previousByte_8be2vx$ = 0;
    this._repDistances_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kNumRepDistances);
    var array = Array_0(SevenZip$LzmaEncoder$Companion_getInstance().kNumOpts_8be2vx$);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new SevenZip$LzmaEncoder$Optimal(this);
    }
    this._optimum_8be2vx$ = array;
    this._matchFinder_8be2vx$ = null;
    this._rangeEncoder_8be2vx$ = new SevenZip$RangeEncoder();
    this._isMatch_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax);
    this._isRep_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this._isRepG0_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this._isRepG1_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this._isRepG2_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates);
    this._isRep0Long_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumStates << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax);
    var array_0 = Array_0(SevenZip$LzmaBase_getInstance().kNumLenToPosStates);
    var tmp$_0;
    tmp$_0 = array_0.length - 1 | 0;
    for (var i_0 = 0; i_0 <= tmp$_0; i_0++) {
      array_0[i_0] = new SevenZip$BitTreeEncoder(SevenZip$LzmaBase_getInstance().kNumPosSlotBits);
    }
    this._posSlotEncoder_8be2vx$ = array_0;
    this._posEncoders_8be2vx$ = new Int16Array(SevenZip$LzmaBase_getInstance().kNumFullDistances - SevenZip$LzmaBase_getInstance().kEndPosModelIndex | 0);
    this._posAlignEncoder_8be2vx$ = new SevenZip$BitTreeEncoder(SevenZip$LzmaBase_getInstance().kNumAlignBits);
    this._lenEncoder_8be2vx$ = new SevenZip$LzmaEncoder$LenPriceTableEncoder(this);
    this._repMatchLenEncoder_8be2vx$ = new SevenZip$LzmaEncoder$LenPriceTableEncoder(this);
    this._literalEncoder_8be2vx$ = new SevenZip$LzmaEncoder$LiteralEncoder(this);
    this._matchDistances_8be2vx$ = new Int32Array((SevenZip$LzmaBase_getInstance().kMatchMaxLen * 2 | 0) + 2 | 0);
    this._numFastBytes_8be2vx$ = SevenZip$LzmaEncoder$Companion_getInstance().kNumFastBytesDefault_8be2vx$;
    this._longestMatchLength_8be2vx$ = 0;
    this._numDistancePairs_8be2vx$ = 0;
    this._additionalOffset_8be2vx$ = 0;
    this._optimumEndIndex_8be2vx$ = 0;
    this._optimumCurrentIndex_8be2vx$ = 0;
    this._longestMatchWasFound_8be2vx$ = false;
    this._posSlotPrices_8be2vx$ = new Int32Array(1 << SevenZip$LzmaBase_getInstance().kNumPosSlotBits + SevenZip$LzmaBase_getInstance().kNumLenToPosStatesBits);
    this._distancesPrices_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kNumFullDistances << SevenZip$LzmaBase_getInstance().kNumLenToPosStatesBits);
    this._alignPrices_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kAlignTableSize);
    this._alignPriceCount_8be2vx$ = 0;
    this._distTableSize_8be2vx$ = SevenZip$LzmaEncoder$Companion_getInstance().kDefaultDictionaryLogSize_8be2vx$ * 2 | 0;
    this._posStateBits_8be2vx$ = 2;
    this._posStateMask_8be2vx$ = 3;
    this._numLiteralPosStateBits_8be2vx$ = 0;
    this._numLiteralContextBits_8be2vx$ = 3;
    this._dictionarySize_8be2vx$ = 1 << SevenZip$LzmaEncoder$Companion_getInstance().kDefaultDictionaryLogSize_8be2vx$;
    this._dictionarySizePrev_8be2vx$ = -1;
    this._numFastBytesPrev_8be2vx$ = -1;
    this.nowPos64_8be2vx$ = L0;
    this._finished_8be2vx$ = false;
    this._inStream_8be2vx$ = null;
    this._matchFinderType_8be2vx$ = SevenZip$LzmaEncoder$Companion_getInstance().EMatchFinderTypeBT4;
    this._writeEndMark_8be2vx$ = false;
    this._needReleaseMFStream_8be2vx$ = false;
    this.reps_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kNumRepDistances);
    this.repLens_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kNumRepDistances);
    this.backRes_8be2vx$ = 0;
    this.processedInSize_8be2vx$ = Kotlin.longArray(1);
    this.processedOutSize_8be2vx$ = Kotlin.longArray(1);
    this.finished_8be2vx$ = Kotlin.booleanArray(1);
    this.properties_8be2vx$ = new Int8Array(SevenZip$LzmaEncoder$Companion_getInstance().kPropSize);
    this.tempPrices_8be2vx$ = new Int32Array(SevenZip$LzmaBase_getInstance().kNumFullDistances);
    this._matchPriceCount_8be2vx$ = 0;
  }
  SevenZip$LzmaEncoder.prototype.BaseInit_8be2vx$ = function () {
    var tmp$;
    this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateInit();
    this._previousByte_8be2vx$ = 0;
    tmp$ = SevenZip$LzmaBase_getInstance().kNumRepDistances;
    for (var i = 0; i < tmp$; i++)
      this._repDistances_8be2vx$[i] = 0;
  };
  function SevenZip$LzmaEncoder$LiteralEncoder($outer) {
    this.$outer = $outer;
    this.m_Coders = null;
    this.m_NumPrevBits = 0;
    this.m_NumPosBits = 0;
    this.m_PosMask = 0;
  }
  function SevenZip$LzmaEncoder$LiteralEncoder$Encoder2($outer) {
    this.$outer = $outer;
    this.m_Encoders = new Int16Array(768);
  }
  SevenZip$LzmaEncoder$LiteralEncoder$Encoder2.prototype.Init = function () {
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this.m_Encoders);
  };
  SevenZip$LzmaEncoder$LiteralEncoder$Encoder2.prototype.Encode_lnbdv2$ = function (rangeEncoder, symbol) {
    var context = 1;
    for (var i = 7; i >= 0; i--) {
      var bit = shr(symbol, i) & 1;
      rangeEncoder.Encode_359eei$(this.m_Encoders, context, bit);
      context = context << 1 | bit;
    }
  };
  SevenZip$LzmaEncoder$LiteralEncoder$Encoder2.prototype.EncodeMatched_ocrm4p$ = function (rangeEncoder, matchByte, symbol) {
    var context = 1;
    var same = true;
    for (var i = 7; i >= 0; i--) {
      var bit = shr(symbol, i) & 1;
      var state = context;
      if (same) {
        var matchBit = shr(matchByte, i) & 1;
        state = state + (1 + matchBit << 8) | 0;
        same = matchBit === bit;
      }
      rangeEncoder.Encode_359eei$(this.m_Encoders, state, bit);
      context = context << 1 | bit;
    }
  };
  SevenZip$LzmaEncoder$LiteralEncoder$Encoder2.prototype.GetPrice_udr4r7$ = function (matchMode, matchByte, symbol) {
    var price = 0;
    var context = 1;
    var i = 7;
    if (matchMode) {
      while (i >= 0) {
        var matchBit = shr(matchByte, i) & 1;
        var bit = shr(symbol, i) & 1;
        price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(this.m_Encoders[(1 + matchBit << 8) + context | 0], bit) | 0;
        context = context << 1 | bit;
        if (matchBit !== bit) {
          i = i - 1 | 0;
          break;
        }
        i = i - 1 | 0;
      }
    }
    while (i >= 0) {
      var bit_0 = shr(symbol, i) & 1;
      price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(this.m_Encoders[context], bit_0) | 0;
      context = context << 1 | bit_0;
      i = i - 1 | 0;
    }
    return price;
  };
  SevenZip$LzmaEncoder$LiteralEncoder$Encoder2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Encoder2',
    interfaces: []
  };
  SevenZip$LzmaEncoder$LiteralEncoder.prototype.Create_vux9f0$ = function (numPosBits, numPrevBits) {
    if (this.m_Coders != null && this.m_NumPrevBits === numPrevBits && this.m_NumPosBits === numPosBits)
      return;
    this.m_NumPosBits = numPosBits;
    this.m_PosMask = (1 << numPosBits) - 1 | 0;
    this.m_NumPrevBits = numPrevBits;
    var numStates = 1 << this.m_NumPrevBits + this.m_NumPosBits;
    var array = Array_0(numStates);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = new SevenZip$LzmaEncoder$LiteralEncoder$Encoder2(this);
    }
    this.m_Coders = array;
  };
  SevenZip$LzmaEncoder$LiteralEncoder.prototype.Init = function () {
    var numStates = 1 << this.m_NumPrevBits + this.m_NumPosBits;
    for (var i = 0; i < numStates; i++)
      ensureNotNull(this.m_Coders)[i].Init();
  };
  SevenZip$LzmaEncoder$LiteralEncoder.prototype.GetSubCoder_6t1wet$ = function (pos, prevByte) {
    return ensureNotNull(this.m_Coders)[((pos & this.m_PosMask) << this.m_NumPrevBits) + (and(prevByte, 255) >>> 8 - this.m_NumPrevBits) | 0];
  };
  SevenZip$LzmaEncoder$LiteralEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LiteralEncoder',
    interfaces: []
  };
  function SevenZip$LzmaEncoder$LenEncoder($outer) {
    this.$outer = $outer;
    this._choice = new Int16Array(2);
    this._lowCoder = Kotlin.newArray(SevenZip$LzmaBase_getInstance().kNumPosStatesEncodingMax, null);
    this._midCoder = Kotlin.newArray(SevenZip$LzmaBase_getInstance().kNumPosStatesEncodingMax, null);
    this._highCoder = new SevenZip$BitTreeEncoder(SevenZip$LzmaBase_getInstance().kNumHighLenBits);
    var tmp$;
    tmp$ = SevenZip$LzmaBase_getInstance().kNumPosStatesEncodingMax;
    for (var posState = 0; posState < tmp$; posState++) {
      this._lowCoder[posState] = new SevenZip$BitTreeEncoder(SevenZip$LzmaBase_getInstance().kNumLowLenBits);
      this._midCoder[posState] = new SevenZip$BitTreeEncoder(SevenZip$LzmaBase_getInstance().kNumMidLenBits);
    }
  }
  SevenZip$LzmaEncoder$LenEncoder.prototype.Init_za3lpa$ = function (numPosStates) {
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._choice);
    for (var posState = 0; posState < numPosStates; posState++) {
      ensureNotNull(this._lowCoder[posState]).Init();
      ensureNotNull(this._midCoder[posState]).Init();
    }
    this._highCoder.Init();
  };
  SevenZip$LzmaEncoder$LenEncoder.prototype.Encode_x31iud$ = function (rangeEncoder, symbol, posState) {
    var sym = symbol;
    if (sym < SevenZip$LzmaBase_getInstance().kNumLowLenSymbols) {
      rangeEncoder.Encode_359eei$(this._choice, 0, 0);
      ensureNotNull(this._lowCoder[posState]).Encode_m7qcon$(rangeEncoder, sym);
    }
     else {
      sym = sym - SevenZip$LzmaBase_getInstance().kNumLowLenSymbols | 0;
      rangeEncoder.Encode_359eei$(this._choice, 0, 1);
      if (sym < SevenZip$LzmaBase_getInstance().kNumMidLenSymbols) {
        rangeEncoder.Encode_359eei$(this._choice, 1, 0);
        ensureNotNull(this._midCoder[posState]).Encode_m7qcon$(rangeEncoder, sym);
      }
       else {
        rangeEncoder.Encode_359eei$(this._choice, 1, 1);
        this._highCoder.Encode_m7qcon$(rangeEncoder, sym - SevenZip$LzmaBase_getInstance().kNumMidLenSymbols | 0);
      }
    }
  };
  SevenZip$LzmaEncoder$LenEncoder.prototype.SetPrices_j45w6h$ = function (posState, numSymbols, prices, st) {
    var a0 = SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._choice[0]);
    var a1 = SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._choice[0]);
    var b0 = a1 + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._choice[1]) | 0;
    var b1 = a1 + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._choice[1]) | 0;
    var i = 0;
    while (i < SevenZip$LzmaBase_getInstance().kNumLowLenSymbols) {
      if (i >= numSymbols)
        return;
      prices[st + i | 0] = a0 + ensureNotNull(this._lowCoder[posState]).GetPrice_za3lpa$(i) | 0;
      i = i + 1 | 0;
    }
    while (i < (SevenZip$LzmaBase_getInstance().kNumLowLenSymbols + SevenZip$LzmaBase_getInstance().kNumMidLenSymbols | 0)) {
      if (i >= numSymbols)
        return;
      prices[st + i | 0] = b0 + ensureNotNull(this._midCoder[posState]).GetPrice_za3lpa$(i - SevenZip$LzmaBase_getInstance().kNumLowLenSymbols | 0) | 0;
      i = i + 1 | 0;
    }
    while (i < numSymbols) {
      prices[st + i | 0] = b1 + this._highCoder.GetPrice_za3lpa$(i - SevenZip$LzmaBase_getInstance().kNumLowLenSymbols - SevenZip$LzmaBase_getInstance().kNumMidLenSymbols | 0) | 0;
      i = i + 1 | 0;
    }
  };
  SevenZip$LzmaEncoder$LenEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LenEncoder',
    interfaces: []
  };
  function SevenZip$LzmaEncoder$LenPriceTableEncoder($outer) {
    this.$outer = $outer;
    SevenZip$LzmaEncoder$LenEncoder.call(this, this.$outer);
    this._prices = new Int32Array(SevenZip$LzmaBase_getInstance().kNumLenSymbols << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsEncodingMax);
    this._tableSize = 0;
    this._counters = new Int32Array(SevenZip$LzmaBase_getInstance().kNumPosStatesEncodingMax);
  }
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.SetTableSize_za3lpa$ = function (tableSize) {
    this._tableSize = tableSize;
  };
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.GetPrice_vux9f0$ = function (symbol, posState) {
    return this._prices[Kotlin.imul(posState, SevenZip$LzmaBase_getInstance().kNumLenSymbols) + symbol | 0];
  };
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.UpdateTable_za3lpa$ = function (posState) {
    this.SetPrices_j45w6h$(posState, this._tableSize, this._prices, Kotlin.imul(posState, SevenZip$LzmaBase_getInstance().kNumLenSymbols));
    this._counters[posState] = this._tableSize;
  };
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.UpdateTables_za3lpa$ = function (numPosStates) {
    for (var posState = 0; posState < numPosStates; posState++) {
      this.UpdateTable_za3lpa$(posState);
    }
  };
  SevenZip$LzmaEncoder$LenPriceTableEncoder.prototype.Encode_x31iud$ = function (rangeEncoder, symbol, posState) {
    SevenZip$LzmaEncoder$LenEncoder.prototype.Encode_x31iud$.call(this, rangeEncoder, symbol, posState);
    var tmp$;
    tmp$ = this._counters;
    tmp$[posState] = tmp$[posState] - 1 | 0;
    if (tmp$[posState] === 0)
      this.UpdateTable_za3lpa$(posState);
  };
  SevenZip$LzmaEncoder$LenPriceTableEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LenPriceTableEncoder',
    interfaces: [SevenZip$LzmaEncoder$LenEncoder]
  };
  function SevenZip$LzmaEncoder$Optimal($outer) {
    this.$outer = $outer;
    this.State = 0;
    this.Prev1IsChar = false;
    this.Prev2 = false;
    this.PosPrev2 = 0;
    this.BackPrev2 = 0;
    this.Price = 0;
    this.PosPrev = 0;
    this.BackPrev = 0;
    this.Backs0 = 0;
    this.Backs1 = 0;
    this.Backs2 = 0;
    this.Backs3 = 0;
  }
  SevenZip$LzmaEncoder$Optimal.prototype.MakeAsChar = function () {
    this.BackPrev = -1;
    this.Prev1IsChar = false;
  };
  SevenZip$LzmaEncoder$Optimal.prototype.MakeAsShortRep = function () {
    this.BackPrev = 0;
    this.Prev1IsChar = false;
  };
  SevenZip$LzmaEncoder$Optimal.prototype.IsShortRep = function () {
    return this.BackPrev === 0;
  };
  SevenZip$LzmaEncoder$Optimal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Optimal',
    interfaces: []
  };
  SevenZip$LzmaEncoder.prototype.Create_8be2vx$ = function () {
    if (this._matchFinder_8be2vx$ == null) {
      var bt = new SevenZip$LzBinTree();
      var numHashBytes = 4;
      if (this._matchFinderType_8be2vx$ === SevenZip$LzmaEncoder$Companion_getInstance().EMatchFinderTypeBT2)
        numHashBytes = 2;
      bt.SetType_za3lpa$(numHashBytes);
      this._matchFinder_8be2vx$ = bt;
    }
    this._literalEncoder_8be2vx$.Create_vux9f0$(this._numLiteralPosStateBits_8be2vx$, this._numLiteralContextBits_8be2vx$);
    if (this._dictionarySize_8be2vx$ === this._dictionarySizePrev_8be2vx$ && this._numFastBytesPrev_8be2vx$ === this._numFastBytes_8be2vx$)
      return;
    ensureNotNull(this._matchFinder_8be2vx$).Create_tjonv8$(this._dictionarySize_8be2vx$, SevenZip$LzmaEncoder$Companion_getInstance().kNumOpts_8be2vx$, this._numFastBytes_8be2vx$, SevenZip$LzmaBase_getInstance().kMatchMaxLen + 1 | 0);
    this._dictionarySizePrev_8be2vx$ = this._dictionarySize_8be2vx$;
    this._numFastBytesPrev_8be2vx$ = this._numFastBytes_8be2vx$;
  };
  SevenZip$LzmaEncoder.prototype.SetWriteEndMarkerMode_vft4zs$ = function (writeEndMarker) {
    this._writeEndMark_8be2vx$ = writeEndMarker;
  };
  SevenZip$LzmaEncoder.prototype.Init_8be2vx$ = function () {
    var tmp$;
    this.BaseInit_8be2vx$();
    this._rangeEncoder_8be2vx$.Init();
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isMatch_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isRep0Long_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isRep_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isRepG0_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isRepG1_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._isRepG2_8be2vx$);
    SevenZip$RangeEncoder$Companion_getInstance().InitBitModels_gmedm2$(this._posEncoders_8be2vx$);
    this._literalEncoder_8be2vx$.Init();
    tmp$ = SevenZip$LzmaBase_getInstance().kNumLenToPosStates;
    for (var i = 0; i < tmp$; i++) {
      this._posSlotEncoder_8be2vx$[i].Init();
    }
    this._lenEncoder_8be2vx$.Init_za3lpa$(1 << this._posStateBits_8be2vx$);
    this._repMatchLenEncoder_8be2vx$.Init_za3lpa$(1 << this._posStateBits_8be2vx$);
    this._posAlignEncoder_8be2vx$.Init();
    this._longestMatchWasFound_8be2vx$ = false;
    this._optimumEndIndex_8be2vx$ = 0;
    this._optimumCurrentIndex_8be2vx$ = 0;
    this._additionalOffset_8be2vx$ = 0;
  };
  SevenZip$LzmaEncoder.prototype.ReadMatchDistances_8be2vx$ = function () {
    var lenRes = 0;
    this._numDistancePairs_8be2vx$ = ensureNotNull(this._matchFinder_8be2vx$).GetMatches_q5rwfd$(this._matchDistances_8be2vx$);
    if (this._numDistancePairs_8be2vx$ > 0) {
      lenRes = this._matchDistances_8be2vx$[this._numDistancePairs_8be2vx$ - 2 | 0];
      if (lenRes === this._numFastBytes_8be2vx$)
        lenRes = lenRes + ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(lenRes - 1 | 0, this._matchDistances_8be2vx$[this._numDistancePairs_8be2vx$ - 1 | 0], SevenZip$LzmaBase_getInstance().kMatchMaxLen - lenRes | 0) | 0;
    }
    this._additionalOffset_8be2vx$ = this._additionalOffset_8be2vx$ + 1 | 0;
    return lenRes;
  };
  SevenZip$LzmaEncoder.prototype.MovePos_kcn2v3$ = function (num) {
    if (num > 0) {
      ensureNotNull(this._matchFinder_8be2vx$).Skip_za3lpa$(num);
      this._additionalOffset_8be2vx$ = this._additionalOffset_8be2vx$ + num | 0;
    }
  };
  SevenZip$LzmaEncoder.prototype.GetRepLen1Price_6xvm5r$ = function (state, posState) {
    return SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRepG0_8be2vx$[state]) + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRep0Long_8be2vx$[(state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]) | 0;
  };
  SevenZip$LzmaEncoder.prototype.GetPureRepPrice_cub51b$ = function (repIndex, state, posState) {
    var price;
    if (repIndex === 0) {
      price = SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRepG0_8be2vx$[state]);
      price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep0Long_8be2vx$[(state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]) | 0;
    }
     else {
      price = SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRepG0_8be2vx$[state]);
      if (repIndex === 1) {
        price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRepG1_8be2vx$[state]) | 0;
      }
       else {
        price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRepG1_8be2vx$[state]) | 0;
        price = price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice_vux9f0$(this._isRepG2_8be2vx$[state], repIndex - 2 | 0) | 0;
      }
    }
    return price;
  };
  SevenZip$LzmaEncoder.prototype.GetRepPrice_r9yya9$ = function (repIndex, len, state, posState) {
    var price = this._repMatchLenEncoder_8be2vx$.GetPrice_vux9f0$(len - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0, posState);
    return price + this.GetPureRepPrice_cub51b$(repIndex, state, posState) | 0;
  };
  SevenZip$LzmaEncoder.prototype.GetPosLenPrice_cub51b$ = function (pos, len, posState) {
    var price;
    var lenToPosState = SevenZip$LzmaBase_getInstance().GetLenToPosState_za3lpa$(len);
    if (pos < SevenZip$LzmaBase_getInstance().kNumFullDistances)
      price = this._distancesPrices_8be2vx$[Kotlin.imul(lenToPosState, SevenZip$LzmaBase_getInstance().kNumFullDistances) + pos | 0];
    else
      price = this._posSlotPrices_8be2vx$[(lenToPosState << SevenZip$LzmaBase_getInstance().kNumPosSlotBits) + SevenZip$LzmaEncoder$Companion_getInstance().GetPosSlot2_kcn2v3$(pos) | 0] + this._alignPrices_8be2vx$[pos & SevenZip$LzmaBase_getInstance().kAlignMask] | 0;
    return price + this._lenEncoder_8be2vx$.GetPrice_vux9f0$(len - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0, posState) | 0;
  };
  SevenZip$LzmaEncoder.prototype.Backward_kcn2v3$ = function (cur) {
    var cc = cur;
    this._optimumEndIndex_8be2vx$ = cc;
    var posMem = this._optimum_8be2vx$[cc].PosPrev;
    var backMem = this._optimum_8be2vx$[cc].BackPrev;
    do {
      if (this._optimum_8be2vx$[cc].Prev1IsChar) {
        this._optimum_8be2vx$[posMem].MakeAsChar();
        this._optimum_8be2vx$[posMem].PosPrev = posMem - 1 | 0;
        if (this._optimum_8be2vx$[cc].Prev2) {
          this._optimum_8be2vx$[posMem - 1 | 0].Prev1IsChar = false;
          this._optimum_8be2vx$[posMem - 1 | 0].PosPrev = this._optimum_8be2vx$[cc].PosPrev2;
          this._optimum_8be2vx$[posMem - 1 | 0].BackPrev = this._optimum_8be2vx$[cc].BackPrev2;
        }
      }
      var posPrev = posMem;
      var backCur = backMem;
      backMem = this._optimum_8be2vx$[posPrev].BackPrev;
      posMem = this._optimum_8be2vx$[posPrev].PosPrev;
      this._optimum_8be2vx$[posPrev].BackPrev = backCur;
      this._optimum_8be2vx$[posPrev].PosPrev = cc;
      cc = posPrev;
    }
     while (cc > 0);
    this.backRes_8be2vx$ = this._optimum_8be2vx$[0].BackPrev;
    this._optimumCurrentIndex_8be2vx$ = this._optimum_8be2vx$[0].PosPrev;
    return this._optimumCurrentIndex_8be2vx$;
  };
  SevenZip$LzmaEncoder.prototype.GetOptimum_kcn2v3$ = function (position) {
    var tmp$, tmp$_0;
    var ppos = position;
    if (this._optimumEndIndex_8be2vx$ !== this._optimumCurrentIndex_8be2vx$) {
      var lenRes = this._optimum_8be2vx$[this._optimumCurrentIndex_8be2vx$].PosPrev - this._optimumCurrentIndex_8be2vx$ | 0;
      this.backRes_8be2vx$ = this._optimum_8be2vx$[this._optimumCurrentIndex_8be2vx$].BackPrev;
      this._optimumCurrentIndex_8be2vx$ = this._optimum_8be2vx$[this._optimumCurrentIndex_8be2vx$].PosPrev;
      return lenRes;
    }
    this._optimumEndIndex_8be2vx$ = 0;
    this._optimumCurrentIndex_8be2vx$ = this._optimumEndIndex_8be2vx$;
    var lenMain;
    var numDistancePairs;
    if (!this._longestMatchWasFound_8be2vx$) {
      lenMain = this.ReadMatchDistances_8be2vx$();
    }
     else {
      lenMain = this._longestMatchLength_8be2vx$;
      this._longestMatchWasFound_8be2vx$ = false;
    }
    numDistancePairs = this._numDistancePairs_8be2vx$;
    var numAvailableBytes = ensureNotNull(this._matchFinder_8be2vx$).GetNumAvailableBytes() + 1 | 0;
    if (numAvailableBytes < 2) {
      this.backRes_8be2vx$ = -1;
      return 1;
    }
    if (numAvailableBytes > SevenZip$LzmaBase_getInstance().kMatchMaxLen) {
      numAvailableBytes = SevenZip$LzmaBase_getInstance().kMatchMaxLen;
    }
    var repMaxIndex = 0;
    var i = 0;
    while (i < SevenZip$LzmaBase_getInstance().kNumRepDistances) {
      this.reps_8be2vx$[i] = this._repDistances_8be2vx$[i];
      this.repLens_8be2vx$[i] = ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(-1, this.reps_8be2vx$[i], SevenZip$LzmaBase_getInstance().kMatchMaxLen);
      if (this.repLens_8be2vx$[i] > this.repLens_8be2vx$[repMaxIndex])
        repMaxIndex = i;
      i = i + 1 | 0;
    }
    if (this.repLens_8be2vx$[repMaxIndex] >= this._numFastBytes_8be2vx$) {
      this.backRes_8be2vx$ = repMaxIndex;
      var lenRes_0 = this.repLens_8be2vx$[repMaxIndex];
      this.MovePos_kcn2v3$(lenRes_0 - 1 | 0);
      return lenRes_0;
    }
    if (lenMain >= this._numFastBytes_8be2vx$) {
      this.backRes_8be2vx$ = this._matchDistances_8be2vx$[numDistancePairs - 1 | 0] + SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
      this.MovePos_kcn2v3$(lenMain - 1 | 0);
      return lenMain;
    }
    var currentByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(-1);
    var matchByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(0 - this._repDistances_8be2vx$[0] - 1 - 1 | 0);
    if (lenMain < 2 && currentByte !== matchByte && this.repLens_8be2vx$[repMaxIndex] < 2) {
      this.backRes_8be2vx$ = -1;
      return 1;
    }
    this._optimum_8be2vx$[0].State = this._state_8be2vx$;
    var posState = ppos & this._posStateMask_8be2vx$;
    this._optimum_8be2vx$[1].Price = SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isMatch_8be2vx$[(this._state_8be2vx$ << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]) + this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(ppos, this._previousByte_8be2vx$).GetPrice_udr4r7$(!SevenZip$LzmaBase_getInstance().StateIsCharState_za3lpa$(this._state_8be2vx$), matchByte, currentByte) | 0;
    this._optimum_8be2vx$[1].MakeAsChar();
    var matchPrice = SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isMatch_8be2vx$[(this._state_8be2vx$ << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]);
    var repMatchPrice = matchPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep_8be2vx$[this._state_8be2vx$]) | 0;
    if (matchByte === currentByte) {
      var shortRepPrice = repMatchPrice + this.GetRepLen1Price_6xvm5r$(this._state_8be2vx$, posState) | 0;
      if (shortRepPrice < this._optimum_8be2vx$[1].Price) {
        this._optimum_8be2vx$[1].Price = shortRepPrice;
        this._optimum_8be2vx$[1].MakeAsShortRep();
      }
    }
    var lenEnd = {v: lenMain >= this.repLens_8be2vx$[repMaxIndex] ? lenMain : this.repLens_8be2vx$[repMaxIndex]};
    if (lenEnd.v < 2) {
      this.backRes_8be2vx$ = this._optimum_8be2vx$[1].BackPrev;
      return 1;
    }
    this._optimum_8be2vx$[1].PosPrev = 0;
    this._optimum_8be2vx$[0].Backs0 = this.reps_8be2vx$[0];
    this._optimum_8be2vx$[0].Backs1 = this.reps_8be2vx$[1];
    this._optimum_8be2vx$[0].Backs2 = this.reps_8be2vx$[2];
    this._optimum_8be2vx$[0].Backs3 = this.reps_8be2vx$[3];
    var len = lenEnd.v;
    do {
      this._optimum_8be2vx$[tmp$ = len, len = tmp$ - 1 | 0, tmp$].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
    }
     while (len >= 2);
    i = 0;
    while (i < SevenZip$LzmaBase_getInstance().kNumRepDistances) {
      var repLen = this.repLens_8be2vx$[i];
      if (repLen < 2) {
        i = i + 1 | 0;
        continue;
      }
      var price = repMatchPrice + this.GetPureRepPrice_cub51b$(i, this._state_8be2vx$, posState) | 0;
      do {
        var curAndLenPrice = price + this._repMatchLenEncoder_8be2vx$.GetPrice_vux9f0$(repLen - 2 | 0, posState) | 0;
        var optimum = this._optimum_8be2vx$[repLen];
        if (curAndLenPrice < optimum.Price) {
          optimum.Price = curAndLenPrice;
          optimum.PosPrev = 0;
          optimum.BackPrev = i;
          optimum.Prev1IsChar = false;
        }
      }
       while ((repLen = repLen - 1 | 0, repLen) >= 2);
      i = i + 1 | 0;
    }
    var normalMatchPrice = matchPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRep_8be2vx$[this._state_8be2vx$]) | 0;
    len = this.repLens_8be2vx$[0] >= 2 ? this.repLens_8be2vx$[0] + 1 | 0 : 2;
    if (len <= lenMain) {
      var offs = 0;
      while (len > this._matchDistances_8be2vx$[offs])
        offs = offs + 2 | 0;
      while (true) {
        var distance = this._matchDistances_8be2vx$[offs + 1 | 0];
        var curAndLenPrice_0 = normalMatchPrice + this.GetPosLenPrice_cub51b$(distance, len, posState) | 0;
        var optimum_0 = this._optimum_8be2vx$[len];
        if (curAndLenPrice_0 < optimum_0.Price) {
          optimum_0.Price = curAndLenPrice_0;
          optimum_0.PosPrev = 0;
          optimum_0.BackPrev = distance + SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
          optimum_0.Prev1IsChar = false;
        }
        if (len === this._matchDistances_8be2vx$[offs]) {
          offs = offs + 2 | 0;
          if (offs === numDistancePairs)
            break;
        }
        len = len + 1 | 0;
      }
    }
    var cur = {v: 0};
    while (true) {
      cur.v = cur.v + 1 | 0;
      if (cur.v === lenEnd.v)
        return this.Backward_kcn2v3$(cur.v);
      var newLen = this.ReadMatchDistances_8be2vx$();
      numDistancePairs = this._numDistancePairs_8be2vx$;
      if (newLen >= this._numFastBytes_8be2vx$) {
        this._longestMatchLength_8be2vx$ = newLen;
        this._longestMatchWasFound_8be2vx$ = true;
        return this.Backward_kcn2v3$(cur.v);
      }
      ppos = ppos + 1 | 0;
      var posPrev = this._optimum_8be2vx$[cur.v].PosPrev;
      var state;
      if (this._optimum_8be2vx$[cur.v].Prev1IsChar) {
        posPrev = posPrev - 1 | 0;
        if (this._optimum_8be2vx$[cur.v].Prev2) {
          state = this._optimum_8be2vx$[this._optimum_8be2vx$[cur.v].PosPrev2].State;
          if (this._optimum_8be2vx$[cur.v].BackPrev2 < SevenZip$LzmaBase_getInstance().kNumRepDistances)
            state = SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(state);
          else
            state = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(state);
        }
         else
          state = this._optimum_8be2vx$[posPrev].State;
        state = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state);
      }
       else
        state = this._optimum_8be2vx$[posPrev].State;
      if (posPrev === (cur.v - 1 | 0)) {
        if (this._optimum_8be2vx$[cur.v].IsShortRep())
          state = SevenZip$LzmaBase_getInstance().StateUpdateShortRep_za3lpa$(state);
        else
          state = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state);
      }
       else {
        var pos;
        if (this._optimum_8be2vx$[cur.v].Prev1IsChar && this._optimum_8be2vx$[cur.v].Prev2) {
          posPrev = this._optimum_8be2vx$[cur.v].PosPrev2;
          pos = this._optimum_8be2vx$[cur.v].BackPrev2;
          state = SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(state);
        }
         else {
          pos = this._optimum_8be2vx$[cur.v].BackPrev;
          if (pos < SevenZip$LzmaBase_getInstance().kNumRepDistances)
            state = SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(state);
          else
            state = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(state);
        }
        var opt = this._optimum_8be2vx$[posPrev];
        if (pos < SevenZip$LzmaBase_getInstance().kNumRepDistances) {
          if (pos === 0) {
            this.reps_8be2vx$[0] = opt.Backs0;
            this.reps_8be2vx$[1] = opt.Backs1;
            this.reps_8be2vx$[2] = opt.Backs2;
            this.reps_8be2vx$[3] = opt.Backs3;
          }
           else if (pos === 1) {
            this.reps_8be2vx$[0] = opt.Backs1;
            this.reps_8be2vx$[1] = opt.Backs0;
            this.reps_8be2vx$[2] = opt.Backs2;
            this.reps_8be2vx$[3] = opt.Backs3;
          }
           else if (pos === 2) {
            this.reps_8be2vx$[0] = opt.Backs2;
            this.reps_8be2vx$[1] = opt.Backs0;
            this.reps_8be2vx$[2] = opt.Backs1;
            this.reps_8be2vx$[3] = opt.Backs3;
          }
           else {
            this.reps_8be2vx$[0] = opt.Backs3;
            this.reps_8be2vx$[1] = opt.Backs0;
            this.reps_8be2vx$[2] = opt.Backs1;
            this.reps_8be2vx$[3] = opt.Backs2;
          }
        }
         else {
          this.reps_8be2vx$[0] = pos - SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
          this.reps_8be2vx$[1] = opt.Backs0;
          this.reps_8be2vx$[2] = opt.Backs1;
          this.reps_8be2vx$[3] = opt.Backs2;
        }
      }
      this._optimum_8be2vx$[cur.v].State = state;
      this._optimum_8be2vx$[cur.v].Backs0 = this.reps_8be2vx$[0];
      this._optimum_8be2vx$[cur.v].Backs1 = this.reps_8be2vx$[1];
      this._optimum_8be2vx$[cur.v].Backs2 = this.reps_8be2vx$[2];
      this._optimum_8be2vx$[cur.v].Backs3 = this.reps_8be2vx$[3];
      var curPrice = this._optimum_8be2vx$[cur.v].Price;
      currentByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(-1);
      matchByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(0 - this.reps_8be2vx$[0] - 1 - 1 | 0);
      posState = ppos & this._posStateMask_8be2vx$;
      var curAnd1Price = curPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isMatch_8be2vx$[(state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]) + this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(ppos, ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(-2)).GetPrice_udr4r7$(!SevenZip$LzmaBase_getInstance().StateIsCharState_za3lpa$(state), matchByte, currentByte) | 0;
      var nextOptimum = this._optimum_8be2vx$[cur.v + 1 | 0];
      var nextIsChar = false;
      if (curAnd1Price < nextOptimum.Price) {
        nextOptimum.Price = curAnd1Price;
        nextOptimum.PosPrev = cur.v;
        nextOptimum.MakeAsChar();
        nextIsChar = true;
      }
      matchPrice = curPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isMatch_8be2vx$[(state << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0]) | 0;
      repMatchPrice = matchPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep_8be2vx$[state]) | 0;
      if (matchByte === currentByte && !(nextOptimum.PosPrev < cur.v && nextOptimum.BackPrev === 0)) {
        var shortRepPrice_0 = repMatchPrice + this.GetRepLen1Price_6xvm5r$(state, posState) | 0;
        if (shortRepPrice_0 <= nextOptimum.Price) {
          nextOptimum.Price = shortRepPrice_0;
          nextOptimum.PosPrev = cur.v;
          nextOptimum.MakeAsShortRep();
          nextIsChar = true;
        }
      }
      var numAvailableBytesFull = ensureNotNull(this._matchFinder_8be2vx$).GetNumAvailableBytes() + 1 | 0;
      var a = SevenZip$LzmaEncoder$Companion_getInstance().kNumOpts_8be2vx$ - 1 - cur.v | 0;
      var b = numAvailableBytesFull;
      numAvailableBytesFull = Math_0.min(a, b);
      numAvailableBytes = numAvailableBytesFull;
      if (numAvailableBytes < 2)
        continue;
      if (numAvailableBytes > this._numFastBytes_8be2vx$)
        numAvailableBytes = this._numFastBytes_8be2vx$;
      if (!nextIsChar && matchByte !== currentByte) {
        var a_0 = numAvailableBytesFull - 1 | 0;
        var b_0 = this._numFastBytes_8be2vx$;
        var t = Math_0.min(a_0, b_0);
        var lenTest2 = ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(0, this.reps_8be2vx$[0], t);
        if (lenTest2 >= 2) {
          var state2 = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state);
          var posStateNext = ppos + 1 & this._posStateMask_8be2vx$;
          var nextRepMatchPrice = curAnd1Price + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isMatch_8be2vx$[(state2 << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posStateNext | 0]) + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep_8be2vx$[state2]) | 0;
          var offset = cur.v + 1 + lenTest2 | 0;
          while (lenEnd.v < offset)
            this._optimum_8be2vx$[lenEnd.v = lenEnd.v + 1 | 0, lenEnd.v].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
          var curAndLenPrice_1 = nextRepMatchPrice + this.GetRepPrice_r9yya9$(0, lenTest2, state2, posStateNext) | 0;
          var optimum_1 = this._optimum_8be2vx$[offset];
          if (curAndLenPrice_1 < optimum_1.Price) {
            optimum_1.Price = curAndLenPrice_1;
            optimum_1.PosPrev = cur.v + 1 | 0;
            optimum_1.BackPrev = 0;
            optimum_1.Prev1IsChar = true;
            optimum_1.Prev2 = false;
          }
        }
      }
      var startLen = 2;
      tmp$_0 = SevenZip$LzmaBase_getInstance().kNumRepDistances;
      for (var repIndex = 0; repIndex < tmp$_0; repIndex++) {
        var lenTest = {v: ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(-1, this.reps_8be2vx$[repIndex], numAvailableBytes)};
        if (lenTest.v < 2)
          continue;
        var lenTestTemp = lenTest.v;
        do {
          while (lenEnd.v < (cur.v + lenTest.v | 0))
            this._optimum_8be2vx$[lenEnd.v = lenEnd.v + 1 | 0, lenEnd.v].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
          var curAndLenPrice_2 = repMatchPrice + this.GetRepPrice_r9yya9$(repIndex, lenTest.v, state, posState) | 0;
          var optimum_2 = this._optimum_8be2vx$[cur.v + lenTest.v | 0];
          if (curAndLenPrice_2 < optimum_2.Price) {
            optimum_2.Price = curAndLenPrice_2;
            optimum_2.PosPrev = cur.v;
            optimum_2.BackPrev = repIndex;
            optimum_2.Prev1IsChar = false;
          }
        }
         while ((lenTest.v = lenTest.v - 1 | 0, lenTest.v) >= 2);
        lenTest.v = lenTestTemp;
        if (repIndex === 0)
          startLen = lenTest.v + 1 | 0;
        if (lenTest.v < numAvailableBytesFull) {
          var a_1 = numAvailableBytesFull - 1 - lenTest.v | 0;
          var b_1 = this._numFastBytes_8be2vx$;
          var t_0 = Math_0.min(a_1, b_1);
          var lenTest2_0 = ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(lenTest.v, this.reps_8be2vx$[repIndex], t_0);
          if (lenTest2_0 >= 2) {
            var state2_0 = {v: SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(state)};
            var posStateNext_0 = {v: ppos + lenTest.v & this._posStateMask_8be2vx$};
            var curAndLenCharPrice = repMatchPrice + this.GetRepPrice_r9yya9$(repIndex, lenTest.v, state, posState) + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isMatch_8be2vx$[(state2_0.v << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posStateNext_0.v | 0]) + this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(ppos + lenTest.v | 0, ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest.v - 1 - 1 | 0)).GetPrice_udr4r7$(true, ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest.v - 1 - (this.reps_8be2vx$[repIndex] + 1) | 0), ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest.v - 1 | 0)) | 0;
            state2_0.v = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state2_0.v);
            posStateNext_0.v = ppos + lenTest.v + 1 & this._posStateMask_8be2vx$;
            var nextMatchPrice = curAndLenCharPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isMatch_8be2vx$[(state2_0.v << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posStateNext_0.v | 0]) | 0;
            var nextRepMatchPrice_0 = nextMatchPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep_8be2vx$[state2_0.v]) | 0;
            var offset_0 = lenTest.v + 1 + lenTest2_0 | 0;
            while (lenEnd.v < (cur.v + offset_0 | 0))
              this._optimum_8be2vx$[lenEnd.v = lenEnd.v + 1 | 0, lenEnd.v].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
            var curAndLenPrice_3 = nextRepMatchPrice_0 + this.GetRepPrice_r9yya9$(0, lenTest2_0, state2_0.v, posStateNext_0.v) | 0;
            var optimum_3 = this._optimum_8be2vx$[cur.v + offset_0 | 0];
            if (curAndLenPrice_3 < optimum_3.Price) {
              optimum_3.Price = curAndLenPrice_3;
              optimum_3.PosPrev = cur.v + lenTest.v + 1 | 0;
              optimum_3.BackPrev = 0;
              optimum_3.Prev1IsChar = true;
              optimum_3.Prev2 = true;
              optimum_3.PosPrev2 = cur.v;
              optimum_3.BackPrev2 = repIndex;
            }
          }
        }
      }
      if (newLen > numAvailableBytes) {
        newLen = numAvailableBytes;
        numDistancePairs = 0;
        while (newLen > this._matchDistances_8be2vx$[numDistancePairs]) {
          numDistancePairs = numDistancePairs + 2 | 0;
        }
        this._matchDistances_8be2vx$[numDistancePairs] = newLen;
        numDistancePairs = numDistancePairs + 2 | 0;
      }
      if (newLen >= startLen) {
        normalMatchPrice = matchPrice + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isRep_8be2vx$[state]) | 0;
        while (lenEnd.v < (cur.v + newLen | 0))
          this._optimum_8be2vx$[lenEnd.v = lenEnd.v + 1 | 0, lenEnd.v].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
        var offs_0 = 0;
        while (startLen > this._matchDistances_8be2vx$[offs_0])
          offs_0 = offs_0 + 2 | 0;
        var lenTest_0 = startLen;
        while (true) {
          var curBack = this._matchDistances_8be2vx$[offs_0 + 1 | 0];
          var curAndLenPrice_4 = normalMatchPrice + this.GetPosLenPrice_cub51b$(curBack, lenTest_0, posState) | 0;
          var optimum_4 = this._optimum_8be2vx$[cur.v + lenTest_0 | 0];
          if (curAndLenPrice_4 < optimum_4.Price) {
            optimum_4.Price = curAndLenPrice_4;
            optimum_4.PosPrev = cur.v;
            optimum_4.BackPrev = curBack + SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
            optimum_4.Prev1IsChar = false;
          }
          if (lenTest_0 === this._matchDistances_8be2vx$[offs_0]) {
            if (lenTest_0 < numAvailableBytesFull) {
              var a_2 = numAvailableBytesFull - 1 - lenTest_0 | 0;
              var b_2 = this._numFastBytes_8be2vx$;
              var t_1 = Math_0.min(a_2, b_2);
              var lenTest2_1 = ensureNotNull(this._matchFinder_8be2vx$).GetMatchLen_qt1dr2$(lenTest_0, curBack, t_1);
              if (lenTest2_1 >= 2) {
                var state2_1 = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(state);
                var posStateNext_1 = ppos + lenTest_0 & this._posStateMask_8be2vx$;
                var curAndLenCharPrice_0 = curAndLenPrice_4 + SevenZip$RangeEncoder$Companion_getInstance().GetPrice0_za3lpa$(this._isMatch_8be2vx$[(state2_1 << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posStateNext_1 | 0]) + this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(ppos + lenTest_0 | 0, ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest_0 - 1 - 1 | 0)).GetPrice_udr4r7$(true, ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest_0 - (curBack + 1) - 1 | 0), ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(lenTest_0 - 1 | 0)) | 0;
                state2_1 = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(state2_1);
                posStateNext_1 = ppos + lenTest_0 + 1 & this._posStateMask_8be2vx$;
                var nextMatchPrice_0 = curAndLenCharPrice_0 + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isMatch_8be2vx$[(state2_1 << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posStateNext_1 | 0]) | 0;
                var nextRepMatchPrice_1 = nextMatchPrice_0 + SevenZip$RangeEncoder$Companion_getInstance().GetPrice1_za3lpa$(this._isRep_8be2vx$[state2_1]) | 0;
                var offset_1 = lenTest_0 + 1 + lenTest2_1 | 0;
                while (lenEnd.v < (cur.v + offset_1 | 0))
                  this._optimum_8be2vx$[lenEnd.v = lenEnd.v + 1 | 0, lenEnd.v].Price = SevenZip$LzmaEncoder$Companion_getInstance().kIfinityPrice_8be2vx$;
                curAndLenPrice_4 = nextRepMatchPrice_1 + this.GetRepPrice_r9yya9$(0, lenTest2_1, state2_1, posStateNext_1) | 0;
                optimum_4 = this._optimum_8be2vx$[cur.v + offset_1 | 0];
                if (curAndLenPrice_4 < optimum_4.Price) {
                  optimum_4.Price = curAndLenPrice_4;
                  optimum_4.PosPrev = cur.v + lenTest_0 + 1 | 0;
                  optimum_4.BackPrev = 0;
                  optimum_4.Prev1IsChar = true;
                  optimum_4.Prev2 = true;
                  optimum_4.PosPrev2 = cur.v;
                  optimum_4.BackPrev2 = curBack + SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
                }
              }
            }
            offs_0 = offs_0 + 2 | 0;
            if (offs_0 === numDistancePairs)
              break;
          }
          lenTest_0 = lenTest_0 + 1 | 0;
        }
      }
    }
  };
  SevenZip$LzmaEncoder.prototype.ChangePair_6xvm5r$ = function (smallDist, bigDist) {
    var kDif = 7;
    return smallDist < 1 << 32 - kDif && bigDist >= smallDist << kDif;
  };
  SevenZip$LzmaEncoder.prototype.WriteEndMarker_kcn2v3$ = function (posState) {
    if (!this._writeEndMark_8be2vx$)
      return;
    this._rangeEncoder_8be2vx$.Encode_359eei$(this._isMatch_8be2vx$, (this._state_8be2vx$ << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0, 1);
    this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRep_8be2vx$, this._state_8be2vx$, 0);
    this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(this._state_8be2vx$);
    var len = SevenZip$LzmaBase_getInstance().kMatchMinLen;
    this._lenEncoder_8be2vx$.Encode_x31iud$(this._rangeEncoder_8be2vx$, len - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0, posState);
    var posSlot = (1 << SevenZip$LzmaBase_getInstance().kNumPosSlotBits) - 1 | 0;
    var lenToPosState = SevenZip$LzmaBase_getInstance().GetLenToPosState_za3lpa$(len);
    this._posSlotEncoder_8be2vx$[lenToPosState].Encode_m7qcon$(this._rangeEncoder_8be2vx$, posSlot);
    var footerBits = 30;
    var posReduced = (1 << footerBits) - 1 | 0;
    this._rangeEncoder_8be2vx$.EncodeDirectBits_vux9f0$(posReduced >> SevenZip$LzmaBase_getInstance().kNumAlignBits, footerBits - SevenZip$LzmaBase_getInstance().kNumAlignBits | 0);
    this._posAlignEncoder_8be2vx$.ReverseEncode_m7qcon$(this._rangeEncoder_8be2vx$, posReduced & SevenZip$LzmaBase_getInstance().kAlignMask);
  };
  SevenZip$LzmaEncoder.prototype.Flush_kcn2v3$ = function (nowPos) {
    this.ReleaseMFStream_8be2vx$();
    this.WriteEndMarker_kcn2v3$(nowPos & this._posStateMask_8be2vx$);
    this._rangeEncoder_8be2vx$.FlushData();
    this._rangeEncoder_8be2vx$.FlushStream();
  };
  SevenZip$LzmaEncoder.prototype.CodeOneBlock_bhhqwu$ = function (inSize, outSize, finished) {
    inSize[0] = L0;
    outSize[0] = L0;
    finished[0] = true;
    if (this._inStream_8be2vx$ != null) {
      ensureNotNull(this._matchFinder_8be2vx$).SetStream_sayfrj$(ensureNotNull(this._inStream_8be2vx$));
      ensureNotNull(this._matchFinder_8be2vx$).Init();
      this._needReleaseMFStream_8be2vx$ = true;
      this._inStream_8be2vx$ = null;
    }
    if (this._finished_8be2vx$)
      return;
    this._finished_8be2vx$ = true;
    var progressPosValuePrev = this.nowPos64_8be2vx$;
    if (equals(this.nowPos64_8be2vx$, L0)) {
      if (ensureNotNull(this._matchFinder_8be2vx$).GetNumAvailableBytes() === 0) {
        this.Flush_kcn2v3$(this.nowPos64_8be2vx$.toInt());
        return;
      }
      this.ReadMatchDistances_8be2vx$();
      var posState = this.nowPos64_8be2vx$.toInt() & this._posStateMask_8be2vx$;
      this._rangeEncoder_8be2vx$.Encode_359eei$(this._isMatch_8be2vx$, (this._state_8be2vx$ << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState | 0, 0);
      this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(this._state_8be2vx$);
      var curByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(0 - this._additionalOffset_8be2vx$ | 0);
      this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(this.nowPos64_8be2vx$.toInt(), this._previousByte_8be2vx$).Encode_lnbdv2$(this._rangeEncoder_8be2vx$, curByte);
      this._previousByte_8be2vx$ = curByte;
      this._additionalOffset_8be2vx$ = this._additionalOffset_8be2vx$ - 1 | 0;
      this.nowPos64_8be2vx$ = this.nowPos64_8be2vx$.inc();
    }
    if (ensureNotNull(this._matchFinder_8be2vx$).GetNumAvailableBytes() === 0) {
      this.Flush_kcn2v3$(this.nowPos64_8be2vx$.toInt());
      return;
    }
    while (true) {
      var len = this.GetOptimum_kcn2v3$(this.nowPos64_8be2vx$.toInt());
      var pos = this.backRes_8be2vx$;
      var posState_0 = this.nowPos64_8be2vx$.toInt() & this._posStateMask_8be2vx$;
      var complexState = (this._state_8be2vx$ << SevenZip$LzmaBase_getInstance().kNumPosStatesBitsMax) + posState_0 | 0;
      if (len === 1 && pos === -1) {
        this._rangeEncoder_8be2vx$.Encode_359eei$(this._isMatch_8be2vx$, complexState, 0);
        var curByte_0 = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(0 - this._additionalOffset_8be2vx$ | 0);
        var subCoder = this._literalEncoder_8be2vx$.GetSubCoder_6t1wet$(this.nowPos64_8be2vx$.toInt(), this._previousByte_8be2vx$);
        if (!SevenZip$LzmaBase_getInstance().StateIsCharState_za3lpa$(this._state_8be2vx$)) {
          var matchByte = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(0 - this._repDistances_8be2vx$[0] - 1 - this._additionalOffset_8be2vx$ | 0);
          subCoder.EncodeMatched_ocrm4p$(this._rangeEncoder_8be2vx$, matchByte, curByte_0);
        }
         else
          subCoder.Encode_lnbdv2$(this._rangeEncoder_8be2vx$, curByte_0);
        this._previousByte_8be2vx$ = curByte_0;
        this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateChar_za3lpa$(this._state_8be2vx$);
      }
       else {
        this._rangeEncoder_8be2vx$.Encode_359eei$(this._isMatch_8be2vx$, complexState, 1);
        if (pos < SevenZip$LzmaBase_getInstance().kNumRepDistances) {
          this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRep_8be2vx$, this._state_8be2vx$, 1);
          if (pos === 0) {
            this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRepG0_8be2vx$, this._state_8be2vx$, 0);
            if (len === 1)
              this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRep0Long_8be2vx$, complexState, 0);
            else
              this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRep0Long_8be2vx$, complexState, 1);
          }
           else {
            this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRepG0_8be2vx$, this._state_8be2vx$, 1);
            if (pos === 1)
              this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRepG1_8be2vx$, this._state_8be2vx$, 0);
            else {
              this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRepG1_8be2vx$, this._state_8be2vx$, 1);
              this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRepG2_8be2vx$, this._state_8be2vx$, pos - 2 | 0);
            }
          }
          if (len === 1)
            this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateShortRep_za3lpa$(this._state_8be2vx$);
          else {
            this._repMatchLenEncoder_8be2vx$.Encode_x31iud$(this._rangeEncoder_8be2vx$, len - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0, posState_0);
            this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateRep_za3lpa$(this._state_8be2vx$);
          }
          var distance = this._repDistances_8be2vx$[pos];
          if (pos !== 0) {
            for (var i = pos; i >= 1; i--)
              this._repDistances_8be2vx$[i] = this._repDistances_8be2vx$[i - 1 | 0];
            this._repDistances_8be2vx$[0] = distance;
          }
        }
         else {
          this._rangeEncoder_8be2vx$.Encode_359eei$(this._isRep_8be2vx$, this._state_8be2vx$, 0);
          this._state_8be2vx$ = SevenZip$LzmaBase_getInstance().StateUpdateMatch_za3lpa$(this._state_8be2vx$);
          this._lenEncoder_8be2vx$.Encode_x31iud$(this._rangeEncoder_8be2vx$, len - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0, posState_0);
          pos = pos - SevenZip$LzmaBase_getInstance().kNumRepDistances | 0;
          var posSlot = SevenZip$LzmaEncoder$Companion_getInstance().GetPosSlot_kcn2v3$(pos);
          var lenToPosState = SevenZip$LzmaBase_getInstance().GetLenToPosState_za3lpa$(len);
          this._posSlotEncoder_8be2vx$[lenToPosState].Encode_m7qcon$(this._rangeEncoder_8be2vx$, posSlot);
          if (posSlot >= SevenZip$LzmaBase_getInstance().kStartPosModelIndex) {
            var footerBits = (posSlot >> 1) - 1 | 0;
            var baseVal = (2 | posSlot & 1) << footerBits;
            var posReduced = pos - baseVal | 0;
            if (posSlot < SevenZip$LzmaBase_getInstance().kEndPosModelIndex)
              SevenZip$BitTreeEncoder$Companion_getInstance().ReverseEncode_wskkkj$(this._posEncoders_8be2vx$, baseVal - posSlot - 1 | 0, this._rangeEncoder_8be2vx$, footerBits, posReduced);
            else {
              this._rangeEncoder_8be2vx$.EncodeDirectBits_vux9f0$(posReduced >> SevenZip$LzmaBase_getInstance().kNumAlignBits, footerBits - SevenZip$LzmaBase_getInstance().kNumAlignBits | 0);
              this._posAlignEncoder_8be2vx$.ReverseEncode_m7qcon$(this._rangeEncoder_8be2vx$, posReduced & SevenZip$LzmaBase_getInstance().kAlignMask);
              this._alignPriceCount_8be2vx$ = this._alignPriceCount_8be2vx$ + 1 | 0;
            }
          }
          var distance_0 = pos;
          for (var i_0 = SevenZip$LzmaBase_getInstance().kNumRepDistances - 1 | 0; i_0 >= 1; i_0--)
            this._repDistances_8be2vx$[i_0] = this._repDistances_8be2vx$[i_0 - 1 | 0];
          this._repDistances_8be2vx$[0] = distance_0;
          this._matchPriceCount_8be2vx$ = this._matchPriceCount_8be2vx$ + 1 | 0;
        }
        this._previousByte_8be2vx$ = ensureNotNull(this._matchFinder_8be2vx$).GetIndexByte_za3lpa$(len - 1 - this._additionalOffset_8be2vx$ | 0);
      }
      this._additionalOffset_8be2vx$ = this._additionalOffset_8be2vx$ - len | 0;
      this.nowPos64_8be2vx$ = this.nowPos64_8be2vx$.add(Kotlin.Long.fromInt(len));
      if (this._additionalOffset_8be2vx$ === 0) {
        if (this._matchPriceCount_8be2vx$ >= 128)
          this.FillDistancesPrices_8be2vx$();
        if (this._alignPriceCount_8be2vx$ >= SevenZip$LzmaBase_getInstance().kAlignTableSize)
          this.FillAlignPrices_8be2vx$();
        inSize[0] = this.nowPos64_8be2vx$;
        outSize[0] = this._rangeEncoder_8be2vx$.GetProcessedSizeAdd();
        if (ensureNotNull(this._matchFinder_8be2vx$).GetNumAvailableBytes() === 0) {
          this.Flush_kcn2v3$(this.nowPos64_8be2vx$.toInt());
          return;
        }
        if (this.nowPos64_8be2vx$.subtract(progressPosValuePrev).toNumber() >= 4096) {
          this._finished_8be2vx$ = false;
          finished[0] = false;
          return;
        }
      }
    }
  };
  SevenZip$LzmaEncoder.prototype.ReleaseMFStream_8be2vx$ = function () {
    if (this._matchFinder_8be2vx$ != null && this._needReleaseMFStream_8be2vx$) {
      ensureNotNull(this._matchFinder_8be2vx$).ReleaseStream();
      this._needReleaseMFStream_8be2vx$ = false;
    }
  };
  SevenZip$LzmaEncoder.prototype.SetOutStream_nnie53$ = function (outStream) {
    this._rangeEncoder_8be2vx$.SetStream_ceqwhy$(outStream);
  };
  SevenZip$LzmaEncoder.prototype.ReleaseOutStream_8be2vx$ = function () {
    this._rangeEncoder_8be2vx$.ReleaseStream();
  };
  SevenZip$LzmaEncoder.prototype.ReleaseStreams_8be2vx$ = function () {
    this.ReleaseMFStream_8be2vx$();
    this.ReleaseOutStream_8be2vx$();
  };
  SevenZip$LzmaEncoder.prototype.SetStreams_cwx9d8$ = function (inStream, outStream, inSize, outSize) {
    this._inStream_8be2vx$ = inStream;
    this._finished_8be2vx$ = false;
    this.Create_8be2vx$();
    this.SetOutStream_nnie53$(outStream);
    this.Init_8be2vx$();
    this.FillDistancesPrices_8be2vx$();
    this.FillAlignPrices_8be2vx$();
    this._lenEncoder_8be2vx$.SetTableSize_za3lpa$(this._numFastBytes_8be2vx$ + 1 - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0);
    this._lenEncoder_8be2vx$.UpdateTables_za3lpa$(1 << this._posStateBits_8be2vx$);
    this._repMatchLenEncoder_8be2vx$.SetTableSize_za3lpa$(this._numFastBytes_8be2vx$ + 1 - SevenZip$LzmaBase_getInstance().kMatchMinLen | 0);
    this._repMatchLenEncoder_8be2vx$.UpdateTables_za3lpa$(1 << this._posStateBits_8be2vx$);
    this.nowPos64_8be2vx$ = L0;
  };
  SevenZip$LzmaEncoder.prototype.Code_bvprln$ = function (inStream, outStream, inSize, outSize, progress) {
    this._needReleaseMFStream_8be2vx$ = false;
    try {
      this.SetStreams_cwx9d8$(inStream, outStream, inSize, outSize);
      while (true) {
        this.CodeOneBlock_bhhqwu$(this.processedInSize_8be2vx$, this.processedOutSize_8be2vx$, this.finished_8be2vx$);
        if (this.finished_8be2vx$[0])
          return;
        if (progress != null) {
          progress.SetProgress_3pjtqy$(this.processedInSize_8be2vx$[0], this.processedOutSize_8be2vx$[0]);
        }
      }
    }
    finally {
      this.ReleaseStreams_8be2vx$();
    }
  };
  SevenZip$LzmaEncoder.prototype.WriteCoderProperties_ceqwhy$ = function (outStream) {
    this.properties_8be2vx$[0] = toByte((((this._posStateBits_8be2vx$ * 5 | 0) + this._numLiteralPosStateBits_8be2vx$ | 0) * 9 | 0) + this._numLiteralContextBits_8be2vx$ | 0);
    for (var i = 0; i <= 3; i++)
      this.properties_8be2vx$[1 + i | 0] = toByte(this._dictionarySize_8be2vx$ >> (8 * i | 0));
    outStream.write_mj6st8$(this.properties_8be2vx$, 0, SevenZip$LzmaEncoder$Companion_getInstance().kPropSize);
  };
  SevenZip$LzmaEncoder.prototype.FillDistancesPrices_8be2vx$ = function () {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    tmp$ = SevenZip$LzmaBase_getInstance().kStartPosModelIndex;
    tmp$_0 = SevenZip$LzmaBase_getInstance().kNumFullDistances;
    for (var i = tmp$; i < tmp$_0; i++) {
      var posSlot = SevenZip$LzmaEncoder$Companion_getInstance().GetPosSlot_kcn2v3$(i);
      var footerBits = (posSlot >> 1) - 1 | 0;
      var baseVal = (2 | posSlot & 1) << footerBits;
      this.tempPrices_8be2vx$[i] = SevenZip$BitTreeEncoder$Companion_getInstance().ReverseGetPrice_rbjysc$(this._posEncoders_8be2vx$, baseVal - posSlot - 1 | 0, footerBits, i - baseVal | 0);
    }
    tmp$_1 = SevenZip$LzmaBase_getInstance().kNumLenToPosStates;
    for (var lenToPosState = 0; lenToPosState < tmp$_1; lenToPosState++) {
      var posSlot_0;
      var encoder = this._posSlotEncoder_8be2vx$[lenToPosState];
      var st = lenToPosState << SevenZip$LzmaBase_getInstance().kNumPosSlotBits;
      posSlot_0 = 0;
      while (posSlot_0 < this._distTableSize_8be2vx$) {
        this._posSlotPrices_8be2vx$[st + posSlot_0 | 0] = encoder.GetPrice_za3lpa$(posSlot_0);
        posSlot_0 = posSlot_0 + 1 | 0;
      }
      posSlot_0 = SevenZip$LzmaBase_getInstance().kEndPosModelIndex;
      while (posSlot_0 < this._distTableSize_8be2vx$) {
        tmp$_2 = this._posSlotPrices_8be2vx$;
        tmp$_2[st + posSlot_0 | 0] = tmp$_2[st + posSlot_0 | 0] + ((posSlot_0 >> 1) - 1 - SevenZip$LzmaBase_getInstance().kNumAlignBits << SevenZip$RangeEncoder$Companion_getInstance().kNumBitPriceShiftBits) | 0;
        posSlot_0 = posSlot_0 + 1 | 0;
      }
      var st2 = Kotlin.imul(lenToPosState, SevenZip$LzmaBase_getInstance().kNumFullDistances);
      var i_0;
      i_0 = 0;
      while (i_0 < SevenZip$LzmaBase_getInstance().kStartPosModelIndex) {
        this._distancesPrices_8be2vx$[st2 + i_0 | 0] = this._posSlotPrices_8be2vx$[st + i_0 | 0];
        i_0 = i_0 + 1 | 0;
      }
      while (i_0 < SevenZip$LzmaBase_getInstance().kNumFullDistances) {
        this._distancesPrices_8be2vx$[st2 + i_0 | 0] = this._posSlotPrices_8be2vx$[st + SevenZip$LzmaEncoder$Companion_getInstance().GetPosSlot_kcn2v3$(i_0) | 0] + this.tempPrices_8be2vx$[i_0] | 0;
        i_0 = i_0 + 1 | 0;
      }
    }
    this._matchPriceCount_8be2vx$ = 0;
  };
  SevenZip$LzmaEncoder.prototype.FillAlignPrices_8be2vx$ = function () {
    var tmp$;
    tmp$ = SevenZip$LzmaBase_getInstance().kAlignTableSize;
    for (var i = 0; i < tmp$; i++)
      this._alignPrices_8be2vx$[i] = this._posAlignEncoder_8be2vx$.ReverseGetPrice_za3lpa$(i);
    this._alignPriceCount_8be2vx$ = 0;
  };
  SevenZip$LzmaEncoder.prototype.SetAlgorithm_za3lpa$ = function (algorithm) {
    return true;
  };
  SevenZip$LzmaEncoder.prototype.SetDictionarySize_za3lpa$ = function (dictionarySize) {
    var kDicLogSizeMaxCompress = 29;
    var cond1 = dictionarySize < 1 << SevenZip$LzmaBase_getInstance().kDicLogSizeMin;
    var cond2 = dictionarySize > 1 << kDicLogSizeMaxCompress;
    if (cond1 || cond2)
      return false;
    this._dictionarySize_8be2vx$ = dictionarySize;
    var dicLogSize;
    dicLogSize = 0;
    while (dictionarySize > 1 << dicLogSize) {
      dicLogSize = dicLogSize + 1 | 0;
    }
    this._distTableSize_8be2vx$ = dicLogSize * 2 | 0;
    return true;
  };
  SevenZip$LzmaEncoder.prototype.SetNumFastBytes_za3lpa$ = function (numFastBytes) {
    if (numFastBytes < 5 || numFastBytes > SevenZip$LzmaBase_getInstance().kMatchMaxLen)
      return false;
    this._numFastBytes_8be2vx$ = numFastBytes;
    return true;
  };
  SevenZip$LzmaEncoder.prototype.SetMatchFinder_za3lpa$ = function (matchFinderIndex) {
    if (matchFinderIndex < 0 || matchFinderIndex > 2)
      return false;
    var matchFinderIndexPrev = this._matchFinderType_8be2vx$;
    this._matchFinderType_8be2vx$ = matchFinderIndex;
    if (this._matchFinder_8be2vx$ != null && matchFinderIndexPrev !== this._matchFinderType_8be2vx$) {
      this._dictionarySizePrev_8be2vx$ = -1;
      this._matchFinder_8be2vx$ = null;
    }
    return true;
  };
  SevenZip$LzmaEncoder.prototype.SetLcLpPb_qt1dr2$ = function (lc, lp, pb) {
    if (lp < 0 || lp > SevenZip$LzmaBase_getInstance().kNumLitPosStatesBitsEncodingMax || lc < 0 || lc > SevenZip$LzmaBase_getInstance().kNumLitContextBitsMax || pb < 0 || pb > SevenZip$LzmaBase_getInstance().kNumPosStatesBitsEncodingMax)
      return false;
    this._numLiteralPosStateBits_8be2vx$ = lp;
    this._numLiteralContextBits_8be2vx$ = lc;
    this._posStateBits_8be2vx$ = pb;
    this._posStateMask_8be2vx$ = (1 << this._posStateBits_8be2vx$) - 1 | 0;
    return true;
  };
  SevenZip$LzmaEncoder.prototype.SetEndMarkerMode_6taknv$ = function (endMarkerMode) {
    this._writeEndMark_8be2vx$ = endMarkerMode;
  };
  function SevenZip$LzmaEncoder$Companion() {
    SevenZip$LzmaEncoder$Companion_instance = this;
    this.EMatchFinderTypeBT2 = 0;
    this.EMatchFinderTypeBT4 = 1;
    this.kIfinityPrice_8be2vx$ = 268435455;
    this.g_FastPos_8be2vx$ = new Int8Array(2048);
    var kFastSlots = 22;
    var c = 2;
    this.g_FastPos_8be2vx$[0] = 0;
    this.g_FastPos_8be2vx$[1] = 1;
    for (var slotFast = 2; slotFast < kFastSlots; slotFast++) {
      var k = 1 << (slotFast >> 1) - 1;
      var j = 0;
      while (j < k) {
        this.g_FastPos_8be2vx$[c] = toByte(slotFast);
        j = j + 1 | 0;
        c = c + 1 | 0;
      }
    }
    this.kDefaultDictionaryLogSize_8be2vx$ = 22;
    this.kNumFastBytesDefault_8be2vx$ = 32;
    this.kNumLenSpecSymbols = SevenZip$LzmaBase_getInstance().kNumLowLenSymbols + SevenZip$LzmaBase_getInstance().kNumMidLenSymbols | 0;
    this.kNumOpts_8be2vx$ = 4096;
    this.kPropSize = 5;
  }
  SevenZip$LzmaEncoder$Companion.prototype.GetPosSlot_kcn2v3$ = function (pos) {
    if (pos < 2048)
      return this.g_FastPos_8be2vx$[pos];
    return pos < 2097152 ? this.g_FastPos_8be2vx$[pos >> 10] + 20 : this.g_FastPos_8be2vx$[pos >> 20] + 40;
  };
  SevenZip$LzmaEncoder$Companion.prototype.GetPosSlot2_kcn2v3$ = function (pos) {
    if (pos < 131072)
      return this.g_FastPos_8be2vx$[pos >> 6] + 12;
    return pos < 134217728 ? this.g_FastPos_8be2vx$[pos >> 16] + 32 : this.g_FastPos_8be2vx$[pos >> 26] + 52;
  };
  SevenZip$LzmaEncoder$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$LzmaEncoder$Companion_instance = null;
  function SevenZip$LzmaEncoder$Companion_getInstance() {
    if (SevenZip$LzmaEncoder$Companion_instance === null) {
      new SevenZip$LzmaEncoder$Companion();
    }
    return SevenZip$LzmaEncoder$Companion_instance;
  }
  SevenZip$LzmaEncoder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LzmaEncoder',
    interfaces: []
  };
  function SevenZip$LzBinTree() {
    SevenZip$LzBinTree$Companion_getInstance();
    SevenZip$LzInWindow.call(this);
    this._cyclicBufferPos_8be2vx$ = 0;
    this._cyclicBufferSize_8be2vx$ = 0;
    this._matchMaxLen_8be2vx$ = 0;
    this._son_8be2vx$_76wt36$_0 = this._son_8be2vx$_76wt36$_0;
    this._hash_8be2vx$_4de5qa$_0 = this._hash_8be2vx$_4de5qa$_0;
    this._cutValue_8be2vx$ = 255;
    this._hashMask_8be2vx$ = 0;
    this._hashSizeSum_8be2vx$ = 0;
    this.HASH_ARRAY_8be2vx$ = true;
    this.kNumHashDirectBytes_8be2vx$ = 0;
    this.kMinMatchCheck_8be2vx$ = 4;
    this.kFixHashSize_8be2vx$ = SevenZip$LzBinTree$Companion_getInstance().kHash2Size_8be2vx$ + SevenZip$LzBinTree$Companion_getInstance().kHash3Size_8be2vx$ | 0;
  }
  Object.defineProperty(SevenZip$LzBinTree.prototype, '_son_8be2vx$', {
    get: function () {
      if (this._son_8be2vx$_76wt36$_0 == null)
        return throwUPAE('_son');
      return this._son_8be2vx$_76wt36$_0;
    },
    set: function (_son) {
      this._son_8be2vx$_76wt36$_0 = _son;
    }
  });
  Object.defineProperty(SevenZip$LzBinTree.prototype, '_hash_8be2vx$', {
    get: function () {
      if (this._hash_8be2vx$_4de5qa$_0 == null)
        return throwUPAE('_hash');
      return this._hash_8be2vx$_4de5qa$_0;
    },
    set: function (_hash) {
      this._hash_8be2vx$_4de5qa$_0 = _hash;
    }
  });
  SevenZip$LzBinTree.prototype.SetType_za3lpa$ = function (numHashBytes) {
    this.HASH_ARRAY_8be2vx$ = numHashBytes > 2;
    if (this.HASH_ARRAY_8be2vx$) {
      this.kNumHashDirectBytes_8be2vx$ = 0;
      this.kMinMatchCheck_8be2vx$ = 4;
      this.kFixHashSize_8be2vx$ = SevenZip$LzBinTree$Companion_getInstance().kHash2Size_8be2vx$ + SevenZip$LzBinTree$Companion_getInstance().kHash3Size_8be2vx$ | 0;
    }
     else {
      this.kNumHashDirectBytes_8be2vx$ = 2;
      this.kMinMatchCheck_8be2vx$ = 3;
      this.kFixHashSize_8be2vx$ = 0;
    }
  };
  SevenZip$LzBinTree.prototype.Init = function () {
    var tmp$;
    SevenZip$LzInWindow.prototype.Init.call(this);
    tmp$ = this._hashSizeSum_8be2vx$;
    for (var i = 0; i < tmp$; i++)
      this._hash_8be2vx$[i] = SevenZip$LzBinTree$Companion_getInstance().kEmptyHashValue_8be2vx$;
    this._cyclicBufferPos_8be2vx$ = 0;
    this.ReduceOffsets_za3lpa$(-1);
  };
  SevenZip$LzBinTree.prototype.MovePos = function () {
    if ((this._cyclicBufferPos_8be2vx$ = this._cyclicBufferPos_8be2vx$ + 1 | 0, this._cyclicBufferPos_8be2vx$) >= this._cyclicBufferSize_8be2vx$)
      this._cyclicBufferPos_8be2vx$ = 0;
    SevenZip$LzInWindow.prototype.MovePos.call(this);
    if (this._pos === SevenZip$LzBinTree$Companion_getInstance().kMaxValForNormalize_8be2vx$)
      this.Normalize_8be2vx$();
  };
  SevenZip$LzBinTree.prototype.Create_tjonv8$ = function (historySize, keepAddBufferBefore, matchMaxLen, keepAddBufferAfter) {
    if (historySize > (SevenZip$LzBinTree$Companion_getInstance().kMaxValForNormalize_8be2vx$ - 256 | 0))
      return false;
    this._cutValue_8be2vx$ = 16 + (matchMaxLen >> 1) | 0;
    var windowReservSize = ((historySize + keepAddBufferBefore + matchMaxLen + keepAddBufferAfter | 0) / 2 | 0) + 256 | 0;
    SevenZip$LzInWindow.prototype.Create_qt1dr2$.call(this, historySize + keepAddBufferBefore | 0, matchMaxLen + keepAddBufferAfter | 0, windowReservSize);
    this._matchMaxLen_8be2vx$ = matchMaxLen;
    var cyclicBufferSize = historySize + 1 | 0;
    if (this._cyclicBufferSize_8be2vx$ !== cyclicBufferSize)
      this._cyclicBufferSize_8be2vx$ = cyclicBufferSize;
    this._son_8be2vx$ = new Int32Array(this._cyclicBufferSize_8be2vx$ * 2 | 0);
    var hs = SevenZip$LzBinTree$Companion_getInstance().kBT2HashSize_8be2vx$;
    if (this.HASH_ARRAY_8be2vx$) {
      hs = historySize - 1 | 0;
      hs = hs | hs >> 1;
      hs = hs | hs >> 2;
      hs = hs | hs >> 4;
      hs = hs | hs >> 8;
      hs = hs >> 1;
      hs = hs | 65535;
      if (hs > 16777216)
        hs = hs >> 1;
      this._hashMask_8be2vx$ = hs;
      hs = hs + 1 | 0;
      hs = hs + this.kFixHashSize_8be2vx$ | 0;
    }
    if (hs !== this._hashSizeSum_8be2vx$) {
      this._hashSizeSum_8be2vx$ = hs;
      this._hash_8be2vx$ = new Int32Array(this._hashSizeSum_8be2vx$);
    }
    return true;
  };
  SevenZip$LzBinTree.prototype.GetMatches_q5rwfd$ = function (distances) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    var lenLimit;
    if ((this._pos + this._matchMaxLen_8be2vx$ | 0) <= this._streamPos)
      lenLimit = this._matchMaxLen_8be2vx$;
    else {
      lenLimit = this._streamPos - this._pos | 0;
      if (lenLimit < this.kMinMatchCheck_8be2vx$) {
        this.MovePos();
        return 0;
      }
    }
    var offset = 0;
    var matchMinPos = this._pos > this._cyclicBufferSize_8be2vx$ ? this._pos - this._cyclicBufferSize_8be2vx$ | 0 : 0;
    var cur = this._bufferOffset + this._pos | 0;
    var maxLen = SevenZip$LzBinTree$Companion_getInstance().kStartMaxLen_8be2vx$;
    var hashValue;
    var hash2Value = 0;
    var hash3Value = 0;
    if (this.HASH_ARRAY_8be2vx$) {
      var temp = SevenZip$LzBinTree$Companion_getInstance().CrcTable_0[and(ensureNotNull(this._bufferBase)[cur], 255)] ^ and(ensureNotNull(this._bufferBase)[cur + 1 | 0], 255);
      hash2Value = temp & SevenZip$LzBinTree$Companion_getInstance().kHash2Size_8be2vx$ - 1;
      temp = temp ^ and(ensureNotNull(this._bufferBase)[cur + 2 | 0], 255) << 8;
      hash3Value = temp & SevenZip$LzBinTree$Companion_getInstance().kHash3Size_8be2vx$ - 1;
      hashValue = (temp ^ SevenZip$LzBinTree$Companion_getInstance().CrcTable_0[and(ensureNotNull(this._bufferBase)[cur + 3 | 0], 255)] << 5) & this._hashMask_8be2vx$;
    }
     else
      hashValue = and(ensureNotNull(this._bufferBase)[cur], 255) ^ and(ensureNotNull(this._bufferBase)[cur + 1 | 0], 255) << 8;
    var curMatch = this._hash_8be2vx$[this.kFixHashSize_8be2vx$ + hashValue | 0];
    if (this.HASH_ARRAY_8be2vx$) {
      var curMatch2 = this._hash_8be2vx$[hash2Value];
      var curMatch3 = this._hash_8be2vx$[SevenZip$LzBinTree$Companion_getInstance().kHash3Offset_8be2vx$ + hash3Value | 0];
      this._hash_8be2vx$[hash2Value] = this._pos;
      this._hash_8be2vx$[SevenZip$LzBinTree$Companion_getInstance().kHash3Offset_8be2vx$ + hash3Value | 0] = this._pos;
      if (curMatch2 > matchMinPos)
        if (ensureNotNull(this._bufferBase)[this._bufferOffset + curMatch2 | 0] === ensureNotNull(this._bufferBase)[cur]) {
          maxLen = 2;
          distances[tmp$ = offset, offset = tmp$ + 1 | 0, tmp$] = maxLen;
          distances[tmp$_0 = offset, offset = tmp$_0 + 1 | 0, tmp$_0] = this._pos - curMatch2 - 1 | 0;
        }
      if (curMatch3 > matchMinPos)
        if (ensureNotNull(this._bufferBase)[this._bufferOffset + curMatch3 | 0] === ensureNotNull(this._bufferBase)[cur]) {
          if (curMatch3 === curMatch2)
            offset = offset - 2 | 0;
          maxLen = 3;
          distances[tmp$_1 = offset, offset = tmp$_1 + 1 | 0, tmp$_1] = maxLen;
          distances[tmp$_2 = offset, offset = tmp$_2 + 1 | 0, tmp$_2] = this._pos - curMatch3 - 1 | 0;
          curMatch2 = curMatch3;
        }
      if (offset !== 0 && curMatch2 === curMatch) {
        offset = offset - 2 | 0;
        maxLen = SevenZip$LzBinTree$Companion_getInstance().kStartMaxLen_8be2vx$;
      }
    }
    this._hash_8be2vx$[this.kFixHashSize_8be2vx$ + hashValue | 0] = this._pos;
    var ptr0 = (this._cyclicBufferPos_8be2vx$ << 1) + 1 | 0;
    var ptr1 = this._cyclicBufferPos_8be2vx$ << 1;
    var len0;
    var len1;
    len1 = this.kNumHashDirectBytes_8be2vx$;
    len0 = len1;
    if (this.kNumHashDirectBytes_8be2vx$ !== 0) {
      if (curMatch > matchMinPos) {
        if (ensureNotNull(this._bufferBase)[this._bufferOffset + curMatch + this.kNumHashDirectBytes_8be2vx$ | 0] !== ensureNotNull(this._bufferBase)[cur + this.kNumHashDirectBytes_8be2vx$ | 0]) {
          maxLen = this.kNumHashDirectBytes_8be2vx$;
          distances[tmp$_3 = offset, offset = tmp$_3 + 1 | 0, tmp$_3] = maxLen;
          distances[tmp$_4 = offset, offset = tmp$_4 + 1 | 0, tmp$_4] = this._pos - curMatch - 1 | 0;
        }
      }
    }
    var count = this._cutValue_8be2vx$;
    while (true) {
      if (curMatch <= matchMinPos || (tmp$_5 = count, count = tmp$_5 - 1 | 0, tmp$_5) === 0) {
        this._son_8be2vx$[ptr1] = SevenZip$LzBinTree$Companion_getInstance().kEmptyHashValue_8be2vx$;
        this._son_8be2vx$[ptr0] = this._son_8be2vx$[ptr1];
        break;
      }
      var delta = this._pos - curMatch | 0;
      var cyclicPos = (delta <= this._cyclicBufferPos_8be2vx$ ? this._cyclicBufferPos_8be2vx$ - delta | 0 : this._cyclicBufferPos_8be2vx$ - delta + this._cyclicBufferSize_8be2vx$ | 0) << 1;
      var pby1 = this._bufferOffset + curMatch | 0;
      var a = len0;
      var b = len1;
      var len = Math_0.min(a, b);
      if (ensureNotNull(this._bufferBase)[pby1 + len | 0] === ensureNotNull(this._bufferBase)[cur + len | 0]) {
        while ((len = len + 1 | 0, len) !== lenLimit && ensureNotNull(this._bufferBase)[pby1 + len | 0] === ensureNotNull(this._bufferBase)[cur + len | 0]) {
        }
        if (maxLen < len) {
          maxLen = len;
          distances[tmp$_6 = offset, offset = tmp$_6 + 1 | 0, tmp$_6] = maxLen;
          distances[tmp$_7 = offset, offset = tmp$_7 + 1 | 0, tmp$_7] = delta - 1 | 0;
          if (len === lenLimit) {
            this._son_8be2vx$[ptr1] = this._son_8be2vx$[cyclicPos];
            this._son_8be2vx$[ptr0] = this._son_8be2vx$[cyclicPos + 1 | 0];
            break;
          }
        }
      }
      if (and(ensureNotNull(this._bufferBase)[pby1 + len | 0], 255) < and(ensureNotNull(this._bufferBase)[cur + len | 0], 255)) {
        this._son_8be2vx$[ptr1] = curMatch;
        ptr1 = cyclicPos + 1 | 0;
        curMatch = this._son_8be2vx$[ptr1];
        len1 = len;
      }
       else {
        this._son_8be2vx$[ptr0] = curMatch;
        ptr0 = cyclicPos;
        curMatch = this._son_8be2vx$[ptr0];
        len0 = len;
      }
    }
    this.MovePos();
    return offset;
  };
  SevenZip$LzBinTree.prototype.Skip_za3lpa$ = function (num) {
    var tmp$;
    var nnum = num;
    do {
      var lenLimit;
      if ((this._pos + this._matchMaxLen_8be2vx$ | 0) <= this._streamPos)
        lenLimit = this._matchMaxLen_8be2vx$;
      else {
        lenLimit = this._streamPos - this._pos | 0;
        if (lenLimit < this.kMinMatchCheck_8be2vx$) {
          this.MovePos();
          continue;
        }
      }
      var matchMinPos = this._pos > this._cyclicBufferSize_8be2vx$ ? this._pos - this._cyclicBufferSize_8be2vx$ | 0 : 0;
      var cur = this._bufferOffset + this._pos | 0;
      var hashValue;
      if (this.HASH_ARRAY_8be2vx$) {
        var temp = SevenZip$LzBinTree$Companion_getInstance().CrcTable_0[and(ensureNotNull(this._bufferBase)[cur], 255)] ^ and(ensureNotNull(this._bufferBase)[cur + 1 | 0], 255);
        var hash2Value = temp & SevenZip$LzBinTree$Companion_getInstance().kHash2Size_8be2vx$ - 1;
        this._hash_8be2vx$[hash2Value] = this._pos;
        temp = temp ^ and(ensureNotNull(this._bufferBase)[cur + 2 | 0], 255) << 8;
        var hash3Value = temp & SevenZip$LzBinTree$Companion_getInstance().kHash3Size_8be2vx$ - 1;
        this._hash_8be2vx$[SevenZip$LzBinTree$Companion_getInstance().kHash3Offset_8be2vx$ + hash3Value | 0] = this._pos;
        hashValue = (temp ^ SevenZip$LzBinTree$Companion_getInstance().CrcTable_0[and(ensureNotNull(this._bufferBase)[cur + 3 | 0], 255)] << 5) & this._hashMask_8be2vx$;
      }
       else
        hashValue = and(ensureNotNull(this._bufferBase)[cur], 255) ^ and(ensureNotNull(this._bufferBase)[cur + 1 | 0], 255) << 8;
      var curMatch = this._hash_8be2vx$[this.kFixHashSize_8be2vx$ + hashValue | 0];
      this._hash_8be2vx$[this.kFixHashSize_8be2vx$ + hashValue | 0] = this._pos;
      var ptr0 = (this._cyclicBufferPos_8be2vx$ << 1) + 1 | 0;
      var ptr1 = this._cyclicBufferPos_8be2vx$ << 1;
      var len0;
      var len1;
      len1 = this.kNumHashDirectBytes_8be2vx$;
      len0 = len1;
      var count = this._cutValue_8be2vx$;
      while (true) {
        if (curMatch <= matchMinPos || (tmp$ = count, count = tmp$ - 1 | 0, tmp$) === 0) {
          this._son_8be2vx$[ptr1] = SevenZip$LzBinTree$Companion_getInstance().kEmptyHashValue_8be2vx$;
          this._son_8be2vx$[ptr0] = this._son_8be2vx$[ptr1];
          break;
        }
        var delta = this._pos - curMatch | 0;
        var cyclicPos = (delta <= this._cyclicBufferPos_8be2vx$ ? this._cyclicBufferPos_8be2vx$ - delta | 0 : this._cyclicBufferPos_8be2vx$ - delta + this._cyclicBufferSize_8be2vx$ | 0) << 1;
        var pby1 = this._bufferOffset + curMatch | 0;
        var a = len0;
        var b = len1;
        var len = Math_0.min(a, b);
        if (ensureNotNull(this._bufferBase)[pby1 + len | 0] === ensureNotNull(this._bufferBase)[cur + len | 0]) {
          while ((len = len + 1 | 0, len) !== lenLimit)
            if (ensureNotNull(this._bufferBase)[pby1 + len | 0] !== ensureNotNull(this._bufferBase)[cur + len | 0])
              break;
          if (len === lenLimit) {
            this._son_8be2vx$[ptr1] = this._son_8be2vx$[cyclicPos];
            this._son_8be2vx$[ptr0] = this._son_8be2vx$[cyclicPos + 1 | 0];
            break;
          }
        }
        if (and(ensureNotNull(this._bufferBase)[pby1 + len | 0], 255) < and(ensureNotNull(this._bufferBase)[cur + len | 0], 255)) {
          this._son_8be2vx$[ptr1] = curMatch;
          ptr1 = cyclicPos + 1 | 0;
          curMatch = this._son_8be2vx$[ptr1];
          len1 = len;
        }
         else {
          this._son_8be2vx$[ptr0] = curMatch;
          ptr0 = cyclicPos;
          curMatch = this._son_8be2vx$[ptr0];
          len0 = len;
        }
      }
      this.MovePos();
    }
     while ((nnum = nnum - 1 | 0, nnum) !== 0);
  };
  SevenZip$LzBinTree.prototype.NormalizeLinks_dhoe8q$ = function (items, numItems, subValue) {
    for (var i = 0; i < numItems; i++) {
      var value = items[i];
      if (value <= subValue)
        value = SevenZip$LzBinTree$Companion_getInstance().kEmptyHashValue_8be2vx$;
      else
        value = value - subValue | 0;
      items[i] = value;
    }
  };
  SevenZip$LzBinTree.prototype.Normalize_8be2vx$ = function () {
    var subValue = this._pos - this._cyclicBufferSize_8be2vx$ | 0;
    this.NormalizeLinks_dhoe8q$(this._son_8be2vx$, this._cyclicBufferSize_8be2vx$ * 2 | 0, subValue);
    this.NormalizeLinks_dhoe8q$(this._hash_8be2vx$, this._hashSizeSum_8be2vx$, subValue);
    this.ReduceOffsets_za3lpa$(subValue);
  };
  SevenZip$LzBinTree.prototype.SetCutValue_za3lpa$ = function (cutValue) {
    this._cutValue_8be2vx$ = cutValue;
  };
  function SevenZip$LzBinTree$Companion() {
    SevenZip$LzBinTree$Companion_instance = this;
    this.kHash2Size_8be2vx$ = 1024;
    this.kHash3Size_8be2vx$ = 65536;
    this.kBT2HashSize_8be2vx$ = 65536;
    this.kStartMaxLen_8be2vx$ = 1;
    this.kHash3Offset_8be2vx$ = this.kHash2Size_8be2vx$;
    this.kEmptyHashValue_8be2vx$ = 0;
    this.kMaxValForNormalize_8be2vx$ = 1073741823;
    var $receiver = new Int32Array(256);
    for (var i = 0; i <= 255; i++) {
      var r = i;
      for (var j = 0; j <= 7; j++)
        r = (r & 1) !== 0 ? r >>> 1 ^ -306674912 : r >>> 1;
      $receiver[i] = r;
    }
    this.CrcTable_0 = $receiver;
  }
  SevenZip$LzBinTree$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SevenZip$LzBinTree$Companion_instance = null;
  function SevenZip$LzBinTree$Companion_getInstance() {
    if (SevenZip$LzBinTree$Companion_instance === null) {
      new SevenZip$LzBinTree$Companion();
    }
    return SevenZip$LzBinTree$Companion_instance;
  }
  SevenZip$LzBinTree.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LzBinTree',
    interfaces: [SevenZip$LzInWindow]
  };
  function SevenZip$LzInWindow() {
    this._bufferBase = null;
    this._stream_8be2vx$ = null;
    this._posLimit_8be2vx$ = 0;
    this._streamEndWasReached_8be2vx$ = false;
    this._pointerToLastSafePosition_8be2vx$ = 0;
    this._bufferOffset = 0;
    this._blockSize = 0;
    this._pos = 0;
    this._keepSizeBefore_8be2vx$ = 0;
    this._keepSizeAfter_8be2vx$ = 0;
    this._streamPos = 0;
  }
  SevenZip$LzInWindow.prototype.MoveBlock = function () {
    var offset = this._bufferOffset + this._pos - this._keepSizeBefore_8be2vx$ | 0;
    if (offset > 0) {
      offset = offset - 1 | 0;
    }
    var numBytes = this._bufferOffset + this._streamPos - offset | 0;
    for (var i = 0; i < numBytes; i++)
      ensureNotNull(this._bufferBase)[i] = ensureNotNull(this._bufferBase)[offset + i | 0];
    this._bufferOffset = this._bufferOffset - offset | 0;
  };
  SevenZip$LzInWindow.prototype.ReadBlock = function () {
    if (this._streamEndWasReached_8be2vx$)
      return;
    while (true) {
      var size = 0 - this._bufferOffset + this._blockSize - this._streamPos | 0;
      if (size === 0)
        return;
      var numReadBytes = ensureNotNull(this._stream_8be2vx$).read_mj6st8$(ensureNotNull(this._bufferBase), this._bufferOffset + this._streamPos | 0, size);
      if (numReadBytes === -1) {
        this._posLimit_8be2vx$ = this._streamPos;
        var pointerToPostion = this._bufferOffset + this._posLimit_8be2vx$ | 0;
        if (pointerToPostion > this._pointerToLastSafePosition_8be2vx$)
          this._posLimit_8be2vx$ = this._pointerToLastSafePosition_8be2vx$ - this._bufferOffset | 0;
        this._streamEndWasReached_8be2vx$ = true;
        return;
      }
      this._streamPos = this._streamPos + numReadBytes | 0;
      if (this._streamPos >= (this._pos + this._keepSizeAfter_8be2vx$ | 0))
        this._posLimit_8be2vx$ = this._streamPos - this._keepSizeAfter_8be2vx$ | 0;
    }
  };
  SevenZip$LzInWindow.prototype.Free_8be2vx$ = function () {
    this._bufferBase = null;
  };
  SevenZip$LzInWindow.prototype.Create_qt1dr2$ = function (keepSizeBefore, keepSizeAfter, keepSizeReserv) {
    this._keepSizeBefore_8be2vx$ = keepSizeBefore;
    this._keepSizeAfter_8be2vx$ = keepSizeAfter;
    var blockSize = keepSizeBefore + keepSizeAfter + keepSizeReserv | 0;
    if (this._bufferBase == null || this._blockSize !== blockSize) {
      this.Free_8be2vx$();
      this._blockSize = blockSize;
      this._bufferBase = new Int8Array(this._blockSize);
    }
    this._pointerToLastSafePosition_8be2vx$ = this._blockSize - keepSizeAfter | 0;
  };
  SevenZip$LzInWindow.prototype.SetStream_sayfrj$ = function (stream) {
    this._stream_8be2vx$ = stream;
  };
  SevenZip$LzInWindow.prototype.ReleaseStream = function () {
    this._stream_8be2vx$ = null;
  };
  SevenZip$LzInWindow.prototype.Init = function () {
    this._bufferOffset = 0;
    this._pos = 0;
    this._streamPos = 0;
    this._streamEndWasReached_8be2vx$ = false;
    this.ReadBlock();
  };
  SevenZip$LzInWindow.prototype.MovePos = function () {
    this._pos = this._pos + 1 | 0;
    if (this._pos > this._posLimit_8be2vx$) {
      var pointerToPostion = this._bufferOffset + this._pos | 0;
      if (pointerToPostion > this._pointerToLastSafePosition_8be2vx$)
        this.MoveBlock();
      this.ReadBlock();
    }
  };
  SevenZip$LzInWindow.prototype.GetIndexByte_za3lpa$ = function (index) {
    return ensureNotNull(this._bufferBase)[this._bufferOffset + this._pos + index | 0];
  };
  SevenZip$LzInWindow.prototype.GetMatchLen_qt1dr2$ = function (index, distance, limit) {
    var ddis = distance;
    var dlim = limit;
    if (this._streamEndWasReached_8be2vx$ && (this._pos + index + dlim | 0) > this._streamPos)
      dlim = this._streamPos - (this._pos + index) | 0;
    ddis = ddis + 1 | 0;
    var pby = this._bufferOffset + this._pos + index | 0;
    var i = 0;
    while (i < dlim && ensureNotNull(this._bufferBase)[pby + i | 0] === ensureNotNull(this._bufferBase)[pby + i - ddis | 0]) {
      i = i + 1 | 0;
    }
    return i;
  };
  SevenZip$LzInWindow.prototype.GetNumAvailableBytes = function () {
    return this._streamPos - this._pos | 0;
  };
  SevenZip$LzInWindow.prototype.ReduceOffsets_za3lpa$ = function (subValue) {
    this._bufferOffset = this._bufferOffset + subValue | 0;
    this._posLimit_8be2vx$ = this._posLimit_8be2vx$ - subValue | 0;
    this._pos = this._pos - subValue | 0;
    this._streamPos = this._streamPos - subValue | 0;
  };
  SevenZip$LzInWindow.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LzInWindow',
    interfaces: []
  };
  function SevenZip$LzOutWindow() {
    this._buffer_8be2vx$ = null;
    this._pos_8be2vx$ = 0;
    this._windowSize_8be2vx$ = 0;
    this._streamPos_8be2vx$ = 0;
    this._stream_8be2vx$ = null;
  }
  SevenZip$LzOutWindow.prototype.Create_za3lpa$ = function (windowSize) {
    if (this._buffer_8be2vx$ == null || this._windowSize_8be2vx$ !== windowSize)
      this._buffer_8be2vx$ = new Int8Array(windowSize);
    this._windowSize_8be2vx$ = windowSize;
    this._pos_8be2vx$ = 0;
    this._streamPos_8be2vx$ = 0;
  };
  SevenZip$LzOutWindow.prototype.SetStream_ceqwhy$ = function (stream) {
    this.ReleaseStream();
    this._stream_8be2vx$ = stream;
  };
  SevenZip$LzOutWindow.prototype.ReleaseStream = function () {
    this.Flush();
    this._stream_8be2vx$ = null;
  };
  SevenZip$LzOutWindow.prototype.Init_6taknv$ = function (solid) {
    if (!solid) {
      this._streamPos_8be2vx$ = 0;
      this._pos_8be2vx$ = 0;
    }
  };
  SevenZip$LzOutWindow.prototype.Flush = function () {
    var size = this._pos_8be2vx$ - this._streamPos_8be2vx$ | 0;
    if (size === 0)
      return;
    ensureNotNull(this._stream_8be2vx$).write_mj6st8$(ensureNotNull(this._buffer_8be2vx$), this._streamPos_8be2vx$, size);
    if (this._pos_8be2vx$ >= this._windowSize_8be2vx$)
      this._pos_8be2vx$ = 0;
    this._streamPos_8be2vx$ = this._pos_8be2vx$;
  };
  SevenZip$LzOutWindow.prototype.CopyBlock_vux9f0$ = function (distance, len) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    var llen = len;
    var pos = this._pos_8be2vx$ - distance - 1 | 0;
    if (pos < 0)
      pos = pos + this._windowSize_8be2vx$ | 0;
    while (llen !== 0) {
      if (pos >= this._windowSize_8be2vx$)
        pos = 0;
      tmp$_3 = (tmp$_2 = this._pos_8be2vx$, this._pos_8be2vx$ = tmp$_2 + 1 | 0, tmp$_2);
      tmp$_1 = ensureNotNull(this._buffer_8be2vx$);
      tmp$_0 = (tmp$ = pos, pos = tmp$ + 1 | 0, tmp$);
      ensureNotNull(this._buffer_8be2vx$)[tmp$_3] = tmp$_1[tmp$_0];
      if (this._pos_8be2vx$ >= this._windowSize_8be2vx$)
        this.Flush();
      llen = llen - 1 | 0;
    }
  };
  SevenZip$LzOutWindow.prototype.PutByte_s8j3t7$ = function (b) {
    var tmp$;
    ensureNotNull(this._buffer_8be2vx$)[tmp$ = this._pos_8be2vx$, this._pos_8be2vx$ = tmp$ + 1 | 0, tmp$] = b;
    if (this._pos_8be2vx$ >= this._windowSize_8be2vx$)
      this.Flush();
  };
  SevenZip$LzOutWindow.prototype.GetByte_za3lpa$ = function (distance) {
    var pos = this._pos_8be2vx$ - distance - 1 | 0;
    if (pos < 0)
      pos = pos + this._windowSize_8be2vx$ | 0;
    return ensureNotNull(this._buffer_8be2vx$)[pos];
  };
  SevenZip$LzOutWindow.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LzOutWindow',
    interfaces: []
  };
  SevenZip.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SevenZip',
    interfaces: []
  };
  var SevenZip_instance = null;
  function SevenZip_getInstance() {
    if (SevenZip_instance === null) {
      new SevenZip();
    }
    return SevenZip_instance;
  }
  function BitReader(s) {
    this.s = s;
    this.bitdata = 0;
    this.bitsavailable = 0;
    this.syncSize_jf8wx8$_0 = 0;
    this.sbuffers_t72oso$_0 = LinkedList_init();
    this.cbuffer_mkywfr$_0 = new Int8Array([]);
    this.cbufferPos_l3cull$_0 = 0;
    this.temp_1bb310$_0 = new Int8Array(4);
  }
  BitReader.prototype.discardBits = defineInlineFunction('korio-js.com.soywiz.korio.compression.util.BitReader.discardBits', function () {
    this.bitdata = 0;
    this.bitsavailable = 0;
    return this;
  });
  Object.defineProperty(BitReader.prototype, 'syncSize', {
    get: function () {
      return this.syncSize_jf8wx8$_0;
    },
    set: function (syncSize) {
      this.syncSize_jf8wx8$_0 = syncSize;
    }
  });
  Object.defineProperty(BitReader.prototype, 'requirePrepare', {
    get: function () {
      return this.syncSize < 32768;
    }
  });
  BitReader.prototype.prepareBigChunk = function (continuation) {
    return this.prepareBytesUpTo_za3lpa$(32768, continuation);
  };
  BitReader.prototype.prepareBytesUpTo_za3lpa$ = function (expectedBytes_0, continuation_0, suspended) {
    var instance = new Coroutine$prepareBytesUpTo_za3lpa$(this, expectedBytes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$prepareBytesUpTo_za3lpa$($this, expectedBytes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$expectedBytes = expectedBytes_0;
  }
  Coroutine$prepareBytesUpTo_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$prepareBytesUpTo_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$prepareBytesUpTo_za3lpa$.prototype.constructor = Coroutine$prepareBytesUpTo_za3lpa$;
  Coroutine$prepareBytesUpTo_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.syncSize < this.local$expectedBytes) {
              this.state_0 = 2;
              this.result_0 = readBytesUpTo(this.$this.s, this.local$expectedBytes, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            var sbuffer = this.result_0;
            this.$this.sbuffers_t72oso$_0.add_11rb$(sbuffer);
            this.$this.syncSize = this.$this.syncSize + sbuffer.length | 0;
            this.state_0 = 3;
            continue;
          case 3:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BitReader.prototype.readBits_za3lpa$ = function (bitcount) {
    while (this.bitsavailable < bitcount) {
      this.bitdata = this.bitdata | this._su8_100gz5$_0() << this.bitsavailable;
      this.bitsavailable = this.bitsavailable + 8 | 0;
    }
    var readed = this.bitdata & (1 << bitcount) - 1;
    this.bitdata = this.bitdata >>> bitcount;
    this.bitsavailable = this.bitsavailable - bitcount | 0;
    return readed;
  };
  BitReader.prototype.sreadBit = function () {
    return this.readBits_za3lpa$(1) !== 0;
  };
  BitReader.prototype._su8_100gz5$_0 = function () {
    var tmp$;
    while (this.cbufferPos_l3cull$_0 >= this.cbuffer_mkywfr$_0.length) {
      if (this.sbuffers_t72oso$_0.isEmpty()) {
        throw IllegalStateException_init('sbuffer is empty!'.toString());
      }
      var ba = this.sbuffers_t72oso$_0.removeFirst();
      this.cbuffer_mkywfr$_0 = ba;
      this.cbufferPos_l3cull$_0 = 0;
    }
    this.syncSize = this.syncSize - 1 | 0;
    return readU8(this.cbuffer_mkywfr$_0, (tmp$ = this.cbufferPos_l3cull$_0, this.cbufferPos_l3cull$_0 = tmp$ + 1 | 0, tmp$));
  };
  BitReader.prototype.sbytes_noalign_3fbn1q$ = function (count, out) {
    for (var n = 0; n < count; n++)
      out[n] = toByte(this._su8_100gz5$_0());
    return out;
  };
  BitReader.prototype.sbytes_za3lpa$ = function (count) {
    return this.sbytes_3fbn1q$(count, new Int8Array(count));
  };
  BitReader.prototype.sbytes_3fbn1q$ = function (count, out) {
    this.bitdata = 0;
    this.bitsavailable = 0;
    return this.sbytes_noalign_3fbn1q$(count, out);
  };
  BitReader.prototype.su8 = function () {
    this.bitdata = 0;
    this.bitsavailable = 0;
    return this._su8_100gz5$_0();
  };
  BitReader.prototype.su16_le = function () {
    return readU16_le(this.sbytes_3fbn1q$(2, this.temp_1bb310$_0), 0);
  };
  BitReader.prototype.su32_le = function () {
    return readS32_le(this.sbytes_3fbn1q$(4, this.temp_1bb310$_0), 0);
  };
  BitReader.prototype.su32_be = function () {
    return readS32_be(this.sbytes_3fbn1q$(4, this.temp_1bb310$_0), 0);
  };
  BitReader.prototype.abytes_3fbn1q$ = function (count_0, out_0, continuation_0, suspended) {
    var instance = new Coroutine$abytes_3fbn1q$(this, count_0, out_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$abytes_3fbn1q$($this, count_0, out_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$count = count_0;
    this.local$out = out_0;
  }
  Coroutine$abytes_3fbn1q$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$abytes_3fbn1q$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$abytes_3fbn1q$.prototype.constructor = Coroutine$abytes_3fbn1q$;
  Coroutine$abytes_3fbn1q$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$out === void 0)
              this.local$out = new Int8Array(this.local$count);
            this.state_0 = 2;
            this.result_0 = this.$this.prepareBytesUpTo_za3lpa$(this.local$count, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.sbytes_3fbn1q$(this.local$count, this.local$out);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function BitReader$strz$lambda(this$BitReader_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$BitReader$strz$lambda(this$BitReader_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$BitReader$strz$lambda(this$BitReader_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$BitReader = this$BitReader_0;
    this.local$c = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$BitReader$strz$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$BitReader$strz$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$BitReader$strz$lambda.prototype.constructor = Coroutine$BitReader$strz$lambda;
  Coroutine$BitReader$strz$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $this = this.local$this$BitReader;
            $this.bitdata = 0;
            $this.bitsavailable = 0;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$this$BitReader.requirePrepare) {
              this.state_0 = 3;
              this.result_0 = this.local$this$BitReader.prepareBigChunk(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.local$c = this.local$this$BitReader._su8_100gz5$_0();
            if (this.local$c === 0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            write8_1(this.local$$receiver, this.local$c);
            this.state_0 = 2;
            continue;
          case 6:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BitReader.prototype.strz = function (continuation_0, suspended) {
    var instance = new Coroutine$strz(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$strz($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = void 0;
  }
  Coroutine$strz.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$strz.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$strz.prototype.constructor = Coroutine$strz;
  Coroutine$strz.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(this.local$buffer);
            this.state_0 = 2;
            this.result_0 = BitReader$strz$lambda(this.$this)(s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0 = this.local$buffer.toByteArray();
            return toString_0(this.result_0, ASCII_getInstance());
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BitReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BitReader',
    interfaces: []
  };
  function HuffmanTree(root, symbolLimit) {
    HuffmanTree$Companion_getInstance();
    this.root = root;
    this.symbolLimit = symbolLimit;
  }
  function HuffmanTree$Node(value, len, left, right) {
    HuffmanTree$Node$Companion_getInstance();
    this.value = value;
    this.len = len;
    this.left = left;
    this.right = right;
  }
  Object.defineProperty(HuffmanTree$Node.prototype, 'isLeaf', {
    get: function () {
      return this.len !== 0;
    }
  });
  function HuffmanTree$Node$Companion() {
    HuffmanTree$Node$Companion_instance = this;
  }
  HuffmanTree$Node$Companion.prototype.leaf_vux9f0$ = function (value, len) {
    return new HuffmanTree$Node(value, len, null, null);
  };
  HuffmanTree$Node$Companion.prototype.int_9isjnw$ = function (left, right) {
    return new HuffmanTree$Node(-1, 0, left, right);
  };
  HuffmanTree$Node$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HuffmanTree$Node$Companion_instance = null;
  function HuffmanTree$Node$Companion_getInstance() {
    if (HuffmanTree$Node$Companion_instance === null) {
      new HuffmanTree$Node$Companion();
    }
    return HuffmanTree$Node$Companion_instance;
  }
  HuffmanTree$Node.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Node',
    interfaces: []
  };
  function HuffmanTree$Result(value, bitcode, bitcount) {
    this.value = value;
    this.bitcode = bitcode;
    this.bitcount = bitcount;
  }
  HuffmanTree$Result.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Result',
    interfaces: []
  };
  HuffmanTree$Result.prototype.component1 = function () {
    return this.value;
  };
  HuffmanTree$Result.prototype.component2 = function () {
    return this.bitcode;
  };
  HuffmanTree$Result.prototype.component3 = function () {
    return this.bitcount;
  };
  HuffmanTree$Result.prototype.copy_qt1dr2$ = function (value, bitcode, bitcount) {
    return new HuffmanTree$Result(value === void 0 ? this.value : value, bitcode === void 0 ? this.bitcode : bitcode, bitcount === void 0 ? this.bitcount : bitcount);
  };
  HuffmanTree$Result.prototype.toString = function () {
    return 'Result(value=' + Kotlin.toString(this.value) + (', bitcode=' + Kotlin.toString(this.bitcode)) + (', bitcount=' + Kotlin.toString(this.bitcount)) + ')';
  };
  HuffmanTree$Result.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.value) | 0;
    result = result * 31 + Kotlin.hashCode(this.bitcode) | 0;
    result = result * 31 + Kotlin.hashCode(this.bitcount) | 0;
    return result;
  };
  HuffmanTree$Result.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.value, other.value) && Kotlin.equals(this.bitcode, other.bitcode) && Kotlin.equals(this.bitcount, other.bitcount)))));
  };
  HuffmanTree.prototype.sreadOne_zfzl8c$ = function (reader, out) {
    if (out === void 0)
      out = new HuffmanTree$Result(0, 0, 0);
    var node = {v: this.root};
    var bitcount = {v: 0};
    var bitcode = {v: 0};
    do {
      var bbit = reader.readBits_za3lpa$(1);
      var bit = bbit !== 0;
      bitcode.v = bitcode.v | bbit << bitcount.v;
      bitcount.v = bitcount.v + 1 | 0;
      node.v = bit ? ensureNotNull(node.v).right : ensureNotNull(node.v).left;
    }
     while (node.v != null && node.v.len === 0);
    if (node.v == null) {
      throw IllegalStateException_init('NODE = NULL'.toString());
    }
    out.value = node.v.value;
    out.bitcode = bitcode.v;
    out.bitcount = bitcount.v;
    return out;
  };
  HuffmanTree.prototype.sreadOneValue_zfzl8c$ = defineInlineFunction('korio-js.com.soywiz.korio.compression.util.HuffmanTree.sreadOneValue_zfzl8c$', function (reader, tempResult) {
    return this.sreadOne_zfzl8c$(reader, tempResult).value;
  });
  function HuffmanTree$Companion() {
    HuffmanTree$Companion_instance = this;
  }
  HuffmanTree$Companion.prototype.fromLengths_q5rwfd$ = function (codeLengths) {
    var tmp$, tmp$_0;
    var nodes = ArrayList_init();
    for (var i = (tmp$ = max(codeLengths)) != null ? tmp$ : 0; i >= 1; i--) {
      var newNodes = ArrayList_init();
      for (var j = 0; j < codeLengths.length; j++)
        if (codeLengths[j] === i)
          newNodes.add_11rb$(HuffmanTree$Node$Companion_getInstance().leaf_vux9f0$(j, i));
      tmp$_0 = nodes.size;
      for (var j_0 = 0; j_0 < tmp$_0; j_0 += 2)
        newNodes.add_11rb$(HuffmanTree$Node$Companion_getInstance().int_9isjnw$(nodes.get_za3lpa$(j_0), nodes.get_za3lpa$(j_0 + 1 | 0)));
      nodes = newNodes;
      if (nodes.size % 2 !== 0) {
        throw IllegalStateException_init(('This canonical code does not represent a Huffman code tree: ' + nodes.size).toString());
      }
    }
    if (nodes.size !== 2) {
      throw IllegalStateException_init('This canonical code does not represent a Huffman code tree'.toString());
    }
    return new HuffmanTree(HuffmanTree$Node$Companion_getInstance().int_9isjnw$(nodes.get_za3lpa$(0), nodes.get_za3lpa$(1)), codeLengths.length);
  };
  HuffmanTree$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HuffmanTree$Companion_instance = null;
  function HuffmanTree$Companion_getInstance() {
    if (HuffmanTree$Companion_instance === null) {
      new HuffmanTree$Companion();
    }
    return HuffmanTree$Companion_instance;
  }
  HuffmanTree.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HuffmanTree',
    interfaces: []
  };
  function SlidingWindow(nbits) {
    this.nbits = nbits;
    this.data = new Int8Array(1 << this.nbits);
    this.mask = this.data.length - 1 | 0;
    this.pos = 0;
  }
  SlidingWindow.prototype.get_za3lpa$ = function (offset) {
    return this.data[this.pos - offset & this.mask] & 255;
  };
  SlidingWindow.prototype.getPut_za3lpa$ = function (offset) {
    return this.put_za3lpa$(this.get_za3lpa$(offset));
  };
  SlidingWindow.prototype.put_za3lpa$ = function (value) {
    this.data[this.pos] = toByte(value);
    this.pos = this.pos + 1 & this.mask;
    return value;
  };
  SlidingWindow.prototype.putBytes_mj6st8$ = function (bytes, offset, len) {
    for (var n = 0; n < len; n++)
      this.put_za3lpa$(toUnsigned(bytes[offset + n | 0]));
  };
  SlidingWindow.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SlidingWindow',
    interfaces: []
  };
  function CompressionAlgoAsyncStream(i, method, uncompressedSize, compressing) {
    if (uncompressedSize === void 0)
      uncompressedSize = null;
    if (compressing === void 0)
      compressing = false;
    this.i = i;
    this.method = method;
    this.uncompressedSize = uncompressedSize;
    this.compressing = compressing;
    this.los = new LimitedOutputStream();
    this.pos_0 = L0;
  }
  function CompressionAlgoAsyncStream$init$lambda(this$CompressionAlgoAsyncStream_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$CompressionAlgoAsyncStream$init$lambda(this$CompressionAlgoAsyncStream_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$CompressionAlgoAsyncStream$init$lambda(this$CompressionAlgoAsyncStream_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$CompressionAlgoAsyncStream = this$CompressionAlgoAsyncStream_0;
  }
  Coroutine$CompressionAlgoAsyncStream$init$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$CompressionAlgoAsyncStream$init$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$CompressionAlgoAsyncStream$init$lambda.prototype.constructor = Coroutine$CompressionAlgoAsyncStream$init$lambda;
  Coroutine$CompressionAlgoAsyncStream$init$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$this$CompressionAlgoAsyncStream.compressing) {
              this.state_0 = 3;
              this.result_0 = this.local$this$CompressionAlgoAsyncStream.method.compress_k0b7q8$(this.local$this$CompressionAlgoAsyncStream.i, this.local$this$CompressionAlgoAsyncStream.los, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 2;
              this.result_0 = this.local$this$CompressionAlgoAsyncStream.method.uncompress_5oegxh$(this.local$this$CompressionAlgoAsyncStream.i, this.local$this$CompressionAlgoAsyncStream.los, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
          case 3:
            return Unit;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  CompressionAlgoAsyncStream.prototype.init_8be2vx$ = function (continuation) {
    launchImmediately_0(continuation.context, void 0, CompressionAlgoAsyncStream$init$lambda(this));
  };
  CompressionAlgoAsyncStream.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_2(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_2($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_2.prototype.constructor = Coroutine$read_mj6st8$_2;
  Coroutine$read_mj6st8$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.los.provideOutput_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var ret = this.result_0;
            if (ret > 0)
              this.$this.pos_0 = this.$this.pos_0.add(Kotlin.Long.fromInt(ret));
            return ret;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  CompressionAlgoAsyncStream.prototype.getPosition = function (continuation) {
    return this.pos_0;
  };
  CompressionAlgoAsyncStream.prototype.getLength = function (continuation) {
    var tmp$;
    tmp$ = this.uncompressedSize;
    if (tmp$ == null) {
      throw UnsupportedOperationException_init();
    }
    return tmp$;
  };
  CompressionAlgoAsyncStream.prototype.close = function (continuation) {
  };
  CompressionAlgoAsyncStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CompressionAlgoAsyncStream',
    interfaces: [AsyncInputWithLengthStream]
  };
  function UncompressAsyncStream(mode_0, i_0, uncompressedSize_0, continuation_0, suspended) {
    var instance = new Coroutine$UncompressAsyncStream(mode_0, i_0, uncompressedSize_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$UncompressAsyncStream(mode_0, i_0, uncompressedSize_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = void 0;
    this.local$mode = mode_0;
    this.local$i = i_0;
    this.local$uncompressedSize = uncompressedSize_0;
  }
  Coroutine$UncompressAsyncStream.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$UncompressAsyncStream.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$UncompressAsyncStream.prototype.constructor = Coroutine$UncompressAsyncStream;
  Coroutine$UncompressAsyncStream.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$uncompressedSize === void 0)
              this.local$uncompressedSize = null;
            this.local$$receiver = new CompressionAlgoAsyncStream(this.local$i, this.local$mode, this.local$uncompressedSize, false);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.init_8be2vx$(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function CompressAsyncStream(mode_0, i_0, continuation_0, suspended) {
    var instance = new Coroutine$CompressAsyncStream(mode_0, i_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$CompressAsyncStream(mode_0, i_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = void 0;
    this.local$mode = mode_0;
    this.local$i = i_0;
  }
  Coroutine$CompressAsyncStream.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$CompressAsyncStream.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$CompressAsyncStream.prototype.constructor = Coroutine$CompressAsyncStream;
  Coroutine$CompressAsyncStream.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = new CompressionAlgoAsyncStream(this.local$i, this.local$mode, void 0, true);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.init_8be2vx$(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function LimitedOutputStream() {
    this.queue = new ProduceConsumer();
  }
  function LimitedOutputStream$Task(slice) {
    this.slice = slice;
    this.count = CompletableDeferred(Job());
  }
  LimitedOutputStream$Task.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Task',
    interfaces: []
  };
  LimitedOutputStream.prototype.write_mj6st8$$default = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_mj6st8$$default_1(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_mj6st8$$default_1($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$o = void 0;
    this.local$pending = void 0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_mj6st8$$default_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_mj6st8$$default_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_mj6st8$$default_1.prototype.constructor = Coroutine$write_mj6st8$$default_1;
  Coroutine$write_mj6st8$$default_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (this.local$len === 0) {
              return;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$o = this.local$offset;
            this.local$pending = this.local$len;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$pending <= 0) {
              this.state_0 = 5;
              continue;
            }

            this.state_0 = 4;
            this.result_0 = this.$this.queue.consume_4l50dc$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            var task = (tmp$ = this.result_0) != null ? tmp$ : invalidOp("Couldn't read from stream");
            var a = this.local$pending;
            var b = task.slice.length;
            var toRead = Math_0.min(a, b);
            arraycopy(this.local$buffer, this.local$o, task.slice.data, task.slice.position, toRead);
            task.count.complete_11rb$(toRead);
            this.local$pending = this.local$pending - toRead | 0;
            this.local$o = this.local$o + toRead | 0;
            this.state_0 = 3;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LimitedOutputStream.prototype.close = function (continuation) {
    this.queue.close();
  };
  LimitedOutputStream.prototype.provideOutput_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$provideOutput_mj6st8$(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$provideOutput_mj6st8$($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$provideOutput_mj6st8$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$provideOutput_mj6st8$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$provideOutput_mj6st8$.prototype.constructor = Coroutine$provideOutput_mj6st8$;
  Coroutine$provideOutput_mj6st8$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var task = new LimitedOutputStream$Task(new ByteArraySlice(this.local$buffer, this.local$offset, this.local$len));
            this.$this.queue.produce_11rb$(task);
            this.state_0 = 2;
            this.result_0 = task.count.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            return result;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LimitedOutputStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LimitedOutputStream',
    interfaces: [AsyncOutputStream]
  };
  function AsyncHash() {
    AsyncHash$Companion_getInstance();
  }
  function AsyncHash$Companion() {
    AsyncHash$Companion_instance = this;
    this.MD5_4c1cn5$_0 = lazy(AsyncHash$Companion$MD5$lambda);
    this.SHA1_7sfs9e$_0 = lazy(AsyncHash$Companion$SHA1$lambda);
    this.SHA256_rwk7u8$_0 = lazy(AsyncHash$Companion$SHA256$lambda);
    this.CRC32_kz2h3e$_0 = lazy(AsyncHash$Companion$CRC32$lambda);
  }
  Object.defineProperty(AsyncHash$Companion.prototype, 'MD5', {
    get: function () {
      return this.MD5_4c1cn5$_0.value;
    }
  });
  Object.defineProperty(AsyncHash$Companion.prototype, 'SHA1', {
    get: function () {
      return this.SHA1_7sfs9e$_0.value;
    }
  });
  Object.defineProperty(AsyncHash$Companion.prototype, 'SHA256', {
    get: function () {
      return this.SHA256_rwk7u8$_0.value;
    }
  });
  Object.defineProperty(AsyncHash$Companion.prototype, 'CRC32', {
    get: function () {
      return this.CRC32_kz2h3e$_0.value;
    }
  });
  function AsyncHash$Companion$MD5$lambda() {
    return new AsyncHash$MessageDigestHash('MD5');
  }
  function AsyncHash$Companion$SHA1$lambda() {
    return new AsyncHash$MessageDigestHash('SHA1');
  }
  function AsyncHash$Companion$SHA256$lambda() {
    return new AsyncHash$MessageDigestHash('SHA-256');
  }
  function AsyncHash$Companion$CRC32$lambda() {
    return new AsyncHash$CRC32Hash();
  }
  AsyncHash$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AsyncHash$Companion_instance = null;
  function AsyncHash$Companion_getInstance() {
    if (AsyncHash$Companion_instance === null) {
      new AsyncHash$Companion();
    }
    return AsyncHash$Companion_instance;
  }
  AsyncHash.prototype.hashSync_fqrh44$ = function (content, continuation) {
    return this.hashSync_6wkrl8$(openAsync(content), continuation);
  };
  AsyncHash.prototype.hashSync_6zdodq$ = function (content, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.hashSync_fqrh44$(toByteArray(content, charset), continuation);
  };
  function AsyncHash$hashSync$lambda(this$AsyncHash_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$AsyncHash$hashSync$lambda(this$AsyncHash_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncHash$hashSync$lambda(this$AsyncHash_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$AsyncHash = this$AsyncHash_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$AsyncHash$hashSync$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncHash$hashSync$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncHash$hashSync$lambda.prototype.constructor = Coroutine$AsyncHash$hashSync$lambda;
  Coroutine$AsyncHash$hashSync$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncHash.hashSync_6wkrl8$(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash.prototype.hashSync_87mmnk$ = function (openable_0, continuation_0, suspended) {
    var instance = new Coroutine$hashSync_87mmnk$(this, openable_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hashSync_87mmnk$($this, openable_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$openable = openable_0;
  }
  Coroutine$hashSync_87mmnk$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hashSync_87mmnk$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hashSync_87mmnk$.prototype.constructor = Coroutine$hashSync_87mmnk$;
  Coroutine$hashSync_87mmnk$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.local$openable.openRead(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(AsyncHash$hashSync$lambda(this.$this), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AsyncHash$hash$lambda(closure$content_0, this$AsyncHash_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncHash$hash$lambda(closure$content_0, this$AsyncHash_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncHash$hash$lambda(closure$content_0, this$AsyncHash_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$content = closure$content_0;
    this.local$this$AsyncHash = this$AsyncHash_0;
  }
  Coroutine$AsyncHash$hash$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncHash$hash$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncHash$hash$lambda.prototype.constructor = Coroutine$AsyncHash$hash$lambda;
  Coroutine$AsyncHash$hash$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncHash.hashSync_6wkrl8$(this.local$closure$content, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash.prototype.hash_6wkrl8$ = function (content, continuation) {
    return executeInWorker(AsyncHash$hash$lambda(content, this), continuation);
  };
  function AsyncHash$hash$lambda_0(closure$content_0, this$AsyncHash_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncHash$hash$lambda_0(closure$content_0, this$AsyncHash_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncHash$hash$lambda_0(closure$content_0, this$AsyncHash_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$content = closure$content_0;
    this.local$this$AsyncHash = this$AsyncHash_0;
  }
  Coroutine$AsyncHash$hash$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncHash$hash$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncHash$hash$lambda_0.prototype.constructor = Coroutine$AsyncHash$hash$lambda_0;
  Coroutine$AsyncHash$hash$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncHash.hashSync_fqrh44$(this.local$closure$content, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash.prototype.hash_fqrh44$ = function (content, continuation) {
    return executeInWorker(AsyncHash$hash$lambda_0(content, this), continuation);
  };
  function AsyncHash$hash$lambda_1(closure$content_0, this$AsyncHash_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncHash$hash$lambda_1(closure$content_0, this$AsyncHash_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncHash$hash$lambda_1(closure$content_0, this$AsyncHash_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$content = closure$content_0;
    this.local$this$AsyncHash = this$AsyncHash_0;
  }
  Coroutine$AsyncHash$hash$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncHash$hash$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncHash$hash$lambda_1.prototype.constructor = Coroutine$AsyncHash$hash$lambda_1;
  Coroutine$AsyncHash$hash$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncHash.hashSync_6zdodq$(this.local$closure$content, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash.prototype.hash_6zdodq$ = function (content, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return executeInWorker(AsyncHash$hash$lambda_1(content, this), continuation);
  };
  function AsyncHash$hash$lambda_2(closure$openable_0, this$AsyncHash_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncHash$hash$lambda_2(closure$openable_0, this$AsyncHash_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncHash$hash$lambda_2(closure$openable_0, this$AsyncHash_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$openable = closure$openable_0;
    this.local$this$AsyncHash = this$AsyncHash_0;
  }
  Coroutine$AsyncHash$hash$lambda_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncHash$hash$lambda_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncHash$hash$lambda_2.prototype.constructor = Coroutine$AsyncHash$hash$lambda_2;
  Coroutine$AsyncHash$hash$lambda_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncHash.hashSync_87mmnk$(this.local$closure$openable, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash.prototype.hash_87mmnk$ = function (openable, continuation) {
    return executeInWorker(AsyncHash$hash$lambda_2(openable, this), continuation);
  };
  function AsyncHash$MessageDigestHash(algo) {
    AsyncHash.call(this);
    this.algo = algo;
  }
  AsyncHash$MessageDigestHash.prototype.hashSync_6wkrl8$ = function (content_0, continuation_0, suspended) {
    var instance = new Coroutine$hashSync_6wkrl8$(this, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hashSync_6wkrl8$($this, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$temp = void 0;
    this.local$md = void 0;
    this.local$read = void 0;
    this.local$content = content_0;
  }
  Coroutine$hashSync_6wkrl8$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hashSync_6wkrl8$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hashSync_6wkrl8$.prototype.constructor = Coroutine$hashSync_6wkrl8$;
  Coroutine$hashSync_6wkrl8$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$temp = new Int8Array(4096);
            this.local$md = new KorioNative$SimplerMessageDigest(this.$this.algo);
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$content.read_mj6st8$(this.local$temp, 0, this.local$temp.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$read = this.result_0;
            if (this.local$read <= 0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$md.update_mj6st8$(this.local$temp, 0, this.local$read, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 2;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = this.local$md.digest(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash$MessageDigestHash.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MessageDigestHash',
    interfaces: [AsyncHash]
  };
  function AsyncHash$CRC32Hash() {
    AsyncHash.call(this);
  }
  AsyncHash$CRC32Hash.prototype.hashSync_6wkrl8$ = function (content_0, continuation_0, suspended) {
    var instance = new Coroutine$hashSync_6wkrl8$_0(this, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hashSync_6wkrl8$_0($this, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$temp = void 0;
    this.local$crc32 = void 0;
    this.local$read = void 0;
    this.local$content = content_0;
  }
  Coroutine$hashSync_6wkrl8$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hashSync_6wkrl8$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hashSync_6wkrl8$_0.prototype.constructor = Coroutine$hashSync_6wkrl8$_0;
  Coroutine$hashSync_6wkrl8$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$temp = new Int8Array(4096);
            this.local$crc32 = CRC32_getInstance().INITIAL;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$content.read_mj6st8$(this.local$temp, 0, this.local$temp.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$read = this.result_0;
            if (this.local$read <= 0) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.local$crc32 = CRC32_getInstance().update_3fge6q$(this.local$crc32, this.local$temp, 0, this.local$read);
            this.state_0 = 2;
            continue;
          case 5:
            var out = new Int8Array(4);
            write32_le(out, 0, this.local$crc32);
            return out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncHash$CRC32Hash.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CRC32Hash',
    interfaces: [AsyncHash]
  };
  AsyncHash.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncHash',
    interfaces: []
  };
  function hashSync($receiver, hash, continuation) {
    return hash.hashSync_fqrh44$($receiver, continuation);
  }
  function hashSync_0($receiver, hash, continuation) {
    return hash.hashSync_6wkrl8$($receiver, continuation);
  }
  function hashSync_1($receiver, hash, continuation) {
    return hash.hashSync_87mmnk$($receiver, continuation);
  }
  function hash($receiver, hash, continuation) {
    return hash.hash_fqrh44$($receiver, continuation);
  }
  function hash_0($receiver, hash, continuation) {
    return hash.hash_6wkrl8$($receiver, continuation);
  }
  function hash_1($receiver, hash, continuation) {
    return hash.hash_87mmnk$($receiver, continuation);
  }
  function Base64() {
    Base64_instance = this;
    this.TABLE_0 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    var $receiver = new Int32Array(256);
    var tmp$;
    for (var n = 0; n <= 255; n++)
      $receiver[n] = -1;
    tmp$ = this.TABLE_0.length;
    for (var n_0 = 0; n_0 < tmp$; n_0++) {
      $receiver[this.TABLE_0.charCodeAt(n_0) | 0] = n_0;
    }
    this.DECODE_0 = $receiver;
  }
  Base64.prototype.decode_61zpoe$ = function (str) {
    var src = toByteArray(str, UTF8_getInstance());
    var dst = new Int8Array(src.length);
    return copyOf(dst, this.decode_r9qwmk$(src, dst));
  };
  Base64.prototype.decode_r9qwmk$ = function (src, dst) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9;
    var m = 0;
    var srcu = new UByteArray(src);
    var n = 0;
    while (n < src.length) {
      var tmp$_10 = this.DECODE_0;
      var n_0 = n;
      var d = tmp$_10[srcu.data[n_0] & 255];
      if (d < 0) {
        n = n + 1 | 0;
        continue;
      }
      tmp$_0 = this.DECODE_0;
      var n_1 = (tmp$ = n, n = tmp$ + 1 | 0, tmp$);
      var b0 = tmp$_0[srcu.data[n_1] & 255];
      tmp$_2 = this.DECODE_0;
      var n_2 = (tmp$_1 = n, n = tmp$_1 + 1 | 0, tmp$_1);
      var b1 = tmp$_2[srcu.data[n_2] & 255];
      tmp$_4 = this.DECODE_0;
      var n_3 = (tmp$_3 = n, n = tmp$_3 + 1 | 0, tmp$_3);
      var b2 = tmp$_4[srcu.data[n_3] & 255];
      tmp$_6 = this.DECODE_0;
      var n_4 = (tmp$_5 = n, n = tmp$_5 + 1 | 0, tmp$_5);
      var b3 = tmp$_6[srcu.data[n_4] & 255];
      dst[tmp$_7 = m, m = tmp$_7 + 1 | 0, tmp$_7] = toByte(b0 << 2 | b1 >> 4);
      if (b2 < 64) {
        dst[tmp$_8 = m, m = tmp$_8 + 1 | 0, tmp$_8] = toByte(b1 << 4 | b2 >> 2);
        if (b3 < 64) {
          dst[tmp$_9 = m, m = tmp$_9 + 1 | 0, tmp$_9] = toByte(b2 << 6 | b3);
        }
      }
    }
    return m;
  };
  Base64.prototype.encode_6zdodq$ = function (src, charset) {
    return this.encode_fqrh44$(toByteArray(src, charset));
  };
  Base64.prototype.encode_fqrh44$ = function (src) {
    var tmp$, tmp$_0, tmp$_1;
    var out = StringBuilder_init_0(((src.length * 4 | 0) / 3 | 0) + 4 | 0);
    var ipos = 0;
    var extraBytes = src.length % 3;
    while (ipos < (src.length - 2 | 0)) {
      var num = readU24_be(src, ipos);
      ipos = ipos + 3 | 0;
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num >>> 18 & 63));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num >>> 12 & 63));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num >>> 6 & 63));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num >>> 0 & 63));
    }
    if (extraBytes === 1) {
      var num_0 = readU8(src, (tmp$ = ipos, ipos = tmp$ + 1 | 0, tmp$));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num_0 >>> 2));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(num_0 << 4 & 63));
      out.append_s8itvh$(61);
      out.append_s8itvh$(61);
    }
     else if (extraBytes === 2) {
      var tmp = readU8(src, (tmp$_0 = ipos, ipos = tmp$_0 + 1 | 0, tmp$_0)) << 8 | readU8(src, (tmp$_1 = ipos, ipos = tmp$_1 + 1 | 0, tmp$_1));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(tmp >>> 10));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(tmp >>> 4 & 63));
      out.append_s8itvh$(this.TABLE_0.charCodeAt(tmp << 2 & 63));
      out.append_s8itvh$(61);
    }
    return out.toString();
  };
  Base64.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Base64',
    interfaces: []
  };
  var Base64_instance = null;
  function Base64_getInstance() {
    if (Base64_instance === null) {
      new Base64();
    }
    return Base64_instance;
  }
  function fromBase64($receiver) {
    return Base64_getInstance().decode_61zpoe$($receiver);
  }
  function toBase64($receiver) {
    return Base64_getInstance().encode_fqrh44$($receiver);
  }
  function Hex() {
    Hex_instance = this;
    this.DIGITS_0 = '0123456789ABCDEF';
    this.DIGITS_UPPER_0 = this.DIGITS_0.toUpperCase();
    this.DIGITS_LOWER_0 = this.DIGITS_0.toLowerCase();
  }
  Hex.prototype.decodeChar_s8itvh$ = function (c) {
    if ((new CharRange(48, 57)).contains_mef7kx$(c))
      return c - 48;
    else if ((new CharRange(97, 102)).contains_mef7kx$(c))
      return c - 97 + 10 | 0;
    else if ((new CharRange(65, 70)).contains_mef7kx$(c))
      return c - 65 + 10 | 0;
    else
      return -1;
  };
  Hex.prototype.encodeCharLower_za3lpa$ = function (v) {
    return toBoxedChar(this.DIGITS_LOWER_0.charCodeAt(v));
  };
  Hex.prototype.encodeCharUpper_za3lpa$ = function (v) {
    return toBoxedChar(this.DIGITS_UPPER_0.charCodeAt(v));
  };
  Hex.prototype.isHexDigit_s8itvh$ = function (c) {
    return this.decodeChar_s8itvh$(c) >= 0;
  };
  Hex.prototype.decode_61zpoe$ = function (str) {
    var tmp$, tmp$_0;
    var out = new Int8Array((str.length + 1 | 0) / 2 | 0);
    var opos = 0;
    var nibbles = 0;
    var value = 0;
    tmp$ = iterator(str);
    while (tmp$.hasNext()) {
      var c = unboxChar(tmp$.next());
      var vv = this.decodeChar_s8itvh$(c);
      if (vv >= 0) {
        value = value << 4 | vv;
        nibbles = nibbles + 1 | 0;
      }
      if (nibbles === 2) {
        out[tmp$_0 = opos, opos = tmp$_0 + 1 | 0, tmp$_0] = toByte(value);
        nibbles = 0;
        value = 0;
      }
    }
    return opos !== out.length ? copyOf(out, opos) : out;
  };
  Hex.prototype.encodeLower_fqrh44$ = function (src) {
    return this.encodeBase_0(src, this.DIGITS_LOWER_0);
  };
  Hex.prototype.encodeUpper_fqrh44$ = function (src) {
    return this.encodeBase_0(src, this.DIGITS_UPPER_0);
  };
  Hex.prototype.encodeBase_0 = function (data, digits) {
    if (digits === void 0)
      digits = this.DIGITS_0;
    var out = StringBuilder_init_0(data.length * 2 | 0);
    for (var n = 0; n !== data.length; ++n) {
      var v = data[n] & 255;
      out.append_s8itvh$(digits.charCodeAt(v >>> 4 & 15));
      out.append_s8itvh$(digits.charCodeAt(v >>> 0 & 15));
    }
    return out.toString();
  };
  Hex.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Hex',
    interfaces: []
  };
  var Hex_instance = null;
  function Hex_getInstance() {
    if (Hex_instance === null) {
      new Hex();
    }
    return Hex_instance;
  }
  function get_unhexIgnoreSpaces($receiver) {
    return get_unhexIgnoreSpaces_0(joinToString($receiver, ''));
  }
  function get_unhexIgnoreSpaces_0($receiver) {
    return get_unhex(replace($receiver, ' ', ''));
  }
  function get_unhex($receiver) {
    return Hex_getInstance().decode_61zpoe$($receiver);
  }
  function get_hex($receiver) {
    return Hex_getInstance().encodeLower_fqrh44$($receiver);
  }
  function get_hex_0($receiver) {
    return '0x' + get_shex($receiver);
  }
  function get_shex($receiver) {
    var out = '';
    for (var n = 0; n < 8; n++) {
      var v = $receiver >>> ((7 - n | 0) * 4 | 0) & 15;
      out += String.fromCharCode(unboxChar(Hex_getInstance().encodeCharUpper_za3lpa$(v)));
    }
    return out;
  }
  function SimpleChecksum() {
    SimpleChecksum$Companion_getInstance();
  }
  SimpleChecksum.prototype.update_3fge6q$ = function (old, data, offset, len, callback$default) {
    if (offset === void 0)
      offset = 0;
    if (len === void 0)
      len = data.length - offset | 0;
    return callback$default ? callback$default(old, data, offset, len) : this.update_3fge6q$$default(old, data, offset, len);
  };
  function SimpleChecksum$Companion() {
    SimpleChecksum$Companion_instance = this;
    this.DUMMY = new SimpleChecksum$Companion$DUMMY$ObjectLiteral();
  }
  function SimpleChecksum$Companion$DUMMY$ObjectLiteral() {
    this.INITIAL_7jrrgp$_0 = 0;
  }
  Object.defineProperty(SimpleChecksum$Companion$DUMMY$ObjectLiteral.prototype, 'INITIAL', {
    get: function () {
      return this.INITIAL_7jrrgp$_0;
    }
  });
  SimpleChecksum$Companion$DUMMY$ObjectLiteral.prototype.update_3fge6q$$default = function (old, data, offset, len) {
    return 0;
  };
  SimpleChecksum$Companion$DUMMY$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SimpleChecksum]
  };
  SimpleChecksum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SimpleChecksum$Companion_instance = null;
  function SimpleChecksum$Companion_getInstance() {
    if (SimpleChecksum$Companion_instance === null) {
      new SimpleChecksum$Companion();
    }
    return SimpleChecksum$Companion_instance;
  }
  SimpleChecksum.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SimpleChecksum',
    interfaces: []
  };
  function compute($receiver, data, offset, len) {
    if (offset === void 0)
      offset = 0;
    if (len === void 0)
      len = data.length - offset | 0;
    return $receiver.update_3fge6q$($receiver.INITIAL, data, offset, len);
  }
  function Adler32() {
    Adler32_instance = this;
    this.adler_base_0 = 65521;
    this.INITIAL_fis2qc$_0 = 1;
  }
  Object.defineProperty(Adler32.prototype, 'INITIAL', {
    get: function () {
      return this.INITIAL_fis2qc$_0;
    }
  });
  Adler32.prototype.update_3fge6q$$default = function (old, data, offset, len) {
    var tmp$;
    var s1 = old >>> 0 & 65535;
    var s2 = old >>> 16 & 65535;
    tmp$ = offset + len | 0;
    for (var n = offset; n < tmp$; n++) {
      s1 = (s1 + (data[n] & 255) | 0) % this.adler_base_0;
      s2 = (s2 + s1 | 0) % this.adler_base_0;
    }
    return s2 << 16 | s1;
  };
  Adler32.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Adler32',
    interfaces: [SimpleChecksum]
  };
  var Adler32_instance = null;
  function Adler32_getInstance() {
    if (Adler32_instance === null) {
      new Adler32();
    }
    return Adler32_instance;
  }
  function CRC32() {
    CRC32_instance = this;
    this.INITIAL_nds1da$_0 = 0;
    var $receiver = new Int32Array(256);
    var POLY = -306674912;
    for (var n = 0; n < 256; n++) {
      var c = n;
      for (var k = 0; k < 8; k++)
        c = (c & 1) !== 0 ? POLY ^ c >>> 1 : c >>> 1;
      $receiver[n] = c;
    }
    this.crc_table_0 = $receiver;
  }
  Object.defineProperty(CRC32.prototype, 'INITIAL', {
    get: function () {
      return this.INITIAL_nds1da$_0;
    }
  });
  CRC32.prototype.update_3fge6q$$default = function (old, data, offset, len) {
    var tmp$;
    var c = ~old;
    var table = this.crc_table_0;
    tmp$ = offset + len | 0;
    for (var n = offset; n < tmp$; n++)
      c = table[(c ^ data[n] & 255) & 255] ^ c >>> 8;
    return ~c;
  };
  CRC32.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'CRC32',
    interfaces: [SimpleChecksum]
  };
  var CRC32_instance = null;
  function CRC32_getInstance() {
    if (CRC32_instance === null) {
      new CRC32();
    }
    return CRC32_instance;
  }
  function SyncHash() {
    SyncHash$Companion_getInstance();
  }
  function SyncHash$Companion() {
    SyncHash$Companion_instance = this;
    this.MD5_ye0btm$_0 = lazy(SyncHash$Companion$MD5$lambda);
    this.SHA1_i7smt$_0 = lazy(SyncHash$Companion$SHA1$lambda);
  }
  Object.defineProperty(SyncHash$Companion.prototype, 'MD5', {
    get: function () {
      return this.MD5_ye0btm$_0.value;
    }
  });
  Object.defineProperty(SyncHash$Companion.prototype, 'SHA1', {
    get: function () {
      return this.SHA1_i7smt$_0.value;
    }
  });
  function SyncHash$Companion$MD5$lambda() {
    return new SyncHash$MessageDigestHash('MD5');
  }
  function SyncHash$Companion$SHA1$lambda() {
    return new SyncHash$MessageDigestHash('SHA1');
  }
  SyncHash$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SyncHash$Companion_instance = null;
  function SyncHash$Companion_getInstance() {
    if (SyncHash$Companion_instance === null) {
      new SyncHash$Companion();
    }
    return SyncHash$Companion_instance;
  }
  SyncHash.prototype.hash_fqrh44$ = function (content) {
    return this.hash_sayfrj$(openSync(content));
  };
  SyncHash.prototype.hash_6zdodq$ = function (content, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.hash_fqrh44$(toByteArray(content, charset));
  };
  function SyncHash$MessageDigestHash(algo) {
    SyncHash.call(this);
    this.algo = algo;
  }
  SyncHash$MessageDigestHash.prototype.hash_sayfrj$ = function (content) {
    throw new NotImplementedError_init();
  };
  SyncHash$MessageDigestHash.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MessageDigestHash',
    interfaces: [SyncHash]
  };
  SyncHash.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncHash',
    interfaces: []
  };
  function md5($receiver) {
    return SyncHash$Companion_getInstance().MD5.hash_fqrh44$($receiver);
  }
  function sha1($receiver) {
    return SyncHash$Companion_getInstance().SHA1.hash_fqrh44$($receiver);
  }
  function update($receiver, data, continuation) {
    return $receiver.update_mj6st8$(data, 0, data.length, continuation);
  }
  function digest($receiver_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$digest($receiver_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$digest($receiver_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$data = data_0;
  }
  Coroutine$digest.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$digest.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$digest.prototype.constructor = Coroutine$digest;
  Coroutine$digest.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.update_fqrh44$(this.local$data, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.digest(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function update_0($receiver, data, continuation) {
    return $receiver.update_mj6st8$(data, 0, data.length, continuation);
  }
  function finalize($receiver_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$finalize($receiver_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$finalize($receiver_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$data = data_0;
  }
  Coroutine$finalize.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$finalize.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$finalize.prototype.constructor = Coroutine$finalize;
  Coroutine$finalize.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.update_fqrh44$(this.local$data, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.finalize(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function BoolArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(BoolArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  BoolArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getBool_za3lpa$(index);
  };
  BoolArrayLike.prototype.set_fzusl$ = function (index, value) {
    this.raw.setBool_fzusl$(index, value);
  };
  BoolArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BoolArrayLike',
    interfaces: []
  };
  function ByteArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(ByteArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  ByteArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getByte_za3lpa$(index);
  };
  ByteArrayLike.prototype.set_6t1wet$ = function (index, value) {
    this.raw.setByte_6t1wet$(index, value);
  };
  ByteArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ByteArrayLike',
    interfaces: []
  };
  function ShortArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(ShortArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  ShortArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getShort_za3lpa$(index);
  };
  ShortArrayLike.prototype.set_2bqt6h$ = function (index, value) {
    this.raw.setShort_2bqt6h$(index, value);
  };
  ShortArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShortArrayLike',
    interfaces: []
  };
  function IntArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(IntArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  IntArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getInt_za3lpa$(index);
  };
  IntArrayLike.prototype.set_vux9f0$ = function (index, value) {
    this.raw.setInt_vux9f0$(index, value);
  };
  IntArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IntArrayLike',
    interfaces: []
  };
  function FloatArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(FloatArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  FloatArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getFloat_za3lpa$(index);
  };
  FloatArrayLike.prototype.set_24o109$ = function (index, value) {
    this.raw.setFloat_24o109$(index, value);
  };
  FloatArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FloatArrayLike',
    interfaces: []
  };
  function DoubleArrayLike(raw) {
    this.raw = raw;
  }
  Object.defineProperty(DoubleArrayLike.prototype, 'size', {
    get: function () {
      return this.raw.size;
    }
  });
  DoubleArrayLike.prototype.get_za3lpa$ = function (index) {
    return this.raw.getDouble_za3lpa$(index);
  };
  DoubleArrayLike.prototype.set_5wr77w$ = function (index, value) {
    this.raw.setDouble_5wr77w$(index, value);
  };
  DoubleArrayLike.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DoubleArrayLike',
    interfaces: []
  };
  function asBool($receiver) {
    return new BoolArrayLike($receiver);
  }
  function asByte($receiver) {
    return new ByteArrayLike($receiver);
  }
  function asShort($receiver) {
    return new ShortArrayLike($receiver);
  }
  function asInt($receiver) {
    return new IntArrayLike($receiver);
  }
  function asFloat($receiver) {
    return new FloatArrayLike($receiver);
  }
  function asDouble($receiver) {
    return new DoubleArrayLike($receiver);
  }
  function NumberRawArray() {
  }
  NumberRawArray.prototype.getBool_za3lpa$ = function (index) {
    return this.getDouble_za3lpa$(index) !== 0.0;
  };
  NumberRawArray.prototype.setBool_fzusl$ = function (index, value) {
    this.setDouble_5wr77w$(index, value ? 1 : 0);
  };
  NumberRawArray.prototype.getByte_za3lpa$ = function (index) {
    return toByte(numberToInt(this.getDouble_za3lpa$(index)));
  };
  NumberRawArray.prototype.setByte_6t1wet$ = function (index, value) {
    this.setDouble_5wr77w$(index, value);
  };
  NumberRawArray.prototype.getShort_za3lpa$ = function (index) {
    return toShort(numberToInt(this.getDouble_za3lpa$(index)));
  };
  NumberRawArray.prototype.setShort_2bqt6h$ = function (index, value) {
    this.setDouble_5wr77w$(index, value);
  };
  NumberRawArray.prototype.getInt_za3lpa$ = function (index) {
    return numberToInt(this.getDouble_za3lpa$(index));
  };
  NumberRawArray.prototype.setInt_vux9f0$ = function (index, value) {
    this.setDouble_5wr77w$(index, value);
  };
  NumberRawArray.prototype.getFloat_za3lpa$ = function (index) {
    return this.getDouble_za3lpa$(index);
  };
  NumberRawArray.prototype.setFloat_24o109$ = function (index, value) {
    this.setDouble_5wr77w$(index, value);
  };
  NumberRawArray.prototype.getLong_za3lpa$ = function (index) {
    return Kotlin.Long.fromNumber(this.getDouble_za3lpa$(index));
  };
  NumberRawArray.prototype.setLong_6svq3l$ = function (index, value) {
    this.setDouble_5wr77w$(index, value.toNumber());
  };
  NumberRawArray.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'NumberRawArray',
    interfaces: []
  };
  function BoolRaw(v) {
    this.v = v;
  }
  Object.defineProperty(BoolRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  BoolRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index] ? 1 : 0;
  };
  BoolRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = value !== 0.0;
  };
  BoolRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BoolRaw',
    interfaces: [NumberRawArray]
  };
  function ByteRaw(v) {
    this.v = v;
  }
  Object.defineProperty(ByteRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  ByteRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  ByteRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = toByte(numberToInt(value));
  };
  ByteRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ByteRaw',
    interfaces: [NumberRawArray]
  };
  function ShortRaw(v) {
    this.v = v;
  }
  Object.defineProperty(ShortRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  ShortRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  ShortRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = toShort(numberToInt(value));
  };
  ShortRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShortRaw',
    interfaces: [NumberRawArray]
  };
  function CharRaw(v) {
    this.v = v;
  }
  Object.defineProperty(CharRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  CharRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index] | 0;
  };
  CharRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = toChar(numberToInt(value));
  };
  CharRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CharRaw',
    interfaces: [NumberRawArray]
  };
  function IntRaw(v) {
    this.v = v;
  }
  Object.defineProperty(IntRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  IntRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  IntRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = numberToInt(value);
  };
  IntRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IntRaw',
    interfaces: [NumberRawArray]
  };
  function FloatRaw(v) {
    this.v = v;
  }
  Object.defineProperty(FloatRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  FloatRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  FloatRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = value;
  };
  FloatRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FloatRaw',
    interfaces: [NumberRawArray]
  };
  function DoubleRaw(v) {
    this.v = v;
  }
  Object.defineProperty(DoubleRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  DoubleRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  DoubleRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = value;
  };
  DoubleRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DoubleRaw',
    interfaces: [NumberRawArray]
  };
  function LongRaw(v) {
    this.v = v;
  }
  Object.defineProperty(LongRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  LongRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index].toNumber();
  };
  LongRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = Kotlin.Long.fromNumber(value);
  };
  LongRaw.prototype.getLong_za3lpa$ = function (index) {
    return this.v[index];
  };
  LongRaw.prototype.setLong_6svq3l$ = function (index, value) {
    this.v[index] = value;
  };
  LongRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LongRaw',
    interfaces: [NumberRawArray]
  };
  function DoubleListRaw(v) {
    this.v = v;
  }
  Object.defineProperty(DoubleListRaw.prototype, 'size', {
    get: function () {
      return this.v.size;
    }
  });
  DoubleListRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v.get_za3lpa$(index);
  };
  DoubleListRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v.set_5wr77w$(index, value);
  };
  DoubleListRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DoubleListRaw',
    interfaces: [NumberRawArray]
  };
  function IntListRaw(v) {
    this.v = v;
  }
  Object.defineProperty(IntListRaw.prototype, 'size', {
    get: function () {
      return this.v.size;
    }
  });
  IntListRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v.get_za3lpa$(index);
  };
  IntListRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v.set_vux9f0$(index, numberToInt(value));
  };
  IntListRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IntListRaw',
    interfaces: [NumberRawArray]
  };
  function NumberList(v) {
    this.v = v;
  }
  Object.defineProperty(NumberList.prototype, 'size', {
    get: function () {
      return this.v.size;
    }
  });
  NumberList.prototype.getDouble_za3lpa$ = function (index) {
    return numberToDouble(this.v.get_za3lpa$(index));
  };
  NumberList.prototype.setDouble_5wr77w$ = function (index, value) {
    var tmp$;
    (Kotlin.isType(tmp$ = this.v, MutableList) ? tmp$ : throwCCE()).set_wxm5ur$(index, value);
  };
  NumberList.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NumberList',
    interfaces: [NumberRawArray]
  };
  function Int8BufferRaw(v) {
    this.v = v;
  }
  Object.defineProperty(Int8BufferRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  Int8BufferRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  Int8BufferRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = toByte(numberToInt(value));
  };
  Int8BufferRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Int8BufferRaw',
    interfaces: [NumberRawArray]
  };
  function Int16BufferRaw(v) {
    this.v = v;
  }
  Object.defineProperty(Int16BufferRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  Int16BufferRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  Int16BufferRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = toShort(numberToInt(value));
  };
  Int16BufferRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Int16BufferRaw',
    interfaces: [NumberRawArray]
  };
  function Int32BufferRaw(v) {
    this.v = v;
  }
  Object.defineProperty(Int32BufferRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  Int32BufferRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  Int32BufferRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = numberToInt(value);
  };
  Int32BufferRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Int32BufferRaw',
    interfaces: [NumberRawArray]
  };
  function Float32BufferRaw(v) {
    this.v = v;
  }
  Object.defineProperty(Float32BufferRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  Float32BufferRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  Float32BufferRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = value;
  };
  Float32BufferRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Float32BufferRaw',
    interfaces: [NumberRawArray]
  };
  function Float64BufferRaw(v) {
    this.v = v;
  }
  Object.defineProperty(Float64BufferRaw.prototype, 'size', {
    get: function () {
      return this.v.length;
    }
  });
  Float64BufferRaw.prototype.getDouble_za3lpa$ = function (index) {
    return this.v[index];
  };
  Float64BufferRaw.prototype.setDouble_5wr77w$ = function (index, value) {
    this.v[index] = value;
  };
  Float64BufferRaw.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Float64BufferRaw',
    interfaces: [NumberRawArray]
  };
  function get_raw($receiver) {
    return new Int8BufferRaw($receiver.b);
  }
  function get_raw_0($receiver) {
    return new Int16BufferRaw($receiver.b);
  }
  function get_raw_1($receiver) {
    return new Int8BufferRaw($receiver);
  }
  function get_raw_2($receiver) {
    return new Int16BufferRaw($receiver);
  }
  function get_raw_3($receiver) {
    return new Int32BufferRaw($receiver);
  }
  function get_raw_4($receiver) {
    return new Float32BufferRaw($receiver);
  }
  function get_raw_5($receiver) {
    return new Float64BufferRaw($receiver);
  }
  function get_raw_6($receiver) {
    return new BoolRaw($receiver);
  }
  function get_raw_7($receiver) {
    return new ByteRaw($receiver);
  }
  function get_raw_8($receiver) {
    return new ShortRaw($receiver);
  }
  function get_raw_9($receiver) {
    return new CharRaw($receiver);
  }
  function get_raw_10($receiver) {
    return new IntRaw($receiver);
  }
  function get_raw_11($receiver) {
    return new FloatRaw($receiver);
  }
  function get_raw_12($receiver) {
    return new DoubleRaw($receiver);
  }
  function get_raw_13($receiver) {
    return new LongRaw($receiver);
  }
  function get_raw_14($receiver) {
    return new IntListRaw($receiver);
  }
  function get_raw_15($receiver) {
    return new DoubleListRaw($receiver);
  }
  function get_raw_16($receiver) {
    return new NumberList($receiver);
  }
  function NumberRawArray_0(any) {
    var tmp$, tmp$_0;
    if (Kotlin.isType(any, Uint8Buffer))
      tmp$_0 = get_raw(any);
    else if (Kotlin.isType(any, Uint16Buffer))
      tmp$_0 = get_raw_0(any);
    else if (Kotlin.isType(any, Int8Array))
      tmp$_0 = get_raw_1(any);
    else if (Kotlin.isType(any, Int16Array))
      tmp$_0 = get_raw_2(any);
    else if (Kotlin.isType(any, Int32Array))
      tmp$_0 = get_raw_3(any);
    else if (Kotlin.isType(any, Float32Array))
      tmp$_0 = get_raw_4(any);
    else if (Kotlin.isType(any, Float64Array))
      tmp$_0 = get_raw_5(any);
    else if (Kotlin.isBooleanArray(any))
      tmp$_0 = get_raw_6(any);
    else if (Kotlin.isByteArray(any))
      tmp$_0 = get_raw_7(any);
    else if (Kotlin.isShortArray(any))
      tmp$_0 = get_raw_8(any);
    else if (Kotlin.isCharArray(any))
      tmp$_0 = get_raw_9(any);
    else if (Kotlin.isIntArray(any))
      tmp$_0 = get_raw_10(any);
    else if (Kotlin.isFloatArray(any))
      tmp$_0 = get_raw_11(any);
    else if (Kotlin.isDoubleArray(any))
      tmp$_0 = get_raw_12(any);
    else if (Kotlin.isLongArray(any))
      tmp$_0 = get_raw_13(any);
    else if (Kotlin.isType(any, IntArrayList))
      tmp$_0 = get_raw_14(any);
    else if (Kotlin.isType(any, DoubleArrayList))
      tmp$_0 = get_raw_15(any);
    else if (Kotlin.isType(any, List))
      tmp$_0 = get_raw_16(Kotlin.isType(tmp$ = any, List) ? tmp$ : throwCCE());
    else {
      throw IllegalStateException_init((toString(any) + ' is not a supported array').toString());
    }
    return tmp$_0;
  }
  function SubListGeneric(base, start, end) {
    this.base = base;
    this.start = start;
    this.end = end;
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    tmp$ = this.base.size;
    tmp$_0 = this.start;
    if (!(0 <= tmp$_0 && tmp$_0 <= tmp$))
      throw new OutOfBoundsException(this.start);
    tmp$_1 = this.base.size;
    tmp$_2 = this.end;
    if (!(0 <= tmp$_2 && tmp$_2 <= tmp$_1))
      throw new OutOfBoundsException(this.start);
  }
  Object.defineProperty(SubListGeneric.prototype, 'size', {
    get: function () {
      return this.end - this.start | 0;
    }
  });
  SubListGeneric.prototype.translateIndex_0 = function ($receiver) {
    var tmp$;
    tmp$ = this.size;
    if (!(0 <= $receiver && $receiver < tmp$))
      throw new OutOfBoundsException($receiver);
    return this.start + $receiver | 0;
  };
  var Collection = Kotlin.kotlin.collections.Collection;
  SubListGeneric.prototype.contains_11rb$ = function (element) {
    var $receiver = until(this.start, this.end);
    var any$result;
    any$break: do {
      var tmp$;
      if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
        any$result = false;
        break any$break;
      }
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element_0 = tmp$.next();
        if (equals(this.base.get_za3lpa$(element_0), element)) {
          any$result = true;
          break any$break;
        }
      }
      any$result = false;
    }
     while (false);
    return any$result;
  };
  SubListGeneric.prototype.containsAll_brywnq$ = function (elements) {
    var elementsSet = Kotlin.isType(elements, Set) ? elements : toSet(elements);
    var $receiver = until(this.start, this.end);
    var any$result;
    any$break: do {
      var tmp$;
      if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
        any$result = false;
        break any$break;
      }
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (elementsSet.contains_11rb$(this.base.get_za3lpa$(element))) {
          any$result = true;
          break any$break;
        }
      }
      any$result = false;
    }
     while (false);
    return any$result;
  };
  SubListGeneric.prototype.get_za3lpa$ = function (index) {
    return this.base.get_za3lpa$(this.translateIndex_0(index));
  };
  SubListGeneric.prototype.indexOf_11rb$ = function (element) {
    var $receiver = until(this.start, this.end);
    var indexOfFirst$result;
    indexOfFirst$break: do {
      var tmp$;
      var index = 0;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        if (equals(this, element)) {
          indexOfFirst$result = index;
          break indexOfFirst$break;
        }
        index = index + 1 | 0;
      }
      indexOfFirst$result = -1;
    }
     while (false);
    var res = indexOfFirst$result;
    return res < 0 ? res : this.start + res | 0;
  };
  SubListGeneric.prototype.lastIndexOf_11rb$ = function (element) {
    var $receiver = downTo(this.end - 1 | 0, this.start);
    var indexOfFirst$result;
    indexOfFirst$break: do {
      var tmp$;
      var index = 0;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        if (equals(this, element)) {
          indexOfFirst$result = index;
          break indexOfFirst$break;
        }
        index = index + 1 | 0;
      }
      indexOfFirst$result = -1;
    }
     while (false);
    var res = indexOfFirst$result;
    return res < 0 ? res : this.start + res | 0;
  };
  SubListGeneric.prototype.isEmpty = function () {
    return this.size === 0;
  };
  SubListGeneric.prototype.iterator = function () {
    return this.listIterator_za3lpa$(0);
  };
  SubListGeneric.prototype.listIterator = function () {
    return this.listIterator_za3lpa$(0);
  };
  SubListGeneric.prototype.listIterator_za3lpa$ = function (index) {
    return new GenericListIterator(this, index);
  };
  SubListGeneric.prototype.subList_vux9f0$ = function (fromIndex, toIndex) {
    return new SubListGeneric(this, fromIndex, toIndex);
  };
  SubListGeneric.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SubListGeneric',
    interfaces: [List]
  };
  function GenericListIterator(list, iindex) {
    this.list = list;
    this.iindex = iindex;
    var tmp$, tmp$_0;
    tmp$ = this.list.size;
    tmp$_0 = this.iindex;
    if (!(0 <= tmp$_0 && tmp$_0 < tmp$))
      throw new OutOfBoundsException(this.iindex);
    this.index_0 = this.iindex;
  }
  GenericListIterator.prototype.hasNext = function () {
    return this.index_0 < this.list.size;
  };
  GenericListIterator.prototype.next = function () {
    var tmp$;
    if (!this.hasNext())
      throw NoSuchElementException_init();
    return this.list.get_za3lpa$((tmp$ = this.index_0, this.index_0 = tmp$ + 1 | 0, tmp$));
  };
  GenericListIterator.prototype.hasPrevious = function () {
    return this.index_0 > 0;
  };
  GenericListIterator.prototype.nextIndex = function () {
    return this.index_0;
  };
  GenericListIterator.prototype.previous = function () {
    if (!this.hasPrevious())
      throw NoSuchElementException_init();
    return this.list.get_za3lpa$((this.index_0 = this.index_0 - 1 | 0, this.index_0));
  };
  GenericListIterator.prototype.previousIndex = function () {
    return this.index_0 - 1 | 0;
  };
  GenericListIterator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GenericListIterator',
    interfaces: [ListIterator]
  };
  function InvalidOperationException(str) {
    if (str === void 0)
      str = 'Invalid Operation';
    Exception_init(str, this);
    this.name = 'InvalidOperationException';
  }
  InvalidOperationException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InvalidOperationException',
    interfaces: [Exception]
  };
  function OutOfBoundsException(index, str) {
    if (index === void 0)
      index = -1;
    if (str === void 0)
      str = 'Out Of Bounds';
    Exception_init(str, this);
    this.name = 'OutOfBoundsException';
  }
  OutOfBoundsException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OutOfBoundsException',
    interfaces: [Exception]
  };
  function KeyNotFoundException(str) {
    if (str === void 0)
      str = 'Key Not Found';
    Exception_init(str, this);
    this.name = 'KeyNotFoundException';
  }
  KeyNotFoundException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'KeyNotFoundException',
    interfaces: [Exception]
  };
  function NotImplementedException(str) {
    if (str === void 0)
      str = 'Not Implemented';
    Exception_init(str, this);
    this.name = 'NotImplementedException';
  }
  NotImplementedException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NotImplementedException',
    interfaces: [Exception]
  };
  function InvalidArgumentException(str) {
    if (str === void 0)
      str = 'Invalid Argument';
    Exception_init(str, this);
    this.name = 'InvalidArgumentException';
  }
  InvalidArgumentException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'InvalidArgumentException',
    interfaces: [Exception]
  };
  function MustValidateCodeException(str) {
    if (str === void 0)
      str = 'Must Validate Code';
    Exception_init(str, this);
    this.name = 'MustValidateCodeException';
  }
  MustValidateCodeException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MustValidateCodeException',
    interfaces: [Exception]
  };
  function MustOverrideException(str) {
    if (str === void 0)
      str = 'Must Override';
    Exception_init(str, this);
    this.name = 'MustOverrideException';
  }
  MustOverrideException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MustOverrideException',
    interfaces: [Exception]
  };
  function DeprecatedException(str) {
    if (str === void 0)
      str = 'Deprecated';
    Exception_init(str, this);
    this.name = 'DeprecatedException';
  }
  DeprecatedException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DeprecatedException',
    interfaces: [Exception]
  };
  function UnexpectedException(str) {
    if (str === void 0)
      str = 'Unexpected';
    Exception_init(str, this);
    this.name = 'UnexpectedException';
  }
  UnexpectedException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UnexpectedException',
    interfaces: [Exception]
  };
  function get_deprecated() {
    throw new MustValidateCodeException();
  }
  function get_mustValidate() {
    throw new NotImplementedException();
  }
  function get_noImpl() {
    throw new NotImplementedException();
  }
  function get_invalidOp() {
    throw new InvalidOperationException();
  }
  function get_invalidArg() {
    throw new InvalidArgumentException();
  }
  function deprecated(msg) {
    throw new DeprecatedException(msg);
  }
  function mustValidate(msg) {
    throw new MustValidateCodeException(msg);
  }
  function noImpl(msg) {
    throw new NotImplementedException(msg);
  }
  function invalidOp(msg) {
    throw new InvalidOperationException(msg);
  }
  function invalidArg(msg) {
    throw new InvalidArgumentException(msg);
  }
  function unsupported(msg) {
    throw UnsupportedOperationException_init_0(msg);
  }
  function unsupported_0() {
    throw UnsupportedOperationException_init();
  }
  function invalidArgument(msg) {
    throw new InvalidArgumentException(msg);
  }
  function unexpected(msg) {
    throw new UnexpectedException(msg);
  }
  function untestedWarn(msg) {
    println('Untested: ' + msg);
  }
  function noImplWarn(msg) {
    println('Not implemented: ' + msg);
  }
  var ignoreErrors = defineInlineFunction('korio-js.com.soywiz.korio.error.ignoreErrors_nkfre5$', wrapFunction(function () {
    var printStackTrace = _.com.soywiz.korio.lang.printStackTrace_dbl4o4$;
    var Throwable = Error;
    return function (show, action) {
      if (show === void 0)
        show = false;
      try {
        return action();
      }
       catch (e) {
        if (Kotlin.isType(e, Throwable)) {
          if (show)
            printStackTrace(e);
          return null;
        }
         else
          throw e;
      }
    };
  }));
  function PathInfo(fullPath) {
    this.fullPath_p9xg1f$_0 = fullPath;
  }
  Object.defineProperty(PathInfo.prototype, 'fullPath', {
    get: function () {
      return this.fullPath_p9xg1f$_0;
    }
  });
  PathInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PathInfo',
    interfaces: [Path]
  };
  function get_pathInfo($receiver) {
    return new PathInfo($receiver);
  }
  function PathInfoExt() {
    PathInfoExt_instance = this;
  }
  PathInfoExt.prototype.get_fullpathNormalized_pdl1vz$ = function ($receiver) {
    return replace_0($receiver, 92, 47);
  };
  PathInfoExt.prototype.get_folder_pdl1vz$ = function ($receiver) {
    var tmp$;
    var endIndex = (tmp$ = lastIndexOfOrNull(this.get_fullpathNormalized_pdl1vz$($receiver), 47)) != null ? tmp$ : 0;
    return $receiver.substring(0, endIndex);
  };
  PathInfoExt.prototype.get_folderWithSlash_pdl1vz$ = function ($receiver) {
    var tmp$, tmp$_0;
    var endIndex = (tmp$_0 = (tmp$ = lastIndexOfOrNull(this.get_fullpathNormalized_pdl1vz$($receiver), 47)) != null ? tmp$ + 1 | 0 : null) != null ? tmp$_0 : 0;
    return $receiver.substring(0, endIndex);
  };
  PathInfoExt.prototype.get_basename_pdl1vz$ = function ($receiver) {
    return substringAfterLast(this.get_fullpathNormalized_pdl1vz$($receiver), 47);
  };
  PathInfoExt.prototype.get_fullPathWithoutExtension_pdl1vz$ = function ($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    var startIndex = (tmp$_0 = (tmp$ = lastIndexOfOrNull(this.get_fullpathNormalized_pdl1vz$($receiver), 47)) != null ? tmp$ + 1 | 0 : null) != null ? tmp$_0 : 0;
    var endIndex = (tmp$_1 = indexOfOrNull(this.get_fullpathNormalized_pdl1vz$($receiver), 46, startIndex)) != null ? tmp$_1 : this.get_fullpathNormalized_pdl1vz$($receiver).length;
    return $receiver.substring(0, endIndex);
  };
  PathInfoExt.prototype.fullPathWithExtension_rjktp$ = function ($receiver, ext) {
    return ext.length === 0 ? this.get_fullPathWithoutExtension_pdl1vz$($receiver) : this.get_fullPathWithoutExtension_pdl1vz$($receiver) + '.' + ext;
  };
  PathInfoExt.prototype.get_basenameWithoutExtension_pdl1vz$ = function ($receiver) {
    return substringBeforeLast(this.get_basename_pdl1vz$($receiver), 46, this.get_basename_pdl1vz$($receiver));
  };
  PathInfoExt.prototype.get_basenameWithoutCompoundExtension_pdl1vz$ = function ($receiver) {
    return substringBefore(this.get_basename_pdl1vz$($receiver), 46, this.get_basename_pdl1vz$($receiver));
  };
  PathInfoExt.prototype.get_fullnameWithoutExtension_pdl1vz$ = function ($receiver) {
    return this.get_folderWithSlash_pdl1vz$($receiver) + this.get_basenameWithoutExtension_pdl1vz$($receiver);
  };
  PathInfoExt.prototype.get_fullnameWithoutCompoundExtension_pdl1vz$ = function ($receiver) {
    return this.get_folderWithSlash_pdl1vz$($receiver) + this.get_basenameWithoutCompoundExtension_pdl1vz$($receiver);
  };
  PathInfoExt.prototype.basenameWithExtension_rjktp$ = function ($receiver, ext) {
    return ext.length === 0 ? this.get_basenameWithoutExtension_pdl1vz$($receiver) : this.get_basenameWithoutExtension_pdl1vz$($receiver) + '.' + ext;
  };
  PathInfoExt.prototype.basenameWithCompoundExtension_rjktp$ = function ($receiver, ext) {
    return ext.length === 0 ? this.get_basenameWithoutCompoundExtension_pdl1vz$($receiver) : this.get_basenameWithoutCompoundExtension_pdl1vz$($receiver) + '.' + ext;
  };
  PathInfoExt.prototype.get_extension_pdl1vz$ = function ($receiver) {
    return substringAfterLast(this.get_basename_pdl1vz$($receiver), 46, '');
  };
  PathInfoExt.prototype.get_extensionLC_pdl1vz$ = function ($receiver) {
    return this.get_extension_pdl1vz$($receiver).toLowerCase();
  };
  PathInfoExt.prototype.get_compoundExtension_pdl1vz$ = function ($receiver) {
    return substringAfter(this.get_basename_pdl1vz$($receiver), 46, '');
  };
  PathInfoExt.prototype.get_compoundExtensionLC_pdl1vz$ = function ($receiver) {
    return this.get_compoundExtension_pdl1vz$($receiver).toLowerCase();
  };
  PathInfoExt.prototype.get_mimeTypeByExtension_pdl1vz$ = function ($receiver) {
    return MimeType$Companion_getInstance().getByExtension_nxhpy7$(this.get_extensionLC_pdl1vz$($receiver));
  };
  PathInfoExt.prototype.getPathComponents_pdl1vz$ = function ($receiver) {
    return split(this.get_fullpathNormalized_pdl1vz$($receiver), Kotlin.charArrayOf(47));
  };
  PathInfoExt.prototype.getPathFullComponents_pdl1vz$ = function ($receiver) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var out = ArrayList_init();
    tmp$ = get_indices(this.get_fullpathNormalized_pdl1vz$($receiver));
    tmp$_0 = tmp$.first;
    tmp$_1 = tmp$.last;
    tmp$_2 = tmp$.step;
    for (var n = tmp$_0; n <= tmp$_1; n += tmp$_2) {
      switch (this.get_fullpathNormalized_pdl1vz$($receiver).charCodeAt(n)) {
        case 47:
        case 92:
          var element = this.get_fullpathNormalized_pdl1vz$($receiver).substring(0, n);
          out.add_11rb$(element);
          break;
      }
    }
    var element_0 = this.get_fullpathNormalized_pdl1vz$($receiver);
    out.add_11rb$(element_0);
    return out;
  };
  PathInfoExt.prototype.get_fullName_pdl1vz$ = function ($receiver) {
    return $receiver;
  };
  PathInfoExt.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'PathInfoExt',
    interfaces: []
  };
  var PathInfoExt_instance = null;
  function PathInfoExt_getInstance() {
    if (PathInfoExt_instance === null) {
      new PathInfoExt();
    }
    return PathInfoExt_instance;
  }
  var PathInfo_0 = defineInlineFunction('korio-js.com.soywiz.korio.file.PathInfo_vvjixc$', wrapFunction(function () {
    var file = _.com.soywiz.korio.file;
    return function (callback) {
      return callback(file.PathInfoExt);
    };
  }));
  function Path() {
  }
  Path.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Path',
    interfaces: []
  };
  function get_fullpathNormalized($receiver) {
    return package$file.PathInfoExt.get_fullpathNormalized_pdl1vz$($receiver.fullPath);
  }
  function get_folder($receiver) {
    return package$file.PathInfoExt.get_folder_pdl1vz$($receiver.fullPath);
  }
  function get_folderWithSlash($receiver) {
    return package$file.PathInfoExt.get_folderWithSlash_pdl1vz$($receiver.fullPath);
  }
  function get_basename($receiver) {
    return package$file.PathInfoExt.get_basename_pdl1vz$($receiver.fullPath);
  }
  function get_pathWithoutExtension($receiver) {
    return package$file.PathInfoExt.get_fullPathWithoutExtension_pdl1vz$($receiver.fullPath);
  }
  function fullPathWithExtension($receiver, ext) {
    return package$file.PathInfoExt.fullPathWithExtension_rjktp$($receiver.fullPath, ext);
  }
  function get_fullnameWithoutExtension($receiver) {
    return package$file.PathInfoExt.get_fullnameWithoutExtension_pdl1vz$($receiver.fullPath);
  }
  function get_basenameWithoutExtension($receiver) {
    return package$file.PathInfoExt.get_basenameWithoutExtension_pdl1vz$($receiver.fullPath);
  }
  function get_fullnameWithoutCompoundExtension($receiver) {
    return package$file.PathInfoExt.get_fullnameWithoutCompoundExtension_pdl1vz$($receiver.fullPath);
  }
  function get_basenameWithoutCompoundExtension($receiver) {
    return package$file.PathInfoExt.get_basenameWithoutCompoundExtension_pdl1vz$($receiver.fullPath);
  }
  function basenameWithExtension($receiver, ext) {
    return package$file.PathInfoExt.basenameWithExtension_rjktp$($receiver.fullPath, ext);
  }
  function basenameWithCompoundExtension($receiver, ext) {
    return package$file.PathInfoExt.basenameWithCompoundExtension_rjktp$($receiver.fullPath, ext);
  }
  function get_extension($receiver) {
    return package$file.PathInfoExt.get_extension_pdl1vz$($receiver.fullPath);
  }
  function get_extensionLC($receiver) {
    return package$file.PathInfoExt.get_extensionLC_pdl1vz$($receiver.fullPath);
  }
  function get_compoundExtension($receiver) {
    return package$file.PathInfoExt.get_compoundExtension_pdl1vz$($receiver.fullPath);
  }
  function get_compoundExtensionLC($receiver) {
    return package$file.PathInfoExt.get_compoundExtensionLC_pdl1vz$($receiver.fullPath);
  }
  function get_mimeTypeByExtension($receiver) {
    return package$file.PathInfoExt.get_mimeTypeByExtension_pdl1vz$($receiver.fullPath);
  }
  function getPathComponents($receiver) {
    return package$file.PathInfoExt.getPathComponents_pdl1vz$($receiver.fullPath);
  }
  function getPathFullComponents($receiver) {
    return package$file.PathInfoExt.getPathFullComponents_pdl1vz$($receiver.fullPath);
  }
  function get_fullname($receiver) {
    return $receiver.fullPath;
  }
  function VfsNamed(fullPath) {
    this.fullPath_pxh4ds$_0 = fullPath;
  }
  Object.defineProperty(VfsNamed.prototype, 'fullPath', {
    get: function () {
      return this.fullPath_pxh4ds$_0;
    }
  });
  VfsNamed.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsNamed',
    interfaces: [Path]
  };
  var emptyList = Kotlin.kotlin.collections.emptyList_287e2$;
  function Vfs() {
    this.absolutePath_bxvyxb$_0 = '';
    this.supportedAttributeTypes_bxf8p0$_0 = emptyList();
  }
  Object.defineProperty(Vfs.prototype, 'absolutePath', {
    get: function () {
      return this.absolutePath_bxvyxb$_0;
    }
  });
  Vfs.prototype.getAbsolutePath_61zpoe$ = function (path) {
    return VfsUtil_getInstance().lightCombine_puj7f4$(this.absolutePath, path);
  };
  Object.defineProperty(Vfs.prototype, 'root', {
    get: function () {
      return new VfsFile(this, '');
    }
  });
  Object.defineProperty(Vfs.prototype, 'supportedAttributeTypes', {
    get: function () {
      return this.supportedAttributeTypes_bxf8p0$_0;
    }
  });
  Vfs.prototype.get_61zpoe$ = function (path) {
    return this.root.get_61zpoe$(path);
  };
  Vfs.prototype.file_61zpoe$ = function (path) {
    return this.root.get_61zpoe$(path);
  };
  Vfs.prototype.createExistsStat_mv8ifk$ = function (path, isDirectory, size, device, inode, mode, owner, group, createTime, modifiedTime, lastAccessTime, extraInfo, id) {
    if (device === void 0)
      device = L_1;
    if (inode === void 0)
      inode = L_1;
    if (mode === void 0)
      mode = 511;
    if (owner === void 0)
      owner = 'nobody';
    if (group === void 0)
      group = 'nobody';
    if (createTime === void 0)
      createTime = L0;
    if (modifiedTime === void 0)
      modifiedTime = createTime;
    if (lastAccessTime === void 0)
      lastAccessTime = modifiedTime;
    if (extraInfo === void 0)
      extraInfo = null;
    if (id === void 0)
      id = null;
    return new VfsStat(this.file_61zpoe$(path), true, isDirectory, size, device, inode, mode, owner, group, createTime, modifiedTime, lastAccessTime, extraInfo, id);
  };
  Vfs.prototype.createNonExistsStat_4w9ihe$ = function (path, extraInfo) {
    if (extraInfo === void 0)
      extraInfo = null;
    return new VfsStat(this.file_61zpoe$(path), false, false, L0, L_1, L_1, 511, 'nobody', 'nobody', L0, L0, L0, extraInfo);
  };
  Vfs.prototype.exec_19z763$$default = function (path, cmdAndArgs, handler, continuation) {
    throw UnsupportedOperationException_init();
  };
  Vfs.prototype.exec_19z763$ = function (path, cmdAndArgs, handler, continuation, callback$default) {
    if (handler === void 0)
      handler = new VfsProcessHandler();
    return callback$default ? callback$default(path, cmdAndArgs, handler, continuation) : this.exec_19z763$$default(path, cmdAndArgs, handler, continuation);
  };
  Vfs.prototype.exec_z6qifm$$default = function (path, cmdAndArgs, env, handler, continuation) {
    throw UnsupportedOperationException_init();
  };
  Vfs.prototype.exec_z6qifm$ = function (path, cmdAndArgs, env, handler, continuation, callback$default) {
    if (handler === void 0)
      handler = new VfsProcessHandler();
    return callback$default ? callback$default(path, cmdAndArgs, env, handler, continuation) : this.exec_z6qifm$$default(path, cmdAndArgs, env, handler, continuation);
  };
  Vfs.prototype.open_vb0dls$ = function (path, mode, continuation) {
    throw UnsupportedOperationException_init();
  };
  Vfs.prototype.openInputStream_61zpoe$ = function (path, continuation) {
    return this.open_vb0dls$(path, VfsOpenMode$READ_getInstance(), continuation);
  };
  Vfs.prototype.readRange_fmne7s$ = function (path_0, range_0, continuation_0, suspended) {
    var instance = new Coroutine$readRange_fmne7s$(this, path_0, range_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readRange_fmne7s$($this, path_0, range_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 8;
    this.$this = $this;
    this.local$s = void 0;
    this.local$path = path_0;
    this.local$range = range_0;
  }
  Coroutine$readRange_fmne7s$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readRange_fmne7s$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readRange_fmne7s$.prototype.constructor = Coroutine$readRange_fmne7s$;
  Coroutine$readRange_fmne7s$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.open_vb0dls$(this.local$path, VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$s = this.result_0;
            this.exceptionState_0 = 5;
            this.local$s.position = this.local$range.start;
            var a = L2147483646;
            var b = this.local$range.endInclusive.subtract(this.local$range.start);
            var readCount = (a.compareTo_11rb$(b) <= 0 ? a : b).toInt() + 1 | 0;
            this.state_0 = 2;
            this.result_0 = readBytesUpTo(this.local$s, readCount, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 8;
            this.finallyPath_0 = [3];
            this.state_0 = 6;
            this.$returnValue = this.result_0;
            continue;
          case 3:
            return this.$returnValue;
          case 4:
            return;
          case 5:
            this.finallyPath_0 = [8];
            this.state_0 = 6;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = this.local$s.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 8:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 8) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Vfs$Attribute() {
  }
  Vfs$Attribute.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Attribute',
    interfaces: []
  };
  Vfs.prototype.get_l19gil$ = defineInlineFunction('korio-js.com.soywiz.korio.file.Vfs.get_l19gil$', wrapFunction(function () {
    var throwCCE = Kotlin.throwCCE;
    return function (T_0, isT, $receiver) {
      var tmp$;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_0;
        tmp$_0 = $receiver.iterator();
        while (tmp$_0.hasNext()) {
          var element = tmp$_0.next();
          if (isT(element)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      return (tmp$ = firstOrNull$result) == null || isT(tmp$) ? tmp$ : throwCCE();
    };
  }));
  function Vfs$put$lambda(closure$content_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Vfs$put$lambda(closure$content_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Vfs$put$lambda(closure$content_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$content = closure$content_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Vfs$put$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Vfs$put$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Vfs$put$lambda.prototype.constructor = Coroutine$Vfs$put$lambda;
  Coroutine$Vfs$put$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = copyTo(this.local$closure$content, this.local$$receiver, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.put_18ksq8$$default = function (path_0, content_0, attributes, continuation_0, suspended) {
    var instance = new Coroutine$put_18ksq8$$default(this, path_0, content_0, attributes, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$put_18ksq8$$default($this, path_0, content_0, attributes, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$path = path_0;
    this.local$content = content_0;
  }
  Coroutine$put_18ksq8$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$put_18ksq8$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$put_18ksq8$$default.prototype.constructor = Coroutine$put_18ksq8$$default;
  Coroutine$put_18ksq8$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.open_vb0dls$(this.local$path, VfsOpenMode$CREATE_OR_TRUNCATE_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(Vfs$put$lambda(this.local$content), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.put_18ksq8$ = function (path, content, attributes, continuation, callback$default) {
    if (attributes === void 0) {
      attributes = emptyList();
    }
    return callback$default ? callback$default(path, content, attributes, continuation) : this.put_18ksq8$$default(path, content, attributes, continuation);
  };
  Vfs.prototype.put_pd85a0$ = function (path, content, attributes, continuation) {
    if (attributes === void 0) {
      attributes = emptyList();
    }
    return this.put_18ksq8$(path, openAsync(content), attributes, continuation);
  };
  Vfs.prototype.readChunk_dckg8j$ = function (path_0, offset_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$readChunk_dckg8j$(this, path_0, offset_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readChunk_dckg8j$($this, path_0, offset_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = void 0;
    this.local$path = path_0;
    this.local$offset = offset_0;
    this.local$size = size_0;
  }
  Coroutine$readChunk_dckg8j$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readChunk_dckg8j$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readChunk_dckg8j$.prototype.constructor = Coroutine$readChunk_dckg8j$;
  Coroutine$readChunk_dckg8j$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.open_vb0dls$(this.local$path, VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$s = this.result_0;
            if (!equals(this.local$offset, L0)) {
              this.state_0 = 3;
              this.result_0 = this.local$s.setPosition_s8cxhz$(this.local$offset, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = readBytesUpTo(this.local$s, this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.writeChunk_1ce9rc$ = function (path_0, data_0, offset_0, resize_0, continuation_0, suspended) {
    var instance = new Coroutine$writeChunk_1ce9rc$(this, path_0, data_0, offset_0, resize_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$writeChunk_1ce9rc$($this, path_0, data_0, offset_0, resize_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = void 0;
    this.local$path = path_0;
    this.local$data = data_0;
    this.local$offset = offset_0;
    this.local$resize = resize_0;
  }
  Coroutine$writeChunk_1ce9rc$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeChunk_1ce9rc$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeChunk_1ce9rc$.prototype.constructor = Coroutine$writeChunk_1ce9rc$;
  Coroutine$writeChunk_1ce9rc$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.open_vb0dls$(this.local$path, this.local$resize ? VfsOpenMode$CREATE_OR_TRUNCATE_getInstance() : VfsOpenMode$CREATE_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$s = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$s.setPosition_s8cxhz$(this.local$offset, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = writeBytes(this.local$s, this.local$data, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Vfs$setSize$lambda(closure$size_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Vfs$setSize$lambda(closure$size_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Vfs$setSize$lambda(closure$size_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$size = closure$size_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Vfs$setSize$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Vfs$setSize$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Vfs$setSize$lambda.prototype.constructor = Coroutine$Vfs$setSize$lambda;
  Coroutine$Vfs$setSize$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.setLength_s8cxhz$(this.local$closure$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.setSize_4wgjuj$ = function (path_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$setSize_4wgjuj$(this, path_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setSize_4wgjuj$($this, path_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$path = path_0;
    this.local$size = size_0;
  }
  Coroutine$setSize_4wgjuj$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setSize_4wgjuj$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setSize_4wgjuj$.prototype.constructor = Coroutine$setSize_4wgjuj$;
  Coroutine$setSize_4wgjuj$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.open_vb0dls$(this.local$path, VfsOpenMode$WRITE_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(Vfs$setSize$lambda(this.local$size), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.setAttributes_z6b3ik$ = function (path, attributes, continuation) {
    return Unit;
  };
  Vfs.prototype.stat_61zpoe$ = function (path, continuation) {
    return this.createNonExistsStat_4w9ihe$(path);
  };
  Vfs.prototype.list_61zpoe$ = function (path, continuation) {
    return toAsync_0(emptyList());
  };
  Vfs.prototype.mkdir_z6b3ik$ = function (path, attributes, continuation) {
    return unsupported_0();
  };
  Vfs.prototype.rmdir_61zpoe$ = function (path, continuation) {
    return this.delete_61zpoe$(path, continuation);
  };
  Vfs.prototype.delete_61zpoe$ = function (path, continuation) {
    return unsupported_0();
  };
  Vfs.prototype.rename_puj7f4$ = function (src_0, dst_0, continuation_0, suspended) {
    var instance = new Coroutine$rename_puj7f4$(this, src_0, dst_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$rename_puj7f4$($this, src_0, dst_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$src = src_0;
    this.local$dst = dst_0;
  }
  Coroutine$rename_puj7f4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$rename_puj7f4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$rename_puj7f4$.prototype.constructor = Coroutine$rename_puj7f4$;
  Coroutine$rename_puj7f4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.file_61zpoe$(this.local$src).copyTo_71bpb9$(this.$this.file_61zpoe$(this.local$dst), [], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.delete_61zpoe$(this.local$src, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return true;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs.prototype.watch_6lbnta$ = function (path, handler, continuation) {
    return DummyCloseable_getInstance();
  };
  Vfs.prototype.touch_cd0evc$ = function (path, time, atime, continuation) {
    return Unit;
  };
  Vfs.prototype.getUnderlyingUnscapedFile_61zpoe$ = function (path, continuation) {
    return new FinalVfsFile(this, path);
  };
  function Vfs$Proxy() {
    Vfs.call(this);
    this.initialized = false;
  }
  Vfs$Proxy.prototype.transform_yirdke$ = function ($receiver, continuation) {
    return this.file_61zpoe$($receiver.path);
  };
  Vfs$Proxy.prototype.getUnderlyingUnscapedFile_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$getUnderlyingUnscapedFile_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getUnderlyingUnscapedFile_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$getUnderlyingUnscapedFile_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getUnderlyingUnscapedFile_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getUnderlyingUnscapedFile_61zpoe$.prototype.constructor = Coroutine$getUnderlyingUnscapedFile_61zpoe$;
  Coroutine$getUnderlyingUnscapedFile_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.transform_yirdke$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return toUnscaped(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.init = function (continuation) {
  };
  Vfs$Proxy.prototype.initOnce_yrkero$_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$initOnce_yrkero$_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$initOnce_yrkero$_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$initOnce_yrkero$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$initOnce_yrkero$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$initOnce_yrkero$_0.prototype.constructor = Coroutine$initOnce_yrkero$_0;
  Coroutine$initOnce_yrkero$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (!this.$this.initialized) {
              this.$this.initialized = true;
              this.state_0 = 2;
              this.result_0 = this.$this.init(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.exec_z6qifm$$default = function (path_0, cmdAndArgs_0, env_0, handler_0, continuation_0, suspended) {
    var instance = new Coroutine$exec_z6qifm$$default(this, path_0, cmdAndArgs_0, env_0, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$exec_z6qifm$$default($this, path_0, cmdAndArgs_0, env_0, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$cmdAndArgs = cmdAndArgs_0;
    this.local$env = env_0;
    this.local$handler = handler_0;
  }
  Coroutine$exec_z6qifm$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$exec_z6qifm$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$exec_z6qifm$$default.prototype.constructor = Coroutine$exec_z6qifm$$default;
  Coroutine$exec_z6qifm$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.exec_aqpaf4$(this.local$cmdAndArgs, this.local$env, this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.open_vb0dls$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_vb0dls$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$.prototype.constructor = Coroutine$open_vb0dls$;
  Coroutine$open_vb0dls$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.open_tiaunm$(this.local$mode, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.readRange_fmne7s$ = function (path_0, range_0, continuation_0, suspended) {
    var instance = new Coroutine$readRange_fmne7s$_0(this, path_0, range_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readRange_fmne7s$_0($this, path_0, range_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$range = range_0;
  }
  Coroutine$readRange_fmne7s$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readRange_fmne7s$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readRange_fmne7s$_0.prototype.constructor = Coroutine$readRange_fmne7s$_0;
  Coroutine$readRange_fmne7s$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.readRangeBytes_6z6t3e$(this.local$range, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var copyToArray = Kotlin.kotlin.collections.copyToArray;
  Vfs$Proxy.prototype.put_18ksq8$$default = function (path_0, content_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$put_18ksq8$$default_0(this, path_0, content_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$put_18ksq8$$default_0($this, path_0, content_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$content = content_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$put_18ksq8$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$put_18ksq8$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$put_18ksq8$$default_0.prototype.constructor = Coroutine$put_18ksq8$$default_0;
  Coroutine$put_18ksq8$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.put_r6jc4s$(this.local$content, copyToArray(this.local$attributes).slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.setSize_4wgjuj$ = function (path_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$setSize_4wgjuj$_0(this, path_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setSize_4wgjuj$_0($this, path_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$size = size_0;
  }
  Coroutine$setSize_4wgjuj$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setSize_4wgjuj$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setSize_4wgjuj$_0.prototype.constructor = Coroutine$setSize_4wgjuj$_0;
  Coroutine$setSize_4wgjuj$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.setSize_s8cxhz$(this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$.prototype.constructor = Coroutine$stat_61zpoe$;
  Coroutine$stat_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0.copy_a3mdi4$(this.$this.file_61zpoe$(this.local$path));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Vfs$Proxy$list$lambda(this$Proxy_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$Vfs$Proxy$list$lambda(this$Proxy_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Vfs$Proxy$list$lambda(this$Proxy_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$Proxy = this$Proxy_0;
    this.local$closure$path = closure$path_0;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$Vfs$Proxy$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Vfs$Proxy$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Vfs$Proxy$list$lambda.prototype.constructor = Coroutine$Vfs$Proxy$list$lambda;
  Coroutine$Vfs$Proxy$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$Proxy.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$this$Proxy.access_61zpoe$(this.local$closure$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$tmp$ = this.result_0.iterator();
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            if (!this.result_0) {
              this.state_0 = 11;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 8;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            var it = this.result_0;
            this.state_0 = 9;
            this.result_0 = this.local$this$Proxy.transform_yirdke$(it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = this.local$$receiver.yield_11rb$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 5;
            continue;
          case 11:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.list_61zpoe$ = function (path, continuation) {
    return asyncGenerate_0(Vfs$Proxy$list$lambda(this, path), continuation);
  };
  Vfs$Proxy.prototype.delete_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$delete_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$delete_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$delete_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delete_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delete_61zpoe$.prototype.constructor = Coroutine$delete_61zpoe$;
  Coroutine$delete_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.delete(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.setAttributes_z6b3ik$ = function (path_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$setAttributes_z6b3ik$(this, path_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setAttributes_z6b3ik$($this, path_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$setAttributes_z6b3ik$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setAttributes_z6b3ik$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setAttributes_z6b3ik$.prototype.constructor = Coroutine$setAttributes_z6b3ik$;
  Coroutine$setAttributes_z6b3ik$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.setAttributes_2biuok$(copyToArray(this.local$attributes).slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.mkdir_z6b3ik$ = function (path_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$mkdir_z6b3ik$(this, path_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mkdir_z6b3ik$($this, path_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$mkdir_z6b3ik$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mkdir_z6b3ik$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mkdir_z6b3ik$.prototype.constructor = Coroutine$mkdir_z6b3ik$;
  Coroutine$mkdir_z6b3ik$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.mkdir_2biuok$(copyToArray(this.local$attributes).slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.touch_cd0evc$ = function (path_0, time_0, atime_0, continuation_0, suspended) {
    var instance = new Coroutine$touch_cd0evc$(this, path_0, time_0, atime_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$touch_cd0evc$($this, path_0, time_0, atime_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$time = time_0;
    this.local$atime = atime_0;
  }
  Coroutine$touch_cd0evc$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$touch_cd0evc$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$touch_cd0evc$.prototype.constructor = Coroutine$touch_cd0evc$;
  Coroutine$touch_cd0evc$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.touch_3pjtqy$(this.local$time, this.local$atime, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.rename_puj7f4$ = function (src_0, dst_0, continuation_0, suspended) {
    var instance = new Coroutine$rename_puj7f4$_0(this, src_0, dst_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$rename_puj7f4$_0($this, src_0, dst_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$srcFile = void 0;
    this.local$src = src_0;
    this.local$dst = dst_0;
  }
  Coroutine$rename_puj7f4$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$rename_puj7f4$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$rename_puj7f4$_0.prototype.constructor = Coroutine$rename_puj7f4$_0;
  Coroutine$rename_puj7f4$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.access_61zpoe$(this.local$src, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$srcFile = this.result_0;
            this.state_0 = 4;
            this.result_0 = this.$this.access_61zpoe$(this.local$dst, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            var dstFile = this.result_0;
            if (!equals(this.local$srcFile.vfs, dstFile.vfs))
              throw IllegalArgumentException_init("Can't rename between filesystems. Use copyTo instead, and remove later.");
            this.state_0 = 5;
            this.result_0 = this.local$srcFile.renameTo_61zpoe$(dstFile.path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Vfs$Proxy$watch$lambda$lambda(closure$e_0, this$Proxy_0, closure$handler_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$Vfs$Proxy$watch$lambda$lambda(closure$e_0, this$Proxy_0, closure$handler_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Vfs$Proxy$watch$lambda$lambda(closure$e_0, this$Proxy_0, closure$handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$e = closure$e_0;
    this.local$this$Proxy = this$Proxy_0;
    this.local$closure$handler = closure$handler_0;
    this.local$f1 = void 0;
  }
  Coroutine$Vfs$Proxy$watch$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Vfs$Proxy$watch$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Vfs$Proxy$watch$lambda$lambda.prototype.constructor = Coroutine$Vfs$Proxy$watch$lambda$lambda;
  Coroutine$Vfs$Proxy$watch$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$this$Proxy.transform_yirdke$(this.local$closure$e.file, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$f1 = this.result_0;
            if ((tmp$ = this.local$closure$e.other) != null) {
              this.state_0 = 3;
              this.result_0 = this.local$this$Proxy.transform_yirdke$(tmp$, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            var f2 = this.result_0;
            return this.local$closure$handler(this.local$closure$e.copy_jkjwms$(void 0, this.local$f1, f2));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Vfs$Proxy$watch$lambda(this$Proxy_0, closure$handler_0) {
    return function (e_0, continuation_0, suspended) {
      var instance = new Coroutine$Vfs$Proxy$watch$lambda(this$Proxy_0, closure$handler_0, e_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$Vfs$Proxy$watch$lambda(this$Proxy_0, closure$handler_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$Proxy = this$Proxy_0;
    this.local$closure$handler = closure$handler_0;
    this.local$e = e_0;
  }
  Coroutine$Vfs$Proxy$watch$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$Vfs$Proxy$watch$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$Vfs$Proxy$watch$lambda.prototype.constructor = Coroutine$Vfs$Proxy$watch$lambda;
  Coroutine$Vfs$Proxy$watch$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return launchImmediately_0(this.context, void 0, Vfs$Proxy$watch$lambda$lambda(this.local$e, this.local$this$Proxy, this.local$closure$handler));
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.prototype.watch_6lbnta$ = function (path_0, handler_0, continuation_0, suspended) {
    var instance = new Coroutine$watch_6lbnta$(this, path_0, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$watch_6lbnta$($this, path_0, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$handler = handler_0;
  }
  Coroutine$watch_6lbnta$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$watch_6lbnta$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$watch_6lbnta$.prototype.constructor = Coroutine$watch_6lbnta$;
  Coroutine$watch_6lbnta$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_yrkero$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.result_0.watch_7c156q$(Vfs$Proxy$watch$lambda(this.$this, this.local$handler), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Vfs$Proxy.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Proxy',
    interfaces: [Vfs]
  };
  function Vfs$Decorator(parent) {
    Vfs$Proxy.call(this);
    this.parent = parent;
    this.parentVfs = this.parent.vfs;
  }
  Vfs$Decorator.prototype.access_61zpoe$ = function (path, continuation) {
    return this.parentVfs.get_61zpoe$(path);
  };
  Vfs$Decorator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Decorator',
    interfaces: [Vfs$Proxy]
  };
  function Vfs$FileEvent(kind, file, other) {
    if (other === void 0)
      other = null;
    this.kind = kind;
    this.file = file;
    this.other = other;
  }
  function Vfs$FileEvent$Kind(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Vfs$FileEvent$Kind_initFields() {
    Vfs$FileEvent$Kind_initFields = function () {
    };
    Vfs$FileEvent$Kind$DELETED_instance = new Vfs$FileEvent$Kind('DELETED', 0);
    Vfs$FileEvent$Kind$MODIFIED_instance = new Vfs$FileEvent$Kind('MODIFIED', 1);
    Vfs$FileEvent$Kind$CREATED_instance = new Vfs$FileEvent$Kind('CREATED', 2);
    Vfs$FileEvent$Kind$RENAMED_instance = new Vfs$FileEvent$Kind('RENAMED', 3);
  }
  var Vfs$FileEvent$Kind$DELETED_instance;
  function Vfs$FileEvent$Kind$DELETED_getInstance() {
    Vfs$FileEvent$Kind_initFields();
    return Vfs$FileEvent$Kind$DELETED_instance;
  }
  var Vfs$FileEvent$Kind$MODIFIED_instance;
  function Vfs$FileEvent$Kind$MODIFIED_getInstance() {
    Vfs$FileEvent$Kind_initFields();
    return Vfs$FileEvent$Kind$MODIFIED_instance;
  }
  var Vfs$FileEvent$Kind$CREATED_instance;
  function Vfs$FileEvent$Kind$CREATED_getInstance() {
    Vfs$FileEvent$Kind_initFields();
    return Vfs$FileEvent$Kind$CREATED_instance;
  }
  var Vfs$FileEvent$Kind$RENAMED_instance;
  function Vfs$FileEvent$Kind$RENAMED_getInstance() {
    Vfs$FileEvent$Kind_initFields();
    return Vfs$FileEvent$Kind$RENAMED_instance;
  }
  Vfs$FileEvent$Kind.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Kind',
    interfaces: [Enum]
  };
  function Vfs$FileEvent$Kind$values() {
    return [Vfs$FileEvent$Kind$DELETED_getInstance(), Vfs$FileEvent$Kind$MODIFIED_getInstance(), Vfs$FileEvent$Kind$CREATED_getInstance(), Vfs$FileEvent$Kind$RENAMED_getInstance()];
  }
  Vfs$FileEvent$Kind.values = Vfs$FileEvent$Kind$values;
  function Vfs$FileEvent$Kind$valueOf(name) {
    switch (name) {
      case 'DELETED':
        return Vfs$FileEvent$Kind$DELETED_getInstance();
      case 'MODIFIED':
        return Vfs$FileEvent$Kind$MODIFIED_getInstance();
      case 'CREATED':
        return Vfs$FileEvent$Kind$CREATED_getInstance();
      case 'RENAMED':
        return Vfs$FileEvent$Kind$RENAMED_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.file.Vfs.FileEvent.Kind.' + name);
    }
  }
  Vfs$FileEvent$Kind.valueOf_61zpoe$ = Vfs$FileEvent$Kind$valueOf;
  Vfs$FileEvent.prototype.toString = function () {
    return this.other != null ? this.kind.toString() + '(' + this.file + ', ' + toString(this.other) + ')' : this.kind.toString() + '(' + this.file + ')';
  };
  Vfs$FileEvent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileEvent',
    interfaces: []
  };
  Vfs$FileEvent.prototype.component1 = function () {
    return this.kind;
  };
  Vfs$FileEvent.prototype.component2 = function () {
    return this.file;
  };
  Vfs$FileEvent.prototype.component3 = function () {
    return this.other;
  };
  Vfs$FileEvent.prototype.copy_jkjwms$ = function (kind, file, other) {
    return new Vfs$FileEvent(kind === void 0 ? this.kind : kind, file === void 0 ? this.file : file, other === void 0 ? this.other : other);
  };
  Vfs$FileEvent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.kind) | 0;
    result = result * 31 + Kotlin.hashCode(this.file) | 0;
    result = result * 31 + Kotlin.hashCode(this.other) | 0;
    return result;
  };
  Vfs$FileEvent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.kind, other.kind) && Kotlin.equals(this.file, other.file) && Kotlin.equals(this.other, other.other)))));
  };
  Vfs.prototype.toString = function () {
    return get_portableSimpleName(Kotlin.getKClassFromExpression(this));
  };
  Vfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Vfs',
    interfaces: []
  };
  function VfsOpenMode(name, ordinal, cmode, write, createIfNotExists, truncate) {
    if (createIfNotExists === void 0)
      createIfNotExists = false;
    if (truncate === void 0)
      truncate = false;
    Enum.call(this);
    this.cmode = cmode;
    this.write = write;
    this.createIfNotExists = createIfNotExists;
    this.truncate = truncate;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function VfsOpenMode_initFields() {
    VfsOpenMode_initFields = function () {
    };
    VfsOpenMode$READ_instance = new VfsOpenMode('READ', 0, 'r', false);
    VfsOpenMode$WRITE_instance = new VfsOpenMode('WRITE', 1, 'rw', true, true);
    VfsOpenMode$APPEND_instance = new VfsOpenMode('APPEND', 2, 'a+', true, true);
    VfsOpenMode$CREATE_OR_TRUNCATE_instance = new VfsOpenMode('CREATE_OR_TRUNCATE', 3, 'rw', true, true, true);
    VfsOpenMode$CREATE_instance = new VfsOpenMode('CREATE', 4, 'rw', true, true);
    VfsOpenMode$CREATE_NEW_instance = new VfsOpenMode('CREATE_NEW', 5, 'rw', true);
    VfsOpenMode$Companion_getInstance();
  }
  var VfsOpenMode$READ_instance;
  function VfsOpenMode$READ_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$READ_instance;
  }
  var VfsOpenMode$WRITE_instance;
  function VfsOpenMode$WRITE_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$WRITE_instance;
  }
  var VfsOpenMode$APPEND_instance;
  function VfsOpenMode$APPEND_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$APPEND_instance;
  }
  var VfsOpenMode$CREATE_OR_TRUNCATE_instance;
  function VfsOpenMode$CREATE_OR_TRUNCATE_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$CREATE_OR_TRUNCATE_instance;
  }
  var VfsOpenMode$CREATE_instance;
  function VfsOpenMode$CREATE_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$CREATE_instance;
  }
  var VfsOpenMode$CREATE_NEW_instance;
  function VfsOpenMode$CREATE_NEW_getInstance() {
    VfsOpenMode_initFields();
    return VfsOpenMode$CREATE_NEW_instance;
  }
  function VfsOpenMode$Companion() {
    VfsOpenMode$Companion_instance = this;
  }
  VfsOpenMode$Companion.prototype.fromString_61zpoe$ = function (str) {
    if (contains(str, 114)) {
      return VfsOpenMode$READ_getInstance();
    }
    throw new NotImplementedError_init();
  };
  VfsOpenMode$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var VfsOpenMode$Companion_instance = null;
  function VfsOpenMode$Companion_getInstance() {
    VfsOpenMode_initFields();
    if (VfsOpenMode$Companion_instance === null) {
      new VfsOpenMode$Companion();
    }
    return VfsOpenMode$Companion_instance;
  }
  VfsOpenMode.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsOpenMode',
    interfaces: [Enum]
  };
  function VfsOpenMode$values() {
    return [VfsOpenMode$READ_getInstance(), VfsOpenMode$WRITE_getInstance(), VfsOpenMode$APPEND_getInstance(), VfsOpenMode$CREATE_OR_TRUNCATE_getInstance(), VfsOpenMode$CREATE_getInstance(), VfsOpenMode$CREATE_NEW_getInstance()];
  }
  VfsOpenMode.values = VfsOpenMode$values;
  function VfsOpenMode$valueOf(name) {
    switch (name) {
      case 'READ':
        return VfsOpenMode$READ_getInstance();
      case 'WRITE':
        return VfsOpenMode$WRITE_getInstance();
      case 'APPEND':
        return VfsOpenMode$APPEND_getInstance();
      case 'CREATE_OR_TRUNCATE':
        return VfsOpenMode$CREATE_OR_TRUNCATE_getInstance();
      case 'CREATE':
        return VfsOpenMode$CREATE_getInstance();
      case 'CREATE_NEW':
        return VfsOpenMode$CREATE_NEW_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.file.VfsOpenMode.' + name);
    }
  }
  VfsOpenMode.valueOf_61zpoe$ = VfsOpenMode$valueOf;
  function VfsProcessHandler() {
  }
  VfsProcessHandler.prototype.onOut_fqrh44$ = function (data, continuation) {
    return Unit;
  };
  VfsProcessHandler.prototype.onErr_fqrh44$ = function (data, continuation) {
    return Unit;
  };
  VfsProcessHandler.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsProcessHandler',
    interfaces: []
  };
  function VfsProcessException(message) {
    IOException.call(this, message);
    this.name = 'VfsProcessException';
  }
  VfsProcessException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsProcessException',
    interfaces: [IOException]
  };
  function VfsStat(file, exists, isDirectory, size, device, inode, mode, owner, group, createTime, modifiedTime, lastAccessTime, extraInfo, id) {
    if (device === void 0)
      device = L_1;
    if (inode === void 0)
      inode = L_1;
    if (mode === void 0)
      mode = 511;
    if (owner === void 0)
      owner = 'nobody';
    if (group === void 0)
      group = 'nobody';
    if (createTime === void 0)
      createTime = L0;
    if (modifiedTime === void 0)
      modifiedTime = createTime;
    if (lastAccessTime === void 0)
      lastAccessTime = modifiedTime;
    if (extraInfo === void 0)
      extraInfo = null;
    if (id === void 0)
      id = null;
    this.file = file;
    this.exists = exists;
    this.isDirectory = isDirectory;
    this.size = size;
    this.device = device;
    this.inode = inode;
    this.mode = mode;
    this.owner = owner;
    this.group = group;
    this.createTime = createTime;
    this.modifiedTime = modifiedTime;
    this.lastAccessTime = lastAccessTime;
    this.extraInfo = extraInfo;
    this.id = id;
  }
  Object.defineProperty(VfsStat.prototype, 'fullPath', {
    get: function () {
      return this.file.fullPath;
    }
  });
  VfsStat.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsStat',
    interfaces: [Path]
  };
  VfsStat.prototype.component1 = function () {
    return this.file;
  };
  VfsStat.prototype.component2 = function () {
    return this.exists;
  };
  VfsStat.prototype.component3 = function () {
    return this.isDirectory;
  };
  VfsStat.prototype.component4 = function () {
    return this.size;
  };
  VfsStat.prototype.component5 = function () {
    return this.device;
  };
  VfsStat.prototype.component6 = function () {
    return this.inode;
  };
  VfsStat.prototype.component7 = function () {
    return this.mode;
  };
  VfsStat.prototype.component8 = function () {
    return this.owner;
  };
  VfsStat.prototype.component9 = function () {
    return this.group;
  };
  VfsStat.prototype.component10 = function () {
    return this.createTime;
  };
  VfsStat.prototype.component11 = function () {
    return this.modifiedTime;
  };
  VfsStat.prototype.component12 = function () {
    return this.lastAccessTime;
  };
  VfsStat.prototype.component13 = function () {
    return this.extraInfo;
  };
  VfsStat.prototype.component14 = function () {
    return this.id;
  };
  VfsStat.prototype.copy_a3mdi4$ = function (file, exists, isDirectory, size, device, inode, mode, owner, group, createTime, modifiedTime, lastAccessTime, extraInfo, id) {
    return new VfsStat(file === void 0 ? this.file : file, exists === void 0 ? this.exists : exists, isDirectory === void 0 ? this.isDirectory : isDirectory, size === void 0 ? this.size : size, device === void 0 ? this.device : device, inode === void 0 ? this.inode : inode, mode === void 0 ? this.mode : mode, owner === void 0 ? this.owner : owner, group === void 0 ? this.group : group, createTime === void 0 ? this.createTime : createTime, modifiedTime === void 0 ? this.modifiedTime : modifiedTime, lastAccessTime === void 0 ? this.lastAccessTime : lastAccessTime, extraInfo === void 0 ? this.extraInfo : extraInfo, id === void 0 ? this.id : id);
  };
  VfsStat.prototype.toString = function () {
    return 'VfsStat(file=' + Kotlin.toString(this.file) + (', exists=' + Kotlin.toString(this.exists)) + (', isDirectory=' + Kotlin.toString(this.isDirectory)) + (', size=' + Kotlin.toString(this.size)) + (', device=' + Kotlin.toString(this.device)) + (', inode=' + Kotlin.toString(this.inode)) + (', mode=' + Kotlin.toString(this.mode)) + (', owner=' + Kotlin.toString(this.owner)) + (', group=' + Kotlin.toString(this.group)) + (', createTime=' + Kotlin.toString(this.createTime)) + (', modifiedTime=' + Kotlin.toString(this.modifiedTime)) + (', lastAccessTime=' + Kotlin.toString(this.lastAccessTime)) + (', extraInfo=' + Kotlin.toString(this.extraInfo)) + (', id=' + Kotlin.toString(this.id)) + ')';
  };
  VfsStat.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.file) | 0;
    result = result * 31 + Kotlin.hashCode(this.exists) | 0;
    result = result * 31 + Kotlin.hashCode(this.isDirectory) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.device) | 0;
    result = result * 31 + Kotlin.hashCode(this.inode) | 0;
    result = result * 31 + Kotlin.hashCode(this.mode) | 0;
    result = result * 31 + Kotlin.hashCode(this.owner) | 0;
    result = result * 31 + Kotlin.hashCode(this.group) | 0;
    result = result * 31 + Kotlin.hashCode(this.createTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.modifiedTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.lastAccessTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.extraInfo) | 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  VfsStat.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.file, other.file) && Kotlin.equals(this.exists, other.exists) && Kotlin.equals(this.isDirectory, other.isDirectory) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.device, other.device) && Kotlin.equals(this.inode, other.inode) && Kotlin.equals(this.mode, other.mode) && Kotlin.equals(this.owner, other.owner) && Kotlin.equals(this.group, other.group) && Kotlin.equals(this.createTime, other.createTime) && Kotlin.equals(this.modifiedTime, other.modifiedTime) && Kotlin.equals(this.lastAccessTime, other.lastAccessTime) && Kotlin.equals(this.extraInfo, other.extraInfo) && Kotlin.equals(this.id, other.id)))));
  };
  function get_createDate($receiver) {
    return DateTime.Companion.fromUnix_s8cxhz$($receiver.createTime);
  }
  function get_modifiedDate($receiver) {
    return DateTime.Companion.fromUnix_s8cxhz$($receiver.modifiedTime);
  }
  function get_lastAccessDate($receiver) {
    return DateTime.Companion.fromUnix_s8cxhz$($receiver.lastAccessTime);
  }
  function writeToFile($receiver, path, continuation) {
    return LocalVfs_0(path).write_bdsgvo$($receiver, [], continuation);
  }
  function writeToFile_0($receiver, file, continuation) {
    return file.write_bdsgvo$($receiver, [], continuation);
  }
  function VfsFile(vfs, path) {
    VfsNamed.call(this, path);
    this.vfs = vfs;
    this.path = path;
  }
  Object.defineProperty(VfsFile.prototype, 'parent', {
    get: function () {
      return new VfsFile(this.vfs, get_folder(this));
    }
  });
  Object.defineProperty(VfsFile.prototype, 'root', {
    get: function () {
      return this.vfs.root;
    }
  });
  Object.defineProperty(VfsFile.prototype, 'absolutePath', {
    get: function () {
      return this.vfs.getAbsolutePath_61zpoe$(this.path);
    }
  });
  VfsFile.prototype.get_61zpoe$ = function (path) {
    return new VfsFile(this.vfs, VfsUtil_getInstance().combine_puj7f4$(this.path, path));
  };
  VfsFile.prototype.set_puj7f4$ = function (path, content, continuation) {
    return this.get_61zpoe$(path).put_nu7ace$(openAsync(toByteArray(content, UTF8_getInstance())), void 0, continuation);
  };
  VfsFile.prototype.set_yzgtim$ = function (path, content, continuation) {
    return this.get_61zpoe$(path).put_nu7ace$(openAsync(content), void 0, continuation);
  };
  VfsFile.prototype.set_519pps$ = function (path, content, continuation) {
    return this.get_61zpoe$(path).writeStream_85b5ie$(content, [], continuation);
  };
  VfsFile.prototype.set_tv2dhr$ = function (path, content, continuation) {
    return this.get_61zpoe$(path).writeFile_71bpb9$(content, [], continuation);
  };
  VfsFile.prototype.put_nu7ace$ = function (content, attributes, continuation) {
    if (attributes === void 0) {
      attributes = emptyList();
    }
    return this.vfs.put_18ksq8$(this.path, content, attributes, continuation);
  };
  VfsFile.prototype.put_r6jc4s$ = function (content, attributes, continuation) {
    return this.vfs.put_18ksq8$(this.path, content, toList_0(attributes), continuation);
  };
  VfsFile.prototype.write_bdsgvo$ = function (data, attributes, continuation) {
    return this.vfs.put_pd85a0$(this.path, data, toList_0(attributes), continuation);
  };
  VfsFile.prototype.writeBytes_bdsgvo$ = function (data, attributes, continuation) {
    return this.vfs.put_pd85a0$(this.path, data, toList_0(attributes), continuation);
  };
  VfsFile.prototype.writeStream_85b5ie$ = function (src_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$writeStream_85b5ie$(this, src_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$writeStream_85b5ie$($this, src_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$src = src_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$writeStream_85b5ie$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeStream_85b5ie$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeStream_85b5ie$.prototype.constructor = Coroutine$writeStream_85b5ie$;
  Coroutine$writeStream_85b5ie$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.put_r6jc4s$(this.local$src, this.local$attributes.slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$src.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.writeStream_r6jc4s$ = function (src, attributes, continuation) {
    return this.put_r6jc4s$(src, attributes.slice(), continuation);
  };
  VfsFile.prototype.writeFile_71bpb9$ = function (file, attributes, continuation) {
    return file.copyTo_71bpb9$(this, attributes.slice(), continuation);
  };
  var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
  var ArrayList_init_1 = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  VfsFile.prototype.listNames = function (continuation_0, suspended) {
    var instance = new Coroutine$listNames(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listNames($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$listNames.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listNames.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listNames.prototype.constructor = Coroutine$listNames;
  Coroutine$listNames.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = toList_3(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var $receiver = this.result_0;
            var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
            var tmp$;
            tmp$ = $receiver.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              destination.add_11rb$(get_basename(item));
            }

            return destination;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$copyTo$lambda(closure$target_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$copyTo$lambda(closure$target_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$copyTo$lambda(closure$target_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$target = closure$target_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$VfsFile$copyTo$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$copyTo$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$copyTo$lambda.prototype.constructor = Coroutine$VfsFile$copyTo$lambda;
  Coroutine$VfsFile$copyTo$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = copyTo(this.local$$receiver, this.local$closure$target, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$openUse$lambda(closure$callback_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$openUse$lambda(closure$callback_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$openUse$lambda(closure$callback_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$VfsFile$openUse$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$openUse$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$openUse$lambda.prototype.constructor = Coroutine$VfsFile$openUse$lambda;
  Coroutine$VfsFile$openUse$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.copyTo_dm3lun$ = function (target_0, continuation_0, suspended) {
    var instance = new Coroutine$copyTo_dm3lun$(this, target_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$copyTo_dm3lun$($this, target_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$target = target_0;
  }
  Coroutine$copyTo_dm3lun$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$copyTo_dm3lun$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$copyTo_dm3lun$.prototype.constructor = Coroutine$copyTo_dm3lun$;
  Coroutine$copyTo_dm3lun$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.open_tiaunm$(VfsOpenMode.READ, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(VfsFile$openUse$lambda(VfsFile$copyTo$lambda(this.local$target)), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$copyTo$lambda_0(closure$target_0, closure$attributes_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$copyTo$lambda_0(closure$target_0, closure$attributes_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$copyTo$lambda_0(closure$target_0, closure$attributes_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$target = closure$target_0;
    this.local$closure$attributes = closure$attributes_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$VfsFile$copyTo$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$copyTo$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$copyTo$lambda_0.prototype.constructor = Coroutine$VfsFile$copyTo$lambda_0;
  Coroutine$VfsFile$copyTo$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$target.writeStream_r6jc4s$(this.local$$receiver, this.local$closure$attributes.slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.copyTo_71bpb9$ = function (target_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$copyTo_71bpb9$(this, target_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$copyTo_71bpb9$($this, target_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$target = target_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$copyTo_71bpb9$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$copyTo_71bpb9$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$copyTo_71bpb9$.prototype.constructor = Coroutine$copyTo_71bpb9$;
  Coroutine$copyTo_71bpb9$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.$this.openInputStream(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(VfsFile$copyTo$lambda_0(this.local$target, this.local$attributes), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.withExtension_61zpoe$ = function (ext) {
    return new VfsFile(this.vfs, get_fullnameWithoutExtension(this) + (ext.length > 0 ? '.' + ext : ''));
  };
  VfsFile.prototype.withCompoundExtension_61zpoe$ = function (ext) {
    return new VfsFile(this.vfs, get_fullnameWithoutCompoundExtension(this) + (ext.length > 0 ? '.' + ext : ''));
  };
  VfsFile.prototype.appendExtension_61zpoe$ = function (ext) {
    return new VfsFile(this.vfs, get_fullname(this) + '.' + ext);
  };
  VfsFile.prototype.open_tiaunm$ = function (mode, continuation) {
    if (mode === void 0)
      mode = VfsOpenMode$READ_getInstance();
    return this.vfs.open_vb0dls$(this.path, mode, continuation);
  };
  VfsFile.prototype.openInputStream = function (continuation) {
    return this.vfs.openInputStream_61zpoe$(this.path, continuation);
  };
  VfsFile.prototype.openRead = function (continuation) {
    return this.open_tiaunm$(VfsOpenMode$READ_getInstance(), continuation);
  };
  VfsFile.prototype.openUse_fgix0i$ = function (mode, callback, continuation, suspended) {
    var instance = new Coroutine$openUse_fgix0i$(this, mode, callback, continuation);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$openUse_fgix0i$($this, mode, callback, continuation) {
    CoroutineImpl.call(this, continuation);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$mode = mode;
    this.local$callback = callback;
  }
  Coroutine$openUse_fgix0i$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openUse_fgix0i$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openUse_fgix0i$.prototype.constructor = Coroutine$openUse_fgix0i$;
  Coroutine$openUse_fgix0i$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$mode === void 0)
              this.local$mode = VfsOpenMode.READ;
            this.state_0 = 1;
            this.result_0 = this.$this.open_tiaunm$(this.local$mode, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(VfsFile$openUse$lambda(this.local$callback), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  defineInlineFunction('korio-js.com.soywiz.korio.file.VfsFile.openUse_fgix0i$', wrapFunction(function () {
    var VfsOpenMode = _.com.soywiz.korio.file.VfsOpenMode;
    function VfsFile$openUse$lambda(closure$callback_0) {
      return function ($receiver_0, continuation_0, suspended) {
        var instance = new Coroutine$VfsFile$openUse$lambda(closure$callback_0, $receiver_0, this, continuation_0);
        if (suspended)
          return instance;
        else
          return instance.doResume(null);
      };
    }
    function Coroutine$VfsFile$openUse$lambda(closure$callback_0, $receiver_0, controller, continuation_0) {
      CoroutineImpl.call(this, continuation_0);
      this.$controller = controller;
      this.exceptionState_0 = 1;
      this.local$closure$callback = closure$callback_0;
      this.local$$receiver = $receiver_0;
    }
    Coroutine$VfsFile$openUse$lambda.$metadata$ = {
      kind: Kotlin.Kind.CLASS,
      simpleName: null,
      interfaces: [CoroutineImpl]
    };
    Coroutine$VfsFile$openUse$lambda.prototype = Object.create(CoroutineImpl.prototype);
    Coroutine$VfsFile$openUse$lambda.prototype.constructor = Coroutine$VfsFile$openUse$lambda;
    Coroutine$VfsFile$openUse$lambda.prototype.doResume = function () {
      do
        try {
          switch (this.state_0) {
            case 0:
              this.state_0 = 2;
              this.result_0 = this.local$closure$callback(this.local$$receiver, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            case 1:
              throw this.exception_0;
            case 2:
              return this.result_0;
          }
        }
         catch (e) {
          if (this.state_0 === 1) {
            this.exceptionState_0 = this.state_0;
            throw e;
          }
           else {
            this.state_0 = this.exceptionState_0;
            this.exception_0 = e;
          }
        }
       while (true);
    };
    var await_0 = _.com.soywiz.korio.async.await_7zc599$;
    return function (mode, callback, continuation) {
      if (mode === void 0)
        mode = VfsOpenMode.READ;
      Kotlin.suspendCall(this.open_tiaunm$(mode, Kotlin.coroutineReceiver()));
      var $receiver = Kotlin.coroutineResult(Kotlin.coroutineReceiver());
      try {
        Kotlin.suspendCall(await_0(VfsFile$openUse$lambda(callback), $receiver, Kotlin.coroutineReceiver()));
      }
      finally {
        Kotlin.suspendCall($receiver.close(Kotlin.coroutineReceiver()));
      }
      return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
    };
  }));
  VfsFile.prototype.readRangeBytes_6z6t3e$ = function (range, continuation) {
    return this.vfs.readRange_fmne7s$(this.path, range, continuation);
  };
  VfsFile.prototype.readRangeBytes_n8acyv$ = function (range, continuation) {
    return this.vfs.readRange_fmne7s$(this.path, toLongRange(range), continuation);
  };
  VfsFile.prototype.readAll = function (continuation) {
    return this.vfs.readRange_fmne7s$(this.path, LONG_ZERO_TO_MAX_RANGE, continuation);
  };
  VfsFile.prototype.read = function (continuation) {
    return this.readAll(continuation);
  };
  VfsFile.prototype.readBytes = function (continuation) {
    return this.readAll(continuation);
  };
  VfsFile.prototype.readLines_qa9gbo$ = function (charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readLines_qa9gbo$(this, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readLines_qa9gbo$($this, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$charset = charset_0;
  }
  Coroutine$readLines_qa9gbo$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readLines_qa9gbo$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readLines_qa9gbo$.prototype.constructor = Coroutine$readLines_qa9gbo$;
  Coroutine$readLines_qa9gbo$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = this.$this.readString_qa9gbo$(this.local$charset, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return lines(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.writeLines_5hmqn7$ = function (lines, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.writeString_haropi$(joinToString(lines, '\n'), charset, [], continuation);
  };
  VfsFile.prototype.readString_qa9gbo$ = function (charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readString_qa9gbo$(this, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readString_qa9gbo$($this, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$charset = charset_0;
  }
  Coroutine$readString_qa9gbo$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readString_qa9gbo$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readString_qa9gbo$.prototype.constructor = Coroutine$readString_qa9gbo$;
  Coroutine$readString_qa9gbo$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = this.$this.read(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return toString_0(this.result_0, this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.writeString_u6bnja$ = function (data_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$writeString_u6bnja$(this, data_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$writeString_u6bnja$($this, data_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$writeString_u6bnja$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeString_u6bnja$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeString_u6bnja$.prototype.constructor = Coroutine$writeString_u6bnja$;
  Coroutine$writeString_u6bnja$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.write_bdsgvo$(toByteArray(this.local$data, UTF8_getInstance()), this.local$attributes.slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.writeString_haropi$ = function (data_0, charset_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$writeString_haropi$(this, data_0, charset_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$writeString_haropi$($this, data_0, charset_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$charset = charset_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$writeString_haropi$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeString_haropi$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeString_haropi$.prototype.constructor = Coroutine$writeString_haropi$;
  Coroutine$writeString_haropi$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.write_bdsgvo$(toByteArray(this.local$data, this.local$charset), this.local$attributes.slice(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.readChunk_yhmem3$ = function (offset, size, continuation) {
    return this.vfs.readChunk_dckg8j$(this.path, offset, size, continuation);
  };
  VfsFile.prototype.writeChunk_fzdgxm$ = function (data, offset, resize, continuation) {
    if (resize === void 0)
      resize = false;
    return this.vfs.writeChunk_1ce9rc$(this.path, data, offset, resize, continuation);
  };
  VfsFile.prototype.readAsSyncStream = function (continuation_0, suspended) {
    var instance = new Coroutine$readAsSyncStream(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readAsSyncStream($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$readAsSyncStream.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAsSyncStream.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAsSyncStream.prototype.constructor = Coroutine$readAsSyncStream;
  Coroutine$readAsSyncStream.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.read(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return openSync(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.stat = function (continuation) {
    return this.vfs.stat_61zpoe$(this.path, continuation);
  };
  VfsFile.prototype.touch_3pjtqy$ = function (time, atime, continuation) {
    if (atime === void 0)
      atime = time;
    return this.vfs.touch_cd0evc$(this.path, time, atime, continuation);
  };
  VfsFile.prototype.size = function (continuation_0, suspended) {
    var instance = new Coroutine$size(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$size($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$size.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$size.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$size.prototype.constructor = Coroutine$size;
  Coroutine$size.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.vfs.stat_61zpoe$(this.$this.path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.size;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.exists = function (continuation_0, suspended) {
    var instance = new Coroutine$exists(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$exists($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$ignoreErrors$result = void 0;
  }
  Coroutine$exists.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$exists.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$exists.prototype.constructor = Coroutine$exists;
  Coroutine$exists.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 1;
            continue;
          case 1:
            this.exceptionState_0 = 3;
            this.state_0 = 2;
            this.result_0 = this.$this.vfs.stat_61zpoe$(this.$this.path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.local$ignoreErrors$result = this.result_0.exists;
            this.exceptionState_0 = 7;
            this.state_0 = 5;
            continue;
          case 3:
            this.exceptionState_0 = 7;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              if (false)
                printStackTrace(e);
              this.local$ignoreErrors$result = null;
              this.exceptionState_0 = 3;
              this.state_0 = 6;
              continue;
            }
             else {
              throw e;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            if (!false) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 1;
            continue;
          case 6:
            return (tmp$ = this.local$ignoreErrors$result) != null ? tmp$ : false;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.isDirectory = function (continuation_0, suspended) {
    var instance = new Coroutine$isDirectory(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$isDirectory($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$isDirectory.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$isDirectory.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$isDirectory.prototype.constructor = Coroutine$isDirectory;
  Coroutine$isDirectory.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.isDirectory;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.setSize_s8cxhz$ = function (size, continuation) {
    return this.vfs.setSize_4wgjuj$(this.path, size, continuation);
  };
  VfsFile.prototype.delete = function (continuation) {
    return this.vfs.delete_61zpoe$(this.path, continuation);
  };
  VfsFile.prototype.setAttributes_3zdbky$ = function (attributes, continuation) {
    return this.vfs.setAttributes_z6b3ik$(this.path, attributes, continuation);
  };
  VfsFile.prototype.setAttributes_2biuok$ = function (attributes, continuation) {
    return this.vfs.setAttributes_z6b3ik$(this.path, toList_0(attributes), continuation);
  };
  VfsFile.prototype.mkdir_3zdbky$ = function (attributes, continuation) {
    return this.vfs.mkdir_z6b3ik$(this.path, attributes, continuation);
  };
  VfsFile.prototype.mkdir_2biuok$ = function (attributes, continuation) {
    return this.mkdir_3zdbky$(toList_0(attributes), continuation);
  };
  VfsFile.prototype.mkdirs_3zdbky$ = function (attributes, continuation) {
    return this.mkdir_3zdbky$(attributes, continuation);
  };
  VfsFile.prototype.mkdirs_2biuok$ = function (attributes, continuation) {
    return this.mkdir_3zdbky$(toList_0(attributes), continuation);
  };
  function VfsFile$copyToTree$lambda(it, continuation_0, suspended) {
    var instance = new Coroutine$VfsFile$copyToTree$lambda(it, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$VfsFile$copyToTree$lambda(it, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$VfsFile$copyToTree$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$copyToTree$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$copyToTree$lambda.prototype.constructor = Coroutine$VfsFile$copyToTree$lambda;
  Coroutine$VfsFile$copyToTree$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.copyToTree_t1e86f$ = function (target_0, attributes_0, notify_0, continuation_0, suspended) {
    var instance = new Coroutine$copyToTree_t1e86f$(this, target_0, attributes_0, notify_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$copyToTree_t1e86f$($this, target_0, attributes_0, notify_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$target = target_0;
    this.local$attributes = attributes_0;
    this.local$notify = notify_0;
  }
  Coroutine$copyToTree_t1e86f$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$copyToTree_t1e86f$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$copyToTree_t1e86f$.prototype.constructor = Coroutine$copyToTree_t1e86f$;
  Coroutine$copyToTree_t1e86f$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$notify === void 0)
              this.local$notify = VfsFile$copyToTree$lambda;
            this.state_0 = 2;
            this.result_0 = this.local$notify(to(this.$this, this.local$target), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.isDirectory(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (this.result_0) {
              this.state_0 = 5;
              this.result_0 = this.local$target.mkdir_2biuok$([], this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              this.result_0 = this.$this.copyTo_71bpb9$(this.local$target, this.local$attributes.slice(), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 4:
            this.state_0 = 13;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.$this.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.local$tmp$ = this.result_0.iterator();
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            if (!this.result_0) {
              this.state_0 = 12;
              continue;
            }
             else {
              this.state_0 = 9;
              continue;
            }

          case 9:
            this.state_0 = 10;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var file = this.result_0;
            this.state_0 = 11;
            this.result_0 = file.copyToTree_t1e86f$(this.local$target.get_61zpoe$(get_basename(file)), this.local$attributes.slice(), this.local$notify, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            this.state_0 = 7;
            continue;
          case 12:
            this.state_0 = 13;
            continue;
          case 13:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.ensureParents = function (continuation_0, suspended) {
    var instance = new Coroutine$ensureParents(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$ensureParents($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$ensureParents.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ensureParents.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ensureParents.prototype.constructor = Coroutine$ensureParents;
  Coroutine$ensureParents.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.parent.mkdir_2biuok$([], this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.renameTo_61zpoe$ = function (dstPath, continuation) {
    return this.vfs.rename_puj7f4$(this.path, dstPath, continuation);
  };
  VfsFile.prototype.list = function (continuation) {
    return this.vfs.list_61zpoe$(this.path, continuation);
  };
  VfsFile.prototype.iterator = function (continuation_0, suspended) {
    var instance = new Coroutine$iterator_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$iterator_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$iterator_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$iterator_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$iterator_0.prototype.constructor = Coroutine$iterator_0;
  Coroutine$iterator_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.iterator();
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$listRecursive$lambda(it) {
    return true;
  }
  function VfsFile$listRecursive$lambda_0(this$VfsFile_0, closure$filter_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$listRecursive$lambda(this$VfsFile_0, closure$filter_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$listRecursive$lambda(this$VfsFile_0, closure$filter_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$VfsFile = this$VfsFile_0;
    this.local$closure$filter = closure$filter_0;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$file = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$VfsFile$listRecursive$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$listRecursive$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$listRecursive$lambda.prototype.constructor = Coroutine$VfsFile$listRecursive$lambda;
  Coroutine$VfsFile$listRecursive$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$VfsFile.list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0.iterator();
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            if (!this.result_0) {
              this.state_0 = 18;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.local$file = this.result_0;
            if (!this.local$closure$filter(this.local$file)) {
              this.state_0 = 3;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 8;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$file, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = this.local$file.stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            var stat = this.result_0;
            if (stat.isDirectory) {
              this.state_0 = 10;
              this.result_0 = this.local$file.listRecursive_s5lnwc$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 17;
              continue;
            }

          case 10:
            this.local$tmp$_0 = this.result_0.iterator();
            this.state_0 = 11;
            continue;
          case 11:
            this.state_0 = 12;
            this.result_0 = this.local$tmp$_0.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            if (!this.result_0) {
              this.state_0 = 16;
              continue;
            }
             else {
              this.state_0 = 13;
              continue;
            }

          case 13:
            this.state_0 = 14;
            this.result_0 = this.local$tmp$_0.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            var f = this.result_0;
            this.state_0 = 15;
            this.result_0 = this.local$$receiver.yield_11rb$(f, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 15:
            this.state_0 = 11;
            continue;
          case 16:
            this.state_0 = 17;
            continue;
          case 17:
            this.state_0 = 3;
            continue;
          case 18:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.listRecursive_s5lnwc$ = function (filter, continuation) {
    if (filter === void 0)
      filter = VfsFile$listRecursive$lambda;
    return asyncGenerate_0(VfsFile$listRecursive$lambda_0(this, filter), continuation);
  };
  VfsFile.prototype.exec_aqpaf4$ = function (cmdAndArgs, env, handler, continuation) {
    if (env === void 0)
      env = lmapOf([]);
    if (handler === void 0)
      handler = new VfsProcessHandler();
    return this.vfs.exec_z6qifm$(this.path, cmdAndArgs, env, handler, continuation);
  };
  function VfsFile$execToString$ObjectLiteral(closure$out, closure$captureError, closure$err) {
    this.closure$out = closure$out;
    this.closure$captureError = closure$captureError;
    this.closure$err = closure$err;
    VfsProcessHandler.call(this);
  }
  VfsFile$execToString$ObjectLiteral.prototype.onOut_fqrh44$ = function (data, continuation) {
    this.closure$out.append_fqrh44$(data);
  };
  VfsFile$execToString$ObjectLiteral.prototype.onErr_fqrh44$ = function (data, continuation) {
    if (this.closure$captureError)
      this.closure$out.append_fqrh44$(data);
    this.closure$err.append_fqrh44$(data);
  };
  VfsFile$execToString$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [VfsProcessHandler]
  };
  VfsFile.prototype.execToString_rejnxc$ = function (cmdAndArgs_0, env_0, charset_0, captureError_0, throwOnError_0, continuation_0, suspended) {
    var instance = new Coroutine$execToString_rejnxc$(this, cmdAndArgs_0, env_0, charset_0, captureError_0, throwOnError_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$execToString_rejnxc$($this, cmdAndArgs_0, env_0, charset_0, captureError_0, throwOnError_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$out = void 0;
    this.local$err = void 0;
    this.local$cmdAndArgs = cmdAndArgs_0;
    this.local$env = env_0;
    this.local$charset = charset_0;
    this.local$captureError = captureError_0;
    this.local$throwOnError = throwOnError_0;
  }
  Coroutine$execToString_rejnxc$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$execToString_rejnxc$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$execToString_rejnxc$.prototype.constructor = Coroutine$execToString_rejnxc$;
  Coroutine$execToString_rejnxc$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$env === void 0)
              this.local$env = lmapOf([]);
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            if (this.local$captureError === void 0)
              this.local$captureError = false;
            if (this.local$throwOnError === void 0)
              this.local$throwOnError = true;
            this.local$out = new ByteArrayBuilder();
            this.local$err = new ByteArrayBuilder();
            this.state_0 = 2;
            this.result_0 = this.$this.exec_aqpaf4$(this.local$cmdAndArgs, this.local$env, new VfsFile$execToString$ObjectLiteral(this.local$out, this.local$captureError, this.local$err), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            var errString = toString_0(this.local$err.toByteArray(), this.local$charset);
            var outString = toString_0(this.local$out.toByteArray(), this.local$charset);
            if (this.local$throwOnError && result !== 0)
              throw new VfsProcessException('Process not returned 0, but ' + result + '. Error: ' + errString + ', Output: ' + outString);
            return outString;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile.prototype.execToString_kd6qi3$ = function (cmdAndArgs, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.execToString_rejnxc$(toList_0(cmdAndArgs), void 0, charset, void 0, void 0, continuation);
  };
  function VfsFile$passthru$ObjectLiteral(closure$charset) {
    this.closure$charset = closure$charset;
    VfsProcessHandler.call(this);
  }
  var print = Kotlin.kotlin.io.print_s8jyv4$;
  VfsFile$passthru$ObjectLiteral.prototype.onOut_fqrh44$ = function (data, continuation) {
    klogger.Console;
    var out_print$result;
    print(toString_0(data, this.closure$charset));
    return out_print$result;
  };
  VfsFile$passthru$ObjectLiteral.prototype.onErr_fqrh44$ = function (data, continuation) {
    klogger.Console;
    var err_print$result;
    print(toString_0(data, this.closure$charset));
    return err_print$result;
  };
  VfsFile$passthru$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [VfsProcessHandler]
  };
  VfsFile.prototype.passthru_msg81s$ = function (cmdAndArgs, env, charset, continuation) {
    if (env === void 0)
      env = lmapOf([]);
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.exec_aqpaf4$(toList(cmdAndArgs), env, new VfsFile$passthru$ObjectLiteral(charset), continuation);
  };
  VfsFile.prototype.passthru_2y9ixa$ = function (cmdAndArgs, env, charset, continuation) {
    if (env === void 0)
      env = lmapOf([]);
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.passthru_msg81s$(toList_0(cmdAndArgs), env, charset, continuation);
  };
  function VfsFile$watch$lambda$lambda(closure$handler_0, closure$event_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$watch$lambda$lambda(closure$handler_0, closure$event_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$watch$lambda$lambda(closure$handler_0, closure$event_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$closure$event = closure$event_0;
  }
  Coroutine$VfsFile$watch$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$watch$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$watch$lambda$lambda.prototype.constructor = Coroutine$VfsFile$watch$lambda$lambda;
  Coroutine$VfsFile$watch$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$closure$event, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$watch$lambda(closure$cc, closure$handler) {
    return function (event) {
      launchImmediately_0(closure$cc, void 0, VfsFile$watch$lambda$lambda(closure$handler, event));
      return Unit;
    };
  }
  VfsFile.prototype.watch_7c156q$ = function (handler, continuation) {
    var cc = continuation.context;
    return this.vfs.watch_6lbnta$(this.path, VfsFile$watch$lambda(cc, handler), continuation);
  };
  function VfsFile$redirected$ObjectLiteral(closure$actualFile, closure$pathRedirector) {
    this.closure$actualFile = closure$actualFile;
    this.closure$pathRedirector = closure$pathRedirector;
    Vfs$Proxy.call(this);
  }
  VfsFile$redirected$ObjectLiteral.prototype.access_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$access_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$access_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$path = path_0;
  }
  Coroutine$access_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$access_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$access_61zpoe$.prototype.constructor = Coroutine$access_61zpoe$;
  Coroutine$access_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = this.$this.closure$actualFile;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$pathRedirector(this.$this.closure$actualFile, this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$tmp$.get_61zpoe$(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  VfsFile$redirected$ObjectLiteral.prototype.toString = function () {
    return 'VfsRedirected';
  };
  VfsFile$redirected$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Vfs$Proxy]
  };
  VfsFile.prototype.redirected_j8632z$ = function (pathRedirector, continuation) {
    var actualFile = this;
    return new VfsFile(new VfsFile$redirected$ObjectLiteral(actualFile, pathRedirector), this.path);
  };
  VfsFile.prototype.jail = function () {
    return JailVfs(this);
  };
  VfsFile.prototype.getUnderlyingUnscapedFile = function (continuation) {
    return this.vfs.getUnderlyingUnscapedFile_61zpoe$(this.path, continuation);
  };
  VfsFile.prototype.toString = function () {
    return this.vfs.toString() + '[' + this.path + ']';
  };
  VfsFile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VfsFile',
    interfaces: [SuspendingSuspendSequence, AsyncInputOpenable, VfsNamed]
  };
  function toUnscaped($receiver) {
    return new FinalVfsFile($receiver.vfs, $receiver.path);
  }
  function toFile($receiver) {
    return new VfsFile($receiver.vfs, $receiver.path);
  }
  function FinalVfsFile(vfs, path) {
    this.vfs = vfs;
    this.path = path;
  }
  FinalVfsFile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FinalVfsFile',
    interfaces: []
  };
  FinalVfsFile.prototype.component1 = function () {
    return this.vfs;
  };
  FinalVfsFile.prototype.component2 = function () {
    return this.path;
  };
  FinalVfsFile.prototype.copy_o2v52r$ = function (vfs, path) {
    return new FinalVfsFile(vfs === void 0 ? this.vfs : vfs, path === void 0 ? this.path : path);
  };
  FinalVfsFile.prototype.toString = function () {
    return 'FinalVfsFile(vfs=' + Kotlin.toString(this.vfs) + (', path=' + Kotlin.toString(this.path)) + ')';
  };
  FinalVfsFile.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.vfs) | 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    return result;
  };
  FinalVfsFile.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.vfs, other.vfs) && Kotlin.equals(this.path, other.path)))));
  };
  function VfsUtil() {
    VfsUtil_instance = this;
    this.File_separatorChar = KorioNative_getInstance().File_separatorChar;
  }
  VfsUtil.prototype.parts_61zpoe$ = function (path) {
    return split(path, Kotlin.charArrayOf(47));
  };
  VfsUtil.prototype.normalize_61zpoe$ = function (path) {
    var tmp$;
    var schemeIndex = indexOf(path, ':');
    if (schemeIndex >= 0) {
      var take = startsWith(path.substring(schemeIndex), '://') ? 3 : 1;
      var endIndex = schemeIndex + take | 0;
      var tmp$_0 = path.substring(0, endIndex);
      var startIndex = schemeIndex + take | 0;
      return tmp$_0 + this.normalize_61zpoe$(path.substring(startIndex));
    }
     else {
      var path2 = replace_0(path, 92, 47);
      var out = ArrayList_init();
      tmp$ = split_0(path2, ['/']).iterator();
      while (tmp$.hasNext()) {
        var part = tmp$.next();
        switch (part) {
          case '':
          case '.':
            if (out.isEmpty()) {
              out.add_11rb$('');
            }

            break;
          case '..':
            if (!out.isEmpty())
              out.removeAt_za3lpa$(out.size - 1 | 0);
            break;
          default:out.add_11rb$(part);
            break;
        }
      }
      return joinToString(out, '/');
    }
  };
  VfsUtil.prototype.combine_puj7f4$ = function (base, access) {
    return this.isAbsolute_61zpoe$(access) ? this.normalize_61zpoe$(access) : this.normalize_61zpoe$(base + '/' + access);
  };
  VfsUtil.prototype.lightCombine_puj7f4$ = function (base, access) {
    return base.length > 0 ? trimEnd(base, Kotlin.charArrayOf(47)) + '/' + trim(access, Kotlin.charArrayOf(47)) : access;
  };
  VfsUtil.prototype.isAbsolute_61zpoe$ = function (base) {
    if (base.length === 0)
      return false;
    var b = substringBefore(replace_0(base, 92, 47), 47);
    if (b.length === 0)
      return true;
    if (contains(b, 58))
      return true;
    return false;
  };
  VfsUtil.prototype.normalizeAbsolute_61zpoe$ = function (path) {
    return replace_0(path, 47, unboxChar(this.File_separatorChar));
  };
  VfsUtil.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'VfsUtil',
    interfaces: []
  };
  var VfsUtil_instance = null;
  function VfsUtil_getInstance() {
    if (VfsUtil_instance === null) {
      new VfsUtil();
    }
    return VfsUtil_instance;
  }
  function IsoVfs(file_0, continuation_0, suspended) {
    var instance = new Coroutine$IsoVfs(file_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$IsoVfs(file_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$file = file_0;
  }
  Coroutine$IsoVfs.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IsoVfs.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IsoVfs.prototype.constructor = Coroutine$IsoVfs;
  Coroutine$IsoVfs.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = ISO_getInstance();
            this.state_0 = 2;
            this.result_0 = this.local$file.open_tiaunm$(VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$tmp$.openVfs_axnxby$(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function IsoVfs_0(s, continuation) {
    return ISO_getInstance().openVfs_axnxby$(s, continuation);
  }
  function openAsIso($receiver, continuation) {
    return IsoVfs_0($receiver, continuation);
  }
  function openAsIso_0($receiver, continuation) {
    return IsoVfs($receiver, continuation);
  }
  function IsoVfs_1(iso) {
    Vfs.call(this);
    this.iso = iso;
    this.vfs = this;
    this.isoFile = this.iso;
  }
  IsoVfs_1.prototype.getVfsStat_38xve3$ = function (file) {
    return this.createExistsStat_mv8ifk$(file.fullname, file.isDirectory, file.size, void 0, Kotlin.Long.fromInt(file.record.extent), void 0, void 0, void 0, void 0, void 0, void 0, new Int32Array([file.record.extent, 0, 0, 0, 0, 0]), file.fullname);
  };
  IsoVfs_1.prototype.stat_61zpoe$ = function (path, continuation) {
    try {
      return this.getVfsStat_38xve3$(this.isoFile.get_61zpoe$(path));
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        return this.createNonExistsStat_4w9ihe$(path);
      }
       else
        throw e;
    }
  };
  IsoVfs_1.prototype.open_vb0dls$ = function (path, mode, continuation) {
    return this.isoFile.get_61zpoe$(path).open2_tiaunm$(mode, continuation);
  };
  function IsoVfs$list$lambda(this$IsoVfs_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$IsoVfs$list$lambda(this$IsoVfs_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$IsoVfs$list$lambda(this$IsoVfs_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$IsoVfs = this$IsoVfs_0;
    this.local$closure$path = closure$path_0;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$IsoVfs$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$IsoVfs$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$IsoVfs$list$lambda.prototype.constructor = Coroutine$IsoVfs$list$lambda;
  Coroutine$IsoVfs$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var file = this.local$this$IsoVfs.isoFile.get_61zpoe$(this.local$closure$path);
            this.local$tmp$ = file.children.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var c = this.local$tmp$.next();
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$IsoVfs.vfs.get_61zpoe$(c.fullname), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  IsoVfs_1.prototype.list_61zpoe$ = function (path, continuation) {
    return asyncGenerate_0(IsoVfs$list$lambda(this, path), continuation);
  };
  IsoVfs_1.prototype.toString = function () {
    return 'IsoVfs(' + this.iso + ')';
  };
  IsoVfs_1.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoVfs',
    interfaces: [Vfs]
  };
  function ISO() {
    ISO_instance = this;
    this.logger = Logger.Companion.invoke_61zpoe$('ISO');
    this.CHARSET = ASCII_getInstance();
    this.SECTOR_SIZE = L2048;
  }
  ISO.prototype.read_axnxby$ = function (s, continuation) {
    return (new ISO$IsoReader(s)).read(continuation);
  };
  ISO.prototype.openVfs_axnxby$ = function (s_0, continuation_0, suspended) {
    var instance = new Coroutine$openVfs_axnxby$(this, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$openVfs_axnxby$($this, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = s_0;
  }
  Coroutine$openVfs_axnxby$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openVfs_axnxby$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openVfs_axnxby$.prototype.constructor = Coroutine$openVfs_axnxby$;
  Coroutine$openVfs_axnxby$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.read_axnxby$(this.local$s, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var iso = this.result_0;
            return (new IsoVfs_1(iso)).root;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ISO$IsoReader(s) {
    this.s = s;
  }
  ISO$IsoReader.prototype.getSector_vux9f0$ = function (sector, size, continuation) {
    return sliceWithSize(this.s, Kotlin.Long.fromInt(sector).multiply(ISO_getInstance().SECTOR_SIZE), Kotlin.Long.fromInt(size), continuation);
  };
  ISO$IsoReader.prototype.getSectorMemory_vux9f0$ = function (sector_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$getSectorMemory_vux9f0$(this, sector_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getSectorMemory_vux9f0$($this, sector_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$sector = sector_0;
    this.local$size = size_0;
  }
  Coroutine$getSectorMemory_vux9f0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getSectorMemory_vux9f0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getSectorMemory_vux9f0$.prototype.constructor = Coroutine$getSectorMemory_vux9f0$;
  Coroutine$getSectorMemory_vux9f0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$size === void 0)
              this.local$size = 2048;
            this.state_0 = 2;
            this.result_0 = this.$this.getSector_vux9f0$(this.local$sector, this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = readAvailable(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return openSync(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO$IsoReader.prototype.read = function (continuation_0, suspended) {
    var instance = new Coroutine$read(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$primary = void 0;
    this.local$udfFileSystem = void 0;
    this.local$n = void 0;
    this.local$root = void 0;
  }
  Coroutine$read.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read.prototype.constructor = Coroutine$read;
  Coroutine$read.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(16, 2048, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$primary = ISO$ISO$PrimaryVolumeDescriptor_init(this.result_0);
            this.local$udfFileSystem = false;
            this.local$n = 0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$n >= 16) {
              this.state_0 = 6;
              continue;
            }

            this.state_0 = 4;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(17 + this.local$n | 0, 2048, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            var s = this.result_0;
            var vdh = ISO$ISO$VolumeDescriptorHeader_init(s.clone());
            switch (vdh.id) {
              case 'CD001':
                break;
              case 'BEA01':
                break;
              case 'NSR02':
                this.local$udfFileSystem = true;
                break;
              case 'NSR03':
                this.local$udfFileSystem = true;
                break;
              case 'BOOT2':
                break;
              case 'TEA01':
                break;
            }

            this.state_0 = 5;
            continue;
          case 5:
            this.local$n++;
            this.state_0 = 3;
            continue;
          case 6:
            if (this.local$udfFileSystem) {
              this.state_0 = 7;
              this.result_0 = this.$this.getSectorMemory_vux9f0$(256, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 9;
              continue;
            }

          case 7:
            var udfs = this.result_0;
            var avd = ISO$ISO$UdfAnchorVolumeDescriptorPointer_init(udfs);
            this.state_0 = 8;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(avd.mainVolumeDescriptorSequenceExtent.location, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            var mvd = this.result_0;
            var pv = ISO$ISO$UdfPrimaryVolumeDescriptor_init(mvd);
            if (!((tmp$ = pv.descriptorTag.tagId) != null ? tmp$.equals(ISO$UdfDescriptorTag$TagId$Companion_getInstance().PRIMARY_VOLUME_DESCRIPTOR) : null)) {
              invalidOp('Expected UDF primary volume descriptor');
            }

            this.state_0 = 9;
            continue;
          case 9:
            this.local$root = new ISO$IsoFile(this.$this, this.local$primary.rootDirectoryRecord, null);
            this.state_0 = 10;
            this.result_0 = this.$this.getSectorMemory_vux9f0$(this.local$primary.rootDirectoryRecord.extent, this.local$primary.rootDirectoryRecord.size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            this.result_0 = this.$this.readDirectoryRecords_rclg8q$(this.local$root, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            return this.local$root;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO$IsoReader.prototype.readDirectoryRecords_rclg8q$ = function (parent_0, sector_0, continuation_0, suspended) {
    var instance = new Coroutine$readDirectoryRecords_rclg8q$(this, parent_0, sector_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readDirectoryRecords_rclg8q$($this, parent_0, sector_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$dr = void 0;
    this.local$file = void 0;
    this.local$parent = parent_0;
    this.local$sector = sector_0;
  }
  Coroutine$readDirectoryRecords_rclg8q$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readDirectoryRecords_rclg8q$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readDirectoryRecords_rclg8q$.prototype.constructor = Coroutine$readDirectoryRecords_rclg8q$;
  Coroutine$readDirectoryRecords_rclg8q$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (get_eof(this.local$sector)) {
              this.state_0 = 8;
              continue;
            }

            this.local$dr = ISO$DirectoryRecord$Companion_getInstance().invoke_39qel5$(this.local$sector);
            if (this.local$dr == null) {
              skipToAlign_0(this.local$sector, 2048);
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            if (equals(this.local$dr.name, '') || equals(this.local$dr.name, '\x01')) {
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.local$file = new ISO$IsoFile(this.$this, this.local$dr, this.local$parent);
            var $this = ISO_getInstance().logger;
            var level = Logger$Level.INFO;
            if ($this.isEnabled_fs4ikx$(level)) {
              $this.actualLog_pwm3k3$(level, 'IsoFile: ' + this.local$file.fullname);
            }

            if (this.local$dr.isDirectory) {
              this.state_0 = 5;
              this.result_0 = this.$this.getSectorMemory_vux9f0$(this.local$dr.extent, this.local$dr.size, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 5:
            this.state_0 = 6;
            this.result_0 = this.$this.readDirectoryRecords_rclg8q$(this.local$file, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ISO$IsoReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoReader',
    interfaces: []
  };
  function ISO$IsoFile(reader, record, parent) {
    this.reader = reader;
    this.record = record;
    this.parent = parent;
    this.normalizedName = this.normalizeName_0(this.name);
    this.fullname = this.parent == null ? this.record.name : trimStart(this.parent.fullname + '/' + this.record.name, Kotlin.charArrayOf(47));
    this.children = ArrayList_init();
    this.childrenByName = LinkedHashMap_init();
    this.size = Kotlin.Long.fromInt(this.record.size);
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.children : null) != null ? tmp$_0.add_11rb$(this) : null;
    (tmp$_2 = (tmp$_1 = this.parent) != null ? tmp$_1.childrenByName : null) != null ? tmp$_2.put_xwzc9p$(this.normalizedName, this) : null;
  }
  Object.defineProperty(ISO$IsoFile.prototype, 'name', {
    get: function () {
      return this.record.name;
    }
  });
  Object.defineProperty(ISO$IsoFile.prototype, 'isDirectory', {
    get: function () {
      return this.record.isDirectory;
    }
  });
  ISO$IsoFile.prototype.dump = function () {
    var tmp$;
    println(this.fullname + ': ' + this.record);
    tmp$ = this.children.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      c.dump();
    }
  };
  ISO$IsoFile.prototype.normalizeName_0 = function ($receiver) {
    return $receiver.toLowerCase();
  };
  ISO$IsoFile.prototype.open2_tiaunm$ = function (mode, continuation) {
    return this.reader.getSector_vux9f0$(this.record.extent, this.record.size, continuation);
  };
  ISO$IsoFile.prototype.get_61zpoe$ = function (name) {
    var tmp$, tmp$_0;
    var current = this;
    tmp$ = split_0(name, ['/']).iterator();
    while (tmp$.hasNext()) {
      var part = tmp$.next();
      switch (part) {
        case '':
          break;
        case '.':
          break;
        case '..':
          current = ensureNotNull(current.parent);
          break;
        default:tmp$_0 = current.childrenByName.get_11rb$(this.normalizeName_0(part));
          if (tmp$_0 == null) {
            throw IllegalStateException_init("Can't find part " + part + ' for accessing path ' + name + ' children: ' + current.children);
          }

          current = tmp$_0;
          break;
      }
    }
    return current;
  };
  ISO$IsoFile.prototype.toString = function () {
    return "IsoFile(fullname='" + this.fullname + "', size=" + this.size + ')';
  };
  ISO$IsoFile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoFile',
    interfaces: []
  };
  ISO.prototype.readLongArray_le_hsu5ns$ = function ($receiver, count) {
    var $receiver_0 = until(0, count);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(readS64_le_1($receiver));
    }
    return toLongArray(destination);
  };
  ISO.prototype.readU32_le_be_ucmi9i$ = function ($receiver) {
    var le = readS32_le_1($receiver);
    readS32_be_1($receiver);
    return le;
  };
  ISO.prototype.readTextWithLength_ucmi9i$ = function ($receiver) {
    var len = readU8_1($receiver);
    return readStringz_4($receiver, len, this.CHARSET);
  };
  ISO.prototype.readU16_le_be_ucmi9i$ = function ($receiver) {
    var le = readS16_le_1($receiver);
    readS16_be_1($receiver);
    return le;
  };
  function ISO$UdfDescriptorTag(tagId, descVersion, tagChecksum, reserved, tagSerialNumber, descriptorCRC, descriptorCRCLength, tagLocation) {
    this.tagId = tagId;
    this.descVersion = descVersion;
    this.tagChecksum = tagChecksum;
    this.reserved = reserved;
    this.tagSerialNumber = tagSerialNumber;
    this.descriptorCRC = descriptorCRC;
    this.descriptorCRCLength = descriptorCRCLength;
    this.tagLocation = tagLocation;
  }
  function ISO$UdfDescriptorTag$TagId(id) {
    ISO$UdfDescriptorTag$TagId$Companion_getInstance();
    this.id = id;
  }
  function ISO$UdfDescriptorTag$TagId$Companion() {
    ISO$UdfDescriptorTag$TagId$Companion_instance = this;
    this.PRIMARY_VOLUME_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(1);
    this.ANCHOR_VOLUME_DESCRIPTOR_POINTER = new ISO$UdfDescriptorTag$TagId(2);
    this.VOLUME_DESCRIPTOR_POINTER = new ISO$UdfDescriptorTag$TagId(3);
    this.IMPLEMENTATION_USE_VOLUME_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(4);
    this.PARTITION_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(5);
    this.LOGICAL_VOLUME_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(6);
    this.UNALLOCATED_SPACE_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(7);
    this.TERMINATING_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(8);
    this.LOGICAL_VOLUME_INTEGRITY_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(9);
    this.FILE_SET_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(256);
    this.FILE_IDENTIFIER_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(257);
    this.ALLOCATION_EXTENT_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(258);
    this.INDIRECT_ENTRY = new ISO$UdfDescriptorTag$TagId(259);
    this.TERMINAL_ENTRY = new ISO$UdfDescriptorTag$TagId(260);
    this.FILE_ENTRY = new ISO$UdfDescriptorTag$TagId(261);
    this.EXTENDED_ATTRIBUTE_HEADER_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(262);
    this.UNALLOCATED_SPACE_ENTRY = new ISO$UdfDescriptorTag$TagId(263);
    this.SPACE_BITMAP_DESCRIPTOR = new ISO$UdfDescriptorTag$TagId(264);
    this.PARTITION_INTEGRITY_ENTRY = new ISO$UdfDescriptorTag$TagId(265);
    this.EXTENDED_FILE_ENTRY = new ISO$UdfDescriptorTag$TagId(266);
  }
  ISO$UdfDescriptorTag$TagId$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO$UdfDescriptorTag$TagId$Companion_instance = null;
  function ISO$UdfDescriptorTag$TagId$Companion_getInstance() {
    if (ISO$UdfDescriptorTag$TagId$Companion_instance === null) {
      new ISO$UdfDescriptorTag$TagId$Companion();
    }
    return ISO$UdfDescriptorTag$TagId$Companion_instance;
  }
  ISO$UdfDescriptorTag$TagId.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TagId',
    interfaces: []
  };
  ISO$UdfDescriptorTag$TagId.prototype.component1 = function () {
    return this.id;
  };
  ISO$UdfDescriptorTag$TagId.prototype.copy_za3lpa$ = function (id) {
    return new ISO$UdfDescriptorTag$TagId(id === void 0 ? this.id : id);
  };
  ISO$UdfDescriptorTag$TagId.prototype.toString = function () {
    return 'TagId(id=' + Kotlin.toString(this.id) + ')';
  };
  ISO$UdfDescriptorTag$TagId.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ISO$UdfDescriptorTag$TagId.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  ISO$UdfDescriptorTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfDescriptorTag',
    interfaces: []
  };
  function ISO$ISO$UdfDescriptorTag_init(s, $this) {
    $this = $this || Object.create(ISO$UdfDescriptorTag.prototype);
    ISO$UdfDescriptorTag.call($this, new ISO$UdfDescriptorTag$TagId(readU16_le_1(s)), readU16_le_1(s), readU8_1(s), readU8_1(s), readU16_le_1(s), readU16_le_1(s), readU16_le_1(s), readS32_le_1(s));
    return $this;
  }
  ISO$UdfDescriptorTag.prototype.component1 = function () {
    return this.tagId;
  };
  ISO$UdfDescriptorTag.prototype.component2 = function () {
    return this.descVersion;
  };
  ISO$UdfDescriptorTag.prototype.component3 = function () {
    return this.tagChecksum;
  };
  ISO$UdfDescriptorTag.prototype.component4 = function () {
    return this.reserved;
  };
  ISO$UdfDescriptorTag.prototype.component5 = function () {
    return this.tagSerialNumber;
  };
  ISO$UdfDescriptorTag.prototype.component6 = function () {
    return this.descriptorCRC;
  };
  ISO$UdfDescriptorTag.prototype.component7 = function () {
    return this.descriptorCRCLength;
  };
  ISO$UdfDescriptorTag.prototype.component8 = function () {
    return this.tagLocation;
  };
  ISO$UdfDescriptorTag.prototype.copy_15om9v$ = function (tagId, descVersion, tagChecksum, reserved, tagSerialNumber, descriptorCRC, descriptorCRCLength, tagLocation) {
    return new ISO$UdfDescriptorTag(tagId === void 0 ? this.tagId : tagId, descVersion === void 0 ? this.descVersion : descVersion, tagChecksum === void 0 ? this.tagChecksum : tagChecksum, reserved === void 0 ? this.reserved : reserved, tagSerialNumber === void 0 ? this.tagSerialNumber : tagSerialNumber, descriptorCRC === void 0 ? this.descriptorCRC : descriptorCRC, descriptorCRCLength === void 0 ? this.descriptorCRCLength : descriptorCRCLength, tagLocation === void 0 ? this.tagLocation : tagLocation);
  };
  ISO$UdfDescriptorTag.prototype.toString = function () {
    return 'UdfDescriptorTag(tagId=' + Kotlin.toString(this.tagId) + (', descVersion=' + Kotlin.toString(this.descVersion)) + (', tagChecksum=' + Kotlin.toString(this.tagChecksum)) + (', reserved=' + Kotlin.toString(this.reserved)) + (', tagSerialNumber=' + Kotlin.toString(this.tagSerialNumber)) + (', descriptorCRC=' + Kotlin.toString(this.descriptorCRC)) + (', descriptorCRCLength=' + Kotlin.toString(this.descriptorCRCLength)) + (', tagLocation=' + Kotlin.toString(this.tagLocation)) + ')';
  };
  ISO$UdfDescriptorTag.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.tagId) | 0;
    result = result * 31 + Kotlin.hashCode(this.descVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagChecksum) | 0;
    result = result * 31 + Kotlin.hashCode(this.reserved) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagSerialNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCRC) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCRCLength) | 0;
    result = result * 31 + Kotlin.hashCode(this.tagLocation) | 0;
    return result;
  };
  ISO$UdfDescriptorTag.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.tagId, other.tagId) && Kotlin.equals(this.descVersion, other.descVersion) && Kotlin.equals(this.tagChecksum, other.tagChecksum) && Kotlin.equals(this.reserved, other.reserved) && Kotlin.equals(this.tagSerialNumber, other.tagSerialNumber) && Kotlin.equals(this.descriptorCRC, other.descriptorCRC) && Kotlin.equals(this.descriptorCRCLength, other.descriptorCRCLength) && Kotlin.equals(this.tagLocation, other.tagLocation)))));
  };
  function ISO$UdfExtent(length, location) {
    this.length = length;
    this.location = location;
  }
  ISO$UdfExtent.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfExtent',
    interfaces: []
  };
  function ISO$ISO$UdfExtent_init(s, $this) {
    $this = $this || Object.create(ISO$UdfExtent.prototype);
    ISO$UdfExtent.call($this, readS32_le_1(s), readS32_le_1(s));
    return $this;
  }
  ISO$UdfExtent.prototype.component1 = function () {
    return this.length;
  };
  ISO$UdfExtent.prototype.component2 = function () {
    return this.location;
  };
  ISO$UdfExtent.prototype.copy_vux9f0$ = function (length, location) {
    return new ISO$UdfExtent(length === void 0 ? this.length : length, location === void 0 ? this.location : location);
  };
  ISO$UdfExtent.prototype.toString = function () {
    return 'UdfExtent(length=' + Kotlin.toString(this.length) + (', location=' + Kotlin.toString(this.location)) + ')';
  };
  ISO$UdfExtent.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.length) | 0;
    result = result * 31 + Kotlin.hashCode(this.location) | 0;
    return result;
  };
  ISO$UdfExtent.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.length, other.length) && Kotlin.equals(this.location, other.location)))));
  };
  function ISO$UdfAnchorVolumeDescriptorPointer(descriptorTag, mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent) {
    this.descriptorTag = descriptorTag;
    this.mainVolumeDescriptorSequenceExtent = mainVolumeDescriptorSequenceExtent;
    this.reserveVolumeDescriptorSequenceExtent = reserveVolumeDescriptorSequenceExtent;
  }
  ISO$UdfAnchorVolumeDescriptorPointer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfAnchorVolumeDescriptorPointer',
    interfaces: []
  };
  function ISO$ISO$UdfAnchorVolumeDescriptorPointer_init(s, $this) {
    $this = $this || Object.create(ISO$UdfAnchorVolumeDescriptorPointer.prototype);
    ISO$UdfAnchorVolumeDescriptorPointer.call($this, ISO$ISO$UdfDescriptorTag_init(s), ISO$ISO$UdfExtent_init(s), ISO$ISO$UdfExtent_init(s));
    return $this;
  }
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.component1 = function () {
    return this.descriptorTag;
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.component2 = function () {
    return this.mainVolumeDescriptorSequenceExtent;
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.component3 = function () {
    return this.reserveVolumeDescriptorSequenceExtent;
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.copy_dfev2w$ = function (descriptorTag, mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent) {
    return new ISO$UdfAnchorVolumeDescriptorPointer(descriptorTag === void 0 ? this.descriptorTag : descriptorTag, mainVolumeDescriptorSequenceExtent === void 0 ? this.mainVolumeDescriptorSequenceExtent : mainVolumeDescriptorSequenceExtent, reserveVolumeDescriptorSequenceExtent === void 0 ? this.reserveVolumeDescriptorSequenceExtent : reserveVolumeDescriptorSequenceExtent);
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.toString = function () {
    return 'UdfAnchorVolumeDescriptorPointer(descriptorTag=' + Kotlin.toString(this.descriptorTag) + (', mainVolumeDescriptorSequenceExtent=' + Kotlin.toString(this.mainVolumeDescriptorSequenceExtent)) + (', reserveVolumeDescriptorSequenceExtent=' + Kotlin.toString(this.reserveVolumeDescriptorSequenceExtent)) + ')';
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorTag) | 0;
    result = result * 31 + Kotlin.hashCode(this.mainVolumeDescriptorSequenceExtent) | 0;
    result = result * 31 + Kotlin.hashCode(this.reserveVolumeDescriptorSequenceExtent) | 0;
    return result;
  };
  ISO$UdfAnchorVolumeDescriptorPointer.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.descriptorTag, other.descriptorTag) && Kotlin.equals(this.mainVolumeDescriptorSequenceExtent, other.mainVolumeDescriptorSequenceExtent) && Kotlin.equals(this.reserveVolumeDescriptorSequenceExtent, other.reserveVolumeDescriptorSequenceExtent)))));
  };
  function ISO$UdfCharspec(characterSetType, characterSetInfo) {
    this.characterSetType = characterSetType;
    this.characterSetInfo = characterSetInfo;
  }
  ISO$UdfCharspec.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfCharspec',
    interfaces: []
  };
  function ISO$ISO$UdfCharspec_init(s, $this) {
    $this = $this || Object.create(ISO$UdfCharspec.prototype);
    ISO$UdfCharspec.call($this, readU8_1(s), readStringz_4(s, 63, ISO_getInstance().CHARSET));
    return $this;
  }
  ISO$UdfCharspec.prototype.component1 = function () {
    return this.characterSetType;
  };
  ISO$UdfCharspec.prototype.component2 = function () {
    return this.characterSetInfo;
  };
  ISO$UdfCharspec.prototype.copy_19mbxw$ = function (characterSetType, characterSetInfo) {
    return new ISO$UdfCharspec(characterSetType === void 0 ? this.characterSetType : characterSetType, characterSetInfo === void 0 ? this.characterSetInfo : characterSetInfo);
  };
  ISO$UdfCharspec.prototype.toString = function () {
    return 'UdfCharspec(characterSetType=' + Kotlin.toString(this.characterSetType) + (', characterSetInfo=' + Kotlin.toString(this.characterSetInfo)) + ')';
  };
  ISO$UdfCharspec.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetType) | 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetInfo) | 0;
    return result;
  };
  ISO$UdfCharspec.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.characterSetType, other.characterSetType) && Kotlin.equals(this.characterSetInfo, other.characterSetInfo)))));
  };
  function ISO$UdfEntityId(flags, identifier, identifierSuffix) {
    this.flags = flags;
    this.identifier = identifier;
    this.identifierSuffix = identifierSuffix;
  }
  ISO$UdfEntityId.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfEntityId',
    interfaces: []
  };
  function ISO$ISO$UdfEntityId_init(s, $this) {
    $this = $this || Object.create(ISO$UdfEntityId.prototype);
    ISO$UdfEntityId.call($this, readU8_1(s), readStringz_4(s, 23, ISO_getInstance().CHARSET), readStringz_4(s, 8, ISO_getInstance().CHARSET));
    return $this;
  }
  ISO$UdfEntityId.prototype.component1 = function () {
    return this.flags;
  };
  ISO$UdfEntityId.prototype.component2 = function () {
    return this.identifier;
  };
  ISO$UdfEntityId.prototype.component3 = function () {
    return this.identifierSuffix;
  };
  ISO$UdfEntityId.prototype.copy_s4fhmi$ = function (flags, identifier, identifierSuffix) {
    return new ISO$UdfEntityId(flags === void 0 ? this.flags : flags, identifier === void 0 ? this.identifier : identifier, identifierSuffix === void 0 ? this.identifierSuffix : identifierSuffix);
  };
  ISO$UdfEntityId.prototype.toString = function () {
    return 'UdfEntityId(flags=' + Kotlin.toString(this.flags) + (', identifier=' + Kotlin.toString(this.identifier)) + (', identifierSuffix=' + Kotlin.toString(this.identifierSuffix)) + ')';
  };
  ISO$UdfEntityId.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.identifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.identifierSuffix) | 0;
    return result;
  };
  ISO$UdfEntityId.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.identifier, other.identifier) && Kotlin.equals(this.identifierSuffix, other.identifierSuffix)))));
  };
  function ISO$UdfTimestamp(typeAndTimezone, year, month, day, hour, minute, second, centiseconds, hundredsofMicroseconds, microseconds) {
    this.typeAndTimezone = typeAndTimezone;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.centiseconds = centiseconds;
    this.hundredsofMicroseconds = hundredsofMicroseconds;
    this.microseconds = microseconds;
  }
  ISO$UdfTimestamp.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfTimestamp',
    interfaces: []
  };
  function ISO$ISO$UdfTimestamp_init(s, $this) {
    $this = $this || Object.create(ISO$UdfTimestamp.prototype);
    ISO$UdfTimestamp.call($this, readS16_le_1(s), readS16_le_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s));
    return $this;
  }
  ISO$UdfTimestamp.prototype.component1 = function () {
    return this.typeAndTimezone;
  };
  ISO$UdfTimestamp.prototype.component2 = function () {
    return this.year;
  };
  ISO$UdfTimestamp.prototype.component3 = function () {
    return this.month;
  };
  ISO$UdfTimestamp.prototype.component4 = function () {
    return this.day;
  };
  ISO$UdfTimestamp.prototype.component5 = function () {
    return this.hour;
  };
  ISO$UdfTimestamp.prototype.component6 = function () {
    return this.minute;
  };
  ISO$UdfTimestamp.prototype.component7 = function () {
    return this.second;
  };
  ISO$UdfTimestamp.prototype.component8 = function () {
    return this.centiseconds;
  };
  ISO$UdfTimestamp.prototype.component9 = function () {
    return this.hundredsofMicroseconds;
  };
  ISO$UdfTimestamp.prototype.component10 = function () {
    return this.microseconds;
  };
  ISO$UdfTimestamp.prototype.copy_q2ofzg$ = function (typeAndTimezone, year, month, day, hour, minute, second, centiseconds, hundredsofMicroseconds, microseconds) {
    return new ISO$UdfTimestamp(typeAndTimezone === void 0 ? this.typeAndTimezone : typeAndTimezone, year === void 0 ? this.year : year, month === void 0 ? this.month : month, day === void 0 ? this.day : day, hour === void 0 ? this.hour : hour, minute === void 0 ? this.minute : minute, second === void 0 ? this.second : second, centiseconds === void 0 ? this.centiseconds : centiseconds, hundredsofMicroseconds === void 0 ? this.hundredsofMicroseconds : hundredsofMicroseconds, microseconds === void 0 ? this.microseconds : microseconds);
  };
  ISO$UdfTimestamp.prototype.toString = function () {
    return 'UdfTimestamp(typeAndTimezone=' + Kotlin.toString(this.typeAndTimezone) + (', year=' + Kotlin.toString(this.year)) + (', month=' + Kotlin.toString(this.month)) + (', day=' + Kotlin.toString(this.day)) + (', hour=' + Kotlin.toString(this.hour)) + (', minute=' + Kotlin.toString(this.minute)) + (', second=' + Kotlin.toString(this.second)) + (', centiseconds=' + Kotlin.toString(this.centiseconds)) + (', hundredsofMicroseconds=' + Kotlin.toString(this.hundredsofMicroseconds)) + (', microseconds=' + Kotlin.toString(this.microseconds)) + ')';
  };
  ISO$UdfTimestamp.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.typeAndTimezone) | 0;
    result = result * 31 + Kotlin.hashCode(this.year) | 0;
    result = result * 31 + Kotlin.hashCode(this.month) | 0;
    result = result * 31 + Kotlin.hashCode(this.day) | 0;
    result = result * 31 + Kotlin.hashCode(this.hour) | 0;
    result = result * 31 + Kotlin.hashCode(this.minute) | 0;
    result = result * 31 + Kotlin.hashCode(this.second) | 0;
    result = result * 31 + Kotlin.hashCode(this.centiseconds) | 0;
    result = result * 31 + Kotlin.hashCode(this.hundredsofMicroseconds) | 0;
    result = result * 31 + Kotlin.hashCode(this.microseconds) | 0;
    return result;
  };
  ISO$UdfTimestamp.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.typeAndTimezone, other.typeAndTimezone) && Kotlin.equals(this.year, other.year) && Kotlin.equals(this.month, other.month) && Kotlin.equals(this.day, other.day) && Kotlin.equals(this.hour, other.hour) && Kotlin.equals(this.minute, other.minute) && Kotlin.equals(this.second, other.second) && Kotlin.equals(this.centiseconds, other.centiseconds) && Kotlin.equals(this.hundredsofMicroseconds, other.hundredsofMicroseconds) && Kotlin.equals(this.microseconds, other.microseconds)))));
  };
  function ISO$UdfPrimaryVolumeDescriptor(descriptorTag, volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber, volumeId, volumeSequenceNumber, maximumVolumeSequenceNumber, interchangeLevel, maximumInterchangeLevel, characterSetList, maximumCharacterSetList, volumeSetIdentifier, descriptorCharacterSet, explanatoryCharacterSet, volumeAbstract, volumeCopyrightNotice, applicationIdentifier, recordingDateandTime, implementationIdentifier, implementationUse, predecessorVolumeDescriptorSequenceLocation, flags) {
    this.descriptorTag = descriptorTag;
    this.volumeDescriptorSequenceNumber = volumeDescriptorSequenceNumber;
    this.primaryVolumeDescriptorNumber = primaryVolumeDescriptorNumber;
    this.volumeId = volumeId;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.maximumVolumeSequenceNumber = maximumVolumeSequenceNumber;
    this.interchangeLevel = interchangeLevel;
    this.maximumInterchangeLevel = maximumInterchangeLevel;
    this.characterSetList = characterSetList;
    this.maximumCharacterSetList = maximumCharacterSetList;
    this.volumeSetIdentifier = volumeSetIdentifier;
    this.descriptorCharacterSet = descriptorCharacterSet;
    this.explanatoryCharacterSet = explanatoryCharacterSet;
    this.volumeAbstract = volumeAbstract;
    this.volumeCopyrightNotice = volumeCopyrightNotice;
    this.applicationIdentifier = applicationIdentifier;
    this.recordingDateandTime = recordingDateandTime;
    this.implementationIdentifier = implementationIdentifier;
    this.implementationUse = implementationUse;
    this.predecessorVolumeDescriptorSequenceLocation = predecessorVolumeDescriptorSequenceLocation;
    this.flags = flags;
  }
  ISO$UdfPrimaryVolumeDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UdfPrimaryVolumeDescriptor',
    interfaces: []
  };
  function ISO$ISO$UdfPrimaryVolumeDescriptor_init(s, $this) {
    $this = $this || Object.create(ISO$UdfPrimaryVolumeDescriptor.prototype);
    ISO$UdfPrimaryVolumeDescriptor.call($this, ISO$ISO$UdfDescriptorTag_init(s), readS32_le_1(s), readS32_le_1(s), readUdfDString(s, 32), readU16_le_1(s), readU16_le_1(s), readU16_le_1(s), readU16_le_1(s), readS32_le_1(s), readS32_le_1(s), readUdfDString(s, 128), ISO$ISO$UdfCharspec_init(s), ISO$ISO$UdfCharspec_init(s), ISO$ISO$UdfExtent_init(s), ISO$ISO$UdfExtent_init(s), ISO$ISO$UdfEntityId_init(s), ISO$ISO$UdfTimestamp_init(s), ISO$ISO$UdfEntityId_init(s), readBytesExact_0(s, 64), readS32_le_1(s), readU16_le_1(s));
    return $this;
  }
  ISO$UdfPrimaryVolumeDescriptor.prototype.component1 = function () {
    return this.descriptorTag;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component2 = function () {
    return this.volumeDescriptorSequenceNumber;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component3 = function () {
    return this.primaryVolumeDescriptorNumber;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component4 = function () {
    return this.volumeId;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component5 = function () {
    return this.volumeSequenceNumber;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component6 = function () {
    return this.maximumVolumeSequenceNumber;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component7 = function () {
    return this.interchangeLevel;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component8 = function () {
    return this.maximumInterchangeLevel;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component9 = function () {
    return this.characterSetList;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component10 = function () {
    return this.maximumCharacterSetList;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component11 = function () {
    return this.volumeSetIdentifier;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component12 = function () {
    return this.descriptorCharacterSet;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component13 = function () {
    return this.explanatoryCharacterSet;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component14 = function () {
    return this.volumeAbstract;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component15 = function () {
    return this.volumeCopyrightNotice;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component16 = function () {
    return this.applicationIdentifier;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component17 = function () {
    return this.recordingDateandTime;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component18 = function () {
    return this.implementationIdentifier;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component19 = function () {
    return this.implementationUse;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component20 = function () {
    return this.predecessorVolumeDescriptorSequenceLocation;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.component21 = function () {
    return this.flags;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.copy_dguxyf$ = function (descriptorTag, volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber, volumeId, volumeSequenceNumber, maximumVolumeSequenceNumber, interchangeLevel, maximumInterchangeLevel, characterSetList, maximumCharacterSetList, volumeSetIdentifier, descriptorCharacterSet, explanatoryCharacterSet, volumeAbstract, volumeCopyrightNotice, applicationIdentifier, recordingDateandTime, implementationIdentifier, implementationUse, predecessorVolumeDescriptorSequenceLocation, flags) {
    return new ISO$UdfPrimaryVolumeDescriptor(descriptorTag === void 0 ? this.descriptorTag : descriptorTag, volumeDescriptorSequenceNumber === void 0 ? this.volumeDescriptorSequenceNumber : volumeDescriptorSequenceNumber, primaryVolumeDescriptorNumber === void 0 ? this.primaryVolumeDescriptorNumber : primaryVolumeDescriptorNumber, volumeId === void 0 ? this.volumeId : volumeId, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, maximumVolumeSequenceNumber === void 0 ? this.maximumVolumeSequenceNumber : maximumVolumeSequenceNumber, interchangeLevel === void 0 ? this.interchangeLevel : interchangeLevel, maximumInterchangeLevel === void 0 ? this.maximumInterchangeLevel : maximumInterchangeLevel, characterSetList === void 0 ? this.characterSetList : characterSetList, maximumCharacterSetList === void 0 ? this.maximumCharacterSetList : maximumCharacterSetList, volumeSetIdentifier === void 0 ? this.volumeSetIdentifier : volumeSetIdentifier, descriptorCharacterSet === void 0 ? this.descriptorCharacterSet : descriptorCharacterSet, explanatoryCharacterSet === void 0 ? this.explanatoryCharacterSet : explanatoryCharacterSet, volumeAbstract === void 0 ? this.volumeAbstract : volumeAbstract, volumeCopyrightNotice === void 0 ? this.volumeCopyrightNotice : volumeCopyrightNotice, applicationIdentifier === void 0 ? this.applicationIdentifier : applicationIdentifier, recordingDateandTime === void 0 ? this.recordingDateandTime : recordingDateandTime, implementationIdentifier === void 0 ? this.implementationIdentifier : implementationIdentifier, implementationUse === void 0 ? this.implementationUse : implementationUse, predecessorVolumeDescriptorSequenceLocation === void 0 ? this.predecessorVolumeDescriptorSequenceLocation : predecessorVolumeDescriptorSequenceLocation, flags === void 0 ? this.flags : flags);
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.toString = function () {
    return 'UdfPrimaryVolumeDescriptor(descriptorTag=' + Kotlin.toString(this.descriptorTag) + (', volumeDescriptorSequenceNumber=' + Kotlin.toString(this.volumeDescriptorSequenceNumber)) + (', primaryVolumeDescriptorNumber=' + Kotlin.toString(this.primaryVolumeDescriptorNumber)) + (', volumeId=' + Kotlin.toString(this.volumeId)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', maximumVolumeSequenceNumber=' + Kotlin.toString(this.maximumVolumeSequenceNumber)) + (', interchangeLevel=' + Kotlin.toString(this.interchangeLevel)) + (', maximumInterchangeLevel=' + Kotlin.toString(this.maximumInterchangeLevel)) + (', characterSetList=' + Kotlin.toString(this.characterSetList)) + (', maximumCharacterSetList=' + Kotlin.toString(this.maximumCharacterSetList)) + (', volumeSetIdentifier=' + Kotlin.toString(this.volumeSetIdentifier)) + (', descriptorCharacterSet=' + Kotlin.toString(this.descriptorCharacterSet)) + (', explanatoryCharacterSet=' + Kotlin.toString(this.explanatoryCharacterSet)) + (', volumeAbstract=' + Kotlin.toString(this.volumeAbstract)) + (', volumeCopyrightNotice=' + Kotlin.toString(this.volumeCopyrightNotice)) + (', applicationIdentifier=' + Kotlin.toString(this.applicationIdentifier)) + (', recordingDateandTime=' + Kotlin.toString(this.recordingDateandTime)) + (', implementationIdentifier=' + Kotlin.toString(this.implementationIdentifier)) + (', implementationUse=' + Kotlin.toString(this.implementationUse)) + (', predecessorVolumeDescriptorSequenceLocation=' + Kotlin.toString(this.predecessorVolumeDescriptorSequenceLocation)) + (', flags=' + Kotlin.toString(this.flags)) + ')';
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorTag) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeDescriptorSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.primaryVolumeDescriptorNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeId) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumVolumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.interchangeLevel) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumInterchangeLevel) | 0;
    result = result * 31 + Kotlin.hashCode(this.characterSetList) | 0;
    result = result * 31 + Kotlin.hashCode(this.maximumCharacterSetList) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.descriptorCharacterSet) | 0;
    result = result * 31 + Kotlin.hashCode(this.explanatoryCharacterSet) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeAbstract) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeCopyrightNotice) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.recordingDateandTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.implementationIdentifier) | 0;
    result = result * 31 + Kotlin.hashCode(this.implementationUse) | 0;
    result = result * 31 + Kotlin.hashCode(this.predecessorVolumeDescriptorSequenceLocation) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    return result;
  };
  ISO$UdfPrimaryVolumeDescriptor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.descriptorTag, other.descriptorTag) && Kotlin.equals(this.volumeDescriptorSequenceNumber, other.volumeDescriptorSequenceNumber) && Kotlin.equals(this.primaryVolumeDescriptorNumber, other.primaryVolumeDescriptorNumber) && Kotlin.equals(this.volumeId, other.volumeId) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.maximumVolumeSequenceNumber, other.maximumVolumeSequenceNumber) && Kotlin.equals(this.interchangeLevel, other.interchangeLevel) && Kotlin.equals(this.maximumInterchangeLevel, other.maximumInterchangeLevel) && Kotlin.equals(this.characterSetList, other.characterSetList) && Kotlin.equals(this.maximumCharacterSetList, other.maximumCharacterSetList) && Kotlin.equals(this.volumeSetIdentifier, other.volumeSetIdentifier) && Kotlin.equals(this.descriptorCharacterSet, other.descriptorCharacterSet) && Kotlin.equals(this.explanatoryCharacterSet, other.explanatoryCharacterSet) && Kotlin.equals(this.volumeAbstract, other.volumeAbstract) && Kotlin.equals(this.volumeCopyrightNotice, other.volumeCopyrightNotice) && Kotlin.equals(this.applicationIdentifier, other.applicationIdentifier) && Kotlin.equals(this.recordingDateandTime, other.recordingDateandTime) && Kotlin.equals(this.implementationIdentifier, other.implementationIdentifier) && Kotlin.equals(this.implementationUse, other.implementationUse) && Kotlin.equals(this.predecessorVolumeDescriptorSequenceLocation, other.predecessorVolumeDescriptorSequenceLocation) && Kotlin.equals(this.flags, other.flags)))));
  };
  function ISO$PrimaryVolumeDescriptor(volumeDescriptorHeader, pad1, systemId, volumeId, pad2, volumeSpaceSize, pad3, volumeSetSize, volumeSequenceNumber, logicalBlockSize, pathTableSize, typeLPathTable, optType1PathTable, typeMPathTable, optTypeMPathTable, rootDirectoryRecord, volumeSetId, publisherId, preparerId, applicationId, copyrightFileId, abstractFileId, bibliographicFileId, creationDate, modificationDate, expirationDate, effectiveDate, fileStructureVersion, pad5, applicationData, pad6) {
    this.volumeDescriptorHeader = volumeDescriptorHeader;
    this.pad1 = pad1;
    this.systemId = systemId;
    this.volumeId = volumeId;
    this.pad2 = pad2;
    this.volumeSpaceSize = volumeSpaceSize;
    this.pad3 = pad3;
    this.volumeSetSize = volumeSetSize;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.logicalBlockSize = logicalBlockSize;
    this.pathTableSize = pathTableSize;
    this.typeLPathTable = typeLPathTable;
    this.optType1PathTable = optType1PathTable;
    this.typeMPathTable = typeMPathTable;
    this.optTypeMPathTable = optTypeMPathTable;
    this.rootDirectoryRecord = rootDirectoryRecord;
    this.volumeSetId = volumeSetId;
    this.publisherId = publisherId;
    this.preparerId = preparerId;
    this.applicationId = applicationId;
    this.copyrightFileId = copyrightFileId;
    this.abstractFileId = abstractFileId;
    this.bibliographicFileId = bibliographicFileId;
    this.creationDate = creationDate;
    this.modificationDate = modificationDate;
    this.expirationDate = expirationDate;
    this.effectiveDate = effectiveDate;
    this.fileStructureVersion = fileStructureVersion;
    this.pad5 = pad5;
    this.applicationData = applicationData;
    this.pad6 = pad6;
  }
  ISO$PrimaryVolumeDescriptor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PrimaryVolumeDescriptor',
    interfaces: []
  };
  function ISO$ISO$PrimaryVolumeDescriptor_init(s, $this) {
    $this = $this || Object.create(ISO$PrimaryVolumeDescriptor.prototype);
    ISO$PrimaryVolumeDescriptor.call($this, ISO$ISO$VolumeDescriptorHeader_init(s), readU8_1(s), readStringz_4(s, 32, ISO_getInstance().CHARSET), readStringz_4(s, 32, ISO_getInstance().CHARSET), readS64_le_1(s), ISO_getInstance().readU32_le_be_ucmi9i$(s), ISO_getInstance().readLongArray_le_hsu5ns$(s, 4), ISO_getInstance().readU16_le_be_ucmi9i$(s), ISO_getInstance().readU16_le_be_ucmi9i$(s), ISO_getInstance().readU16_le_be_ucmi9i$(s), ISO_getInstance().readU32_le_be_ucmi9i$(s), readS32_le_1(s), readS32_le_1(s), readS32_le_1(s), readS32_le_1(s), ensureNotNull(ISO$DirectoryRecord$Companion_getInstance().invoke_39qel5$(s)), readStringz_4(s, 128, ISO_getInstance().CHARSET), readStringz_4(s, 128, ISO_getInstance().CHARSET), readStringz_4(s, 128, ISO_getInstance().CHARSET), readStringz_4(s, 128, ISO_getInstance().CHARSET), readStringz_4(s, 37, ISO_getInstance().CHARSET), readStringz_4(s, 37, ISO_getInstance().CHARSET), readStringz_4(s, 37, ISO_getInstance().CHARSET), ISO$ISO$IsoDate_init(s), ISO$ISO$IsoDate_init(s), ISO$ISO$IsoDate_init(s), ISO$ISO$IsoDate_init(s), readU8_1(s), readU8_1(s), readBytes_1(s, 512), readBytes_1(s, 653));
    return $this;
  }
  ISO$PrimaryVolumeDescriptor.prototype.component1 = function () {
    return this.volumeDescriptorHeader;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component2 = function () {
    return this.pad1;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component3 = function () {
    return this.systemId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component4 = function () {
    return this.volumeId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component5 = function () {
    return this.pad2;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component6 = function () {
    return this.volumeSpaceSize;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component7 = function () {
    return this.pad3;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component8 = function () {
    return this.volumeSetSize;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component9 = function () {
    return this.volumeSequenceNumber;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component10 = function () {
    return this.logicalBlockSize;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component11 = function () {
    return this.pathTableSize;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component12 = function () {
    return this.typeLPathTable;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component13 = function () {
    return this.optType1PathTable;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component14 = function () {
    return this.typeMPathTable;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component15 = function () {
    return this.optTypeMPathTable;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component16 = function () {
    return this.rootDirectoryRecord;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component17 = function () {
    return this.volumeSetId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component18 = function () {
    return this.publisherId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component19 = function () {
    return this.preparerId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component20 = function () {
    return this.applicationId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component21 = function () {
    return this.copyrightFileId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component22 = function () {
    return this.abstractFileId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component23 = function () {
    return this.bibliographicFileId;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component24 = function () {
    return this.creationDate;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component25 = function () {
    return this.modificationDate;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component26 = function () {
    return this.expirationDate;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component27 = function () {
    return this.effectiveDate;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component28 = function () {
    return this.fileStructureVersion;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component29 = function () {
    return this.pad5;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component30 = function () {
    return this.applicationData;
  };
  ISO$PrimaryVolumeDescriptor.prototype.component31 = function () {
    return this.pad6;
  };
  ISO$PrimaryVolumeDescriptor.prototype.copy_6anmjz$ = function (volumeDescriptorHeader, pad1, systemId, volumeId, pad2, volumeSpaceSize, pad3, volumeSetSize, volumeSequenceNumber, logicalBlockSize, pathTableSize, typeLPathTable, optType1PathTable, typeMPathTable, optTypeMPathTable, rootDirectoryRecord, volumeSetId, publisherId, preparerId, applicationId, copyrightFileId, abstractFileId, bibliographicFileId, creationDate, modificationDate, expirationDate, effectiveDate, fileStructureVersion, pad5, applicationData, pad6) {
    return new ISO$PrimaryVolumeDescriptor(volumeDescriptorHeader === void 0 ? this.volumeDescriptorHeader : volumeDescriptorHeader, pad1 === void 0 ? this.pad1 : pad1, systemId === void 0 ? this.systemId : systemId, volumeId === void 0 ? this.volumeId : volumeId, pad2 === void 0 ? this.pad2 : pad2, volumeSpaceSize === void 0 ? this.volumeSpaceSize : volumeSpaceSize, pad3 === void 0 ? this.pad3 : pad3, volumeSetSize === void 0 ? this.volumeSetSize : volumeSetSize, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, logicalBlockSize === void 0 ? this.logicalBlockSize : logicalBlockSize, pathTableSize === void 0 ? this.pathTableSize : pathTableSize, typeLPathTable === void 0 ? this.typeLPathTable : typeLPathTable, optType1PathTable === void 0 ? this.optType1PathTable : optType1PathTable, typeMPathTable === void 0 ? this.typeMPathTable : typeMPathTable, optTypeMPathTable === void 0 ? this.optTypeMPathTable : optTypeMPathTable, rootDirectoryRecord === void 0 ? this.rootDirectoryRecord : rootDirectoryRecord, volumeSetId === void 0 ? this.volumeSetId : volumeSetId, publisherId === void 0 ? this.publisherId : publisherId, preparerId === void 0 ? this.preparerId : preparerId, applicationId === void 0 ? this.applicationId : applicationId, copyrightFileId === void 0 ? this.copyrightFileId : copyrightFileId, abstractFileId === void 0 ? this.abstractFileId : abstractFileId, bibliographicFileId === void 0 ? this.bibliographicFileId : bibliographicFileId, creationDate === void 0 ? this.creationDate : creationDate, modificationDate === void 0 ? this.modificationDate : modificationDate, expirationDate === void 0 ? this.expirationDate : expirationDate, effectiveDate === void 0 ? this.effectiveDate : effectiveDate, fileStructureVersion === void 0 ? this.fileStructureVersion : fileStructureVersion, pad5 === void 0 ? this.pad5 : pad5, applicationData === void 0 ? this.applicationData : applicationData, pad6 === void 0 ? this.pad6 : pad6);
  };
  ISO$PrimaryVolumeDescriptor.prototype.toString = function () {
    return 'PrimaryVolumeDescriptor(volumeDescriptorHeader=' + Kotlin.toString(this.volumeDescriptorHeader) + (', pad1=' + Kotlin.toString(this.pad1)) + (', systemId=' + Kotlin.toString(this.systemId)) + (', volumeId=' + Kotlin.toString(this.volumeId)) + (', pad2=' + Kotlin.toString(this.pad2)) + (', volumeSpaceSize=' + Kotlin.toString(this.volumeSpaceSize)) + (', pad3=' + Kotlin.toString(this.pad3)) + (', volumeSetSize=' + Kotlin.toString(this.volumeSetSize)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', logicalBlockSize=' + Kotlin.toString(this.logicalBlockSize)) + (', pathTableSize=' + Kotlin.toString(this.pathTableSize)) + (', typeLPathTable=' + Kotlin.toString(this.typeLPathTable)) + (', optType1PathTable=' + Kotlin.toString(this.optType1PathTable)) + (', typeMPathTable=' + Kotlin.toString(this.typeMPathTable)) + (', optTypeMPathTable=' + Kotlin.toString(this.optTypeMPathTable)) + (', rootDirectoryRecord=' + Kotlin.toString(this.rootDirectoryRecord)) + (', volumeSetId=' + Kotlin.toString(this.volumeSetId)) + (', publisherId=' + Kotlin.toString(this.publisherId)) + (', preparerId=' + Kotlin.toString(this.preparerId)) + (', applicationId=' + Kotlin.toString(this.applicationId)) + (', copyrightFileId=' + Kotlin.toString(this.copyrightFileId)) + (', abstractFileId=' + Kotlin.toString(this.abstractFileId)) + (', bibliographicFileId=' + Kotlin.toString(this.bibliographicFileId)) + (', creationDate=' + Kotlin.toString(this.creationDate)) + (', modificationDate=' + Kotlin.toString(this.modificationDate)) + (', expirationDate=' + Kotlin.toString(this.expirationDate)) + (', effectiveDate=' + Kotlin.toString(this.effectiveDate)) + (', fileStructureVersion=' + Kotlin.toString(this.fileStructureVersion)) + (', pad5=' + Kotlin.toString(this.pad5)) + (', applicationData=' + Kotlin.toString(this.applicationData)) + (', pad6=' + Kotlin.toString(this.pad6)) + ')';
  };
  ISO$PrimaryVolumeDescriptor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.volumeDescriptorHeader) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad1) | 0;
    result = result * 31 + Kotlin.hashCode(this.systemId) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeId) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad2) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSpaceSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad3) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.logicalBlockSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.pathTableSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.typeLPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.optType1PathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.typeMPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.optTypeMPathTable) | 0;
    result = result * 31 + Kotlin.hashCode(this.rootDirectoryRecord) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSetId) | 0;
    result = result * 31 + Kotlin.hashCode(this.publisherId) | 0;
    result = result * 31 + Kotlin.hashCode(this.preparerId) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationId) | 0;
    result = result * 31 + Kotlin.hashCode(this.copyrightFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.abstractFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.bibliographicFileId) | 0;
    result = result * 31 + Kotlin.hashCode(this.creationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.modificationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.expirationDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.effectiveDate) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileStructureVersion) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad5) | 0;
    result = result * 31 + Kotlin.hashCode(this.applicationData) | 0;
    result = result * 31 + Kotlin.hashCode(this.pad6) | 0;
    return result;
  };
  ISO$PrimaryVolumeDescriptor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.volumeDescriptorHeader, other.volumeDescriptorHeader) && Kotlin.equals(this.pad1, other.pad1) && Kotlin.equals(this.systemId, other.systemId) && Kotlin.equals(this.volumeId, other.volumeId) && Kotlin.equals(this.pad2, other.pad2) && Kotlin.equals(this.volumeSpaceSize, other.volumeSpaceSize) && Kotlin.equals(this.pad3, other.pad3) && Kotlin.equals(this.volumeSetSize, other.volumeSetSize) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.logicalBlockSize, other.logicalBlockSize) && Kotlin.equals(this.pathTableSize, other.pathTableSize) && Kotlin.equals(this.typeLPathTable, other.typeLPathTable) && Kotlin.equals(this.optType1PathTable, other.optType1PathTable) && Kotlin.equals(this.typeMPathTable, other.typeMPathTable) && Kotlin.equals(this.optTypeMPathTable, other.optTypeMPathTable) && Kotlin.equals(this.rootDirectoryRecord, other.rootDirectoryRecord) && Kotlin.equals(this.volumeSetId, other.volumeSetId) && Kotlin.equals(this.publisherId, other.publisherId) && Kotlin.equals(this.preparerId, other.preparerId) && Kotlin.equals(this.applicationId, other.applicationId) && Kotlin.equals(this.copyrightFileId, other.copyrightFileId) && Kotlin.equals(this.abstractFileId, other.abstractFileId) && Kotlin.equals(this.bibliographicFileId, other.bibliographicFileId) && Kotlin.equals(this.creationDate, other.creationDate) && Kotlin.equals(this.modificationDate, other.modificationDate) && Kotlin.equals(this.expirationDate, other.expirationDate) && Kotlin.equals(this.effectiveDate, other.effectiveDate) && Kotlin.equals(this.fileStructureVersion, other.fileStructureVersion) && Kotlin.equals(this.pad5, other.pad5) && Kotlin.equals(this.applicationData, other.applicationData) && Kotlin.equals(this.pad6, other.pad6)))));
  };
  function ISO$VolumeDescriptorHeader(type, id, version) {
    this.type = type;
    this.id = id;
    this.version = version;
  }
  function ISO$VolumeDescriptorHeader$TypeEnum(id) {
    ISO$VolumeDescriptorHeader$TypeEnum$Companion_getInstance();
    this.id = id;
  }
  function ISO$VolumeDescriptorHeader$TypeEnum$Companion() {
    ISO$VolumeDescriptorHeader$TypeEnum$Companion_instance = this;
    this.BootRecord = new ISO$VolumeDescriptorHeader$TypeEnum(0);
    this.VolumePartitionSetTerminator = new ISO$VolumeDescriptorHeader$TypeEnum(255);
    this.PrimaryVolumeDescriptor = new ISO$VolumeDescriptorHeader$TypeEnum(1);
    this.SupplementaryVolumeDescriptor = new ISO$VolumeDescriptorHeader$TypeEnum(2);
    this.VolumePartitionDescriptor = new ISO$VolumeDescriptorHeader$TypeEnum(3);
  }
  ISO$VolumeDescriptorHeader$TypeEnum$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO$VolumeDescriptorHeader$TypeEnum$Companion_instance = null;
  function ISO$VolumeDescriptorHeader$TypeEnum$Companion_getInstance() {
    if (ISO$VolumeDescriptorHeader$TypeEnum$Companion_instance === null) {
      new ISO$VolumeDescriptorHeader$TypeEnum$Companion();
    }
    return ISO$VolumeDescriptorHeader$TypeEnum$Companion_instance;
  }
  ISO$VolumeDescriptorHeader$TypeEnum.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TypeEnum',
    interfaces: []
  };
  ISO$VolumeDescriptorHeader$TypeEnum.prototype.component1 = function () {
    return this.id;
  };
  ISO$VolumeDescriptorHeader$TypeEnum.prototype.copy_za3lpa$ = function (id) {
    return new ISO$VolumeDescriptorHeader$TypeEnum(id === void 0 ? this.id : id);
  };
  ISO$VolumeDescriptorHeader$TypeEnum.prototype.toString = function () {
    return 'TypeEnum(id=' + Kotlin.toString(this.id) + ')';
  };
  ISO$VolumeDescriptorHeader$TypeEnum.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    return result;
  };
  ISO$VolumeDescriptorHeader$TypeEnum.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.id, other.id))));
  };
  ISO$VolumeDescriptorHeader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'VolumeDescriptorHeader',
    interfaces: []
  };
  function ISO$ISO$VolumeDescriptorHeader_init(s, $this) {
    $this = $this || Object.create(ISO$VolumeDescriptorHeader.prototype);
    ISO$VolumeDescriptorHeader.call($this, new ISO$VolumeDescriptorHeader$TypeEnum(readU8_1(s)), readStringz_4(s, 5, ISO_getInstance().CHARSET), readU8_1(s));
    return $this;
  }
  ISO$VolumeDescriptorHeader.prototype.component1 = function () {
    return this.type;
  };
  ISO$VolumeDescriptorHeader.prototype.component2 = function () {
    return this.id;
  };
  ISO$VolumeDescriptorHeader.prototype.component3 = function () {
    return this.version;
  };
  ISO$VolumeDescriptorHeader.prototype.copy_bt1c73$ = function (type, id, version) {
    return new ISO$VolumeDescriptorHeader(type === void 0 ? this.type : type, id === void 0 ? this.id : id, version === void 0 ? this.version : version);
  };
  ISO$VolumeDescriptorHeader.prototype.toString = function () {
    return 'VolumeDescriptorHeader(type=' + Kotlin.toString(this.type) + (', id=' + Kotlin.toString(this.id)) + (', version=' + Kotlin.toString(this.version)) + ')';
  };
  ISO$VolumeDescriptorHeader.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.version) | 0;
    return result;
  };
  ISO$VolumeDescriptorHeader.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.id, other.id) && Kotlin.equals(this.version, other.version)))));
  };
  function ISO$IsoDate(data) {
    this.data = data;
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
    this.year = (tmp$ = toIntOrNull(this.data.substring(0, 4))) != null ? tmp$ : 0;
    this.month = (tmp$_0 = toIntOrNull(this.data.substring(4, 6))) != null ? tmp$_0 : 0;
    this.day = (tmp$_1 = toIntOrNull(this.data.substring(6, 8))) != null ? tmp$_1 : 0;
    this.hour = (tmp$_2 = toIntOrNull(this.data.substring(8, 10))) != null ? tmp$_2 : 0;
    this.minute = (tmp$_3 = toIntOrNull(this.data.substring(10, 12))) != null ? tmp$_3 : 0;
    this.second = (tmp$_4 = toIntOrNull(this.data.substring(12, 14))) != null ? tmp$_4 : 0;
    this.hsecond = (tmp$_5 = toIntOrNull(this.data.substring(14, 16))) != null ? tmp$_5 : 0;
  }
  ISO$IsoDate.prototype.toString = function () {
    return format('IsoDate(%04d-%02d-%02d %02d:%02d:%02d.%d)', [this.year, this.month, this.day, this.hour, this.minute, this.second, this.hsecond]);
  };
  ISO$IsoDate.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IsoDate',
    interfaces: []
  };
  function ISO$ISO$IsoDate_init(s, $this) {
    $this = $this || Object.create(ISO$IsoDate.prototype);
    ISO$IsoDate.call($this, readString_1(s, 17, ASCII_getInstance()));
    return $this;
  }
  ISO$IsoDate.prototype.component1 = function () {
    return this.data;
  };
  ISO$IsoDate.prototype.copy_61zpoe$ = function (data) {
    return new ISO$IsoDate(data === void 0 ? this.data : data);
  };
  ISO$IsoDate.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  ISO$IsoDate.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.data, other.data))));
  };
  function ISO$DateStruct(year, month, day, hour, minute, second, offset) {
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.offset = offset;
    this.fullYear = 1900 + this.year | 0;
  }
  ISO$DateStruct.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DateStruct',
    interfaces: []
  };
  function ISO$ISO$DateStruct_init(s, $this) {
    $this = $this || Object.create(ISO$DateStruct.prototype);
    ISO$DateStruct.call($this, readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s), readU8_1(s));
    return $this;
  }
  ISO$DateStruct.prototype.component1 = function () {
    return this.year;
  };
  ISO$DateStruct.prototype.component2 = function () {
    return this.month;
  };
  ISO$DateStruct.prototype.component3 = function () {
    return this.day;
  };
  ISO$DateStruct.prototype.component4 = function () {
    return this.hour;
  };
  ISO$DateStruct.prototype.component5 = function () {
    return this.minute;
  };
  ISO$DateStruct.prototype.component6 = function () {
    return this.second;
  };
  ISO$DateStruct.prototype.component7 = function () {
    return this.offset;
  };
  ISO$DateStruct.prototype.copy_ui44o2$ = function (year, month, day, hour, minute, second, offset) {
    return new ISO$DateStruct(year === void 0 ? this.year : year, month === void 0 ? this.month : month, day === void 0 ? this.day : day, hour === void 0 ? this.hour : hour, minute === void 0 ? this.minute : minute, second === void 0 ? this.second : second, offset === void 0 ? this.offset : offset);
  };
  ISO$DateStruct.prototype.toString = function () {
    return 'DateStruct(year=' + Kotlin.toString(this.year) + (', month=' + Kotlin.toString(this.month)) + (', day=' + Kotlin.toString(this.day)) + (', hour=' + Kotlin.toString(this.hour)) + (', minute=' + Kotlin.toString(this.minute)) + (', second=' + Kotlin.toString(this.second)) + (', offset=' + Kotlin.toString(this.offset)) + ')';
  };
  ISO$DateStruct.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.year) | 0;
    result = result * 31 + Kotlin.hashCode(this.month) | 0;
    result = result * 31 + Kotlin.hashCode(this.day) | 0;
    result = result * 31 + Kotlin.hashCode(this.hour) | 0;
    result = result * 31 + Kotlin.hashCode(this.minute) | 0;
    result = result * 31 + Kotlin.hashCode(this.second) | 0;
    result = result * 31 + Kotlin.hashCode(this.offset) | 0;
    return result;
  };
  ISO$DateStruct.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.year, other.year) && Kotlin.equals(this.month, other.month) && Kotlin.equals(this.day, other.day) && Kotlin.equals(this.hour, other.hour) && Kotlin.equals(this.minute, other.minute) && Kotlin.equals(this.second, other.second) && Kotlin.equals(this.offset, other.offset)))));
  };
  function ISO$DirectoryRecord(length, extendedAttributeLength, extent, size, date, flags, fileUnitSize, interleave, volumeSequenceNumber, rawName) {
    ISO$DirectoryRecord$Companion_getInstance();
    this.length = length;
    this.extendedAttributeLength = extendedAttributeLength;
    this.extent = extent;
    this.size = size;
    this.date = date;
    this.flags = flags;
    this.fileUnitSize = fileUnitSize;
    this.interleave = interleave;
    this.volumeSequenceNumber = volumeSequenceNumber;
    this.rawName = rawName;
    this.name = substringBefore(this.rawName, 59);
    this.offset = Kotlin.Long.fromInt(this.extent).multiply(ISO_getInstance().SECTOR_SIZE);
    this.isDirectory = (this.flags & 2) !== 0;
  }
  function ISO$DirectoryRecord$Companion() {
    ISO$DirectoryRecord$Companion_instance = this;
  }
  ISO$DirectoryRecord$Companion.prototype.invoke_39qel5$ = function (_s) {
    var length = readU8_1(_s);
    if (length <= 0) {
      return null;
    }
     else {
      var s = readStream_2(_s, Kotlin.Long.fromInt(length - 1 | 0));
      var dr = new ISO$DirectoryRecord(length, readU8_1(s), ISO_getInstance().readU32_le_be_ucmi9i$(s), ISO_getInstance().readU32_le_be_ucmi9i$(s), ISO$ISO$DateStruct_init(s), readU8_1(s), readU8_1(s), readU8_1(s), ISO_getInstance().readU16_le_be_ucmi9i$(s), ISO_getInstance().readTextWithLength_ucmi9i$(s));
      return dr;
    }
  };
  ISO$DirectoryRecord$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ISO$DirectoryRecord$Companion_instance = null;
  function ISO$DirectoryRecord$Companion_getInstance() {
    if (ISO$DirectoryRecord$Companion_instance === null) {
      new ISO$DirectoryRecord$Companion();
    }
    return ISO$DirectoryRecord$Companion_instance;
  }
  ISO$DirectoryRecord.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DirectoryRecord',
    interfaces: []
  };
  ISO$DirectoryRecord.prototype.component1 = function () {
    return this.length;
  };
  ISO$DirectoryRecord.prototype.component2 = function () {
    return this.extendedAttributeLength;
  };
  ISO$DirectoryRecord.prototype.component3 = function () {
    return this.extent;
  };
  ISO$DirectoryRecord.prototype.component4 = function () {
    return this.size;
  };
  ISO$DirectoryRecord.prototype.component5 = function () {
    return this.date;
  };
  ISO$DirectoryRecord.prototype.component6 = function () {
    return this.flags;
  };
  ISO$DirectoryRecord.prototype.component7 = function () {
    return this.fileUnitSize;
  };
  ISO$DirectoryRecord.prototype.component8 = function () {
    return this.interleave;
  };
  ISO$DirectoryRecord.prototype.component9 = function () {
    return this.volumeSequenceNumber;
  };
  ISO$DirectoryRecord.prototype.component10 = function () {
    return this.rawName;
  };
  ISO$DirectoryRecord.prototype.copy_j11yol$ = function (length, extendedAttributeLength, extent, size, date, flags, fileUnitSize, interleave, volumeSequenceNumber, rawName) {
    return new ISO$DirectoryRecord(length === void 0 ? this.length : length, extendedAttributeLength === void 0 ? this.extendedAttributeLength : extendedAttributeLength, extent === void 0 ? this.extent : extent, size === void 0 ? this.size : size, date === void 0 ? this.date : date, flags === void 0 ? this.flags : flags, fileUnitSize === void 0 ? this.fileUnitSize : fileUnitSize, interleave === void 0 ? this.interleave : interleave, volumeSequenceNumber === void 0 ? this.volumeSequenceNumber : volumeSequenceNumber, rawName === void 0 ? this.rawName : rawName);
  };
  ISO$DirectoryRecord.prototype.toString = function () {
    return 'DirectoryRecord(length=' + Kotlin.toString(this.length) + (', extendedAttributeLength=' + Kotlin.toString(this.extendedAttributeLength)) + (', extent=' + Kotlin.toString(this.extent)) + (', size=' + Kotlin.toString(this.size)) + (', date=' + Kotlin.toString(this.date)) + (', flags=' + Kotlin.toString(this.flags)) + (', fileUnitSize=' + Kotlin.toString(this.fileUnitSize)) + (', interleave=' + Kotlin.toString(this.interleave)) + (', volumeSequenceNumber=' + Kotlin.toString(this.volumeSequenceNumber)) + (', rawName=' + Kotlin.toString(this.rawName)) + ')';
  };
  ISO$DirectoryRecord.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.length) | 0;
    result = result * 31 + Kotlin.hashCode(this.extendedAttributeLength) | 0;
    result = result * 31 + Kotlin.hashCode(this.extent) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.date) | 0;
    result = result * 31 + Kotlin.hashCode(this.flags) | 0;
    result = result * 31 + Kotlin.hashCode(this.fileUnitSize) | 0;
    result = result * 31 + Kotlin.hashCode(this.interleave) | 0;
    result = result * 31 + Kotlin.hashCode(this.volumeSequenceNumber) | 0;
    result = result * 31 + Kotlin.hashCode(this.rawName) | 0;
    return result;
  };
  ISO$DirectoryRecord.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.length, other.length) && Kotlin.equals(this.extendedAttributeLength, other.extendedAttributeLength) && Kotlin.equals(this.extent, other.extent) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.date, other.date) && Kotlin.equals(this.flags, other.flags) && Kotlin.equals(this.fileUnitSize, other.fileUnitSize) && Kotlin.equals(this.interleave, other.interleave) && Kotlin.equals(this.volumeSequenceNumber, other.volumeSequenceNumber) && Kotlin.equals(this.rawName, other.rawName)))));
  };
  ISO.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ISO',
    interfaces: []
  };
  var ISO_instance = null;
  function ISO_getInstance() {
    if (ISO_instance === null) {
      new ISO();
    }
    return ISO_instance;
  }
  function readUdfDString($receiver, bytes) {
    var ss = readStream_1($receiver, bytes);
    var count = readU16_le_1(ss) / 2 | 0;
    return readUtf16_le(ss, count);
  }
  function readUtf16_le($receiver, count) {
    var s = '';
    for (var n = 0; n < count; n++) {
      s += String.fromCharCode(toChar(readS16_le_1($receiver)));
    }
    return s;
  }
  function JailVfs$ObjectLiteral(closure$jailRoot) {
    this.closure$jailRoot = closure$jailRoot;
    Vfs$Proxy.call(this);
    this.baseJail = VfsUtil_getInstance().normalize_61zpoe$(closure$jailRoot.path);
  }
  JailVfs$ObjectLiteral.prototype.access_61zpoe$ = function (path, continuation) {
    return this.closure$jailRoot.get_61zpoe$(trim(VfsUtil_getInstance().normalize_61zpoe$(path), Kotlin.charArrayOf(47)));
  };
  JailVfs$ObjectLiteral.prototype.transform_yirdke$ = function ($receiver, continuation) {
    var outPath = VfsUtil_getInstance().normalize_61zpoe$($receiver.path);
    if (!startsWith(outPath, this.baseJail))
      throw UnsupportedOperationException_init_0('Jail not base root : ' + $receiver.path + ' | ' + this.baseJail);
    var startIndex = this.baseJail.length;
    return this.file_61zpoe$(outPath.substring(startIndex));
  };
  Object.defineProperty(JailVfs$ObjectLiteral.prototype, 'absolutePath', {
    get: function () {
      return this.closure$jailRoot.absolutePath;
    }
  });
  JailVfs$ObjectLiteral.prototype.toString = function () {
    return 'JailVfs(' + this.closure$jailRoot + ')';
  };
  JailVfs$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Vfs$Proxy]
  };
  function JailVfs(jailRoot) {
    return (new JailVfs$ObjectLiteral(jailRoot)).root;
  }
  function LocalVfs() {
    LocalVfs$Companion_getInstance();
    Vfs.call(this);
  }
  function LocalVfs$Companion() {
    LocalVfs$Companion_instance = this;
  }
  LocalVfs$Companion.prototype.get_61zpoe$ = function (base) {
    return LocalVfs_0(base);
  };
  LocalVfs$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var LocalVfs$Companion_instance = null;
  function LocalVfs$Companion_getInstance() {
    if (LocalVfs$Companion_instance === null) {
      new LocalVfs$Companion();
    }
    return LocalVfs$Companion_instance;
  }
  LocalVfs.prototype.toString = function () {
    return 'LocalVfs';
  };
  LocalVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LocalVfs',
    interfaces: [Vfs]
  };
  function resourcesVfs$lambda() {
    return get_ResourcesVfs();
  }
  var resourcesVfs;
  function get_resourcesVfs() {
    return resourcesVfs.value;
  }
  function rootLocalVfs$lambda() {
    return KorioNative_getInstance().rootLocalVfs();
  }
  var rootLocalVfs;
  function get_rootLocalVfs() {
    return rootLocalVfs.value;
  }
  function applicationVfs$lambda() {
    return KorioNative_getInstance().applicationVfs();
  }
  var applicationVfs;
  function get_applicationVfs() {
    return applicationVfs.value;
  }
  function cacheVfs$lambda() {
    return KorioNative_getInstance().cacheVfs();
  }
  var cacheVfs;
  function get_cacheVfs() {
    return cacheVfs.value;
  }
  function externalStorageVfs$lambda() {
    return KorioNative_getInstance().externalStorageVfs();
  }
  var externalStorageVfs;
  function get_externalStorageVfs() {
    return externalStorageVfs.value;
  }
  function userHomeVfs$lambda() {
    return KorioNative_getInstance().userHomeVfs();
  }
  var userHomeVfs;
  function get_userHomeVfs() {
    return userHomeVfs.value;
  }
  function localCurrentDirVfs$lambda() {
    return ApplicationVfs();
  }
  var localCurrentDirVfs;
  function get_localCurrentDirVfs() {
    return localCurrentDirVfs.value;
  }
  function tempVfs$lambda() {
    return KorioNative_getInstance().tempVfs();
  }
  var tempVfs;
  function get_tempVfs() {
    return tempVfs.value;
  }
  function RootLocalVfs() {
    return get_rootLocalVfs();
  }
  function ApplicationVfs() {
    return get_applicationVfs();
  }
  function CacheVfs() {
    return get_cacheVfs();
  }
  function ExternalStorageVfs() {
    return get_externalStorageVfs();
  }
  function UserHomeVfs() {
    return get_userHomeVfs();
  }
  function LocalCurrentDirVfs() {
    return get_localCurrentDirVfs();
  }
  function TempVfs() {
    return get_tempVfs();
  }
  function LocalVfs_0(base) {
    return KorioNative_getInstance().localVfs_61zpoe$(base);
  }
  function JailedLocalVfs(base) {
    return LocalVfs_0(base).jail();
  }
  function LogVfs(parent) {
    Vfs$Proxy.call(this);
    this.parent = parent;
    this.log = ArrayList_init();
    this.modifiedFiles = LinkedHashSet_init();
  }
  Object.defineProperty(LogVfs.prototype, 'logstr', {
    get: function () {
      return this.log.toString();
    }
  });
  LogVfs.prototype.access_61zpoe$ = function (path, continuation) {
    return this.parent.get_61zpoe$(path);
  };
  LogVfs.prototype.exec_z6qifm$$default = function (path, cmdAndArgs, env, handler, continuation) {
    var $receiver = this.log;
    var element = 'exec(' + path + ', ' + cmdAndArgs + ', ' + env + ', ' + handler + ')';
    $receiver.add_11rb$(element);
    return this.exec_z6qifm$(path, cmdAndArgs, env, handler, continuation, Vfs$Proxy.prototype.exec_z6qifm$$default.bind(this));
  };
  function LogVfs$open$ObjectLiteral(closure$base, this$LogVfs, closure$path) {
    this.closure$base = closure$base;
    this.this$LogVfs = this$LogVfs;
    this.closure$path = closure$path;
    AsyncStreamBase.call(this);
  }
  LogVfs$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    this.closure$base.position = position;
    return this.closure$base.read_mj6st8$(buffer, offset, len, continuation);
  };
  LogVfs$open$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$.prototype.constructor = Coroutine$write_4m9kcn$;
  Coroutine$write_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.closure$base.position = this.local$position;
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.$this.this$LogVfs.modifiedFiles;
            var element = this.$this.closure$path;
            $receiver.add_11rb$(element);
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs$open$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$.prototype.constructor = Coroutine$setLength_s8cxhz$;
  Coroutine$setLength_s8cxhz$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.setLength_s8cxhz$(this.local$value, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var $receiver = this.$this.this$LogVfs.modifiedFiles;
            var element = this.$this.closure$path;
            $receiver.add_11rb$(element);
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$base.getLength(continuation);
  };
  LogVfs$open$ObjectLiteral.prototype.close = function (continuation) {
    return this.closure$base.close(continuation);
  };
  LogVfs$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  LogVfs.prototype.open_vb0dls$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$_0(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$_0($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_vb0dls$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$_0.prototype.constructor = Coroutine$open_vb0dls$_0;
  Coroutine$open_vb0dls$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver = this.$this.log;
            var element = 'open(' + this.local$path + ', ' + this.local$mode + ')';
            $receiver.add_11rb$(element);
            this.state_0 = 2;
            this.result_0 = Vfs$Proxy.prototype.open_vb0dls$.call(this.$this, this.local$path, this.local$mode, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var base = this.result_0;
            return toAsyncStream_0(new LogVfs$open$ObjectLiteral(base, this.$this, this.local$path));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs.prototype.readRange_fmne7s$ = function (path, range, continuation) {
    var $receiver = this.log;
    var element = 'readRange(' + path + ', ' + range + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.readRange_fmne7s$.call(this, path, range, continuation);
  };
  LogVfs.prototype.put_18ksq8$$default = function (path, content, attributes, continuation) {
    this.modifiedFiles.add_11rb$(path);
    var $receiver = this.log;
    var element = 'put(' + path + ', ' + content + ', ' + attributes + ')';
    $receiver.add_11rb$(element);
    return this.put_18ksq8$(path, content, attributes, continuation, Vfs$Proxy.prototype.put_18ksq8$$default.bind(this));
  };
  LogVfs.prototype.setSize_4wgjuj$ = function (path_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$setSize_4wgjuj$_1(this, path_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setSize_4wgjuj$_1($this, path_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$size = size_0;
  }
  Coroutine$setSize_4wgjuj$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setSize_4wgjuj$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setSize_4wgjuj$_1.prototype.constructor = Coroutine$setSize_4wgjuj$_1;
  Coroutine$setSize_4wgjuj$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.modifiedFiles.add_11rb$(this.local$path);
            var $receiver = this.$this.log;
            var element = 'setSize(' + this.local$path + ', ' + this.local$size + ')';
            $receiver.add_11rb$(element);
            this.state_0 = 2;
            this.result_0 = Vfs$Proxy.prototype.setSize_4wgjuj$.call(this.$this, this.local$path, this.local$size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs.prototype.stat_61zpoe$ = function (path, continuation) {
    var $receiver = this.log;
    var element = 'stat(' + path + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.stat_61zpoe$.call(this, path, continuation);
  };
  LogVfs.prototype.list_61zpoe$ = function (path, continuation) {
    var $receiver = this.log;
    var element = 'list(' + path + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.list_61zpoe$.call(this, path, continuation);
  };
  LogVfs.prototype.delete_61zpoe$ = function (path, continuation) {
    this.modifiedFiles.add_11rb$(path);
    var $receiver = this.log;
    var element = 'delete(' + path + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.delete_61zpoe$.call(this, path, continuation);
  };
  LogVfs.prototype.setAttributes_z6b3ik$ = function (path_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$setAttributes_z6b3ik$_0(this, path_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setAttributes_z6b3ik$_0($this, path_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$setAttributes_z6b3ik$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setAttributes_z6b3ik$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setAttributes_z6b3ik$_0.prototype.constructor = Coroutine$setAttributes_z6b3ik$_0;
  Coroutine$setAttributes_z6b3ik$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.modifiedFiles.add_11rb$(this.local$path);
            var $receiver = this.$this.log;
            var element = 'setAttributes(' + this.local$path + ', ' + this.local$attributes + ')';
            $receiver.add_11rb$(element);
            this.state_0 = 2;
            this.result_0 = Vfs$Proxy.prototype.setAttributes_z6b3ik$.call(this.$this, this.local$path, this.local$attributes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs.prototype.mkdir_z6b3ik$ = function (path, attributes, continuation) {
    this.modifiedFiles.add_11rb$(path);
    var $receiver = this.log;
    var element = 'mkdir(' + path + ', ' + attributes + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.mkdir_z6b3ik$.call(this, path, attributes, continuation);
  };
  LogVfs.prototype.touch_cd0evc$ = function (path_0, time_0, atime_0, continuation_0, suspended) {
    var instance = new Coroutine$touch_cd0evc$_0(this, path_0, time_0, atime_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$touch_cd0evc$_0($this, path_0, time_0, atime_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$time = time_0;
    this.local$atime = atime_0;
  }
  Coroutine$touch_cd0evc$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$touch_cd0evc$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$touch_cd0evc$_0.prototype.constructor = Coroutine$touch_cd0evc$_0;
  Coroutine$touch_cd0evc$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.modifiedFiles.add_11rb$(this.local$path);
            var $receiver = this.$this.log;
            var element = 'touch(' + this.local$path + ', ' + this.local$time + ', ' + this.local$atime + ')';
            $receiver.add_11rb$(element);
            this.state_0 = 2;
            this.result_0 = Vfs$Proxy.prototype.touch_cd0evc$.call(this.$this, this.local$path, this.local$time, this.local$atime, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  LogVfs.prototype.rename_puj7f4$ = function (src, dst, continuation) {
    this.modifiedFiles.add_11rb$(src);
    this.modifiedFiles.add_11rb$(dst);
    var $receiver = this.log;
    var element = 'rename(' + src + ', ' + dst + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.rename_puj7f4$.call(this, src, dst, continuation);
  };
  LogVfs.prototype.watch_6lbnta$ = function (path, handler, continuation) {
    var $receiver = this.log;
    var element = 'watch(' + path + ')';
    $receiver.add_11rb$(element);
    return Vfs$Proxy.prototype.watch_6lbnta$.call(this, path, handler, continuation);
  };
  LogVfs.prototype.toString = function () {
    return 'LogVfs';
  };
  LogVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LogVfs',
    interfaces: [Vfs$Proxy]
  };
  function log($receiver) {
    return (new LogVfs($receiver)).root;
  }
  function SimpleStorage() {
  }
  SimpleStorage.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SimpleStorage',
    interfaces: []
  };
  function StorageFiles(storage) {
    StorageFiles$Companion_getInstance();
    this.storage = storage;
  }
  function StorageFiles$Companion() {
    StorageFiles$Companion_instance = this;
    this.CHUNK_SIZE = 16384;
  }
  StorageFiles$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StorageFiles$Companion_instance = null;
  function StorageFiles$Companion_getInstance() {
    if (StorageFiles$Companion_instance === null) {
      new StorageFiles$Companion();
    }
    return StorageFiles$Companion_instance;
  }
  StorageFiles.prototype.getStatsKey_61zpoe$ = function (fileName) {
    return 'korio_stats_v1_' + fileName;
  };
  StorageFiles.prototype.getChunkKey_bm4lxs$ = function (fileName, chunk) {
    return 'korio_chunk' + chunk + '_v1_' + fileName;
  };
  function StorageFiles$EntryInfo(isFile, size, children, createdTime, modifiedTime) {
    if (size === void 0)
      size = L0;
    if (children === void 0) {
      children = emptyList();
    }
    if (createdTime === void 0)
      createdTime = L0;
    if (modifiedTime === void 0)
      modifiedTime = L0;
    this.isFile = isFile;
    this.size = size;
    this.children = children;
    this.createdTime = createdTime;
    this.modifiedTime = modifiedTime;
  }
  Object.defineProperty(StorageFiles$EntryInfo.prototype, 'isDirectory', {
    get: function () {
      return !this.isFile;
    }
  });
  StorageFiles$EntryInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EntryInfo',
    interfaces: []
  };
  StorageFiles$EntryInfo.prototype.component1 = function () {
    return this.isFile;
  };
  StorageFiles$EntryInfo.prototype.component2 = function () {
    return this.size;
  };
  StorageFiles$EntryInfo.prototype.component3 = function () {
    return this.children;
  };
  StorageFiles$EntryInfo.prototype.component4 = function () {
    return this.createdTime;
  };
  StorageFiles$EntryInfo.prototype.component5 = function () {
    return this.modifiedTime;
  };
  StorageFiles$EntryInfo.prototype.copy_sw1yvt$ = function (isFile, size, children, createdTime, modifiedTime) {
    return new StorageFiles$EntryInfo(isFile === void 0 ? this.isFile : isFile, size === void 0 ? this.size : size, children === void 0 ? this.children : children, createdTime === void 0 ? this.createdTime : createdTime, modifiedTime === void 0 ? this.modifiedTime : modifiedTime);
  };
  StorageFiles$EntryInfo.prototype.toString = function () {
    return 'EntryInfo(isFile=' + Kotlin.toString(this.isFile) + (', size=' + Kotlin.toString(this.size)) + (', children=' + Kotlin.toString(this.children)) + (', createdTime=' + Kotlin.toString(this.createdTime)) + (', modifiedTime=' + Kotlin.toString(this.modifiedTime)) + ')';
  };
  StorageFiles$EntryInfo.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.isFile) | 0;
    result = result * 31 + Kotlin.hashCode(this.size) | 0;
    result = result * 31 + Kotlin.hashCode(this.children) | 0;
    result = result * 31 + Kotlin.hashCode(this.createdTime) | 0;
    result = result * 31 + Kotlin.hashCode(this.modifiedTime) | 0;
    return result;
  };
  StorageFiles$EntryInfo.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.isFile, other.isFile) && Kotlin.equals(this.size, other.size) && Kotlin.equals(this.children, other.children) && Kotlin.equals(this.createdTime, other.createdTime) && Kotlin.equals(this.modifiedTime, other.modifiedTime)))));
  };
  StorageFiles.prototype.setEntryInfo_qv0hih$ = function (fileName_0, info_0, continuation_0, suspended) {
    var instance = new Coroutine$setEntryInfo_qv0hih$(this, fileName_0, info_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setEntryInfo_qv0hih$($this, fileName_0, info_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$info = info_0;
  }
  Coroutine$setEntryInfo_qv0hih$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setEntryInfo_qv0hih$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setEntryInfo_qv0hih$.prototype.constructor = Coroutine$setEntryInfo_qv0hih$;
  Coroutine$setEntryInfo_qv0hih$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.setEntryInfo_j2wltl$(this.local$fileName, this.local$info.isFile, this.local$info.size, this.local$info.children, this.local$info.createdTime, this.local$info.modifiedTime, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.setEntryInfo_j2wltl$ = function (fileName_0, isFile_0, size_0, children_0, createdTime_0, modifiedTime_0, continuation_0, suspended) {
    var instance = new Coroutine$setEntryInfo_j2wltl$(this, fileName_0, isFile_0, size_0, children_0, createdTime_0, modifiedTime_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setEntryInfo_j2wltl$($this, fileName_0, isFile_0, size_0, children_0, createdTime_0, modifiedTime_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$isFile = isFile_0;
    this.local$size = size_0;
    this.local$children = children_0;
    this.local$createdTime = createdTime_0;
    this.local$modifiedTime = modifiedTime_0;
  }
  Coroutine$setEntryInfo_j2wltl$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setEntryInfo_j2wltl$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setEntryInfo_j2wltl$.prototype.constructor = Coroutine$setEntryInfo_j2wltl$;
  Coroutine$setEntryInfo_j2wltl$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$createdTime === void 0)
              this.local$createdTime = L0;
            if (this.local$modifiedTime === void 0)
              this.local$modifiedTime = L0;
            this.state_0 = 2;
            this.result_0 = this.$this.getEntryInfo_61zpoe$(this.local$fileName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var oldEntry = this.result_0;
            var tmp$ = this.$this.storage;
            var tmp$_0 = this.$this.getStatsKey_61zpoe$(this.local$fileName);
            var $this = Json_getInstance();
            var obj = hashMapOf([to(getPropertyCallableRef('isFile', 1, function ($receiver) {
              return $receiver.isFile;
            }).callableName, this.local$isFile), to(getPropertyCallableRef('size', 1, function ($receiver) {
              return $receiver.size;
            }).callableName, this.local$size.toNumber()), to(getPropertyCallableRef('children', 1, function ($receiver) {
              return $receiver.children;
            }).callableName, this.local$children), to(getPropertyCallableRef('createdTime', 1, function ($receiver) {
              return $receiver.createdTime;
            }).callableName, this.local$createdTime.toNumber()), to(getPropertyCallableRef('modifiedTime', 1, function ($receiver) {
              return $receiver.modifiedTime;
            }).callableName, this.local$modifiedTime.toNumber())]);
            var mapper;
            mapper = package$serialization.Mapper;
            var tmp$_1;
            if (false) {
              tmp$_1 = $this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(HashMap), obj));
            }
             else {
              tmp$_1 = $this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(HashMap), obj));
            }

            this.state_0 = 3;
            this.result_0 = tmp$.set_puj7f4$(tmp$_0, tmp$_1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.hasEntryInfo_61zpoe$ = function (fileName_0, continuation_0, suspended) {
    var instance = new Coroutine$hasEntryInfo_61zpoe$(this, fileName_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$hasEntryInfo_61zpoe$($this, fileName_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
  }
  Coroutine$hasEntryInfo_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasEntryInfo_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasEntryInfo_61zpoe$.prototype.constructor = Coroutine$hasEntryInfo_61zpoe$;
  Coroutine$hasEntryInfo_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getEntryInfo_61zpoe$(this.local$fileName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0 != null;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.getEntryInfo_61zpoe$ = function (fileName_0, continuation_0, suspended) {
    var instance = new Coroutine$getEntryInfo_61zpoe$(this, fileName_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getEntryInfo_61zpoe$($this, fileName_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$fileName = fileName_0;
  }
  Coroutine$getEntryInfo_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getEntryInfo_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getEntryInfo_61zpoe$.prototype.constructor = Coroutine$getEntryInfo_61zpoe$;
  Coroutine$getEntryInfo_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
            this.state_0 = 2;
            this.result_0 = this.$this.storage.get_61zpoe$(this.$this.getStatsKey_61zpoe$(this.local$fileName), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            if (this.local$tmp$ == null) {
              return null;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            var info = this.local$tmp$;
            var di = Kotlin.isType(tmp$ = Json_getInstance().parse_61zpoe$(info), Map) ? tmp$ : throwCCE();
            return new StorageFiles$EntryInfo(typeof (tmp$_0 = ensureNotNull(di.get_11rb$(getPropertyCallableRef('isFile', 1, function ($receiver) {
              return $receiver.isFile;
            }).callableName))) === 'boolean' ? tmp$_0 : throwCCE(), numberToLong(Kotlin.isNumber(tmp$_1 = ensureNotNull(di.get_11rb$(getPropertyCallableRef('size', 1, function ($receiver) {
              return $receiver.size;
            }).callableName))) ? tmp$_1 : throwCCE()), toList(Kotlin.isType(tmp$_2 = di.get_11rb$(getPropertyCallableRef('children', 1, function ($receiver) {
              return $receiver.children;
            }).callableName), Iterable) ? tmp$_2 : throwCCE()), numberToLong(Kotlin.isNumber(tmp$_3 = di.get_11rb$(getPropertyCallableRef('createdTime', 1, function ($receiver) {
              return $receiver.createdTime;
            }).callableName)) ? tmp$_3 : throwCCE()), numberToLong(Kotlin.isNumber(tmp$_4 = di.get_11rb$(getPropertyCallableRef('modifiedTime', 1, function ($receiver) {
              return $receiver.modifiedTime;
            }).callableName)) ? tmp$_4 : throwCCE()));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.removeEntryInfo_61zpoe$ = function (fileName_0, continuation_0, suspended) {
    var instance = new Coroutine$removeEntryInfo_61zpoe$(this, fileName_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$removeEntryInfo_61zpoe$($this, fileName_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$fileName = fileName_0;
  }
  Coroutine$removeEntryInfo_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$removeEntryInfo_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$removeEntryInfo_61zpoe$.prototype.constructor = Coroutine$removeEntryInfo_61zpoe$;
  Coroutine$removeEntryInfo_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getEntryInfo_61zpoe$(this.local$fileName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var entry = this.result_0;
            if (entry != null) {
              this.local$tmp$ = entry.children.iterator();
              this.state_0 = 3;
              continue;
            }
             else {
              return false;
            }

          case 3:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 5;
              continue;
            }

            var child = this.local$tmp$.next();
            this.state_0 = 4;
            this.result_0 = this.$this.removeEntryInfo_61zpoe$(child, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 3;
            continue;
          case 5:
            return true;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.setFileChunk_swwd4w$ = function (fileName_0, chunk_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$setFileChunk_swwd4w$(this, fileName_0, chunk_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setFileChunk_swwd4w$($this, fileName_0, chunk_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$chunk = chunk_0;
    this.local$data = data_0;
  }
  Coroutine$setFileChunk_swwd4w$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setFileChunk_swwd4w$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setFileChunk_swwd4w$.prototype.constructor = Coroutine$setFileChunk_swwd4w$;
  Coroutine$setFileChunk_swwd4w$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.storage.set_puj7f4$(this.$this.getChunkKey_bm4lxs$(this.local$fileName, this.local$chunk), get_hex(this.local$data), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.getFileChunk_bm4lxs$ = function (fileName_0, chunk_0, continuation_0, suspended) {
    var instance = new Coroutine$getFileChunk_bm4lxs$(this, fileName_0, chunk_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getFileChunk_bm4lxs$($this, fileName_0, chunk_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fileName = fileName_0;
    this.local$chunk = chunk_0;
  }
  Coroutine$getFileChunk_bm4lxs$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getFileChunk_bm4lxs$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getFileChunk_bm4lxs$.prototype.constructor = Coroutine$getFileChunk_bm4lxs$;
  Coroutine$getFileChunk_bm4lxs$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.storage.get_61zpoe$(this.$this.getChunkKey_bm4lxs$(this.local$fileName, this.local$chunk), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return (tmp$ = this.result_0) != null ? get_unhex(tmp$) : null;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.writeData_88b6yz$ = function (fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$writeData_88b6yz$(this, fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$writeData_88b6yz$($this, fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$pending = void 0;
    this.local$apos = void 0;
    this.local$aoffset = void 0;
    this.local$chunk = void 0;
    this.local$inChunk = void 0;
    this.local$written = void 0;
    this.local$fileName = fileName_0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$writeData_88b6yz$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeData_88b6yz$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeData_88b6yz$.prototype.constructor = Coroutine$writeData_88b6yz$;
  Coroutine$writeData_88b6yz$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$pending = this.local$len;
            this.local$apos = this.local$position;
            this.local$aoffset = this.local$offset;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$pending <= 0) {
              this.state_0 = 5;
              continue;
            }

            this.local$chunk = this.local$apos.div(Kotlin.Long.fromInt(StorageFiles$Companion_getInstance().CHUNK_SIZE)).toInt();
            this.local$inChunk = this.local$apos.modulo(Kotlin.Long.fromInt(StorageFiles$Companion_getInstance().CHUNK_SIZE)).toInt();
            this.state_0 = 3;
            this.result_0 = this.$this.getFileChunk_bm4lxs$(this.local$fileName, this.local$chunk, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var c = (tmp$ = this.result_0) != null ? tmp$ : new Int8Array([]);
            var available = StorageFiles$Companion_getInstance().CHUNK_SIZE - this.local$inChunk | 0;
            var b = this.local$pending;
            this.local$written = Math_0.min(available, b);
            if (this.local$written <= 0)
              invalidOp('Unexpected written');
            var cc = copyOf(c, this.local$inChunk + this.local$written | 0);
            arraycopy(this.local$buffer, this.local$aoffset, cc, this.local$inChunk, this.local$written);
            this.state_0 = 4;
            this.result_0 = this.$this.setFileChunk_swwd4w$(this.local$fileName, this.local$chunk, cc, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$pending = this.local$pending - this.local$written | 0;
            this.local$apos = this.local$apos.add(Kotlin.Long.fromInt(this.local$written));
            this.local$aoffset = this.local$aoffset + this.local$written | 0;
            this.state_0 = 2;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.prototype.readData_88b6yz$ = function (fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readData_88b6yz$(this, fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readData_88b6yz$($this, fileName_0, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$inChunk = void 0;
    this.local$fileName = fileName_0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$readData_88b6yz$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readData_88b6yz$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readData_88b6yz$.prototype.constructor = Coroutine$readData_88b6yz$;
  Coroutine$readData_88b6yz$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getEntryInfo_61zpoe$(this.local$fileName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            if (this.local$tmp$ == null) {
              return -1;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            var info = this.local$tmp$;
            if (this.local$position.compareTo_11rb$(info.size) >= 0) {
              return 0;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            var chunk = this.local$position.div(Kotlin.Long.fromInt(StorageFiles$Companion_getInstance().CHUNK_SIZE)).toInt();
            this.local$inChunk = this.local$position.modulo(Kotlin.Long.fromInt(StorageFiles$Companion_getInstance().CHUNK_SIZE)).toInt();
            this.state_0 = 5;
            this.result_0 = this.$this.getFileChunk_bm4lxs$(this.local$fileName, chunk, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.local$tmp$_0 = this.result_0;
            if (this.local$tmp$_0 == null) {
              return 0;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            var c = this.local$tmp$_0;
            var available = c.length - this.local$inChunk | 0;
            var read = Math_0.min(available, this.local$len);
            arraycopy(c, this.local$inChunk, this.local$buffer, this.local$offset, read);
            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  StorageFiles.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StorageFiles',
    interfaces: []
  };
  function MapLikeStorageVfs(storage) {
    Vfs.call(this);
    this.storage = storage;
    this.files_0 = new StorageFiles(this.storage);
    this.initialized_0 = false;
  }
  MapLikeStorageVfs.prototype.initOnce_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$initOnce_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$initOnce_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$initOnce_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$initOnce_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$initOnce_0.prototype.constructor = Coroutine$initOnce_0;
  Coroutine$initOnce_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (!this.$this.initialized_0) {
              this.$this.initialized_0 = true;
              this.state_0 = 2;
              this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$('/', this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (!this.result_0) {
              this.state_0 = 3;
              this.result_0 = this.$this.files_0.setEntryInfo_qv0hih$('/', new StorageFiles$EntryInfo(false, L0), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.normalizePath_pdl1vz$ = function ($receiver) {
    return '/' + replace_0(trim($receiver, Kotlin.charArrayOf(47)), 92, 47);
  };
  MapLikeStorageVfs.prototype.remove_ivxn3r$ = function (path_0, directory_0, continuation_0, suspended) {
    var instance = new Coroutine$remove_ivxn3r$(this, path_0, directory_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$remove_ivxn3r$($this, path_0, directory_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$npath = void 0;
    this.local$path = path_0;
    this.local$directory = directory_0;
  }
  Coroutine$remove_ivxn3r$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$remove_ivxn3r$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$remove_ivxn3r$.prototype.constructor = Coroutine$remove_ivxn3r$;
  Coroutine$remove_ivxn3r$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$tmp$ = this.result_0;
            if (this.local$tmp$ == null) {
              return false;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            var entry = this.local$tmp$;
            if (entry.isDirectory === this.local$directory) {
              var tmp$ = this.local$directory;
              if (tmp$) {
                tmp$ = !entry.children.isEmpty();
              }
              if (tmp$)
                throw new IOException("Directory '" + this.local$npath + "' is not empty");
              this.state_0 = 5;
              this.result_0 = this.$this.files_0.removeEntryInfo_61zpoe$(this.local$npath, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              return false;
            }

          case 5:
            return this.result_0;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.rmdir_61zpoe$ = function (path, continuation) {
    return this.remove_ivxn3r$(path, true, continuation);
  };
  MapLikeStorageVfs.prototype.delete_61zpoe$ = function (path, continuation) {
    return this.remove_ivxn3r$(path, false, continuation);
  };
  MapLikeStorageVfs.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$_0(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$_0($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$_0.prototype.constructor = Coroutine$stat_61zpoe$_0;
  Coroutine$stat_61zpoe$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$tmp$ = this.result_0;
            if (this.local$tmp$ == null) {
              return this.$this.createNonExistsStat_4w9ihe$(this.local$path);
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            var entry = this.local$tmp$;
            return this.$this.createExistsStat_mv8ifk$(this.local$path, entry.isDirectory, entry.size, void 0, void 0, void 0, void 0, void 0, entry.createdTime, entry.modifiedTime);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.ensureParentDirectory_0 = function (nparent_0, npath_0, continuation_0, suspended) {
    var instance = new Coroutine$ensureParentDirectory_0(this, nparent_0, npath_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$ensureParentDirectory_0($this, nparent_0, npath_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$nparent = nparent_0;
    this.local$npath = npath_0;
  }
  Coroutine$ensureParentDirectory_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ensureParentDirectory_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ensureParentDirectory_0.prototype.constructor = Coroutine$ensureParentDirectory_0;
  Coroutine$ensureParentDirectory_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$(this.local$nparent, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.result_0)
              throw new IOException("Parent directory '" + this.local$nparent + "' for file '" + this.local$npath + "' doesn't exists");
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(this.local$nparent, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var parent = ensureNotNull(this.result_0);
            if (parent.isFile)
              throw new IOException("'" + this.local$nparent + "' is a file");
            return parent;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.mkdir_z6b3ik$ = function (path_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$mkdir_z6b3ik$_0(this, path_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mkdir_z6b3ik$_0($this, path_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$npath = void 0;
    this.local$nparent = void 0;
    this.local$parent = void 0;
    this.local$now = void 0;
    this.local$path = path_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$mkdir_z6b3ik$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mkdir_z6b3ik$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mkdir_z6b3ik$_0.prototype.constructor = Coroutine$mkdir_z6b3ik$_0;
  Coroutine$mkdir_z6b3ik$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.local$nparent = this.$this.normalizePath_pdl1vz$(get_folder(new PathInfo(this.local$npath)));
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$(this.local$nparent, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (!this.result_0) {
              this.state_0 = 4;
              this.result_0 = this.$this.mkdir_z6b3ik$(this.local$nparent, this.local$attributes, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.$this.ensureParentDirectory_0(this.local$nparent, this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.local$parent = this.result_0;
            this.local$now = klock.Klock.currentTimeMillis();
            this.state_0 = 7;
            this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$(this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            if (this.result_0) {
              return false;
            }
             else {
              this.state_0 = 8;
              continue;
            }

          case 8:
            this.state_0 = 9;
            this.result_0 = this.$this.files_0.setEntryInfo_qv0hih$(this.local$nparent, this.local$parent.copy_sw1yvt$(void 0, void 0, plus(this.local$parent.children, this.local$npath)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = this.$this.files_0.setEntryInfo_j2wltl$(this.local$npath, false, L0, emptyList(), this.local$now, this.local$now, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            return true;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.list_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$list_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$list_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$list_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$list_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$list_61zpoe$.prototype.constructor = Coroutine$list_61zpoe$;
  Coroutine$list_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            tmp$ = this.result_0;
            if (tmp$ == null) {
              throw new IOException("Can't find '" + this.local$path + "'");
            }

            var entry = tmp$;
            var $receiver = entry.children;
            var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
            var tmp$_0;
            tmp$_0 = $receiver.iterator();
            while (tmp$_0.hasNext()) {
              var item = tmp$_0.next();
              destination.add_11rb$(new VfsFile(this.$this, item));
            }

            return toAsync_0(destination);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MapLikeStorageVfs$open$ObjectLiteral(closure$info, this$MapLikeStorageVfs, closure$npath) {
    this.closure$info = closure$info;
    this.this$MapLikeStorageVfs = this$MapLikeStorageVfs;
    this.closure$npath = closure$npath;
    AsyncStreamBase.call(this);
  }
  MapLikeStorageVfs$open$ObjectLiteral.prototype.updateInfo_0 = function (newInfo_0, continuation_0, suspended) {
    var instance = new Coroutine$updateInfo_0(this, newInfo_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$updateInfo_0($this, newInfo_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$newInfo = newInfo_0;
  }
  Coroutine$updateInfo_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$updateInfo_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$updateInfo_0.prototype.constructor = Coroutine$updateInfo_0;
  Coroutine$updateInfo_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (!((tmp$ = this.$this.closure$info.v) != null ? tmp$.equals(this.local$newInfo) : null)) {
              this.$this.closure$info.v = this.local$newInfo;
              this.state_0 = 2;
              this.result_0 = this.$this.this$MapLikeStorageVfs.files_0.setEntryInfo_qv0hih$(this.$this.closure$npath, this.$this.closure$info.v, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return this.this$MapLikeStorageVfs.files_0.readData_88b6yz$(this.closure$npath, position, buffer, offset, len, continuation);
  };
  MapLikeStorageVfs$open$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_0(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_0($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_0.prototype.constructor = Coroutine$write_4m9kcn$_0;
  Coroutine$write_4m9kcn$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.this$MapLikeStorageVfs.files_0.writeData_88b6yz$(this.$this.closure$npath, this.local$position, this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var tmp$ = this.$this.closure$info.v;
            var tmp$_0 = void 0;
            var a = this.$this.closure$info.v.size;
            var b = this.local$position.add(Kotlin.Long.fromInt(this.local$len));
            this.state_0 = 3;
            this.result_0 = this.$this.updateInfo_0(tmp$.copy_sw1yvt$(tmp$_0, a.compareTo_11rb$(b) >= 0 ? a : b), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs$open$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$_0(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$_0($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$_0.prototype.constructor = Coroutine$setLength_s8cxhz$_0;
  Coroutine$setLength_s8cxhz$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.updateInfo_0(this.$this.closure$info.v.copy_sw1yvt$(void 0, this.local$value), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$info.v.size;
  };
  MapLikeStorageVfs$open$ObjectLiteral.prototype.close = function (continuation) {
  };
  MapLikeStorageVfs$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  MapLikeStorageVfs.prototype.open_vb0dls$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$_1(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$_1($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$npath = void 0;
    this.local$nparent = void 0;
    this.local$parent = void 0;
    this.local$now = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_vb0dls$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$_1.prototype.constructor = Coroutine$open_vb0dls$_1;
  Coroutine$open_vb0dls$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.local$nparent = this.$this.normalizePath_pdl1vz$(get_folder(new PathInfo(this.local$npath)));
            this.state_0 = 3;
            this.result_0 = this.$this.ensureParentDirectory_0(this.local$nparent, this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$parent = this.result_0;
            this.state_0 = 4;
            this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$(this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            if (!this.result_0) {
              if (!this.local$mode.createIfNotExists)
                throw new IOException("File '" + this.local$npath + "' doesn't exists");
              this.state_0 = 5;
              this.result_0 = this.$this.files_0.setEntryInfo_qv0hih$(this.local$nparent, this.local$parent.copy_sw1yvt$(void 0, void 0, plus(this.local$parent.children, this.local$npath)), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.local$now = klock.Klock.currentTimeMillis();
            this.state_0 = 7;
            this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            var listOf$result;
            listOf$result = emptyList();
            var info = {v: (tmp$ = this.result_0) != null ? tmp$ : new StorageFiles$EntryInfo(true, L0, listOf$result, this.local$now, this.local$now)};
            if (info.v.isDirectory)
              throw new IOException("Can't open a directory");
            return toAsyncStream_0(new MapLikeStorageVfs$open$ObjectLiteral(info, this.$this, this.local$npath));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.touch_cd0evc$ = function (path_0, time_0, atime, continuation_0, suspended) {
    var instance = new Coroutine$touch_cd0evc$_1(this, path_0, time_0, atime, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$touch_cd0evc$_1($this, path_0, time_0, atime, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$npath = void 0;
    this.local$path = path_0;
    this.local$time = time_0;
  }
  Coroutine$touch_cd0evc$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$touch_cd0evc$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$touch_cd0evc$_1.prototype.constructor = Coroutine$touch_cd0evc$_1;
  Coroutine$touch_cd0evc$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.initOnce_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$npath = this.$this.normalizePath_pdl1vz$(this.local$path);
            this.state_0 = 3;
            this.result_0 = this.$this.files_0.hasEntryInfo_61zpoe$(this.local$npath, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (this.result_0) {
              this.local$tmp$ = this.$this.files_0;
              this.state_0 = 4;
              this.result_0 = this.$this.files_0.getEntryInfo_61zpoe$(this.local$npath, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$tmp$.setEntryInfo_qv0hih$(this.local$npath, ensureNotNull(this.result_0).copy_sw1yvt$(void 0, void 0, void 0, void 0, this.local$time), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MapLikeStorageVfs.prototype.toString = function () {
    return 'MapLikeStorageVfs';
  };
  MapLikeStorageVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MapLikeStorageVfs',
    interfaces: [Vfs]
  };
  function MemoryVfs(items, caseSensitive) {
    if (items === void 0)
      items = lmapOf([]);
    if (caseSensitive === void 0)
      caseSensitive = true;
    var tmp$;
    var vfs = new NodeVfs(caseSensitive);
    tmp$ = items.entries.iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var path = tmp$_0.key;
      var stream = tmp$_0.value;
      var info = new PathInfo(path);
      var folderNode = vfs.rootNode.access_ivxn3r$(get_folder(info), true);
      var fileNode = folderNode.createChild_ivxn3r$(get_basename(info), false);
      fileNode.stream = stream;
    }
    return vfs.root;
  }
  var mapCapacity = Kotlin.kotlin.collections.mapCapacity_za3lpa$;
  var LinkedHashMap_init_0 = Kotlin.kotlin.collections.LinkedHashMap_init_bwtc7$;
  function MemoryVfsMix(items, caseSensitive, charset) {
    if (items === void 0)
      items = lmapOf([]);
    if (caseSensitive === void 0)
      caseSensitive = true;
    if (charset === void 0)
      charset = UTF8_getInstance();
    var destination = LinkedHashMap_init_0(mapCapacity(items.size));
    var tmp$;
    tmp$ = items.entries.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var tmp$_0 = destination.put_xwzc9p$;
      var tmp$_1 = element.key;
      var transform$result;
      var v = element.value;
      if (Kotlin.isType(v, SyncStream)) {
        transform$result = toAsync_1(v);
      }
       else if (Kotlin.isByteArray(v)) {
        transform$result = openAsync(v);
      }
       else if (typeof v === 'string') {
        transform$result = openAsync_0(v, charset);
      }
       else {
        transform$result = openAsync(toByteArray(v.toString(), charset));
      }
      tmp$_0.call(destination, tmp$_1, transform$result);
    }
    return MemoryVfs(destination, caseSensitive);
  }
  function MemoryVfsMix_0(items, caseSensitive, charset) {
    if (caseSensitive === void 0)
      caseSensitive = true;
    if (charset === void 0)
      charset = UTF8_getInstance();
    var destination = ArrayList_init_1(items.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== items.length; ++tmp$) {
      var item = items[tmp$];
      var tmp$_0 = destination.add_11rb$;
      var key = item.component1()
      , value = item.component2();
      var tmp$_1;
      if (Kotlin.isType(value, SyncStream))
        tmp$_1 = toAsync_1(value);
      else if (Kotlin.isByteArray(value))
        tmp$_1 = openAsync(value);
      else if (typeof value === 'string')
        tmp$_1 = openAsync_0(value, charset);
      else
        tmp$_1 = openAsync(toByteArray(value.toString(), charset));
      tmp$_0.call(destination, to(key, tmp$_1));
    }
    return MemoryVfs(toMap(destination), caseSensitive);
  }
  function MergedVfs(vfsList) {
    if (vfsList === void 0) {
      vfsList = emptyList();
    }
    Vfs$Proxy.call(this);
    this.vfsList = ArrayList_init_0(vfsList);
  }
  MergedVfs.prototype.access_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$access_61zpoe$_0(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$access_61zpoe$_0($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$destination = void 0;
    this.local$firstOrNull$result = void 0;
    this.local$tmp$ = void 0;
    this.local$element = void 0;
    this.local$path = path_0;
  }
  Coroutine$access_61zpoe$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$access_61zpoe$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$access_61zpoe$_0.prototype.constructor = Coroutine$access_61zpoe$_0;
  Coroutine$access_61zpoe$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            if (this.$this.vfsList.size === 1) {
              return first(this.$this.vfsList).get_61zpoe$(this.local$path);
            }
             else {
              var $receiver = this.$this.vfsList;
              this.local$destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
              var tmp$_0;
              tmp$_0 = $receiver.iterator();
              while (tmp$_0.hasNext()) {
                var item = tmp$_0.next();
                this.local$destination.add_11rb$(item.get_61zpoe$(this.local$path));
              }
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.local$destination.iterator();
            this.state_0 = 3;
            continue;
          case 3:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 6;
              continue;
            }

            this.local$element = this.local$tmp$.next();
            this.state_0 = 4;
            this.result_0 = this.local$element.exists(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            if (this.result_0) {
              this.local$firstOrNull$result = this.local$element;
              this.state_0 = 7;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.state_0 = 3;
            continue;
          case 6:
            this.local$firstOrNull$result = null;
            if (!false) {
              this.state_0 = 7;
              continue;
            }

            this.state_0 = 2;
            continue;
          case 7:
            return (tmp$ = this.local$firstOrNull$result) != null ? tmp$ : first(this.$this.vfsList).get_61zpoe$(this.local$path);
          case 8:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MergedVfs.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$_1(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$_1($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$_1.prototype.constructor = Coroutine$stat_61zpoe$_1;
  Coroutine$stat_61zpoe$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = this.$this.vfsList.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 5;
              continue;
            }

            var vfs = this.local$tmp$.next();
            this.state_0 = 3;
            this.result_0 = vfs.get_61zpoe$(this.local$path).stat(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var result = this.result_0;
            if (result.exists) {
              return result.copy_a3mdi4$(this.$this.file_61zpoe$(this.local$path));
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return this.$this.createNonExistsStat_4w9ihe$(this.local$path);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function MergedVfs$list$lambda(this$MergedVfs_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$MergedVfs$list$lambda(this$MergedVfs_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$MergedVfs$list$lambda(this$MergedVfs_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 18;
    this.local$this$MergedVfs = this$MergedVfs_0;
    this.local$closure$path = closure$path_0;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$tmp$_1 = void 0;
    this.local$emitted = void 0;
    this.local$vfs = void 0;
    this.local$ignoreErrors$result = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$MergedVfs$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MergedVfs$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MergedVfs$list$lambda.prototype.constructor = Coroutine$MergedVfs$list$lambda;
  Coroutine$MergedVfs$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$emitted = LinkedHashSet_init();
            this.local$tmp$ = this.local$this$MergedVfs.vfsList.iterator();
            this.state_0 = 1;
            continue;
          case 1:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 19;
              continue;
            }

            this.local$vfs = this.local$tmp$.next();
            this.state_0 = 2;
            continue;
          case 2:
            this.exceptionState_0 = 4;
            this.state_0 = 3;
            this.result_0 = this.local$vfs.get_61zpoe$(this.local$closure$path).list(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$ignoreErrors$result = this.result_0;
            this.exceptionState_0 = 18;
            this.state_0 = 6;
            continue;
          case 4:
            this.exceptionState_0 = 18;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              if (false)
                printStackTrace(e);
              this.local$ignoreErrors$result = null;
              this.exceptionState_0 = 4;
              this.state_0 = 7;
              continue;
            }
             else {
              throw e;
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            if (!false) {
              this.state_0 = 7;
              continue;
            }

            this.state_0 = 2;
            continue;
          case 7:
            this.local$tmp$_0 = this.local$ignoreErrors$result;
            if (this.local$tmp$_0 == null) {
              this.state_0 = 1;
              continue;
            }
             else {
              this.state_0 = 8;
              continue;
            }

          case 8:
            var items = this.local$tmp$_0;
            this.exceptionState_0 = 16;
            this.local$tmp$_1 = items.iterator();
            this.state_0 = 9;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = this.local$tmp$_1.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            if (!this.result_0) {
              this.state_0 = 15;
              continue;
            }
             else {
              this.state_0 = 11;
              continue;
            }

          case 11:
            this.state_0 = 12;
            this.result_0 = this.local$tmp$_1.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            var v = this.result_0;
            if (!this.local$emitted.contains_11rb$(get_basename(v))) {
              var element = get_basename(v);
              this.local$emitted.add_11rb$(element);
              this.state_0 = 13;
              this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$MergedVfs.file_61zpoe$(this.local$closure$path + '/' + get_basename(v)), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 14;
              continue;
            }

          case 13:
            this.state_0 = 14;
            continue;
          case 14:
            this.state_0 = 9;
            continue;
          case 15:
            this.exceptionState_0 = 18;
            this.state_0 = 17;
            continue;
          case 16:
            this.exceptionState_0 = 18;
            var e = this.exception_0;
            if (!Kotlin.isType(e, Throwable))
              throw e;
            this.state_0 = 17;
            continue;
          case 17:
            this.state_0 = 1;
            continue;
          case 18:
            throw this.exception_0;
          case 19:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 18) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MergedVfs.prototype.list_61zpoe$ = function (path, continuation) {
    return asyncGenerate_0(MergedVfs$list$lambda(this, path), continuation);
  };
  MergedVfs.prototype.toString = function () {
    return 'MergedVfs';
  };
  MergedVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MergedVfs',
    interfaces: [Vfs$Proxy]
  };
  function MountableVfs$lambda$ObjectLiteral() {
    Vfs$Proxy.call(this);
    this.mounts_0 = ArrayList_init();
  }
  MountableVfs$lambda$ObjectLiteral.prototype.mount_tv2dhr$ = function (folder, file) {
    this._unmount_0(folder);
    var $receiver = this.mounts_0;
    var element = to(VfsUtil_getInstance().normalize_61zpoe$(folder), file);
    $receiver.add_11rb$(element);
    this.resort_0();
    return this;
  };
  MountableVfs$lambda$ObjectLiteral.prototype.unmount_61zpoe$ = function (folder) {
    this._unmount_0(folder);
    this.resort_0();
    return this;
  };
  function MountableVfs$lambda$ObjectLiteral$_unmount$lambda(closure$folder) {
    return function (it) {
      return equals(it.first, VfsUtil_getInstance().normalize_61zpoe$(closure$folder));
    };
  }
  MountableVfs$lambda$ObjectLiteral.prototype._unmount_0 = function (folder) {
    removeAll(this.mounts_0, MountableVfs$lambda$ObjectLiteral$_unmount$lambda(folder));
  };
  function MountableVfs$lambda$ObjectLiteral$resort$lambda(it) {
    return -it.first.length | 0;
  }
  var sortWith = Kotlin.kotlin.collections.sortWith_nqfjgj$;
  var compareBy$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_0(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_0.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_0.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  MountableVfs$lambda$ObjectLiteral.prototype.resort_0 = function () {
    var $receiver = this.mounts_0;
    if ($receiver.size > 1) {
      sortWith($receiver, new Comparator$ObjectLiteral_0(compareBy$lambda(MountableVfs$lambda$ObjectLiteral$resort$lambda)));
    }
  };
  MountableVfs$lambda$ObjectLiteral.prototype.access_61zpoe$ = function (path, continuation) {
    var tmp$;
    var rpath = VfsUtil_getInstance().normalize_61zpoe$(path);
    tmp$ = this.mounts_0.iterator();
    while (tmp$.hasNext()) {
      var tmp$_0 = tmp$.next();
      var base = tmp$_0.component1()
      , file = tmp$_0.component2();
      if (startsWith(rpath, base)) {
        var startIndex = base.length;
        return file.get_61zpoe$(rpath.substring(startIndex));
      }
    }
    throw new FileNotFoundException(path);
  };
  MountableVfs$lambda$ObjectLiteral.prototype.getUnderlyingUnscapedFile_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$getUnderlyingUnscapedFile_61zpoe$_0(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getUnderlyingUnscapedFile_61zpoe$_0($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$getUnderlyingUnscapedFile_61zpoe$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getUnderlyingUnscapedFile_61zpoe$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getUnderlyingUnscapedFile_61zpoe$_0.prototype.constructor = Coroutine$getUnderlyingUnscapedFile_61zpoe$_0;
  Coroutine$getUnderlyingUnscapedFile_61zpoe$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.access_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.result_0.getUnderlyingUnscapedFile(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  MountableVfs$lambda$ObjectLiteral.prototype.toString = function () {
    return 'MountableVfs';
  };
  MountableVfs$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Mountable, Vfs$Proxy]
  };
  function MountableVfs$lambda$ObjectLiteral_0(closure$c, closure$mount) {
    this.closure$c = closure$c;
    this.closure$mount = closure$mount;
    OldContinuationAdaptor.call(this);
    this.context_np60g2$_0 = closure$c.context;
  }
  Object.defineProperty(MountableVfs$lambda$ObjectLiteral_0.prototype, 'context', {
    get: function () {
      return this.context_np60g2$_0;
    }
  });
  MountableVfs$lambda$ObjectLiteral_0.prototype.resume_11rb$ = function (value) {
    var $receiver = this.closure$c;
    var value_0 = this.closure$mount.root;
    $receiver.resumeWith_i5d895$(new SuccessOrFailure(value_0));
  };
  MountableVfs$lambda$ObjectLiteral_0.prototype.resumeWithException_tcv7n7$ = function (exception) {
    this.closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(exception)));
  };
  MountableVfs$lambda$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [OldContinuationAdaptor]
  };
  function MountableVfs$lambda(closure$callback) {
    return function (c) {
      var mount = new MountableVfs$lambda$ObjectLiteral();
      startCoroutine_0(closure$callback, mount, new MountableVfs$lambda$ObjectLiteral_0(c, mount));
      return Unit;
    };
  }
  var SafeContinuation_init = Kotlin.kotlin.coroutines.SafeContinuation_init_wj8d80$;
  function suspendCoroutine$lambda(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  function MountableVfs(callback_0, continuation_0, suspended) {
    var instance = new Coroutine$MountableVfs(callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$MountableVfs(callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$callback = callback_0;
  }
  Coroutine$MountableVfs.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MountableVfs.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MountableVfs.prototype.constructor = Coroutine$MountableVfs;
  Coroutine$MountableVfs.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda(MountableVfs$lambda(this.local$callback))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Mountable() {
  }
  Mountable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Mountable',
    interfaces: []
  };
  function NodeVfs(caseSensitive) {
    if (caseSensitive === void 0)
      caseSensitive = true;
    Vfs.call(this);
    this.caseSensitive = caseSensitive;
    this.events = new Signal();
    this.rootNode = new NodeVfs$Node(this, '', true);
  }
  function NodeVfs$Node($outer, name, isDirectory, parent) {
    this.$outer = $outer;
    if (isDirectory === void 0)
      isDirectory = false;
    if (parent === void 0)
      parent = null;
    this.name = name;
    this.isDirectory = isDirectory;
    this.nameLC = this.name.toLowerCase();
    this.parent_kg672a$_0 = null;
    this.parent = parent;
    this.data = null;
    this.children = lmapOf([]);
    this.childrenLC = lmapOf([]);
    this.stream = null;
  }
  NodeVfs$Node.prototype.iterator = function () {
    return this.children.values.iterator();
  };
  Object.defineProperty(NodeVfs$Node.prototype, 'parent', {
    get: function () {
      return this.parent_kg672a$_0;
    },
    set: function (value) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2;
      if (this.parent_kg672a$_0 != null) {
        ensureNotNull(this.parent_kg672a$_0).children.remove_11rb$(this.name);
        ensureNotNull(this.parent_kg672a$_0).childrenLC.remove_11rb$(this.nameLC);
      }
      this.parent_kg672a$_0 = value;
      if ((tmp$_0 = (tmp$ = this.parent_kg672a$_0) != null ? tmp$.children : null) != null) {
        var key = this.name;
        tmp$_0.put_xwzc9p$(key, this);
      }
      if ((tmp$_2 = (tmp$_1 = this.parent_kg672a$_0) != null ? tmp$_1.childrenLC : null) != null) {
        var key_0 = this.nameLC;
        tmp$_2.put_xwzc9p$(key_0, this);
      }
    }
  });
  Object.defineProperty(NodeVfs$Node.prototype, 'root', {
    get: function () {
      var tmp$, tmp$_0;
      return (tmp$_0 = (tmp$ = this.parent) != null ? tmp$.root : null) != null ? tmp$_0 : this;
    }
  });
  NodeVfs$Node.prototype.child_61zpoe$ = function (name) {
    switch (name) {
      case '':
      case '.':
        return this;
      case '..':
        return this.parent;
      default:if (this.$outer.caseSensitive) {
          return this.children.get_11rb$(name);
        }
         else {
          return this.childrenLC.get_11rb$(name.toLowerCase());
        }

    }
  };
  NodeVfs$Node.prototype.createChild_ivxn3r$ = function (name, isDirectory) {
    if (isDirectory === void 0)
      isDirectory = false;
    return new NodeVfs$Node(this.$outer, name, isDirectory, this);
  };
  NodeVfs$Node.prototype.get_61zpoe$ = function (path) {
    return this.access_ivxn3r$(path, false);
  };
  NodeVfs$Node.prototype.access_ivxn3r$ = function (path, createFolders) {
    if (createFolders === void 0)
      createFolders = false;
    var tmp$;
    var node = startsWith_0(path, 47) ? this.root : this;
    tmp$ = VfsUtil_getInstance().parts_61zpoe$(path).iterator();
    while (tmp$.hasNext()) {
      var part = tmp$.next();
      var child = node.child_61zpoe$(part);
      if (child == null && createFolders)
        child = node.createChild_ivxn3r$(part, true);
      if (child == null) {
        throw new FileNotFoundException("Can't find '" + part + "' in " + path);
      }
      node = child;
    }
    return node;
  };
  NodeVfs$Node.prototype.mkdir_61zpoe$ = function (name) {
    if (this.child_61zpoe$(name) != null) {
      return false;
    }
     else {
      this.createChild_ivxn3r$(name, true);
      return true;
    }
  };
  NodeVfs$Node.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Node',
    interfaces: [Iterable]
  };
  function NodeVfs$open$ObjectLiteral(closure$s, this$NodeVfs, closure$vfsFile) {
    this.closure$s = closure$s;
    this.this$NodeVfs = this$NodeVfs;
    this.closure$vfsFile = closure$vfsFile;
    AsyncStreamBase.call(this);
  }
  NodeVfs$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return this.closure$s.read_4m9kcn$(position, buffer, offset, len);
  };
  NodeVfs$open$ObjectLiteral.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    this.closure$s.write_4m9kcn$(position, buffer, offset, len);
    this.this$NodeVfs.events.invoke_11rb$(new Vfs$FileEvent(Vfs$FileEvent$Kind$MODIFIED_getInstance(), this.closure$vfsFile));
  };
  NodeVfs$open$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value, continuation) {
    this.closure$s.length = value;
    this.this$NodeVfs.events.invoke_11rb$(new Vfs$FileEvent(Vfs$FileEvent$Kind$MODIFIED_getInstance(), this.closure$vfsFile));
  };
  NodeVfs$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$s.length;
  };
  NodeVfs$open$ObjectLiteral.prototype.close = function (continuation) {
    return this.closure$s.close();
  };
  NodeVfs$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  NodeVfs.prototype.open_vb0dls$ = function (path, mode, continuation) {
    var tmp$, tmp$_0;
    var pathInfo = new PathInfo(path);
    var folder = this.rootNode.access_ivxn3r$(get_folder(pathInfo));
    var node = folder.child_61zpoe$(get_basename(pathInfo));
    var vfsFile = this.get_61zpoe$(path);
    if (node == null && mode.createIfNotExists) {
      node = folder.createChild_ivxn3r$(get_basename(pathInfo), false);
      var s = MemorySyncStream().base;
      node.stream = toAsyncStream_0(new NodeVfs$open$ObjectLiteral(s, this, vfsFile));
    }
    tmp$_0 = (tmp$ = node != null ? node.stream : null) != null ? tmp$.duplicate() : null;
    if (tmp$_0 == null) {
      throw new FileNotFoundException(path);
    }
    return tmp$_0;
  };
  NodeVfs.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$_2(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$_2($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.$this = $this;
    this.local$tmp$_1 = void 0;
    this.local$node = void 0;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$_2.prototype.constructor = Coroutine$stat_61zpoe$_2;
  Coroutine$stat_61zpoe$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.exceptionState_0 = 3;
            this.local$node = this.$this.rootNode.access_ivxn3r$(this.local$path);
            if ((tmp$ = this.local$node.stream) != null) {
              this.state_0 = 1;
              this.result_0 = tmp$.getLength(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 2;
              continue;
            }

          case 1:
            this.state_0 = 2;
            continue;
          case 2:
            var length = (tmp$_0 = this.result_0) != null ? tmp$_0 : L0;
            this.local$tmp$_1 = this.$this.createExistsStat_mv8ifk$(this.local$path, this.local$node.isDirectory, length);
            this.exceptionState_0 = 5;
            this.state_0 = 4;
            continue;
          case 3:
            this.exceptionState_0 = 5;
            var e = this.exception_0;
            if (Kotlin.isType(e, Throwable)) {
              this.local$tmp$_1 = this.$this.createNonExistsStat_4w9ihe$(this.local$path);
            }
             else
              throw e;
            this.state_0 = 4;
            continue;
          case 4:
            return this.local$tmp$_1;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeVfs$list$lambda(this$NodeVfs_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$NodeVfs$list$lambda(this$NodeVfs_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$NodeVfs$list$lambda(this$NodeVfs_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$NodeVfs = this$NodeVfs_0;
    this.local$closure$path = closure$path_0;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$NodeVfs$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$NodeVfs$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$NodeVfs$list$lambda.prototype.constructor = Coroutine$NodeVfs$list$lambda;
  Coroutine$NodeVfs$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var node = this.local$this$NodeVfs.rootNode.get_61zpoe$(this.local$closure$path);
            this.local$tmp$ = node.children.entries.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var tmp$ = this.local$tmp$.next();
            var name = tmp$.key;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$NodeVfs.file_61zpoe$(this.local$closure$path + '/' + name), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeVfs.prototype.list_61zpoe$ = function (path, continuation) {
    return asyncGenerate_0(NodeVfs$list$lambda(this, path), continuation);
  };
  NodeVfs.prototype.delete_61zpoe$ = function (path, continuation) {
    var node = this.rootNode.get_61zpoe$(path);
    node.parent = null;
    this.events.invoke_11rb$(new Vfs$FileEvent(Vfs$FileEvent$Kind$DELETED_getInstance(), this.get_61zpoe$(path)));
    return true;
  };
  NodeVfs.prototype.mkdir_z6b3ik$ = function (path, attributes, continuation) {
    var pathInfo = new PathInfo(path);
    var out = this.rootNode.access_ivxn3r$(get_folder(pathInfo)).mkdir_61zpoe$(get_basename(pathInfo));
    this.events.invoke_11rb$(new Vfs$FileEvent(Vfs$FileEvent$Kind$CREATED_getInstance(), this.get_61zpoe$(path)));
    return out;
  };
  NodeVfs.prototype.rename_puj7f4$ = function (src, dst, continuation) {
    if (equals(src, dst))
      return false;
    var dstInfo = new PathInfo(dst);
    var srcNode = this.rootNode.access_ivxn3r$(src);
    var dstFolder = this.rootNode.access_ivxn3r$(get_folder(dstInfo));
    srcNode.parent = dstFolder;
    this.events.invoke_11rb$(new Vfs$FileEvent(Vfs$FileEvent$Kind$RENAMED_getInstance(), this.get_61zpoe$(src), this.get_61zpoe$(dst)));
    return true;
  };
  function NodeVfs$watch$lambda(closure$handler) {
    return function (it) {
      closure$handler(it);
      return Unit;
    };
  }
  NodeVfs.prototype.watch_6lbnta$ = function (path, handler, continuation) {
    return this.events.invoke_qlkmfe$(NodeVfs$watch$lambda(handler));
  };
  NodeVfs.prototype.toString = function () {
    return 'NodeVfs';
  };
  NodeVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeVfs',
    interfaces: [Vfs]
  };
  function get_ResourcesVfs() {
    return KorioNative_getInstance().ResourcesVfs;
  }
  function get_ApplicationDataVfs() {
    return KorioNative_getInstance().applicationDataVfs();
  }
  function UniversalVfs() {
    UniversalVfs_instance = this;
  }
  UniversalVfs.prototype.invoke_rjr2vy$ = function (uri, providers, base) {
    if (base === void 0)
      base = null;
    var tmp$;
    if (URI$Companion_getInstance().isAbsolute_61zpoe$(uri)) {
      var uriUri = URI$Companion_getInstance().invoke_61zpoe$(uri);
      var $receiver = providers.providers;
      var key = uriUri.scheme;
      var tmp$_0;
      var builder = (Kotlin.isType(tmp$_0 = $receiver, Map) ? tmp$_0 : throwCCE()).get_11rb$(key);
      if (builder != null) {
        tmp$ = builder.provider(uriUri);
      }
       else {
        tmp$ = invalidOp("Unsupported scheme '" + toString(uriUri.scheme) + "'");
      }
    }
     else if (base != null)
      tmp$ = base.get_61zpoe$(uri);
    else
      tmp$ = get_localCurrentDirVfs().get_61zpoe$(uri);
    return tmp$;
  };
  UniversalVfs.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'UniversalVfs',
    interfaces: []
  };
  var UniversalVfs_instance = null;
  function UniversalVfs_getInstance() {
    if (UniversalVfs_instance === null) {
      new UniversalVfs();
    }
    return UniversalVfs_instance;
  }
  function UniSchema(name, provider) {
    this.name = name;
    this.provider = provider;
  }
  UniSchema.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UniSchema',
    interfaces: []
  };
  function UniSchemaProviders(providers) {
    this.providers = providers;
  }
  UniSchemaProviders.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UniSchemaProviders',
    interfaces: []
  };
  var coerceAtLeast = Kotlin.kotlin.ranges.coerceAtLeast_dqglrj$;
  function UniSchemaProviders_init(providers, $this) {
    $this = $this || Object.create(UniSchemaProviders.prototype);
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(providers, 10)), 16);
    var destination = LinkedHashMap_init_0(capacity);
    var tmp$;
    tmp$ = providers.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      destination.put_xwzc9p$(element.name, element);
    }
    UniSchemaProviders.call($this, destination);
    return $this;
  }
  function UniSchemaProviders_init_0(providers, $this) {
    $this = $this || Object.create(UniSchemaProviders.prototype);
    var capacity = coerceAtLeast(mapCapacity(providers.length), 16);
    var destination = LinkedHashMap_init_0(capacity);
    var tmp$;
    for (tmp$ = 0; tmp$ !== providers.length; ++tmp$) {
      var element = providers[tmp$];
      destination.put_xwzc9p$(element.name, element);
    }
    UniSchemaProviders.call($this, destination);
    return $this;
  }
  function defaultUniSchema$lambda(it) {
    return UrlVfs_0(it);
  }
  function defaultUniSchema$lambda_0(it) {
    return UrlVfs_0(it);
  }
  function defaultUniSchema$lambda_1(it) {
    return get_rootLocalVfs().get_61zpoe$(it.path);
  }
  var defaultUniSchema;
  function plus_3($receiver, other) {
    return new UniSchemaProviders(plus_0($receiver.providers, other.providers));
  }
  function plus_4($receiver, other) {
    return new UniSchemaProviders(plus_0($receiver.providers, mapOf(to(other.name, other))));
  }
  function get_uniVfs($receiver) {
    return UniversalVfs_getInstance().invoke_rjr2vy$($receiver, defaultUniSchema);
  }
  function uniVfs($receiver, providers, base) {
    if (base === void 0)
      base = null;
    return UniversalVfs_getInstance().invoke_rjr2vy$($receiver, providers, base);
  }
  function UrlVfs(url, client) {
    if (client === void 0)
      client = createHttpClient();
    return UrlVfs_0(URI$Companion_getInstance().invoke_61zpoe$(url), client);
  }
  function UrlVfs_0(url, client) {
    if (client === void 0)
      client = createHttpClient();
    return (new UrlVfs_1(url.copy_82mkos$(void 0, void 0, void 0, void 0, '', null).fullUri, Unit, client)).get_61zpoe$(url.path);
  }
  function UrlVfs_1(url, dummy, client) {
    if (client === void 0)
      client = createHttpClient();
    Vfs.call(this);
    this.url = url;
    this.dummy = dummy;
    this.client = client;
    this.absolutePath_lqyott$_0 = this.url;
  }
  Object.defineProperty(UrlVfs_1.prototype, 'absolutePath', {
    get: function () {
      return this.absolutePath_lqyott$_0;
    }
  });
  UrlVfs_1.prototype.getFullUrl_61zpoe$ = function (path) {
    return trim(this.url, Kotlin.charArrayOf(47)) + String.fromCharCode(toBoxedChar(47)) + trim(path, Kotlin.charArrayOf(47));
  };
  function UrlVfs$open$ObjectLiteral(this$UrlVfs, closure$fullUrl, closure$stat) {
    this.this$UrlVfs = this$UrlVfs;
    this.closure$fullUrl = closure$fullUrl;
    this.closure$stat = closure$stat;
    AsyncStreamBase.call(this);
  }
  UrlVfs$open$ObjectLiteral.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$s = void 0;
    this.local$coffset = void 0;
    this.local$pending = void 0;
    this.local$totalRead = void 0;
    this.local$read = void 0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$.prototype.constructor = Coroutine$read_4m9kcn$;
  Coroutine$read_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$len === 0) {
              return 0;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.this$UrlVfs.client.request_v6tn8p$(Http$Method$Companion_getInstance().GET, this.$this.closure$fullUrl, Http$Http$Headers_init_0(lmapOf([to('range', 'bytes=' + this.local$position + '-' + this.local$position.add(Kotlin.Long.fromInt(this.local$len)).subtract(Kotlin.Long.fromInt(1)))])), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var res = this.result_0;
            this.local$s = res.content;
            this.local$coffset = this.local$offset;
            this.local$pending = this.local$len;
            this.local$totalRead = 0;
            this.state_0 = 4;
            continue;
          case 4:
            if (this.local$pending <= 0) {
              this.state_0 = 8;
              continue;
            }

            this.state_0 = 5;
            this.result_0 = this.local$s.read_mj6st8$(this.local$buffer, this.local$coffset, this.local$pending, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.local$read = this.result_0;
            if (this.local$read < 0 && this.local$totalRead === 0) {
              return this.local$read;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            if (this.local$read <= 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.local$pending = this.local$pending - this.local$read | 0;
            this.local$totalRead = this.local$totalRead + this.local$read | 0;
            this.local$coffset = this.local$coffset + this.local$read | 0;
            this.state_0 = 4;
            continue;
          case 8:
            return this.local$totalRead;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  UrlVfs$open$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$stat.size;
  };
  UrlVfs$open$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  UrlVfs_1.prototype.open_vb0dls$ = function (path_0, mode, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$_2(this, path_0, mode, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$_2($this, path_0, mode, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$fullUrl = void 0;
    this.local$path = path_0;
  }
  Coroutine$open_vb0dls$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$_2.prototype.constructor = Coroutine$open_vb0dls$_2;
  Coroutine$open_vb0dls$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$fullUrl = this.$this.getFullUrl_61zpoe$(this.local$path);
            this.state_0 = 2;
            this.result_0 = this.$this.stat_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var stat = this.result_0;
            var response = Kotlin.isType(tmp$ = stat.extraInfo, HttpClient$Response) ? tmp$ : null;
            if (!stat.exists) {
              throw new FileNotFoundException('Unexistant ' + this.local$fullUrl + ' : ' + toString(response));
            }

            return buffered(toAsyncStream_0(new UrlVfs$open$ObjectLiteral(this.$this, this.local$fullUrl, stat)));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  UrlVfs_1.prototype.openInputStream_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$openInputStream_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$openInputStream_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$openInputStream_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openInputStream_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openInputStream_61zpoe$.prototype.constructor = Coroutine$openInputStream_61zpoe$;
  Coroutine$openInputStream_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.client.request_v6tn8p$(Http$Method$Companion_getInstance().GET, this.$this.getFullUrl_61zpoe$(this.local$path), void 0, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  UrlVfs_1.prototype.readRange_fmne7s$ = function (path_0, range_0, continuation_0, suspended) {
    var instance = new Coroutine$readRange_fmne7s$_1(this, path_0, range_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readRange_fmne7s$_1($this, path_0, range_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$range = range_0;
  }
  Coroutine$readRange_fmne7s$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readRange_fmne7s$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readRange_fmne7s$_1.prototype.constructor = Coroutine$readRange_fmne7s$_1;
  Coroutine$readRange_fmne7s$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.client.requestAsBytes_v6tn8p$(Http$Method$Companion_getInstance().GET, this.$this.getFullUrl_61zpoe$(this.local$path), Http$Http$Headers_init_0((this.local$range != null ? this.local$range.equals(LONG_ZERO_TO_MAX_RANGE) : null) ? lmapOf([]) : lmapOf([to('range', 'bytes=' + this.local$range.start + '-' + this.local$range.endInclusive)])), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function UrlVfs$HttpHeaders(headers) {
    this.headers = headers;
  }
  UrlVfs$HttpHeaders.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpHeaders',
    interfaces: [Vfs$Attribute]
  };
  UrlVfs_1.prototype.put_18ksq8$$default = function (path_0, content_0, attributes_0, continuation_0, suspended) {
    var instance = new Coroutine$put_18ksq8$$default_1(this, path_0, content_0, attributes_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$put_18ksq8$$default_1($this, path_0, content_0, attributes_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$mimeType = void 0;
    this.local$hheaders = void 0;
    this.local$path = path_0;
    this.local$content = content_0;
    this.local$attributes = attributes_0;
  }
  Coroutine$put_18ksq8$$default_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$put_18ksq8$$default_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$put_18ksq8$$default_1.prototype.constructor = Coroutine$put_18ksq8$$default_1;
  Coroutine$put_18ksq8$$default_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if (!Kotlin.isType(this.local$content, AsyncStream))
              invalidOp('UrlVfs.put requires content to be AsyncStream');
            var tmp$_1;
            var firstOrNull$result;
            firstOrNull$break: do {
              var tmp$_2;
              tmp$_2 = this.local$attributes.iterator();
              while (tmp$_2.hasNext()) {
                var element = tmp$_2.next();
                if (Kotlin.isType(element, UrlVfs$HttpHeaders)) {
                  firstOrNull$result = element;
                  break firstOrNull$break;
                }
              }
              firstOrNull$result = null;
            }
             while (false);
            var headers = (tmp$_1 = firstOrNull$result) == null || Kotlin.isType(tmp$_1, UrlVfs$HttpHeaders) ? tmp$_1 : throwCCE();
            var tmp$_3;
            var firstOrNull$result_0;
            firstOrNull$break: do {
              var tmp$_4;
              tmp$_4 = this.local$attributes.iterator();
              while (tmp$_4.hasNext()) {
                var element_0 = tmp$_4.next();
                if (Kotlin.isType(element_0, MimeType)) {
                  firstOrNull$result_0 = element_0;
                  break firstOrNull$break;
                }
              }
              firstOrNull$result_0 = null;
            }
             while (false);
            this.local$mimeType = (tmp$ = (tmp$_3 = firstOrNull$result_0) == null || Kotlin.isType(tmp$_3, MimeType) ? tmp$_3 : throwCCE()) != null ? tmp$ : MimeType$Companion_getInstance().APPLICATION_JSON;
            this.local$hheaders = (tmp$_0 = headers != null ? headers.headers : null) != null ? tmp$_0 : Http$Http$Headers_init([]);
            this.state_0 = 2;
            this.result_0 = this.local$content.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var contentLength = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.$this.client.request_v6tn8p$(Http$Method$Companion_getInstance().PUT, this.$this.getFullUrl_61zpoe$(this.local$path), this.local$hheaders.withReplaceHeaders_9ih0sy$([to('content-length', contentLength.toString()), to('content-type', this.local$mimeType.mime)]), this.local$content, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$content.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  UrlVfs_1.prototype.stat_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$stat_61zpoe$_3(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$stat_61zpoe$_3($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$stat_61zpoe$_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$stat_61zpoe$_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$stat_61zpoe$_3.prototype.constructor = Coroutine$stat_61zpoe$_3;
  Coroutine$stat_61zpoe$_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1;
            this.state_0 = 2;
            this.result_0 = this.$this.client.request_v6tn8p$(Http$Method$Companion_getInstance().HEAD, this.$this.getFullUrl_61zpoe$(this.local$path), void 0, void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var result = this.result_0;
            if (result.success) {
              tmp$_1 = this.$this.createExistsStat_mv8ifk$(this.local$path, true, (tmp$_0 = (tmp$ = result.headers.get_61zpoe$('content-length')) != null ? toLongOrNull(tmp$) : null) != null ? tmp$_0 : L0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, result);
            }
             else {
              tmp$_1 = this.$this.createNonExistsStat_4w9ihe$(this.local$path, result);
            }

            return tmp$_1;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  UrlVfs_1.prototype.toString = function () {
    return 'UrlVfs';
  };
  UrlVfs_1.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UrlVfs',
    interfaces: [Vfs]
  };
  function ZipVfs(s, zipFile, continuation) {
    if (zipFile === void 0)
      zipFile = null;
    return ZipVfs_0(s, zipFile, true, continuation);
  }
  function ZipVfs$ZipEntry2(path, compressionMethod, isDirectory, time, offset, inode, headerEntry, compressedSize, uncompressedSize) {
    this.path = path;
    this.compressionMethod = compressionMethod;
    this.isDirectory = isDirectory;
    this.time = time;
    this.offset = offset;
    this.inode = inode;
    this.headerEntry = headerEntry;
    this.compressedSize = compressedSize;
    this.uncompressedSize = uncompressedSize;
  }
  ZipVfs$ZipEntry2.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ZipEntry2',
    interfaces: []
  };
  function ZipVfs$toStat($receiver, file) {
    var tmp$;
    var vfs = file.vfs;
    if ($receiver != null) {
      tmp$ = vfs.createExistsStat_mv8ifk$(file.path, $receiver.isDirectory, $receiver.uncompressedSize, void 0, $receiver.inode, void 0, void 0, void 0, $receiver.time.utcTimestamp);
    }
     else {
      tmp$ = vfs.createNonExistsStat_4w9ihe$(file.path);
    }
    return tmp$;
  }
  function ZipVfs$normalizeName(closure$caseSensitive) {
    return function ($receiver) {
      return closure$caseSensitive ? trim($receiver, Kotlin.charArrayOf(47)) : trim($receiver, Kotlin.charArrayOf(47)).toLowerCase();
    };
  }
  function ZipVfs$Impl(closure$files, closure$normalizeName, closure$toStat, closure$filesPerFolder, closure$zipFile) {
    this.closure$files = closure$files;
    this.closure$normalizeName = closure$normalizeName;
    this.closure$toStat = closure$toStat;
    this.closure$filesPerFolder = closure$filesPerFolder;
    this.closure$zipFile = closure$zipFile;
    Vfs.call(this);
    this.vfs = this;
  }
  ZipVfs$Impl.prototype.open_vb0dls$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$_3(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$_3($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$entry = void 0;
    this.local$base = void 0;
    this.local$block$result = void 0;
    this.local$crc = void 0;
    this.local$uncompressedSize = void 0;
    this.local$fileNameLength = void 0;
    this.local$extraLength = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_vb0dls$_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$_3.prototype.constructor = Coroutine$open_vb0dls$_3;
  Coroutine$open_vb0dls$_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            tmp$ = this.$this.closure$files.get_11rb$(this.$this.closure$normalizeName(this.local$path));
            if (tmp$ == null) {
              throw new FileNotFoundException("Path: '" + this.local$path + "'");
            }

            this.local$entry = tmp$;
            if (this.local$entry.isDirectory)
              throw new IOException("Can't open a zip directory for " + this.local$mode);
            this.state_0 = 2;
            this.result_0 = sliceStart(this.local$entry.headerEntry, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$base = this.result_0;
            var tmp$_0;
            this.state_0 = 3;
            this.result_0 = this.local$base.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            if (this.result_0.toNumber() < 16)
              throw new IllegalStateException('Chunk to small to be a ZIP chunk');
            this.state_0 = 4;
            this.result_0 = readS32_be_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            if (this.result_0 !== 1347093252)
              throw new IllegalStateException('Not a zip file');
            this.state_0 = 5;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var version = this.result_0;
            this.state_0 = 6;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            var flags = this.result_0;
            this.state_0 = 7;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            var compressionType = this.result_0;
            this.state_0 = 8;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            var fileTime = this.result_0;
            this.state_0 = 9;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            var fileDate = this.result_0;
            this.state_0 = 10;
            this.result_0 = readS32_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.local$crc = this.result_0;
            this.state_0 = 11;
            this.result_0 = readS32_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            var compressedSize = this.result_0;
            this.state_0 = 12;
            this.result_0 = readS32_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            this.local$uncompressedSize = this.result_0;
            this.state_0 = 13;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 13:
            this.local$fileNameLength = this.result_0;
            this.state_0 = 14;
            this.result_0 = readU16_le_0(this.local$base, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            this.local$extraLength = this.result_0;
            this.state_0 = 15;
            this.result_0 = readString_0(this.local$base, this.local$fileNameLength, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 15:
            var name = this.result_0;
            this.state_0 = 16;
            this.result_0 = readBytesExact(this.local$base, this.local$extraLength, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 16:
            var extra = this.result_0;
            this.state_0 = 17;
            this.result_0 = readSlice(this.local$base, this.local$entry.compressedSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 17:
            var compressedData = this.result_0;
            if (this.local$entry.compressionMethod === 0) {
              this.local$block$result = compressedData;
              this.state_0 = 20;
              continue;
            }
             else {
              if (this.local$entry.compressionMethod === 8)
                tmp$_0 = Deflate$Companion_getInstance();
              else {
                throw new NotImplementedError_init('An operation is not implemented: ' + ('Not implemented zip method ' + this.local$entry.compressionMethod));
              }
              this.state_0 = 18;
              this.result_0 = UncompressAsyncStream(tmp$_0, compressedData, Kotlin.Long.fromInt(this.local$uncompressedSize), this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 18:
            this.state_0 = 19;
            this.result_0 = readAll(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 19:
            var compressed = this.result_0;
            var computedCrc = compute(CRC32_getInstance(), compressed);
            if (computedCrc !== this.local$crc) {
              throw IllegalStateException_init(("Uncompressed file crc doesn't match: expected=" + get_hex_0(this.local$crc) + ', actual=' + get_hex_0(computedCrc)).toString());
            }

            this.local$block$result = openAsync(compressed);
            this.state_0 = 20;
            continue;
          case 20:
            return this.local$block$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs$Impl.prototype.stat_61zpoe$ = function (path, continuation) {
    return this.closure$toStat(this.closure$files.get_11rb$(this.closure$normalizeName(path)), this.get_61zpoe$(path));
  };
  function ZipVfs$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ZipVfs$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$ZipVfs$Impl$list$lambda(closure$filesPerFolder_0, closure$path_0, closure$normalizeName_0, this$Impl_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$filesPerFolder = closure$filesPerFolder_0;
    this.local$closure$path = closure$path_0;
    this.local$closure$normalizeName = closure$normalizeName_0;
    this.local$this$Impl = this$Impl_0;
    this.local$tmp$_0 = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$ZipVfs$Impl$list$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs$Impl$list$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs$Impl$list$lambda.prototype.constructor = Coroutine$ZipVfs$Impl$list$lambda;
  Coroutine$ZipVfs$Impl$list$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$tmp$_0 = ((tmp$ = this.local$closure$filesPerFolder.get_11rb$(this.local$closure$normalizeName(this.local$closure$path))) != null ? tmp$ : LinkedHashMap_init()).entries.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$_0.hasNext()) {
              this.state_0 = 4;
              continue;
            }

            var tmp$_0 = this.local$tmp$_0.next();
            var entry = tmp$_0.value;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.yield_11rb$(this.local$this$Impl.vfs.get_61zpoe$(entry.path), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  ZipVfs$Impl.prototype.list_61zpoe$ = function (path, continuation) {
    return asyncGenerate(continuation.context, ZipVfs$Impl$list$lambda(this.closure$filesPerFolder, path, this.closure$normalizeName, this));
  };
  ZipVfs$Impl.prototype.toString = function () {
    return 'ZipVfs(' + toString(this.closure$zipFile) + ')';
  };
  ZipVfs$Impl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Impl',
    interfaces: [Vfs]
  };
  function ZipVfs_0(s_0, zipFile_0, caseSensitive_0, continuation_0, suspended) {
    var instance = new Coroutine$ZipVfs(s_0, zipFile_0, caseSensitive_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$ZipVfs(s_0, zipFile_0, caseSensitive_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$endBytes = void 0;
    this.local$PK_END = void 0;
    this.local$pk_endIndex = void 0;
    this.local$chunkSize = void 0;
    this.local$toStat = void 0;
    this.local$normalizeName = void 0;
    this.local$files = void 0;
    this.local$filesPerFolder = void 0;
    this.local$entriesInDirectory = void 0;
    this.local$ds = void 0;
    this.local$tmp$_1 = void 0;
    this.local$tmp$_2 = void 0;
    this.local$n = void 0;
    this.local$compressionMethod = void 0;
    this.local$compressedSize = void 0;
    this.local$uncompressedSize = void 0;
    this.local$headerOffset = void 0;
    this.local$name = void 0;
    this.local$isDirectory = void 0;
    this.local$normalizedName = void 0;
    this.local$baseName = void 0;
    this.local$folder = void 0;
    this.local$s = s_0;
    this.local$zipFile = zipFile_0;
    this.local$caseSensitive = caseSensitive_0;
  }
  Coroutine$ZipVfs.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ZipVfs.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ZipVfs.prototype.constructor = Coroutine$ZipVfs;
  Coroutine$ZipVfs.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$zipFile === void 0)
              this.local$zipFile = null;
            if (this.local$caseSensitive === void 0)
              this.local$caseSensitive = true;
            var tmp$;
            this.local$endBytes = EMPTY_BYTE_ARRAY;
            this.local$PK_END = new Int8Array([80, 75, 5, 6]);
            this.local$pk_endIndex = -1;
            this.local$tmp$ = listOf([22, 256, 4096, 65536]).iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 8;
              continue;
            }

            this.local$chunkSize = this.local$tmp$.next();
            this.state_0 = 3;
            this.result_0 = this.local$s.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            tmp$ = this.result_0.subtract(Kotlin.Long.fromInt(this.local$chunkSize));
            var a = L0;
            this.state_0 = 4;
            this.result_0 = this.local$s.setPosition_s8cxhz$(a.compareTo_11rb$(tmp$) >= 0 ? a : tmp$, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = this.local$s.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var b = toIntClamp(this.result_0);
            this.state_0 = 6;
            this.result_0 = readBytesExact(this.local$s, Math_0.max(this.local$chunkSize, b), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.local$endBytes = this.result_0;
            this.local$pk_endIndex = indexOf_0(this.local$endBytes, this.local$PK_END);
            if (this.local$pk_endIndex >= 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 2;
            continue;
          case 8:
            this.local$toStat = ZipVfs$toStat;
            this.local$normalizeName = ZipVfs$normalizeName(this.local$caseSensitive);
            if (this.local$pk_endIndex < 0)
              throw IllegalArgumentException_init('Not a zip file');
            var $receiver = this.local$endBytes;
            var fromIndex = this.local$pk_endIndex;
            var toIndex = this.local$endBytes.length;
            var data = openSync($receiver.slice(fromIndex, toIndex));
            this.local$files = LinkedHashMap_init();
            this.local$filesPerFolder = LinkedHashMap_init();
            var tmp$_0, tmp$_1;
            if (readS32_be_1(data) !== 1347093766)
              throw new IllegalStateException('Not a zip file');
            var diskNumber = readU16_le_1(data);
            var startDiskNumber = readU16_le_1(data);
            var entriesOnDisk = readU16_le_1(data);
            this.local$entriesInDirectory = readU16_le_1(data);
            var directorySize = readS32_le_1(data);
            var directoryOffset = readS32_le_1(data);
            var commentLength = readU16_le_1(data);
            this.state_0 = 9;
            this.result_0 = sliceWithSize(this.local$s, Kotlin.Long.fromInt(directoryOffset), Kotlin.Long.fromInt(directorySize), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = readAvailable(this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.local$ds = openSync(this.result_0);
            var tmp$_2, tmp$_3, tmp$_4;
            this.local$n = 0;
            this.state_0 = 11;
            continue;
          case 11:
            if (this.local$n >= this.local$entriesInDirectory) {
              this.state_0 = 14;
              continue;
            }

            if (readS32_be_1(this.local$ds) !== 1347092738)
              throw new IllegalStateException('Not a zip file record');
            var versionMade = readU16_le_1(this.local$ds);
            var versionExtract = readU16_le_1(this.local$ds);
            var flags = readU16_le_1(this.local$ds);
            this.local$compressionMethod = readU16_le_1(this.local$ds);
            var fileTime = readU16_le_1(this.local$ds);
            var fileDate = readU16_le_1(this.local$ds);
            var crc = readS32_le_1(this.local$ds);
            this.local$compressedSize = readS32_le_1(this.local$ds);
            this.local$uncompressedSize = readS32_le_1(this.local$ds);
            var fileNameLength = readU16_le_1(this.local$ds);
            var extraLength = readU16_le_1(this.local$ds);
            var fileCommentLength = readU16_le_1(this.local$ds);
            var diskNumberStart = readU16_le_1(this.local$ds);
            var internalAttributes = readU16_le_1(this.local$ds);
            var externalAttributes = readS32_le_1(this.local$ds);
            this.local$headerOffset = readS32_le_1(this.local$ds);
            this.local$name = readString_1(this.local$ds, fileNameLength);
            var extra = readBytes_1(this.local$ds, extraLength);
            this.local$isDirectory = endsWith(this.local$name, '/');
            this.local$normalizedName = this.local$normalizeName(this.local$name);
            var baseFolder = substringBeforeLast(this.local$normalizedName, 47, '');
            this.local$baseName = substringAfterLast(this.local$normalizedName, 47);
            var tmp$_5;
            var value = this.local$filesPerFolder.get_11rb$(baseFolder);
            if (value == null) {
              var answer = LinkedHashMap_init();
              this.local$filesPerFolder.put_xwzc9p$(baseFolder, answer);
              tmp$_5 = answer;
            }
             else {
              tmp$_5 = value;
            }

            this.local$folder = tmp$_5;
            this.local$tmp$_1 = new DosFileDateTime(fileTime, fileDate);
            this.local$tmp$_2 = Kotlin.Long.fromInt(this.local$n);
            this.state_0 = 12;
            this.result_0 = sliceWithStart(this.local$s, toUInt(this.local$headerOffset), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            var entry = new ZipVfs$ZipEntry2(this.local$name, this.local$compressionMethod, this.local$isDirectory, this.local$tmp$_1, this.local$headerOffset, this.local$tmp$_2, this.result_0, toUInt(this.local$compressedSize), toUInt(this.local$uncompressedSize));
            var components = plus_1(listOf_0(''), getPathFullComponents(new PathInfo(this.local$normalizedName)));
            tmp$_2 = components.size;
            for (var m = 1; m < tmp$_2; m++) {
              var f = components.get_za3lpa$(m - 1 | 0);
              var c = components.get_za3lpa$(m);
              var tmp$_6;
              if (!(Kotlin.isType(tmp$_6 = this.local$files, Map) ? tmp$_6 : throwCCE()).containsKey_11rb$(c)) {
                var tmp$_7;
                var value_0 = this.local$filesPerFolder.get_11rb$(f);
                if (value_0 == null) {
                  var answer_0 = LinkedHashMap_init();
                  this.local$filesPerFolder.put_xwzc9p$(f, answer_0);
                  tmp$_7 = answer_0;
                }
                 else {
                  tmp$_7 = value_0;
                }
                var folder2 = tmp$_7;
                tmp$_3 = new DosFileDateTime(0, 0);
                tmp$_4 = openAsync(new Int8Array([]));
                var entry2 = new ZipVfs$ZipEntry2(c, 0, true, tmp$_3, 0, L0, tmp$_4, L0, L0);
                var key = get_basename(new PathInfo(c));
                folder2.put_xwzc9p$(key, entry2);
                this.local$files.put_xwzc9p$(c, entry2);
              }
            }

            this.local$folder.put_xwzc9p$(this.local$baseName, entry);
            this.local$files.put_xwzc9p$(this.local$normalizedName, entry);
            this.state_0 = 13;
            continue;
          case 13:
            this.local$n++;
            this.state_0 = 11;
            continue;
          case 14:
            tmp$_0 = new DosFileDateTime(0, 0);
            tmp$_1 = openAsync(new Int8Array([]));
            var value_1 = new ZipVfs$ZipEntry2('', 0, true, tmp$_0, 0, L0, tmp$_1, L0, L0);
            this.local$files.put_xwzc9p$('', value_1);
            return (new ZipVfs$Impl(this.local$files, this.local$normalizeName, this.local$toStat, this.local$filesPerFolder, this.local$zipFile)).root;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DosFileDateTime(dosTime, dosDate) {
    this.dosTime = dosTime;
    this.dosDate = dosDate;
    this.date = DateTime.Companion.createAdjusted_ui44o2$(this.fullYear, this.month1, this.day, this.hours, this.minutes, this.seconds);
    this.utcTimestamp = this.date.unix;
  }
  Object.defineProperty(DosFileDateTime.prototype, 'seconds', {
    get: function () {
      return 2 * getBits(this.dosTime, 0, 5) | 0;
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'minutes', {
    get: function () {
      return getBits(this.dosTime, 5, 6);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'hours', {
    get: function () {
      return getBits(this.dosTime, 11, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'day', {
    get: function () {
      return getBits(this.dosDate, 0, 5);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'month1', {
    get: function () {
      return getBits(this.dosDate, 5, 4);
    }
  });
  Object.defineProperty(DosFileDateTime.prototype, 'fullYear', {
    get: function () {
      return 1980 + getBits(this.dosDate, 9, 7) | 0;
    }
  });
  DosFileDateTime.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DosFileDateTime',
    interfaces: []
  };
  function openAsZip($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$openAsZip($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$openAsZip($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$openAsZip.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openAsZip.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openAsZip.prototype.constructor = Coroutine$openAsZip;
  Coroutine$openAsZip.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.open_tiaunm$(VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = ZipVfs(this.result_0, this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function openAsZip_0($receiver_0, caseSensitive_0, continuation_0, suspended) {
    var instance = new Coroutine$openAsZip_0($receiver_0, caseSensitive_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$openAsZip_0($receiver_0, caseSensitive_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$caseSensitive = caseSensitive_0;
  }
  Coroutine$openAsZip_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$openAsZip_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$openAsZip_0.prototype.constructor = Coroutine$openAsZip_0;
  Coroutine$openAsZip_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.open_tiaunm$(VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = ZipVfs_0(this.result_0, this.local$$receiver, this.local$caseSensitive, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function openAsZip_1($receiver, continuation) {
    return ZipVfs($receiver, void 0, continuation);
  }
  function openAsZip_2($receiver, caseSensitive, continuation) {
    return ZipVfs_0($receiver, void 0, caseSensitive, continuation);
  }
  function createZipFromTree($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$createZipFromTree($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$createZipFromTree($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$buf = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$createZipFromTree.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createZipFromTree.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createZipFromTree.prototype.constructor = Coroutine$createZipFromTree;
  Coroutine$createZipFromTree.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$buf = ByteArrayBuffer_init();
            var mem = MemorySyncStream_0(this.local$buf);
            this.state_0 = 2;
            this.result_0 = createZipFromTreeTo(this.local$$receiver, toAsync_1(mem), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$buf.toByteArray();
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function createZipFromTreeTo($receiver_0, s_0, continuation_0, suspended) {
    var instance = new Coroutine$createZipFromTreeTo($receiver_0, s_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$createZipFromTreeTo($receiver_0, s_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$entries = void 0;
    this.local$directoryStart = void 0;
    this.local$directoryEnd = void 0;
    this.local$comment = void 0;
    this.local$$receiver = $receiver_0;
    this.local$s = s_0;
  }
  Coroutine$createZipFromTreeTo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createZipFromTreeTo.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createZipFromTreeTo.prototype.constructor = Coroutine$createZipFromTreeTo;
  Coroutine$createZipFromTreeTo.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$entries = ArrayList_init();
            this.state_0 = 2;
            this.result_0 = addZipFileEntryTree(this.local$s, this.local$$receiver, this.local$entries, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$directoryStart = this.local$s.position;
            this.local$tmp$ = this.local$entries.iterator();
            this.state_0 = 3;
            continue;
          case 3:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 5;
              continue;
            }

            var entry = this.local$tmp$.next();
            this.state_0 = 4;
            this.result_0 = addDirEntry(this.local$s, entry, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 3;
            continue;
          case 5:
            this.local$directoryEnd = this.local$s.position;
            this.local$comment = new Int8Array([]);
            this.state_0 = 6;
            this.result_0 = writeString(this.local$s, 'PK\x05\x06', void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = write16_le_0(this.local$s, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = write16_le_0(this.local$s, 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = write16_le_0(this.local$s, this.local$entries.size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = write16_le_0(this.local$s, this.local$entries.size, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            this.result_0 = write32_le_1(this.local$s, this.local$directoryEnd.subtract(this.local$directoryStart).toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            this.state_0 = 12;
            this.result_0 = write32_le_1(this.local$s, this.local$directoryStart.toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            this.state_0 = 13;
            this.result_0 = write16_le_0(this.local$s, this.local$comment.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 13:
            this.state_0 = 14;
            this.result_0 = writeBytes(this.local$s, this.local$comment, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function addZipFileEntry(s_0, entry_0, continuation_0, suspended) {
    var instance = new Coroutine$addZipFileEntry(s_0, entry_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$addZipFileEntry(s_0, entry_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$size = void 0;
    this.local$versionMadeBy = void 0;
    this.local$extractVersion = void 0;
    this.local$flags = void 0;
    this.local$compressionMethod = void 0;
    this.local$date = void 0;
    this.local$time = void 0;
    this.local$crc32 = void 0;
    this.local$nameBytes = void 0;
    this.local$extraBytes = void 0;
    this.local$compressedSize = void 0;
    this.local$uncompressedSize = void 0;
    this.local$headerOffset = void 0;
    this.local$s = s_0;
    this.local$entry = entry_0;
  }
  Coroutine$addZipFileEntry.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$addZipFileEntry.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$addZipFileEntry.prototype.constructor = Coroutine$addZipFileEntry;
  Coroutine$addZipFileEntry.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$entry.size(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$size = this.result_0.toInt();
            this.local$versionMadeBy = 788;
            this.local$extractVersion = 10;
            this.local$flags = 2048;
            this.local$compressionMethod = 0;
            this.local$date = 0;
            this.local$time = 0;
            this.state_0 = 3;
            this.result_0 = hashSync_1(this.local$entry, AsyncHash$Companion_getInstance().CRC32, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$crc32 = readS32_le(this.result_0, 0);
            var name = trim(get_fullname(this.local$entry), Kotlin.charArrayOf(47));
            this.local$nameBytes = toByteArray(name, UTF8_getInstance());
            this.local$extraBytes = new Int8Array([]);
            this.local$compressedSize = this.local$size;
            this.local$uncompressedSize = this.local$size;
            this.local$headerOffset = this.local$s.position;
            this.state_0 = 4;
            this.result_0 = writeString(this.local$s, 'PK\x03\x04', void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = write16_le_0(this.local$s, this.local$extractVersion, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = write16_le_0(this.local$s, this.local$flags, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = write16_le_0(this.local$s, this.local$compressionMethod, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = write16_le_0(this.local$s, this.local$date, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = write16_le_0(this.local$s, this.local$time, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = write32_le_1(this.local$s, this.local$crc32, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            this.result_0 = write32_le_1(this.local$s, this.local$compressedSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            this.state_0 = 12;
            this.result_0 = write32_le_1(this.local$s, this.local$uncompressedSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            this.state_0 = 13;
            this.result_0 = write16_le_0(this.local$s, this.local$nameBytes.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 13:
            this.state_0 = 14;
            this.result_0 = write16_le_0(this.local$s, this.local$extraBytes.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            this.state_0 = 15;
            this.result_0 = writeBytes(this.local$s, this.local$nameBytes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 15:
            this.state_0 = 16;
            this.result_0 = writeBytes(this.local$s, this.local$extraBytes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 16:
            this.state_0 = 17;
            this.result_0 = writeFile(this.local$s, this.local$entry, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 17:
            return new ZipEntry(this.local$versionMadeBy, this.local$extractVersion, this.local$headerOffset, this.local$compressionMethod, this.local$flags, this.local$date, this.local$time, this.local$crc32, this.local$compressedSize, this.local$uncompressedSize, this.local$nameBytes, this.local$extraBytes, 0, 0, 0, new Int8Array([]));
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function addZipFileEntryTree(s_0, entry_0, entries_0, continuation_0, suspended) {
    var instance = new Coroutine$addZipFileEntryTree(s_0, entry_0, entries_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$addZipFileEntryTree(s_0, entry_0, entries_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$s = s_0;
    this.local$entry = entry_0;
    this.local$entries = entries_0;
  }
  Coroutine$addZipFileEntryTree.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$addZipFileEntryTree.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$addZipFileEntryTree.prototype.constructor = Coroutine$addZipFileEntryTree;
  Coroutine$addZipFileEntryTree.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$entry.isDirectory(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.result_0) {
              this.state_0 = 4;
              this.result_0 = this.local$entry.list(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              this.result_0 = addZipFileEntry(this.local$s, this.local$entry, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 3:
            var element = this.result_0;
            this.local$entries.add_11rb$(element);
            this.state_0 = 11;
            continue;
          case 4:
            this.local$tmp$ = this.result_0.iterator();
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$tmp$.hasNext(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            if (!this.result_0) {
              this.state_0 = 10;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 7:
            this.state_0 = 8;
            this.result_0 = this.local$tmp$.next(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            var it = this.result_0;
            this.state_0 = 9;
            this.result_0 = addZipFileEntryTree(this.local$s, it, this.local$entries, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 5;
            continue;
          case 10:
            this.state_0 = 11;
            continue;
          case 11:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ZipEntry(versionMadeBy, extractVersion, headerOffset, compressionMethod, flags, date, time, crc32, compressedSize, uncompressedSize, nameBytes, extraBytes, diskNumberStart, internalAttributes, externalAttributes, commentBytes) {
    this.versionMadeBy = versionMadeBy;
    this.extractVersion = extractVersion;
    this.headerOffset = headerOffset;
    this.compressionMethod = compressionMethod;
    this.flags = flags;
    this.date = date;
    this.time = time;
    this.crc32 = crc32;
    this.compressedSize = compressedSize;
    this.uncompressedSize = uncompressedSize;
    this.nameBytes = nameBytes;
    this.extraBytes = extraBytes;
    this.diskNumberStart = diskNumberStart;
    this.internalAttributes = internalAttributes;
    this.externalAttributes = externalAttributes;
    this.commentBytes = commentBytes;
  }
  ZipEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ZipEntry',
    interfaces: []
  };
  function addDirEntry(s_0, e_0, continuation_0, suspended) {
    var instance = new Coroutine$addDirEntry(s_0, e_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$addDirEntry(s_0, e_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$s = s_0;
    this.local$e = e_0;
  }
  Coroutine$addDirEntry.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$addDirEntry.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$addDirEntry.prototype.constructor = Coroutine$addDirEntry;
  Coroutine$addDirEntry.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = writeString(this.local$s, 'PK\x01\x02', void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = write16_le_0(this.local$s, this.local$e.versionMadeBy, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = write16_le_0(this.local$s, this.local$e.extractVersion, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = write16_le_0(this.local$s, this.local$e.flags, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = write16_le_0(this.local$s, this.local$e.compressionMethod, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            this.result_0 = write16_le_0(this.local$s, this.local$e.date, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.state_0 = 8;
            this.result_0 = write16_le_0(this.local$s, this.local$e.time, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.state_0 = 9;
            this.result_0 = write32_le_1(this.local$s, this.local$e.crc32, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 9:
            this.state_0 = 10;
            this.result_0 = write32_le_1(this.local$s, this.local$e.compressedSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            this.result_0 = write32_le_1(this.local$s, this.local$e.uncompressedSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 11:
            this.state_0 = 12;
            this.result_0 = write16_le_0(this.local$s, this.local$e.nameBytes.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            this.state_0 = 13;
            this.result_0 = write16_le_0(this.local$s, this.local$e.extraBytes.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 13:
            this.state_0 = 14;
            this.result_0 = write16_le_0(this.local$s, this.local$e.commentBytes.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 14:
            this.state_0 = 15;
            this.result_0 = write16_le_0(this.local$s, this.local$e.diskNumberStart, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 15:
            this.state_0 = 16;
            this.result_0 = write16_le_0(this.local$s, this.local$e.internalAttributes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 16:
            this.state_0 = 17;
            this.result_0 = write32_le_1(this.local$s, this.local$e.externalAttributes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 17:
            this.state_0 = 18;
            this.result_0 = write32_le_1(this.local$s, this.local$e.headerOffset.toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 18:
            this.state_0 = 19;
            this.result_0 = writeBytes(this.local$s, this.local$e.nameBytes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 19:
            this.state_0 = 20;
            this.result_0 = writeBytes(this.local$s, this.local$e.extraBytes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 20:
            this.state_0 = 21;
            this.result_0 = writeBytes(this.local$s, this.local$e.commentBytes, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 21:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function Language_0(name, ordinal, iso6391, iso6392) {
    Enum.call(this);
    this.iso6391 = iso6391;
    this.iso6392 = iso6392;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Language_initFields() {
    Language_initFields = function () {
    };
    Language$JAPANESE_instance = new Language_0('JAPANESE', 0, 'ja', 'jpn');
    Language$ENGLISH_instance = new Language_0('ENGLISH', 1, 'en', 'eng');
    Language$FRENCH_instance = new Language_0('FRENCH', 2, 'fr', 'fra');
    Language$SPANISH_instance = new Language_0('SPANISH', 3, 'es', 'spa');
    Language$GERMAN_instance = new Language_0('GERMAN', 4, 'de', 'deu');
    Language$ITALIAN_instance = new Language_0('ITALIAN', 5, 'it', 'ita');
    Language$DUTCH_instance = new Language_0('DUTCH', 6, 'nl', 'nld');
    Language$PORTUGUESE_instance = new Language_0('PORTUGUESE', 7, 'pt', 'por');
    Language$RUSSIAN_instance = new Language_0('RUSSIAN', 8, 'ru', 'rus');
    Language$KOREAN_instance = new Language_0('KOREAN', 9, 'ko', 'kor');
    Language$CHINESE_instance = new Language_0('CHINESE', 10, 'zh', 'zho');
    Language$Companion_getInstance();
  }
  var Language$JAPANESE_instance;
  function Language$JAPANESE_getInstance() {
    Language_initFields();
    return Language$JAPANESE_instance;
  }
  var Language$ENGLISH_instance;
  function Language$ENGLISH_getInstance() {
    Language_initFields();
    return Language$ENGLISH_instance;
  }
  var Language$FRENCH_instance;
  function Language$FRENCH_getInstance() {
    Language_initFields();
    return Language$FRENCH_instance;
  }
  var Language$SPANISH_instance;
  function Language$SPANISH_getInstance() {
    Language_initFields();
    return Language$SPANISH_instance;
  }
  var Language$GERMAN_instance;
  function Language$GERMAN_getInstance() {
    Language_initFields();
    return Language$GERMAN_instance;
  }
  var Language$ITALIAN_instance;
  function Language$ITALIAN_getInstance() {
    Language_initFields();
    return Language$ITALIAN_instance;
  }
  var Language$DUTCH_instance;
  function Language$DUTCH_getInstance() {
    Language_initFields();
    return Language$DUTCH_instance;
  }
  var Language$PORTUGUESE_instance;
  function Language$PORTUGUESE_getInstance() {
    Language_initFields();
    return Language$PORTUGUESE_instance;
  }
  var Language$RUSSIAN_instance;
  function Language$RUSSIAN_getInstance() {
    Language_initFields();
    return Language$RUSSIAN_instance;
  }
  var Language$KOREAN_instance;
  function Language$KOREAN_getInstance() {
    Language_initFields();
    return Language$KOREAN_instance;
  }
  var Language$CHINESE_instance;
  function Language$CHINESE_getInstance() {
    Language_initFields();
    return Language$CHINESE_instance;
  }
  function Language$Companion() {
    Language$Companion_instance = this;
    this.BY_ID_tjtnzj$_0 = lazy(Language$Companion$BY_ID$lambda);
    this.SYSTEM_LANGS_kg1qoj$_0 = lazy(Language$Companion$SYSTEM_LANGS$lambda(this));
    this.SYSTEM_sx34r7$_0 = lazy(Language$Companion$SYSTEM$lambda(this));
    this.CURRENT_kyexi1$_0 = new lazyVar(Language$Companion$CURRENT$lambda(this));
  }
  Object.defineProperty(Language$Companion.prototype, 'BY_ID', {
    get: function () {
      return this.BY_ID_tjtnzj$_0.value;
    }
  });
  Language$Companion.prototype.get_61zpoe$ = function (id) {
    return this.BY_ID.get_11rb$(id);
  };
  Object.defineProperty(Language$Companion.prototype, 'SYSTEM_LANGS', {
    get: function () {
      return this.SYSTEM_LANGS_kg1qoj$_0.value;
    }
  });
  Object.defineProperty(Language$Companion.prototype, 'SYSTEM', {
    get: function () {
      return this.SYSTEM_sx34r7$_0.value;
    }
  });
  var Language$Companion$CURRENT_metadata = new PropertyMetadata('CURRENT');
  Object.defineProperty(Language$Companion.prototype, 'CURRENT', {
    get: function () {
      return this.CURRENT_kyexi1$_0.getValue_t0xcdd$(this, Language$Companion$CURRENT_metadata);
    },
    set: function (CURRENT) {
      this.CURRENT_kyexi1$_0.setValue_809r6s$(this, Language$Companion$CURRENT_metadata, CURRENT);
    }
  });
  function Language$Companion$BY_ID$lambda() {
    var $receiver = Language$values();
    var destination = ArrayList_init_1($receiver.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
      var item = $receiver[tmp$];
      destination.add_11rb$(to(item.name.toLowerCase(), item));
    }
    var $receiver_0 = Language$values();
    var destination_0 = ArrayList_init_1($receiver_0.length);
    var tmp$_0;
    for (tmp$_0 = 0; tmp$_0 !== $receiver_0.length; ++tmp$_0) {
      var item_0 = $receiver_0[tmp$_0];
      destination_0.add_11rb$(to(item_0.iso6391, item_0));
    }
    var tmp$_1 = plus_1(destination, destination_0);
    var $receiver_1 = Language$values();
    var destination_1 = ArrayList_init_1($receiver_1.length);
    var tmp$_2;
    for (tmp$_2 = 0; tmp$_2 !== $receiver_1.length; ++tmp$_2) {
      var item_1 = $receiver_1[tmp$_2];
      destination_1.add_11rb$(to(item_1.iso6392, item_1));
    }
    return toMap(plus_1(tmp$_1, destination_1));
  }
  function Language$Companion$SYSTEM_LANGS$lambda(this$Language$) {
    return function () {
      var $receiver = KorioNative_getInstance().systemLanguageStrings;
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        var tmp$_0 = destination.add_11rb$;
        var this$Language$_0 = this$Language$;
        var part = substringBefore(item, 45);
        tmp$_0.call(destination, this$Language$_0.BY_ID.get_11rb$(part));
      }
      return filterNotNull(destination);
    };
  }
  function Language$Companion$SYSTEM$lambda(this$Language$) {
    return function () {
      var tmp$;
      return (tmp$ = firstOrNull(this$Language$.SYSTEM_LANGS)) != null ? tmp$ : Language$ENGLISH_getInstance();
    };
  }
  function Language$Companion$CURRENT$lambda(this$Language$) {
    return function () {
      return this$Language$.SYSTEM;
    };
  }
  Language$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Language$Companion_instance = null;
  function Language$Companion_getInstance() {
    Language_initFields();
    if (Language$Companion_instance === null) {
      new Language$Companion();
    }
    return Language$Companion_instance;
  }
  Language_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Language',
    interfaces: [Enum]
  };
  function Language$values() {
    return [Language$JAPANESE_getInstance(), Language$ENGLISH_getInstance(), Language$FRENCH_getInstance(), Language$SPANISH_getInstance(), Language$GERMAN_getInstance(), Language$ITALIAN_getInstance(), Language$DUTCH_getInstance(), Language$PORTUGUESE_getInstance(), Language$RUSSIAN_getInstance(), Language$KOREAN_getInstance(), Language$CHINESE_getInstance()];
  }
  Language_0.values = Language$values;
  function Language$valueOf(name) {
    switch (name) {
      case 'JAPANESE':
        return Language$JAPANESE_getInstance();
      case 'ENGLISH':
        return Language$ENGLISH_getInstance();
      case 'FRENCH':
        return Language$FRENCH_getInstance();
      case 'SPANISH':
        return Language$SPANISH_getInstance();
      case 'GERMAN':
        return Language$GERMAN_getInstance();
      case 'ITALIAN':
        return Language$ITALIAN_getInstance();
      case 'DUTCH':
        return Language$DUTCH_getInstance();
      case 'PORTUGUESE':
        return Language$PORTUGUESE_getInstance();
      case 'RUSSIAN':
        return Language$RUSSIAN_getInstance();
      case 'KOREAN':
        return Language$KOREAN_getInstance();
      case 'CHINESE':
        return Language$CHINESE_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.i18n.Language.' + name);
    }
  }
  Language_0.valueOf_61zpoe$ = Language$valueOf;
  function Bytes(byteArray) {
    this.byteArray = byteArray;
  }
  Bytes.prototype.equals = function (other) {
    var tmp$;
    if (this === other)
      tmp$ = true;
    else if (Kotlin.isType(other, Bytes))
      tmp$ = contentEquals(this.byteArray, other.byteArray);
    else
      tmp$ = false;
    return tmp$;
  };
  Bytes.prototype.hashCode = function () {
    return contentHashCode(this.byteArray);
  };
  Bytes.prototype.toString = function () {
    return contentToString(this.byteArray);
  };
  Bytes.prototype.toByteArray = function () {
    return this.byteArray;
  };
  Bytes.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Bytes',
    interfaces: []
  };
  function toBytes($receiver) {
    return new Bytes($receiver);
  }
  function Charset(name) {
    Charset$Companion_getInstance();
    this.name = name;
  }
  Charset.prototype.encode_g89osg$ = function (out, src, start, end, callback$default) {
    if (start === void 0)
      start = 0;
    if (end === void 0)
      end = src.length;
    callback$default ? callback$default(out, src, start, end) : this.encode_g89osg$$default(out, src, start, end);
  };
  Charset.prototype.decode_9w11d2$ = function (out, src, start, end, callback$default) {
    if (start === void 0)
      start = 0;
    if (end === void 0)
      end = src.length;
    callback$default ? callback$default(out, src, start, end) : this.decode_9w11d2$$default(out, src, start, end);
  };
  function Charset$Companion() {
    Charset$Companion_instance = this;
  }
  Charset$Companion.prototype.forName_61zpoe$ = function (name) {
    return UTF8_getInstance();
  };
  Charset$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Charset$Companion_instance = null;
  function Charset$Companion_getInstance() {
    if (Charset$Companion_instance === null) {
      new Charset$Companion();
    }
    return Charset$Companion_instance;
  }
  Charset.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Charset',
    interfaces: []
  };
  function UTC8CharsetBase(name) {
    Charset.call(this, name);
  }
  UTC8CharsetBase.prototype.createByte_80dzbf$_0 = function (codePoint, shift) {
    return codePoint >> shift & 63 | 128;
  };
  UTC8CharsetBase.prototype.encode_g89osg$$default = function (out, src, start, end) {
    for (var n = start; n < end; n++) {
      var codePoint = src.charCodeAt(n) | 0;
      if ((codePoint & -128) === 0) {
        out.append_s8j3t7$(toByte(codePoint));
      }
       else {
        if ((codePoint & -2048) === 0)
          out.append_s8j3t7$(toByte(codePoint >> 6 & 31 | 192));
        else if ((codePoint & -65536) === 0) {
          out.append_s8j3t7$(toByte(codePoint >> 12 & 15 | 224));
          out.append_s8j3t7$(toByte(this.createByte_80dzbf$_0(codePoint, 6)));
        }
         else if ((codePoint & -2097152) === 0) {
          out.append_s8j3t7$(toByte(codePoint >> 18 & 7 | 240));
          out.append_s8j3t7$(toByte(this.createByte_80dzbf$_0(codePoint, 12)));
          out.append_s8j3t7$(toByte(this.createByte_80dzbf$_0(codePoint, 6)));
        }
        out.append_s8j3t7$(toByte(codePoint & 63 | 128));
      }
    }
  };
  UTC8CharsetBase.prototype.decode_9w11d2$$default = function (out, src, start, end) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var i = start;
    while (i < end) {
      var c = src[tmp$ = i, i = tmp$ + 1 | 0, tmp$] & 255;
      switch (c >> 4) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          out.append_s8itvh$(toChar(c));
          break;
        case 12:
        case 13:
          out.append_s8itvh$(toChar((c & 31) << 6 | src[tmp$_0 = i, i = tmp$_0 + 1 | 0, tmp$_0] & 63));
          break;
        case 14:
          out.append_s8itvh$(toChar((c & 15) << 12 | (src[tmp$_1 = i, i = tmp$_1 + 1 | 0, tmp$_1] & 63) << 6 | src[tmp$_2 = i, i = tmp$_2 + 1 | 0, tmp$_2] & 63));
          break;
      }
    }
  };
  UTC8CharsetBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UTC8CharsetBase',
    interfaces: [Charset]
  };
  function SingleByteCharset(name, conv) {
    Charset.call(this, name);
    this.conv = conv;
    var $receiver = withIndex(this.conv);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(unboxChar(item.value) | 0, item.index));
    }
    this.v = toMap(destination);
  }
  SingleByteCharset.prototype.encode_g89osg$$default = function (out, src, start, end) {
    var tmp$, tmp$_0;
    for (var n = start; n < end; n++) {
      out.append_s8j3t7$((tmp$_0 = (tmp$ = this.v.get_11rb$(src.charCodeAt(n) | 0)) != null ? toByte(tmp$) : null) != null ? tmp$_0 : toByte(63 | 0));
    }
  };
  SingleByteCharset.prototype.decode_9w11d2$$default = function (out, src, start, end) {
    for (var n = start; n < end; n++) {
      out.append_s8itvh$(this.conv.charCodeAt(src[n] & 255));
    }
  };
  SingleByteCharset.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SingleByteCharset',
    interfaces: [Charset]
  };
  function ISO_8859_1() {
    ISO_8859_1_instance = this;
    var $receiver = StringBuilder_init();
    for (var n = 0; n < 256; n++)
      $receiver.append_s8itvh$(toChar(n));
    SingleByteCharset.call(this, 'ISO-8859-1', $receiver.toString());
  }
  ISO_8859_1.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ISO_8859_1',
    interfaces: [SingleByteCharset]
  };
  var ISO_8859_1_instance = null;
  function ISO_8859_1_getInstance() {
    if (ISO_8859_1_instance === null) {
      new ISO_8859_1();
    }
    return ISO_8859_1_instance;
  }
  function UTF8() {
    UTF8_instance = this;
    UTC8CharsetBase.call(this, 'UTF-8');
  }
  UTF8.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'UTF8',
    interfaces: [UTC8CharsetBase]
  };
  var UTF8_instance = null;
  function UTF8_getInstance() {
    if (UTF8_instance === null) {
      new UTF8();
    }
    return UTF8_instance;
  }
  function UTF16Charset(le) {
    Charset.call(this, 'UTF-16-' + (le ? 'LE' : 'BE'));
    this.le = le;
  }
  UTF16Charset.prototype.decode_9w11d2$$default = function (out, src, start, end) {
    for (var n = start; n < end; n += 2)
      out.append_s8itvh$(toChar(readS16_LEBE(src, n, this.le)));
  };
  UTF16Charset.prototype.encode_g89osg$$default = function (out, src, start, end) {
    var temp = new Int8Array(2);
    for (var n = start; n < end; n++) {
      write16_LEBE(temp, 0, src.charCodeAt(n) | 0, this.le);
      out.append_fqrh44$(temp);
    }
  };
  UTF16Charset.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UTF16Charset',
    interfaces: [Charset]
  };
  function ASCII() {
    ASCII_instance = this;
    Charset.call(this, 'ASCII');
  }
  ASCII.prototype.encode_g89osg$$default = function (out, src, start, end) {
    for (var n = start; n < end; n++)
      out.append_s8j3t7$(toByte(src.charCodeAt(n) | 0));
  };
  ASCII.prototype.decode_9w11d2$$default = function (out, src, start, end) {
    for (var n = start; n < end; n++)
      out.append_s8itvh$(toChar(src[n]));
  };
  ASCII.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ASCII',
    interfaces: [Charset]
  };
  var ASCII_instance = null;
  function ASCII_getInstance() {
    if (ASCII_instance === null) {
      new ASCII();
    }
    return ASCII_instance;
  }
  var LATIN1;
  var UTF16_LE;
  var UTF16_BE;
  function toByteArray($receiver, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var out = new ByteArrayBuilder();
    charset.encode_g89osg$(out, $receiver);
    return out.toByteArray();
  }
  function toString_0($receiver, charset) {
    var out = StringBuilder_init();
    charset.decode_9w11d2$(out, $receiver);
    return out.toString();
  }
  function toUtf8String($receiver) {
    return toString_0($receiver, UTF8_getInstance());
  }
  function readStringz($receiver, o, size, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var idx = o;
    var b = o + size | 0;
    var stop = Math_0.min($receiver.length, b);
    while (idx < stop && $receiver[idx] !== toByte(0)) {
      idx = idx + 1 | 0;
    }
    var toIndex = idx;
    return toString_0($receiver.slice(o, toIndex), charset);
  }
  function readStringz_0($receiver, o, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return readStringz($receiver, o, $receiver.length - o | 0, charset);
  }
  function readString($receiver, o, size, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var toIndex = o + size | 0;
    return toString_0($receiver.slice(o, toIndex), charset);
  }
  function get_portableSimpleName($receiver) {
    return KorioNative_getInstance().getClassSimpleName_xo1ogr$($receiver);
  }
  function Disposable() {
  }
  Disposable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Disposable',
    interfaces: []
  };
  function Closeable() {
  }
  Closeable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Closeable',
    interfaces: []
  };
  function DummyCloseable() {
    DummyCloseable_instance = this;
  }
  DummyCloseable.prototype.close = function () {
  };
  DummyCloseable.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DummyCloseable',
    interfaces: [Closeable]
  };
  var DummyCloseable_instance = null;
  function DummyCloseable_getInstance() {
    if (DummyCloseable_instance === null) {
      new DummyCloseable();
    }
    return DummyCloseable_instance;
  }
  function OptionalCloseable() {
  }
  OptionalCloseable.prototype.close = function () {
  };
  OptionalCloseable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'OptionalCloseable',
    interfaces: [Closeable]
  };
  function use($receiver, callback) {
    try {
      return callback($receiver);
    }
    finally {
      $receiver.close();
    }
  }
  function Cancellable() {
    Cancellable$Companion_getInstance();
  }
  Cancellable.prototype.cancel_tcv7n7$ = function (e, callback$default) {
    if (e === void 0)
      e = new CancellationException('');
    callback$default ? callback$default(e) : this.cancel_tcv7n7$$default(e);
  };
  function Cancellable$Listener() {
  }
  Cancellable$Listener.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Listener',
    interfaces: []
  };
  function Cancellable$Companion() {
    Cancellable$Companion_instance = this;
  }
  function Cancellable$Companion$invoke$ObjectLiteral(closure$callback) {
    this.closure$callback = closure$callback;
  }
  Cancellable$Companion$invoke$ObjectLiteral.prototype.cancel_tcv7n7$$default = function (e) {
    this.closure$callback(e);
  };
  Cancellable$Companion$invoke$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Cancellable]
  };
  Cancellable$Companion.prototype.invoke_4m4org$ = function (callback) {
    return new Cancellable$Companion$invoke$ObjectLiteral(callback);
  };
  Cancellable$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Cancellable$Companion_instance = null;
  function Cancellable$Companion_getInstance() {
    if (Cancellable$Companion_instance === null) {
      new Cancellable$Companion();
    }
    return Cancellable$Companion_instance;
  }
  Cancellable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Cancellable',
    interfaces: []
  };
  function cancel($receiver, e) {
    if (e === void 0)
      e = new CancellationException('');
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      c.cancel_tcv7n7$(e);
    }
  }
  function cancellable$lambda(this$cancellable) {
    return function (it) {
      cancel(this$cancellable);
      return Unit;
    };
  }
  function cancellable($receiver) {
    return Cancellable$Companion_getInstance().invoke_4m4org$(cancellable$lambda($receiver));
  }
  function close($receiver) {
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      c.close();
    }
  }
  function closeable$lambda(this$closeable) {
    return function () {
      close(this$closeable);
      return Unit;
    };
  }
  function closeable($receiver) {
    return Closeable_0(closeable$lambda($receiver));
  }
  function cancellable$lambda_0(this$cancellable) {
    return function (it) {
      this$cancellable.close();
      return Unit;
    };
  }
  function cancellable_0($receiver) {
    return Cancellable$Companion_getInstance().invoke_4m4org$(cancellable$lambda_0($receiver));
  }
  function closeable$lambda_0() {
    return new CancellationException('');
  }
  function closeable$lambda_1(this$closeable, closure$e) {
    return function () {
      this$closeable.cancel_tcv7n7$(closure$e());
      return Unit;
    };
  }
  function closeable_0($receiver, e) {
    if (e === void 0)
      e = closeable$lambda_0;
    return Closeable_0(closeable$lambda_1($receiver, e));
  }
  function Closeable$ObjectLiteral(closure$callback) {
    this.closure$callback = closure$callback;
  }
  Closeable$ObjectLiteral.prototype.close = function () {
    this.closure$callback();
  };
  Closeable$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [Closeable]
  };
  function Closeable_0(callback) {
    return new Closeable$ObjectLiteral(callback);
  }
  function Debugger() {
    Debugger_instance = this;
  }
  Debugger.prototype.enterDebugger = function () {
    KorioNative_getInstance().enterDebugger();
  };
  Debugger.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Debugger',
    interfaces: []
  };
  var Debugger_instance = null;
  function Debugger_getInstance() {
    if (Debugger_instance === null) {
      new Debugger();
    }
    return Debugger_instance;
  }
  function Dynamic() {
    Dynamic_instance = this;
  }
  Dynamic.prototype.invoke_3l02ix$ = defineInlineFunction('korio-js.com.soywiz.korio.lang.Dynamic.invoke_3l02ix$', wrapFunction(function () {
    var lang = _.com.soywiz.korio.lang;
    return function (callback) {
      return callback(lang.DynamicAccess);
    };
  }));
  Dynamic.prototype.invoke_2e4fn6$ = defineInlineFunction('korio-js.com.soywiz.korio.lang.Dynamic.invoke_2e4fn6$', wrapFunction(function () {
    var lang = _.com.soywiz.korio.lang;
    return function (value, callback) {
      return callback(lang.DynamicAccess, value);
    };
  }));
  Dynamic.prototype.set_6c0xd4$ = function (obj, key, value) {
    if (Kotlin.isType(obj, MutableMap) || Kotlin.isType(obj, MutableList))
      this.setUntyped_6c0xd4$(obj, key, value);
  };
  Dynamic.prototype.get_oaftn8$ = function (obj, key) {
    if (obj == null || Kotlin.isType(obj, Map) || Kotlin.isType(obj, List))
      return this.getUntyped_oaftn8$(obj, key);
    else {
      return this.getUntyped_oaftn8$(Mapper.toUntyped_b1ce0a$(getKClass(Any), obj), key);
    }
  };
  Dynamic.prototype.setUntyped_6c0xd4$ = function (obj, key, value) {
    var tmp$, tmp$_0;
    if (obj != null)
      if (Kotlin.isType(obj, MutableMap)) {
        (Kotlin.isType(tmp$ = obj, MutableMap) ? tmp$ : throwCCE()).put_xwzc9p$(key, value);
      }
       else if (Kotlin.isType(obj, MutableList))
        (Kotlin.isType(tmp$_0 = obj, MutableList) ? tmp$_0 : throwCCE()).set_wxm5ur$(this.toInt_s8jyv4$(key), value);
  };
  Dynamic.prototype.getUntyped_oaftn8$ = function (obj, key) {
    if (obj == null)
      return null;
    else if (Kotlin.isType(obj, Map)) {
      var tmp$;
      return (Kotlin.isType(tmp$ = obj, Map) ? tmp$ : throwCCE()).get_11rb$(key);
    }
     else if (Kotlin.isType(obj, List))
      return obj.get_za3lpa$(this.toInt_s8jyv4$(key));
    else
      return null;
  };
  Dynamic.prototype.toStringOrNull_s8jyv4$ = function (obj) {
    return obj != null ? obj.toString() : null;
  };
  Dynamic.prototype.toString_s8jyv4$ = function (obj) {
    var tmp$;
    return (tmp$ = this.toStringOrNull_s8jyv4$(obj)) != null ? tmp$ : 'null';
  };
  Dynamic.prototype.toList_s8jyv4$ = function (obj) {
    if (obj == null) {
      return emptyList();
    }
     else if (Kotlin.isType(obj, List))
      return obj;
    else if (Kotlin.isType(obj, Iterable))
      return toList(obj);
    else
      return listOf_0(obj);
  };
  Dynamic.prototype.toMap_s8jyv4$ = function (obj) {
    var tmp$;
    if (obj == null)
      return LinkedHashMap_init();
    else if (Kotlin.isType(obj, Map))
      return Kotlin.isType(tmp$ = obj, Map) ? tmp$ : throwCCE();
    else
      return LinkedHashMap_init();
  };
  Dynamic.prototype.toNumber_s8jyv4$ = function (obj) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    if (obj == null)
      return 0;
    else if (typeof obj === 'boolean')
      return obj ? 1 : 0;
    else if (Kotlin.isNumber(obj))
      return obj;
    else if (typeof obj === 'string')
      return (tmp$_2 = (tmp$_1 = (tmp$_0 = (tmp$ = toLongOrNull(obj)) == null || Kotlin.isNumber(tmp$) ? tmp$ : null) != null ? tmp$_0 : toIntOrNull(obj)) != null ? tmp$_1 : toDoubleOrNull(obj)) != null ? tmp$_2 : 0;
    else
      return 0;
  };
  Dynamic.prototype.toBool_s8jyv4$ = function (obj) {
    if (typeof obj === 'boolean')
      return obj;
    else if (typeof obj === 'string') {
      switch (obj.toLowerCase()) {
        case '':
        case '0':
        case 'false':
        case 'ko':
        case 'no':
          return false;
        default:return true;
      }
    }
     else
      return this.toInt_s8jyv4$(obj) !== 0;
  };
  Dynamic.prototype.toByte_s8jyv4$ = function (obj) {
    return numberToByte(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.prototype.toChar_s8jyv4$ = function (obj) {
    if (typeof obj === 'string' && obj.length === 1)
      return toBoxedChar(first_0(obj));
    else
      return toBoxedChar(numberToChar(this.toNumber_s8jyv4$(obj)));
  };
  Dynamic.prototype.toShort_s8jyv4$ = function (obj) {
    return numberToShort(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.prototype.toInt_s8jyv4$ = function (obj) {
    return numberToInt(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.prototype.toLong_s8jyv4$ = function (obj) {
    return numberToLong(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.prototype.toFloat_s8jyv4$ = function (obj) {
    return numberToDouble(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.prototype.toDouble_s8jyv4$ = function (obj) {
    return numberToDouble(this.toNumber_s8jyv4$(obj));
  };
  Dynamic.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Dynamic',
    interfaces: []
  };
  var Dynamic_instance = null;
  function Dynamic_getInstance() {
    if (Dynamic_instance === null) {
      new Dynamic();
    }
    return Dynamic_instance;
  }
  function DynamicContext() {
  }
  DynamicContext.prototype.toBool_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toBool_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toByte_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toByte_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toChar_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toChar_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toShort_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toShort_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toInt_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toInt_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toLong_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toLong_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toFloat_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toFloat_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toDouble_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toDouble_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toNumber_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toNumber_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toDynamicList_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toList_s8jyv4$($receiver);
  };
  DynamicContext.prototype.toDynamicMap_mzud1t$ = function ($receiver) {
    return Dynamic_getInstance().toMap_s8jyv4$($receiver);
  };
  DynamicContext.prototype.get_uozw8h$ = function ($receiver, key) {
    return Dynamic_getInstance().get_oaftn8$($receiver, key);
  };
  DynamicContext.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'DynamicContext',
    interfaces: []
  };
  function DynamicContextInstance() {
    DynamicContextInstance_instance = this;
  }
  DynamicContextInstance.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DynamicContextInstance',
    interfaces: [DynamicContext]
  };
  var DynamicContextInstance_instance = null;
  function DynamicContextInstance_getInstance() {
    if (DynamicContextInstance_instance === null) {
      new DynamicContextInstance();
    }
    return DynamicContextInstance_instance;
  }
  function DynamicAccess() {
    DynamicAccess_instance = this;
  }
  DynamicAccess.prototype.invoke_3l02ix$ = defineInlineFunction('korio-js.com.soywiz.korio.lang.DynamicAccess.invoke_3l02ix$', wrapFunction(function () {
    var lang = _.com.soywiz.korio.lang;
    return function (callback) {
      return callback(lang.DynamicAccess);
    };
  }));
  DynamicAccess.prototype.get_list_mzud1t$ = function ($receiver) {
    if (Kotlin.isType($receiver, List))
      return $receiver;
    else if (Kotlin.isType($receiver, Iterable))
      return toList($receiver);
    else {
      return emptyList();
    }
  };
  DynamicAccess.prototype.get_keys_mzud1t$ = function ($receiver) {
    if (Kotlin.isType($receiver, Map))
      return toList($receiver.keys);
    else {
      return emptyList();
    }
  };
  DynamicAccess.prototype.get_s2h60f$ = function ($receiver, key) {
    var tmp$;
    if (Kotlin.isType($receiver, Map))
      return (Kotlin.isType(tmp$ = $receiver, Map) ? tmp$ : throwCCE()).get_11rb$(key);
    else
      return null;
  };
  DynamicAccess.prototype.get_v36bcf$ = function ($receiver, key) {
    if (Kotlin.isType($receiver, List))
      return $receiver.get_za3lpa$(key);
    else
      return null;
  };
  DynamicAccess.prototype.toBoolOrNull_mzud1t$ = function ($receiver) {
    if (typeof $receiver === 'string')
      return equals($receiver, '1') || equals($receiver, 'true') || equals($receiver, 'on');
    else if (Kotlin.isNumber($receiver))
      return numberToInt($receiver) !== 0;
    else
      return null;
  };
  DynamicAccess.prototype.toIntOrNull_mzud1t$ = function ($receiver) {
    if (Kotlin.isNumber($receiver))
      return numberToInt($receiver);
    else if (typeof $receiver === 'string')
      return toIntOrNull_0($receiver, 10);
    else
      return null;
  };
  DynamicAccess.prototype.toLongOrNull_mzud1t$ = function ($receiver) {
    if (Kotlin.isNumber($receiver))
      return numberToLong($receiver);
    else if (typeof $receiver === 'string')
      return toLongOrNull_0($receiver, 10);
    else
      return null;
  };
  DynamicAccess.prototype.toDoubleOrNull_mzud1t$ = function ($receiver) {
    if (Kotlin.isNumber($receiver))
      return numberToDouble($receiver);
    else if (typeof $receiver === 'string')
      return toDouble($receiver);
    else
      return null;
  };
  DynamicAccess.prototype.toIntDefault_v36bcf$ = function ($receiver, default_0) {
    if (default_0 === void 0)
      default_0 = 0;
    var tmp$;
    if (Kotlin.isNumber($receiver))
      return numberToInt($receiver);
    else if (typeof $receiver === 'string')
      return (tmp$ = toIntOrNull_0($receiver, 10)) != null ? tmp$ : default_0;
    else
      return default_0;
  };
  DynamicAccess.prototype.toLongDefault_up6xlm$ = function ($receiver, default_0) {
    if (default_0 === void 0)
      default_0 = L0;
    var tmp$;
    if (Kotlin.isNumber($receiver))
      return numberToLong($receiver);
    else if (typeof $receiver === 'string')
      return (tmp$ = toLongOrNull_0($receiver, 10)) != null ? tmp$ : default_0;
    else
      return default_0;
  };
  DynamicAccess.prototype.toFloatDefault_s75k3i$ = function ($receiver, default_0) {
    if (default_0 === void 0)
      default_0 = 0.0;
    if (Kotlin.isNumber($receiver))
      return numberToDouble($receiver);
    else if (typeof $receiver === 'string') {
      return toDouble($receiver);
    }
     else
      return default_0;
  };
  DynamicAccess.prototype.toDoubleDefault_kw3mun$ = function ($receiver, default_0) {
    if (default_0 === void 0)
      default_0 = 0.0;
    if (Kotlin.isNumber($receiver))
      return numberToDouble($receiver);
    else if (typeof $receiver === 'string')
      return toDouble($receiver);
    else
      return default_0;
  };
  DynamicAccess.prototype.get_str_mzud1t$ = function ($receiver) {
    return toString($receiver);
  };
  DynamicAccess.prototype.get_int_mzud1t$ = function ($receiver) {
    return this.toIntDefault_v36bcf$($receiver);
  };
  DynamicAccess.prototype.get_bool_mzud1t$ = function ($receiver) {
    var tmp$;
    return (tmp$ = this.toBoolOrNull_mzud1t$($receiver)) != null ? tmp$ : false;
  };
  DynamicAccess.prototype.get_float_mzud1t$ = function ($receiver) {
    return this.toFloatDefault_s75k3i$($receiver);
  };
  DynamicAccess.prototype.get_double_mzud1t$ = function ($receiver) {
    return this.toDoubleDefault_kw3mun$($receiver);
  };
  DynamicAccess.prototype.get_long_mzud1t$ = function ($receiver) {
    return this.toLongDefault_up6xlm$($receiver);
  };
  DynamicAccess.prototype.get_intArray_mzud1t$ = function ($receiver) {
    var tmp$, tmp$_0;
    var tmp$_1;
    if ((tmp$_0 = Kotlin.isIntArray(tmp$ = $receiver) ? tmp$ : null) != null)
      tmp$_1 = tmp$_0;
    else {
      var $receiver_0 = this.get_list_mzud1t$($receiver);
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_2;
      tmp$_2 = $receiver_0.iterator();
      while (tmp$_2.hasNext()) {
        var item = tmp$_2.next();
        destination.add_11rb$(this.get_int_mzud1t$(item));
      }
      tmp$_1 = toIntArray(destination);
    }
    return tmp$_1;
  };
  DynamicAccess.prototype.get_floatArray_mzud1t$ = function ($receiver) {
    var tmp$, tmp$_0;
    var tmp$_1;
    if ((tmp$_0 = Kotlin.isFloatArray(tmp$ = $receiver) ? tmp$ : null) != null)
      tmp$_1 = tmp$_0;
    else {
      var $receiver_0 = this.get_list_mzud1t$($receiver);
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_2;
      tmp$_2 = $receiver_0.iterator();
      while (tmp$_2.hasNext()) {
        var item = tmp$_2.next();
        destination.add_11rb$(this.get_float_mzud1t$(item));
      }
      tmp$_1 = toFloatArray(destination);
    }
    return tmp$_1;
  };
  DynamicAccess.prototype.get_doubleArray_mzud1t$ = function ($receiver) {
    var tmp$, tmp$_0;
    var tmp$_1;
    if ((tmp$_0 = Kotlin.isDoubleArray(tmp$ = $receiver) ? tmp$ : null) != null)
      tmp$_1 = tmp$_0;
    else {
      var $receiver_0 = this.get_list_mzud1t$($receiver);
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_2;
      tmp$_2 = $receiver_0.iterator();
      while (tmp$_2.hasNext()) {
        var item = tmp$_2.next();
        destination.add_11rb$(this.get_double_mzud1t$(item));
      }
      tmp$_1 = toDoubleArray(destination);
    }
    return tmp$_1;
  };
  DynamicAccess.prototype.get_longArray_mzud1t$ = function ($receiver) {
    var tmp$, tmp$_0;
    var tmp$_1;
    if ((tmp$_0 = Kotlin.isLongArray(tmp$ = $receiver) ? tmp$ : null) != null)
      tmp$_1 = tmp$_0;
    else {
      var $receiver_0 = this.get_list_mzud1t$($receiver);
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_2;
      tmp$_2 = $receiver_0.iterator();
      while (tmp$_2.hasNext()) {
        var item = tmp$_2.next();
        destination.add_11rb$(this.get_long_mzud1t$(item));
      }
      tmp$_1 = toLongArray(destination);
    }
    return tmp$_1;
  };
  DynamicAccess.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DynamicAccess',
    interfaces: []
  };
  var DynamicAccess_instance = null;
  function DynamicAccess_getInstance() {
    if (DynamicAccess_instance === null) {
      new DynamicAccess();
    }
    return DynamicAccess_instance;
  }
  function Environment() {
    Environment_instance = this;
  }
  Environment.prototype.get_61zpoe$ = function (key) {
    return KorioNative_getInstance().getenv_61zpoe$(key);
  };
  Environment.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Environment',
    interfaces: []
  };
  var Environment_instance = null;
  function Environment_getInstance() {
    if (Environment_instance === null) {
      new Environment();
    }
    return Environment_instance;
  }
  function printStackTrace($receiver) {
    KorioNative_getInstance().printStackTrace_tcv7n7$($receiver);
  }
  var formatRegex;
  function format($receiver, params) {
    var paramIndex = {v: 0};
    var $this = formatRegex;
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = $this.find_905azu$($receiver);
      if (match == null) {
        replace_20wsma$result = $receiver.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = $receiver.length;
      var sb = StringBuilder_init_0(length);
      do {
        var foundMatch = ensureNotNull(match);
        sb.append_ezbsdh$($receiver, lastStart, foundMatch.range.start);
        var tmp$ = sb.append_gw00v9$;
        var tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
        var param = params[tmp$_0 = paramIndex.v, paramIndex.v = tmp$_0 + 1 | 0, tmp$_0];
        var size = foundMatch.groupValues.get_za3lpa$(1);
        var type = foundMatch.groupValues.get_za3lpa$(2);
        switch (type) {
          case 'd':
            tmp$_4 = numberToLong(Kotlin.isNumber(tmp$_1 = param) ? tmp$_1 : throwCCE()).toString();
            break;
          case 'X':
          case 'x':
            if (typeof param === 'number')
              tmp$_3 = toStringUnsigned(param, 16);
            else
              tmp$_3 = toStringUnsigned_0(numberToLong(Kotlin.isNumber(tmp$_2 = param) ? tmp$_2 : throwCCE()), 16);
            var res = tmp$_3;
            tmp$_4 = equals(type, 'X') ? res.toUpperCase() : res.toLowerCase();
            break;
          default:tmp$_4 = param.toString();
            break;
        }
        var str = tmp$_4;
        var prefix = startsWith_0(size, 48) ? 48 : 32;
        var asize = toIntOrNull(size);
        var str2 = str;
        if (asize != null) {
          while (str2.length < asize) {
            var other = str2;
            str2 = String.fromCharCode(prefix) + other;
          }
        }
        tmp$.call(sb, str2);
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$($receiver, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    return replace_20wsma$result;
  }
  function splitKeep($receiver, regex) {
    var tmp$;
    var str = $receiver;
    var out = ArrayList_init();
    var lastPos = 0;
    tmp$ = regex.findAll_905azu$($receiver).iterator();
    while (tmp$.hasNext()) {
      var part = tmp$.next();
      var prange = part.range;
      if (lastPos !== prange.start) {
        var startIndex = lastPos;
        var endIndex = prange.start;
        var element = str.substring(startIndex, endIndex);
        out.add_11rb$(element);
      }
      var element_0 = substring(str, prange);
      out.add_11rb$(element_0);
      lastPos = prange.endInclusive + 1 | 0;
    }
    if (lastPos !== str.length) {
      var startIndex_0 = lastPos;
      var element_1 = str.substring(startIndex_0);
      out.add_11rb$(element_1);
    }
    return out;
  }
  function replaceNonPrintableCharactersRegex$lambda() {
    return Regex_init('[^ -~]');
  }
  var replaceNonPrintableCharactersRegex;
  function get_replaceNonPrintableCharactersRegex() {
    return replaceNonPrintableCharactersRegex.value;
  }
  function replaceNonPrintableCharacters($receiver, replacement) {
    if (replacement === void 0)
      replacement = '?';
    return get_replaceNonPrintableCharactersRegex().replace_x2uqeu$($receiver, replacement);
  }
  function toBytez($receiver, len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var out = new ByteArrayBuilder();
    out.append_fqrh44$(toByteArray($receiver, charset));
    while (out.size < len)
      out.append_s8j3t7$(toByte(0));
    return out.toByteArray();
  }
  function toBytez_0($receiver, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var out = new ByteArrayBuilder();
    out.append_fqrh44$(toByteArray($receiver, charset));
    out.append_s8j3t7$(toByte(0));
    return out.toByteArray();
  }
  function indexOfOrNull($receiver, char, startIndex) {
    if (startIndex === void 0)
      startIndex = 0;
    var $receiver_0 = indexOf_1($receiver, char, startIndex);
    return $receiver_0 >= 0 ? $receiver_0 : null;
  }
  function lastIndexOfOrNull($receiver, char, startIndex) {
    if (startIndex === void 0)
      startIndex = get_lastIndex($receiver);
    var $receiver_0 = lastIndexOf($receiver, char, startIndex);
    return $receiver_0 >= 0 ? $receiver_0 : null;
  }
  function splitInChunks($receiver, size) {
    var out = ArrayList_init();
    var pos = 0;
    while (pos < $receiver.length) {
      var tmp$ = pos;
      var a = $receiver.length;
      var b = pos + size | 0;
      var endIndex = Math_0.min(a, b);
      var element = $receiver.substring(tmp$, endIndex);
      out.add_11rb$(element);
      pos = pos + size | 0;
    }
    return out;
  }
  function substr($receiver, start) {
    return substr_0($receiver, start, $receiver.length);
  }
  function substr_0($receiver, start, length) {
    var low = clamp(start >= 0 ? start : $receiver.length + start | 0, 0, $receiver.length);
    var high = clamp(length >= 0 ? low + length | 0 : $receiver.length + length | 0, 0, $receiver.length);
    return high >= low ? $receiver.substring(low, high) : '';
  }
  function transform($receiver, transform) {
    var tmp$;
    var out = '';
    tmp$ = iterator($receiver);
    while (tmp$.hasNext()) {
      var ch = unboxChar(tmp$.next());
      out += transform(toBoxedChar(ch));
    }
    return out;
  }
  function parseInt($receiver) {
    if (startsWith($receiver, '0x', true)) {
      return toLong($receiver.substring(2), 16).toInt();
    }
     else
      return toInt($receiver);
  }
  function get_quoted($receiver) {
    return quote_0($receiver);
  }
  function String_fromIntArray(arrays, offset, size) {
    if (offset === void 0)
      offset = 0;
    if (size === void 0)
      size = arrays.length - offset | 0;
    var tmp$;
    var sb = StringBuilder_init();
    tmp$ = offset + size | 0;
    for (var n = offset; n < tmp$; n++) {
      sb.append_s8itvh$(toChar(arrays[n]));
    }
    return sb.toString();
  }
  function String_fromCharArray(arrays, offset, size) {
    if (offset === void 0)
      offset = 0;
    if (size === void 0)
      size = arrays.length - offset | 0;
    var tmp$;
    var sb = StringBuilder_init();
    tmp$ = offset + size | 0;
    for (var n = offset; n < tmp$; n++) {
      sb.append_s8itvh$(arrays[n]);
    }
    return sb.toString();
  }
  function threadLocal(gen) {
    this.gen = gen;
    this.local = new threadLocal$local$ObjectLiteral(this);
  }
  threadLocal.prototype.getValue_n5byny$ = defineInlineFunction('korio-js.com.soywiz.korio.lang.threadLocal.getValue_n5byny$', function (thisRef, property) {
    return this.local.get();
  });
  threadLocal.prototype.setValue_sq4zib$ = defineInlineFunction('korio-js.com.soywiz.korio.lang.threadLocal.setValue_sq4zib$', function (thisRef, property, value) {
    this.local.set_11rb$(value);
  });
  function threadLocal$local$ObjectLiteral(this$threadLocal) {
    this.this$threadLocal = this$threadLocal;
    KorioNative$NativeThreadLocal.call(this);
  }
  threadLocal$local$ObjectLiteral.prototype.initialValue = function () {
    return this.this$threadLocal.gen();
  };
  threadLocal$local$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [KorioNative$NativeThreadLocal]
  };
  threadLocal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'threadLocal',
    interfaces: []
  };
  function Undefined() {
    Undefined_instance = this;
  }
  Undefined.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Undefined',
    interfaces: []
  };
  var Undefined_instance = null;
  function Undefined_getInstance() {
    if (Undefined_instance === null) {
      new Undefined();
    }
    return Undefined_instance;
  }
  var assert = defineInlineFunction('korio-js.com.soywiz.korio.lang.assert_6taknv$', wrapFunction(function () {
    var AssertionError_init = Kotlin.kotlin.AssertionError_init;
    return function (cond) {
      if (!cond)
        throw AssertionError_init();
    };
  }));
  function lazyVar(callback) {
    this.callback = callback;
    this.current = null;
  }
  lazyVar.prototype.getValue_t0xcdd$ = function (obj, property) {
    if (this.current == null) {
      this.current = this.callback();
    }
    return ensureNotNull(this.current);
  };
  lazyVar.prototype.setValue_809r6s$ = function (obj, property, value) {
    this.current = value;
  };
  lazyVar.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'lazyVar',
    interfaces: []
  };
  function get_asyncSocketFactory() {
    return KorioNative_getInstance().asyncSocketFactory;
  }
  function AsyncSocketFactory() {
  }
  AsyncSocketFactory.prototype.createServer_jl0c9m$ = function (port, host, backlog, continuation, callback$default) {
    if (host === void 0)
      host = '127.0.0.1';
    if (backlog === void 0)
      backlog = 511;
    return callback$default ? callback$default(port, host, backlog, continuation) : this.createServer_jl0c9m$$default(port, host, backlog, continuation);
  };
  AsyncSocketFactory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncSocketFactory',
    interfaces: []
  };
  function AsyncClient() {
    AsyncClient$Companion_getInstance();
  }
  function AsyncClient$Stats() {
    AsyncClient$Stats_instance = this;
    this.writeCountStart = NewAtomicLong(L0);
    this.writeCountEnd = NewAtomicLong(L0);
    this.writeCountError = NewAtomicLong(L0);
  }
  AsyncClient$Stats.prototype.toString = function () {
    return 'AsyncClient.Stats(' + this.writeCountStart + '/' + this.writeCountEnd + '/' + this.writeCountError + ')';
  };
  AsyncClient$Stats.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Stats',
    interfaces: []
  };
  var AsyncClient$Stats_instance = null;
  function AsyncClient$Stats_getInstance() {
    if (AsyncClient$Stats_instance === null) {
      new AsyncClient$Stats();
    }
    return AsyncClient$Stats_instance;
  }
  function AsyncClient$Companion() {
    AsyncClient$Companion_instance = this;
  }
  AsyncClient$Companion.prototype.invoke_bm4lxs$ = function (host, port, continuation) {
    return this.createAndConnect_bm4lxs$(host, port, continuation);
  };
  AsyncClient$Companion.prototype.create = function (continuation) {
    return get_asyncSocketFactory().createClient(continuation);
  };
  AsyncClient$Companion.prototype.createAndConnect_bm4lxs$ = function (host_0, port_0, continuation_0, suspended) {
    var instance = new Coroutine$createAndConnect_bm4lxs$(this, host_0, port_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$createAndConnect_bm4lxs$($this, host_0, port_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$socket = void 0;
    this.local$host = host_0;
    this.local$port = port_0;
  }
  Coroutine$createAndConnect_bm4lxs$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$createAndConnect_bm4lxs$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$createAndConnect_bm4lxs$.prototype.constructor = Coroutine$createAndConnect_bm4lxs$;
  Coroutine$createAndConnect_bm4lxs$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = get_asyncSocketFactory().createClient(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$socket = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$socket.connect_bm4lxs$(this.local$host, this.local$port, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$socket;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncClient$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AsyncClient$Companion_instance = null;
  function AsyncClient$Companion_getInstance() {
    if (AsyncClient$Companion_instance === null) {
      new AsyncClient$Companion();
    }
    return AsyncClient$Companion_instance;
  }
  AsyncClient.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncClient',
    interfaces: [AsyncOutputStream, AsyncInputStream, AsyncCloseable]
  };
  function AsyncServer() {
    AsyncServer$Companion_getInstance();
  }
  function AsyncServer$Companion() {
    AsyncServer$Companion_instance = this;
  }
  AsyncServer$Companion.prototype.invoke_jl0c9m$ = function (port, host, backlog, continuation) {
    if (host === void 0)
      host = '127.0.0.1';
    if (backlog === void 0)
      backlog = -1;
    return get_asyncSocketFactory().createServer_jl0c9m$(port, host, backlog, continuation);
  };
  AsyncServer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AsyncServer$Companion_instance = null;
  function AsyncServer$Companion_getInstance() {
    if (AsyncServer$Companion_instance === null) {
      new AsyncServer$Companion();
    }
    return AsyncServer$Companion_instance;
  }
  function AsyncServer$listen$lambda$lambda$lambda(this$_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$AsyncServer$listen$lambda$lambda$lambda(this$_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncServer$listen$lambda$lambda$lambda(this$_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$it = it_0;
  }
  Coroutine$AsyncServer$listen$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncServer$listen$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncServer$listen$lambda$lambda$lambda.prototype.constructor = Coroutine$AsyncServer$listen$lambda$lambda$lambda;
  Coroutine$AsyncServer$listen$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.yield_trkh7z$(this.local$it), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AsyncServer$listen$lambda$lambda(this$_0, this$AsyncServer_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncServer$listen$lambda$lambda(this$_0, this$AsyncServer_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncServer$listen$lambda$lambda(this$_0, this$AsyncServer_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$this$AsyncServer = this$AsyncServer_0;
  }
  Coroutine$AsyncServer$listen$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncServer$listen$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncServer$listen$lambda$lambda.prototype.constructor = Coroutine$AsyncServer$listen$lambda$lambda;
  Coroutine$AsyncServer$listen$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncServer.listen_lsub1v$(AsyncServer$listen$lambda$lambda$lambda(this.local$this$), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AsyncServer$listen$lambda(closure$ctx, this$AsyncServer) {
    return function ($receiver) {
      launchImmediately_0(closure$ctx, void 0, AsyncServer$listen$lambda$lambda($receiver, this$AsyncServer));
      return Unit;
    };
  }
  AsyncServer.prototype.listen = function (continuation) {
    var ctx = continuation.context;
    return asyncGenerate3(AsyncServer$listen$lambda(ctx, this));
  };
  AsyncServer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncServer',
    interfaces: []
  };
  function HostWithPort(host, port) {
    HostWithPort$Companion_getInstance();
    this.host = host;
    this.port = port;
  }
  function HostWithPort$Companion() {
    HostWithPort$Companion_instance = this;
  }
  HostWithPort$Companion.prototype.parse_bm4lxs$ = function (str, defaultPort) {
    var parts = split(str, Kotlin.charArrayOf(58), void 0, 2);
    return new HostWithPort(parts.get_za3lpa$(0), toInt(1 >= 0 && 1 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(1) : defaultPort.toString()));
  };
  HostWithPort$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HostWithPort$Companion_instance = null;
  function HostWithPort$Companion_getInstance() {
    if (HostWithPort$Companion_instance === null) {
      new HostWithPort$Companion();
    }
    return HostWithPort$Companion_instance;
  }
  HostWithPort.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HostWithPort',
    interfaces: []
  };
  HostWithPort.prototype.component1 = function () {
    return this.host;
  };
  HostWithPort.prototype.component2 = function () {
    return this.port;
  };
  HostWithPort.prototype.copy_bm4lxs$ = function (host, port) {
    return new HostWithPort(host === void 0 ? this.host : host, port === void 0 ? this.port : port);
  };
  HostWithPort.prototype.toString = function () {
    return 'HostWithPort(host=' + Kotlin.toString(this.host) + (', port=' + Kotlin.toString(this.port)) + ')';
  };
  HostWithPort.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.host) | 0;
    result = result * 31 + Kotlin.hashCode(this.port) | 0;
    return result;
  };
  HostWithPort.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.host, other.host) && Kotlin.equals(this.port, other.port)))));
  };
  function MimeType(mime, exts) {
    MimeType$Companion_getInstance();
    this.mime = mime;
    this.exts = exts;
  }
  function MimeType$Companion() {
    MimeType$Companion_instance = this;
    this.APPLICATION_OCTET_STREAM = new MimeType('application/octet-stream', listOf_0('bin'));
    this.APPLICATION_JSON = new MimeType('application/json', listOf_0('json'));
    this.IMAGE_PNG = new MimeType('image/png', listOf_0('png'));
    this.IMAGE_JPEG = new MimeType('image/jpeg', listOf(['jpg', 'jpeg']));
    this.IMAGE_GIF = new MimeType('image/gif', listOf_0('gif'));
    this.TEXT_HTML = new MimeType('text/html', listOf(['htm', 'html']));
    this.TEXT_PLAIN = new MimeType('text/plain', listOf(['txt', 'text']));
    this.TEXT_CSS = new MimeType('text/css', listOf_0('css'));
    this.TEXT_JS = new MimeType('application/javascript', listOf_0('js'));
    this.byExtensions_0 = lmapOf([]);
    this.register_ceippw$([this.APPLICATION_OCTET_STREAM, this.APPLICATION_JSON, this.IMAGE_PNG, this.IMAGE_JPEG, this.IMAGE_GIF, this.TEXT_HTML, this.TEXT_PLAIN, this.TEXT_CSS, this.TEXT_JS]);
  }
  MimeType$Companion.prototype.register_dtz7bj$ = function (mimeType) {
    var tmp$;
    tmp$ = mimeType.exts.iterator();
    while (tmp$.hasNext()) {
      var ext = tmp$.next();
      this.byExtensions_0.put_xwzc9p$(ext, mimeType);
    }
  };
  MimeType$Companion.prototype.register_ceippw$ = function (mimeTypes) {
    var tmp$;
    for (tmp$ = 0; tmp$ !== mimeTypes.length; ++tmp$) {
      var mt = mimeTypes[tmp$];
      this.register_dtz7bj$(mt);
    }
  };
  MimeType$Companion.prototype.register_60y5e1$ = function (mime, exsts) {
    var destination = ArrayList_init_1(exsts.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== exsts.length; ++tmp$) {
      var item = exsts[tmp$];
      destination.add_11rb$(item.toLowerCase());
    }
    this.register_dtz7bj$(new MimeType(mime, destination));
  };
  MimeType$Companion.prototype.getByExtension_nxhpy7$ = function (ext, default_0) {
    if (default_0 === void 0)
      default_0 = this.APPLICATION_OCTET_STREAM;
    var tmp$;
    return (tmp$ = this.byExtensions_0.get_11rb$(ext.toLowerCase())) != null ? tmp$ : default_0;
  };
  MimeType$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var MimeType$Companion_instance = null;
  function MimeType$Companion_getInstance() {
    if (MimeType$Companion_instance === null) {
      new MimeType$Companion();
    }
    return MimeType$Companion_instance;
  }
  MimeType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MimeType',
    interfaces: [Vfs$Attribute]
  };
  function mimeType($receiver) {
    return MimeType$Companion_getInstance().getByExtension_nxhpy7$(get_extensionLC($receiver));
  }
  function QueryString() {
    QueryString_instance = this;
  }
  QueryString.prototype.decode_6bul2c$ = function (str) {
    var tmp$;
    var out = lmapOf([]);
    tmp$ = split(str, Kotlin.charArrayOf(38)).iterator();
    while (tmp$.hasNext()) {
      var chunk = tmp$.next();
      var parts = split(chunk, Kotlin.charArrayOf(61), void 0, 2);
      var key = URLDecoder_getInstance().decode_puj7f4$(parts.get_za3lpa$(0), 'UTF-8');
      var value = URLDecoder_getInstance().decode_puj7f4$(1 >= 0 && 1 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(1) : key, 'UTF-8');
      var tmp$_0;
      var value_0 = out.get_11rb$(key);
      if (value_0 == null) {
        var answer = ArrayList_init();
        out.put_xwzc9p$(key, answer);
        tmp$_0 = answer;
      }
       else {
        tmp$_0 = value_0;
      }
      var list = tmp$_0;
      list.add_11rb$(value);
    }
    return out;
  };
  var addAll = Kotlin.kotlin.collections.addAll_ipc267$;
  QueryString.prototype.encode_atu3vi$ = function (map) {
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = map.entries.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var key = element.key;
      var value = element.value;
      var destination_0 = ArrayList_init_1(collectionSizeOrDefault(value, 10));
      var tmp$_0;
      tmp$_0 = value.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination_0.add_11rb$(to(key, item));
      }
      var list = destination_0;
      addAll(destination, list);
    }
    return this.encode_9ih0sy$(copyToArray(destination).slice());
  };
  QueryString.prototype.encode_9ih0sy$ = function (items) {
    var tmp$;
    var parts = ArrayList_init();
    for (tmp$ = 0; tmp$ !== items.length; ++tmp$) {
      var tmp$_0 = items[tmp$];
      var key = tmp$_0.component1()
      , value = tmp$_0.component2();
      var element = URLEncoder_getInstance().encode_puj7f4$(key, 'UTF-8') + '=' + URLEncoder_getInstance().encode_puj7f4$(value, 'UTF-8');
      parts.add_11rb$(element);
    }
    return joinToString(parts, '&');
  };
  QueryString.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'QueryString',
    interfaces: []
  };
  var QueryString_instance = null;
  function QueryString_getInstance() {
    if (QueryString_instance === null) {
      new QueryString();
    }
    return QueryString_instance;
  }
  function URI(isOpaque, scheme, userInfo, host, path, query, fragment) {
    URI$Companion_getInstance();
    this.isOpaque = isOpaque;
    this.scheme = scheme;
    this.userInfo = userInfo;
    this.host = host;
    this.path = path;
    this.query = query;
    this.fragment = fragment;
    this.fullUri_nmew00$_0 = lazy(URI$fullUri$lambda(this));
  }
  Object.defineProperty(URI.prototype, 'user', {
    get: function () {
      var tmp$;
      return (tmp$ = this.userInfo) != null ? substringBefore(tmp$, 58) : null;
    }
  });
  Object.defineProperty(URI.prototype, 'password', {
    get: function () {
      var tmp$;
      return (tmp$ = this.userInfo) != null ? substringAfter(tmp$, 58) : null;
    }
  });
  Object.defineProperty(URI.prototype, 'isHierarchical', {
    get: function () {
      return !this.isOpaque;
    }
  });
  Object.defineProperty(URI.prototype, 'fullUri', {
    get: function () {
      return this.fullUri_nmew00$_0.value;
    }
  });
  Object.defineProperty(URI.prototype, 'isAbsolute', {
    get: function () {
      return this.scheme != null;
    }
  });
  URI.prototype.toString = function () {
    return this.fullUri;
  };
  function URI$toComponentString$lambda(it) {
    return it.first + '=' + toString(it.second);
  }
  URI.prototype.toComponentString = function () {
    var $receiver = listOf([getPropertyCallableRef('scheme', 0, function ($receiver) {
      return $receiver.scheme;
    }.bind(null, this)), getPropertyCallableRef('userInfo', 0, function ($receiver) {
      return $receiver.userInfo;
    }.bind(null, this)), getPropertyCallableRef('host', 0, function ($receiver) {
      return $receiver.host;
    }.bind(null, this)), getPropertyCallableRef('path', 0, function ($receiver) {
      return $receiver.path;
    }.bind(null, this)), getPropertyCallableRef('query', 0, function ($receiver) {
      return $receiver.query;
    }.bind(null, this)), getPropertyCallableRef('fragment', 0, function ($receiver) {
      return $receiver.fragment;
    }.bind(null, this))]);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.callableName, item.get()));
    }
    var destination_0 = ArrayList_init();
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      if (element.second != null)
        destination_0.add_11rb$(element);
    }
    return 'URI(' + joinToString(destination_0, ', ', void 0, void 0, void 0, void 0, URI$toComponentString$lambda) + ')';
  };
  URI.prototype.resolve_ptvjp1$ = function (path) {
    return URI$Companion_getInstance().invoke_61zpoe$(URI$Companion_getInstance().resolve_puj7f4$(this.fullUri, path.fullUri));
  };
  function URI$Companion() {
    URI$Companion_instance = this;
    this.schemeRegex_0 = Regex_init('\\w+:');
  }
  URI$Companion.prototype.invoke_9sy8oc$ = function (scheme, userInfo, host, path, query, fragment, opaque) {
    if (opaque === void 0)
      opaque = false;
    return new URI(opaque, scheme, userInfo, host, path, query, fragment);
  };
  URI$Companion.prototype.invoke_61zpoe$ = function (uri) {
    var tmp$;
    var r = new StrReader(uri);
    var schemeColon = r.tryRegex_t7befh$(this.schemeRegex_0);
    if (schemeColon != null) {
      var isHierarchical = r.tryLit_61zpoe$('//') != null;
      var nonScheme = r.readRemaining();
      var scheme = dropLast(schemeColon, 1);
      var $receiver = split(nonScheme, Kotlin.charArrayOf(35), void 0, 2);
      var tmp$_0 = to(first($receiver), getOrNull($receiver, 1));
      var nonFragment = tmp$_0.component1()
      , fragment = tmp$_0.component2();
      var $receiver_0 = split(nonFragment, Kotlin.charArrayOf(63), void 0, 2);
      var tmp$_1 = to(first($receiver_0), getOrNull($receiver_0, 1));
      var nonQuery = tmp$_1.component1()
      , query = tmp$_1.component2();
      var $receiver_1 = split(nonQuery, Kotlin.charArrayOf(47), void 0, 2);
      var tmp$_2 = to(first($receiver_1), getOrNull($receiver_1, 1));
      var authority = tmp$_2.component1()
      , path = tmp$_2.component2();
      var $receiver_2 = reversed(split(authority, Kotlin.charArrayOf(64), void 0, 2));
      var tmp$_3 = to(first($receiver_2), getOrNull($receiver_2, 1));
      var host = tmp$_3.component1()
      , userInfo = tmp$_3.component2();
      tmp$ = URI$Companion_getInstance().invoke_9sy8oc$(scheme, userInfo, host.length === 0 ? null : host, path != null ? '/' + toString(path) : '', query, fragment, !isHierarchical);
    }
     else {
      var $receiver_3 = split_0(uri, ['#'], void 0, 2);
      var tmp$_4 = to(first($receiver_3), getOrNull($receiver_3, 1));
      var nonFragment_0 = tmp$_4.component1()
      , fragment_0 = tmp$_4.component2();
      var $receiver_4 = split_0(nonFragment_0, ['?'], void 0, 2);
      var tmp$_5 = to(first($receiver_4), getOrNull($receiver_4, 1));
      var path_0 = tmp$_5.component1()
      , query_0 = tmp$_5.component2();
      tmp$ = URI$Companion_getInstance().invoke_9sy8oc$(null, null, null, path_0, query_0, fragment_0, false);
    }
    return tmp$;
  };
  URI$Companion.prototype.isAbsolute_61zpoe$ = function (uri) {
    return (new StrReader(uri)).tryRegex_t7befh$(this.schemeRegex_0) != null;
  };
  URI$Companion.prototype.resolve_puj7f4$ = function (base, access) {
    if (this.isAbsolute_61zpoe$(access))
      return access;
    else if (startsWith(access, '/'))
      return URI$Companion_getInstance().invoke_61zpoe$(base).copy_82mkos$(void 0, void 0, void 0, void 0, access).fullUri;
    else {
      var $receiver = URI$Companion_getInstance().invoke_61zpoe$(base);
      return $receiver.copy_82mkos$(void 0, void 0, void 0, void 0, '/' + trimStart(VfsUtil_getInstance().normalize_61zpoe$(substringBeforeLast($receiver.path, 47) + '/' + access), Kotlin.charArrayOf(47))).fullUri;
    }
  };
  URI$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var URI$Companion_instance = null;
  function URI$Companion_getInstance() {
    if (URI$Companion_instance === null) {
      new URI$Companion();
    }
    return URI$Companion_instance;
  }
  function URI$fullUri$lambda(this$URI) {
    return function () {
      var out = StringBuilder_init();
      if (this$URI.scheme != null) {
        out.append_gw00v9$(toString(this$URI.scheme) + ':');
        if (!this$URI.isOpaque)
          out.append_gw00v9$('//');
      }
      if (this$URI.userInfo != null)
        out.append_gw00v9$(toString(this$URI.userInfo) + '@');
      if (this$URI.host != null)
        out.append_gw00v9$(this$URI.host);
      out.append_gw00v9$(this$URI.path);
      if (this$URI.query != null)
        out.append_gw00v9$('?' + toString(this$URI.query));
      if (this$URI.fragment != null)
        out.append_gw00v9$('#' + toString(this$URI.fragment));
      return out.toString();
    };
  }
  URI.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'URI',
    interfaces: []
  };
  URI.prototype.component1 = function () {
    return this.isOpaque;
  };
  URI.prototype.component2 = function () {
    return this.scheme;
  };
  URI.prototype.component3 = function () {
    return this.userInfo;
  };
  URI.prototype.component4 = function () {
    return this.host;
  };
  URI.prototype.component5 = function () {
    return this.path;
  };
  URI.prototype.component6 = function () {
    return this.query;
  };
  URI.prototype.component7 = function () {
    return this.fragment;
  };
  URI.prototype.copy_82mkos$ = function (isOpaque, scheme, userInfo, host, path, query, fragment) {
    return new URI(isOpaque === void 0 ? this.isOpaque : isOpaque, scheme === void 0 ? this.scheme : scheme, userInfo === void 0 ? this.userInfo : userInfo, host === void 0 ? this.host : host, path === void 0 ? this.path : path, query === void 0 ? this.query : query, fragment === void 0 ? this.fragment : fragment);
  };
  URI.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.isOpaque) | 0;
    result = result * 31 + Kotlin.hashCode(this.scheme) | 0;
    result = result * 31 + Kotlin.hashCode(this.userInfo) | 0;
    result = result * 31 + Kotlin.hashCode(this.host) | 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    result = result * 31 + Kotlin.hashCode(this.query) | 0;
    result = result * 31 + Kotlin.hashCode(this.fragment) | 0;
    return result;
  };
  URI.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.isOpaque, other.isOpaque) && Kotlin.equals(this.scheme, other.scheme) && Kotlin.equals(this.userInfo, other.userInfo) && Kotlin.equals(this.host, other.host) && Kotlin.equals(this.path, other.path) && Kotlin.equals(this.query, other.query) && Kotlin.equals(this.fragment, other.fragment)))));
  };
  function URLDecoder() {
    URLDecoder_instance = this;
  }
  URLDecoder.prototype.decode_puj7f4$ = function (s, enc) {
    var bos = new ByteArrayBuilder();
    var len = s.length;
    var n = 0;
    while (n < len) {
      var c = s.charCodeAt(n);
      switch (c) {
        case 37:
          bos.append_s8j3t7$(toByte(toInt_0(substr_0(s, n + 1 | 0, 2), 16)));
          n = n + 2 | 0;
          break;
        case 43:
          bos.append_s8j3t7$(toByte(32));
          break;
        default:bos.append_s8j3t7$(toByte(c | 0));
          break;
      }
      n = n + 1 | 0;
    }
    return toString_0(bos.toByteArray(), Charset$Companion_getInstance().forName_61zpoe$(enc));
  };
  URLDecoder.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'URLDecoder',
    interfaces: []
  };
  var URLDecoder_instance = null;
  function URLDecoder_getInstance() {
    if (URLDecoder_instance === null) {
      new URLDecoder();
    }
    return URLDecoder_instance;
  }
  function URLEncoder() {
    URLEncoder_instance = this;
    this.normal_0 = Kotlin.booleanArray(256);
    this.normalTable_0 = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 -_.*';
    this.digits_0 = '0123456789ABCDEF';
    var tmp$;
    tmp$ = iterator(this.normalTable_0);
    while (tmp$.hasNext()) {
      var c = unboxChar(tmp$.next());
      this.normal_0[c | 0] = true;
    }
  }
  URLEncoder.prototype.encode_puj7f4$ = function (s, enc) {
    var tmp$;
    var sb = StringBuilder_init_0(s.length);
    var data = toByteArray(s, Charset$Companion_getInstance().forName_61zpoe$(enc));
    for (tmp$ = 0; tmp$ !== data.length; ++tmp$) {
      var c = data[tmp$];
      if (c === toByte(32 | 0))
        sb.append_s8itvh$(43);
      else if (this.normal_0[c & 255])
        sb.append_s8itvh$(toChar(c));
      else {
        sb.append_s8itvh$(37);
        sb.append_s8itvh$(this.digits_0.charCodeAt(c >>> 4 & 15));
        sb.append_s8itvh$(this.digits_0.charCodeAt(c >>> 0 & 15));
      }
    }
    return sb.toString();
  };
  URLEncoder.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'URLEncoder',
    interfaces: []
  };
  var URLEncoder_instance = null;
  function URLEncoder_getInstance() {
    if (URLEncoder_instance === null) {
      new URLEncoder();
    }
    return URLEncoder_instance;
  }
  function Http() {
    Http$Companion_getInstance();
  }
  function Http$Methods(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Http$Methods_initFields() {
    Http$Methods_initFields = function () {
    };
    Http$Methods$ALL_instance = new Http$Methods('ALL', 0);
    Http$Methods$OPTIONS_instance = new Http$Methods('OPTIONS', 1);
    Http$Methods$GET_instance = new Http$Methods('GET', 2);
    Http$Methods$HEAD_instance = new Http$Methods('HEAD', 3);
    Http$Methods$POST_instance = new Http$Methods('POST', 4);
    Http$Methods$PUT_instance = new Http$Methods('PUT', 5);
    Http$Methods$DELETE_instance = new Http$Methods('DELETE', 6);
    Http$Methods$TRACE_instance = new Http$Methods('TRACE', 7);
    Http$Methods$CONNECT_instance = new Http$Methods('CONNECT', 8);
    Http$Methods$PATCH_instance = new Http$Methods('PATCH', 9);
  }
  var Http$Methods$ALL_instance;
  function Http$Methods$ALL_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$ALL_instance;
  }
  var Http$Methods$OPTIONS_instance;
  function Http$Methods$OPTIONS_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$OPTIONS_instance;
  }
  var Http$Methods$GET_instance;
  function Http$Methods$GET_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$GET_instance;
  }
  var Http$Methods$HEAD_instance;
  function Http$Methods$HEAD_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$HEAD_instance;
  }
  var Http$Methods$POST_instance;
  function Http$Methods$POST_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$POST_instance;
  }
  var Http$Methods$PUT_instance;
  function Http$Methods$PUT_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$PUT_instance;
  }
  var Http$Methods$DELETE_instance;
  function Http$Methods$DELETE_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$DELETE_instance;
  }
  var Http$Methods$TRACE_instance;
  function Http$Methods$TRACE_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$TRACE_instance;
  }
  var Http$Methods$CONNECT_instance;
  function Http$Methods$CONNECT_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$CONNECT_instance;
  }
  var Http$Methods$PATCH_instance;
  function Http$Methods$PATCH_getInstance() {
    Http$Methods_initFields();
    return Http$Methods$PATCH_instance;
  }
  Http$Methods.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Methods',
    interfaces: [Http$Method, Enum]
  };
  function Http$Methods$values() {
    return [Http$Methods$ALL_getInstance(), Http$Methods$OPTIONS_getInstance(), Http$Methods$GET_getInstance(), Http$Methods$HEAD_getInstance(), Http$Methods$POST_getInstance(), Http$Methods$PUT_getInstance(), Http$Methods$DELETE_getInstance(), Http$Methods$TRACE_getInstance(), Http$Methods$CONNECT_getInstance(), Http$Methods$PATCH_getInstance()];
  }
  Http$Methods.values = Http$Methods$values;
  function Http$Methods$valueOf(name) {
    switch (name) {
      case 'ALL':
        return Http$Methods$ALL_getInstance();
      case 'OPTIONS':
        return Http$Methods$OPTIONS_getInstance();
      case 'GET':
        return Http$Methods$GET_getInstance();
      case 'HEAD':
        return Http$Methods$HEAD_getInstance();
      case 'POST':
        return Http$Methods$POST_getInstance();
      case 'PUT':
        return Http$Methods$PUT_getInstance();
      case 'DELETE':
        return Http$Methods$DELETE_getInstance();
      case 'TRACE':
        return Http$Methods$TRACE_getInstance();
      case 'CONNECT':
        return Http$Methods$CONNECT_getInstance();
      case 'PATCH':
        return Http$Methods$PATCH_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.net.http.Http.Methods.' + name);
    }
  }
  Http$Methods.valueOf_61zpoe$ = Http$Methods$valueOf;
  function Http$Method() {
    Http$Method$Companion_getInstance();
  }
  function Http$Method$Companion() {
    Http$Method$Companion_instance = this;
    this.OPTIONS = Http$Methods$OPTIONS_getInstance();
    this.GET = Http$Methods$GET_getInstance();
    this.HEAD = Http$Methods$HEAD_getInstance();
    this.POST = Http$Methods$POST_getInstance();
    this.PUT = Http$Methods$PUT_getInstance();
    this.DELETE = Http$Methods$DELETE_getInstance();
    this.TRACE = Http$Methods$TRACE_getInstance();
    this.CONNECT = Http$Methods$CONNECT_getInstance();
    this.PATCH = Http$Methods$PATCH_getInstance();
    this._values = listOf([this.OPTIONS, this.GET, this.HEAD, this.POST, this.PUT, this.DELETE, this.TRACE, this.CONNECT, this.PATCH]);
    var $receiver = this._values;
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.name, item));
    }
    this.valuesMap = toMap(destination);
  }
  Http$Method$Companion.prototype.values = function () {
    return this._values;
  };
  Http$Method$Companion.prototype.get_61zpoe$ = function (name) {
    var tmp$ = this.valuesMap;
    var $receiver = name.toUpperCase();
    var tmp$_0;
    var key = trim_0(Kotlin.isCharSequence(tmp$_0 = $receiver) ? tmp$_0 : throwCCE()).toString();
    var tmp$_1;
    return (tmp$_1 = tmp$.get_11rb$(key)) != null ? tmp$_1 : new Http$CustomMethod(name);
  };
  Http$Method$Companion.prototype.invoke_61zpoe$ = function (name) {
    return this.get_61zpoe$(name);
  };
  Http$Method$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Http$Method$Companion_instance = null;
  function Http$Method$Companion_getInstance() {
    if (Http$Method$Companion_instance === null) {
      new Http$Method$Companion();
    }
    return Http$Method$Companion_instance;
  }
  Http$Method.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Method',
    interfaces: []
  };
  function Http$CustomMethod(_name) {
    this._name = _name;
    var $receiver = this._name;
    var tmp$;
    this.nameUC = trim_0(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : throwCCE()).toString().toUpperCase();
  }
  Object.defineProperty(Http$CustomMethod.prototype, 'name', {
    get: function () {
      return this.nameUC;
    }
  });
  Http$CustomMethod.prototype.toString = function () {
    return this.nameUC;
  };
  Http$CustomMethod.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CustomMethod',
    interfaces: [Http$Method]
  };
  Http$CustomMethod.prototype.component1 = function () {
    return this._name;
  };
  Http$CustomMethod.prototype.copy_61zpoe$ = function (_name) {
    return new Http$CustomMethod(_name === void 0 ? this._name : _name);
  };
  Http$CustomMethod.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this._name) | 0;
    return result;
  };
  Http$CustomMethod.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this._name, other._name))));
  };
  function Http$HttpException(statusCode, msg, statusText, headers) {
    Http$HttpException$Companion_getInstance();
    var tmp$;
    if (msg === void 0)
      msg = 'Error' + statusCode;
    if (statusText === void 0)
      statusText = (tmp$ = HttpStatusMessage_getInstance().CODES.get_11rb$(statusCode)) != null ? tmp$ : 'Error' + statusCode;
    if (headers === void 0)
      headers = Http$Http$Headers_init([]);
    IOException.call(this, statusCode.toString() + ' ' + statusText + ' - ' + msg);
    this.statusCode = statusCode;
    this.msg = msg;
    this.statusText = statusText;
    this.headers = headers;
    this.name = 'Http$HttpException';
  }
  function Http$HttpException$Companion() {
    Http$HttpException$Companion_instance = this;
  }
  Http$HttpException$Companion.prototype.unauthorizedBasic_puj7f4$ = function (realm, msg) {
    if (realm === void 0)
      realm = 'Realm';
    if (msg === void 0)
      msg = 'Unauthorized';
    throw new Http$HttpException(401, msg, void 0, Http$Http$Headers_init([to('WWW-Authenticate', 'Basic realm=' + '"' + realm + '"')]));
  };
  Http$HttpException$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Http$HttpException$Companion_instance = null;
  function Http$HttpException$Companion_getInstance() {
    if (Http$HttpException$Companion_instance === null) {
      new Http$HttpException$Companion();
    }
    return Http$HttpException$Companion_instance;
  }
  Http$HttpException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpException',
    interfaces: [IOException]
  };
  function Http$Auth(user, pass, digest) {
    Http$Auth$Companion_getInstance();
    this.user = user;
    this.pass = pass;
    this.digest = digest;
  }
  function Http$Auth$Companion() {
    Http$Auth$Companion_instance = this;
  }
  Http$Auth$Companion.prototype.parse_61zpoe$ = function (auth) {
    var parts = split(auth, Kotlin.charArrayOf(32), void 0, 2);
    if (equals_0(parts.get_za3lpa$(0), 'basic', true)) {
      var parts_0 = split(toString_0(fromBase64(parts.get_za3lpa$(1)), UTF8_getInstance()), Kotlin.charArrayOf(58), void 0, 2);
      return new Http$Auth(parts_0.get_za3lpa$(0), parts_0.get_za3lpa$(1), '');
    }
     else {
      if (parts.get_za3lpa$(0).length === 0) {
        return new Http$Auth('', '', '');
      }
       else {
        invalidOp('Just supported basic auth');
      }
    }
  };
  Http$Auth$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Http$Auth$Companion_instance = null;
  function Http$Auth$Companion_getInstance() {
    if (Http$Auth$Companion_instance === null) {
      new Http$Auth$Companion();
    }
    return Http$Auth$Companion_instance;
  }
  Http$Auth.prototype.validate_6hosri$ = function (expectedUser, expectedPass, realm) {
    if (realm === void 0)
      realm = 'Realm';
    if (equals(this.user, expectedUser) && equals(this.pass, expectedPass))
      return true;
    return false;
  };
  Http$Auth.prototype.checkBasic_1amyco$ = function (realm_0, check_0, continuation_0, suspended) {
    var instance = new Coroutine$checkBasic_1amyco$(this, realm_0, check_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$checkBasic_1amyco$($this, realm_0, check_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$realm = realm_0;
    this.local$check = check_0;
  }
  Coroutine$checkBasic_1amyco$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$checkBasic_1amyco$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$checkBasic_1amyco$.prototype.constructor = Coroutine$checkBasic_1amyco$;
  Coroutine$checkBasic_1amyco$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$realm === void 0)
              this.local$realm = 'Realm';
            if (!(this.$this.user.length === 0)) {
              this.state_0 = 2;
              this.result_0 = this.local$check(this.$this, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$tmp$ = true;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = !this.result_0;
            this.state_0 = 3;
            continue;
          case 3:
            if (this.local$tmp$)
              Http$HttpException$Companion_getInstance().unauthorizedBasic_puj7f4$('Domain', 'Invalid auth');
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Http$Auth.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Auth',
    interfaces: []
  };
  Http$Auth.prototype.component1 = function () {
    return this.user;
  };
  Http$Auth.prototype.component2 = function () {
    return this.pass;
  };
  Http$Auth.prototype.component3 = function () {
    return this.digest;
  };
  Http$Auth.prototype.copy_6hosri$ = function (user, pass, digest) {
    return new Http$Auth(user === void 0 ? this.user : user, pass === void 0 ? this.pass : pass, digest === void 0 ? this.digest : digest);
  };
  Http$Auth.prototype.toString = function () {
    return 'Auth(user=' + Kotlin.toString(this.user) + (', pass=' + Kotlin.toString(this.pass)) + (', digest=' + Kotlin.toString(this.digest)) + ')';
  };
  Http$Auth.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.user) | 0;
    result = result * 31 + Kotlin.hashCode(this.pass) | 0;
    result = result * 31 + Kotlin.hashCode(this.digest) | 0;
    return result;
  };
  Http$Auth.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.user, other.user) && Kotlin.equals(this.pass, other.pass) && Kotlin.equals(this.digest, other.digest)))));
  };
  function Http$Request(uri, headers) {
    this.uri = uri;
    this.headers = headers;
    this.parts_jrdksm$_0 = lazy(Http$Request$parts$lambda(this));
    this.path_ufa8h7$_0 = lazy(Http$Request$path$lambda(this));
    this.queryString_69y35t$_0 = lazy(Http$Request$queryString$lambda(this));
    this.getParams_q1kxia$_0 = lazy(Http$Request$getParams$lambda(this));
    this.absoluteURI_58azy3$_0 = lazy(Http$Request$absoluteURI$lambda(this));
  }
  Object.defineProperty(Http$Request.prototype, 'parts_0', {
    get: function () {
      return this.parts_jrdksm$_0.value;
    }
  });
  Object.defineProperty(Http$Request.prototype, 'path', {
    get: function () {
      return this.path_ufa8h7$_0.value;
    }
  });
  Object.defineProperty(Http$Request.prototype, 'queryString', {
    get: function () {
      return this.queryString_69y35t$_0.value;
    }
  });
  Object.defineProperty(Http$Request.prototype, 'getParams', {
    get: function () {
      return this.getParams_q1kxia$_0.value;
    }
  });
  Object.defineProperty(Http$Request.prototype, 'absoluteURI', {
    get: function () {
      return this.absoluteURI_58azy3$_0.value;
    }
  });
  function Http$Request$parts$lambda(this$Request) {
    return function () {
      return split(this$Request.uri, Kotlin.charArrayOf(63), void 0, 2);
    };
  }
  function Http$Request$path$lambda(this$Request) {
    return function () {
      return this$Request.parts_0.get_za3lpa$(0);
    };
  }
  function Http$Request$queryString$lambda(this$Request) {
    return function () {
      var $receiver = this$Request.parts_0;
      return 1 >= 0 && 1 <= get_lastIndex_0($receiver) ? $receiver.get_za3lpa$(1) : '';
    };
  }
  function Http$Request$getParams$lambda(this$Request) {
    return function () {
      return QueryString_getInstance().decode_6bul2c$(this$Request.queryString);
    };
  }
  function Http$Request$absoluteURI$lambda(this$Request) {
    return function () {
      return this$Request.uri;
    };
  }
  Http$Request.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Request',
    interfaces: []
  };
  function Http$Response() {
    this.headers = ArrayList_init();
  }
  Http$Response.prototype.header_puj7f4$ = function (key, value) {
    var $receiver = this.headers;
    var element = to(key, value);
    $receiver.add_11rb$(element);
  };
  Http$Response.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Response',
    interfaces: []
  };
  function Http$Headers(items) {
    Http$Headers$Companion_getInstance();
    this.items = items;
  }
  Http$Headers.prototype.iterator = function () {
    return this.items.iterator();
  };
  Http$Headers.prototype.get_61zpoe$ = function (key) {
    return this.getFirst_61zpoe$(key);
  };
  Http$Headers.prototype.getAll_61zpoe$ = function (key) {
    var $receiver = this.items;
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (equals_0(element.first, key, true))
        destination.add_11rb$(element);
    }
    var destination_0 = ArrayList_init_1(collectionSizeOrDefault(destination, 10));
    var tmp$_0;
    tmp$_0 = destination.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination_0.add_11rb$(item.second);
    }
    return destination_0;
  };
  Http$Headers.prototype.getFirst_61zpoe$ = function (key) {
    var tmp$;
    var $receiver = this.items;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (equals_0(element.first, key, true)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return (tmp$ = firstOrNull$result) != null ? tmp$.second : null;
  };
  function Http$Headers$toListGrouped$lambda(it) {
    return it.first.toLowerCase();
  }
  Http$Headers.prototype.toListGrouped = function () {
    var $receiver = this.items;
    var destination = LinkedHashMap_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var key = element.first.toLowerCase();
      var tmp$_0;
      var value = destination.get_11rb$(key);
      if (value == null) {
        var answer = ArrayList_init();
        destination.put_xwzc9p$(key, answer);
        tmp$_0 = answer;
      }
       else {
        tmp$_0 = value;
      }
      var list = tmp$_0;
      list.add_11rb$(element);
    }
    var destination_0 = ArrayList_init_1(destination.size);
    var tmp$_1;
    tmp$_1 = destination.entries.iterator();
    while (tmp$_1.hasNext()) {
      var item = tmp$_1.next();
      var tmp$_2 = destination_0.add_11rb$;
      var tmp$_3 = first(item.value).first;
      var $receiver_0 = item.value;
      var destination_1 = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_4;
      tmp$_4 = $receiver_0.iterator();
      while (tmp$_4.hasNext()) {
        var item_0 = tmp$_4.next();
        destination_1.add_11rb$(item_0.second);
      }
      tmp$_2.call(destination_0, to(tmp$_3, destination_1));
    }
    return sortedBy2(destination_0, Http$Headers$toListGrouped$lambda);
  };
  Http$Headers.prototype.withAppendedHeaders_3efbss$ = function (newHeaders) {
    return new Http$Headers(plus_1(this.items, toList(newHeaders)));
  };
  Http$Headers.prototype.withReplaceHeaders_3efbss$ = function (newHeaders) {
    var destination = ArrayList_init_1(collectionSizeOrDefault(newHeaders, 10));
    var tmp$;
    tmp$ = newHeaders.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(item.first.toLowerCase());
    }
    var replaceKeys = toSet(destination);
    var $receiver = this.items;
    var destination_0 = ArrayList_init();
    var tmp$_0;
    tmp$_0 = $receiver.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      if (!replaceKeys.contains_11rb$(element.first.toLowerCase()))
        destination_0.add_11rb$(element);
    }
    return new Http$Headers(plus_1(destination_0, toList(newHeaders)));
  };
  Http$Headers.prototype.withAppendedHeaders_9ih0sy$ = function (newHeaders) {
    return this.withAppendedHeaders_3efbss$(toList_0(newHeaders));
  };
  Http$Headers.prototype.withReplaceHeaders_9ih0sy$ = function (newHeaders) {
    return this.withReplaceHeaders_3efbss$(toList_0(newHeaders));
  };
  Http$Headers.prototype.containsAll_5dayij$ = function (other) {
    var $receiver = other.items;
    var all$result;
    all$break: do {
      var tmp$;
      if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
        all$result = true;
        break all$break;
      }
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (!contains_0(this, element)) {
          all$result = false;
          break all$break;
        }
      }
      all$result = true;
    }
     while (false);
    return all$result;
  };
  Http$Headers.prototype.plus_5dayij$ = function (that) {
    return this.withAppendedHeaders_3efbss$(plus_1(this.items, that.items));
  };
  Http$Headers.prototype.toString = function () {
    return 'Headers(' + joinToString(this.toListGrouped(), ', ') + ')';
  };
  function Http$Headers$Companion() {
    Http$Headers$Companion_instance = this;
  }
  Http$Headers$Companion.prototype.fromListMap_wd7g4x$ = function (map) {
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = map.entries.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var tmp$_0;
      if (element.key == null) {
        tmp$_0 = emptyList();
      }
       else {
        var $receiver = element.value;
        var destination_0 = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
        var tmp$_1;
        tmp$_1 = $receiver.iterator();
        while (tmp$_1.hasNext()) {
          var item = tmp$_1.next();
          destination_0.add_11rb$(to(ensureNotNull(element.key), item));
        }
        tmp$_0 = destination_0;
      }
      var list = tmp$_0;
      addAll(destination, list);
    }
    return new Http$Headers(destination);
  };
  Http$Headers$Companion.prototype.parse_pdl1vj$ = function (str) {
    if (str == null)
      return Http$Http$Headers_init([]);
    var $receiver = split_0(str, ['\n']);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      var tmp$_0 = destination.add_11rb$;
      var tmp$_1;
      var parts = split(trim_0(Kotlin.isCharSequence(tmp$_1 = item) ? tmp$_1 : throwCCE()).toString(), Kotlin.charArrayOf(58), void 0, 2);
      var tmp$_2;
      if (parts.size >= 2) {
        var $receiver_0 = parts.get_za3lpa$(0);
        var tmp$_3;
        var tmp$_4 = trim_0(Kotlin.isCharSequence(tmp$_3 = $receiver_0) ? tmp$_3 : throwCCE()).toString();
        var $receiver_1 = parts.get_za3lpa$(1);
        var tmp$_5;
        tmp$_2 = to(tmp$_4, trim_0(Kotlin.isCharSequence(tmp$_5 = $receiver_1) ? tmp$_5 : throwCCE()).toString());
      }
       else
        tmp$_2 = null;
      tmp$_0.call(destination, tmp$_2);
    }
    return new Http$Headers(filterNotNull(destination));
  };
  Http$Headers$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Http$Headers$Companion_instance = null;
  function Http$Headers$Companion_getInstance() {
    if (Http$Headers$Companion_instance === null) {
      new Http$Headers$Companion();
    }
    return Http$Headers$Companion_instance;
  }
  Http$Headers.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Headers',
    interfaces: [Iterable]
  };
  function Http$Http$Headers_init(items, $this) {
    $this = $this || Object.create(Http$Headers.prototype);
    Http$Headers.call($this, toList_0(items));
    return $this;
  }
  function Http$Http$Headers_init_0(map, $this) {
    $this = $this || Object.create(Http$Headers.prototype);
    var destination = ArrayList_init_1(map.size);
    var tmp$;
    tmp$ = map.entries.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(item.key, item.value));
    }
    Http$Headers.call($this, destination);
    return $this;
  }
  function Http$Http$Headers_init_1(str, $this) {
    $this = $this || Object.create(Http$Headers.prototype);
    Http$Headers.call($this, Http$Headers$Companion_getInstance().parse_pdl1vj$(str).items);
    return $this;
  }
  Http$Headers.prototype.component1 = function () {
    return this.items;
  };
  Http$Headers.prototype.copy_3efbss$ = function (items) {
    return new Http$Headers(items === void 0 ? this.items : items);
  };
  Http$Headers.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.items) | 0;
    return result;
  };
  Http$Headers.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.items, other.items))));
  };
  function Http$RedirectException(code, redirectUri) {
    if (code === void 0)
      code = 307;
    Http$HttpException.call(this, code, HttpStatusMessage_getInstance().invoke_za3lpa$(code));
    this.code = code;
    this.redirectUri = redirectUri;
    this.name = 'Http$RedirectException';
  }
  Http$RedirectException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RedirectException',
    interfaces: [Http$HttpException]
  };
  Http$RedirectException.prototype.component1 = function () {
    return this.code;
  };
  Http$RedirectException.prototype.component2 = function () {
    return this.redirectUri;
  };
  Http$RedirectException.prototype.copy_19mbxw$ = function (code, redirectUri) {
    return new Http$RedirectException(code === void 0 ? this.code : code, redirectUri === void 0 ? this.redirectUri : redirectUri);
  };
  Http$RedirectException.prototype.toString = function () {
    return 'RedirectException(code=' + Kotlin.toString(this.code) + (', redirectUri=' + Kotlin.toString(this.redirectUri)) + ')';
  };
  Http$RedirectException.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.code) | 0;
    result = result * 31 + Kotlin.hashCode(this.redirectUri) | 0;
    return result;
  };
  Http$RedirectException.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.code, other.code) && Kotlin.equals(this.redirectUri, other.redirectUri)))));
  };
  function Http$Companion() {
    Http$Companion_instance = this;
  }
  Http$Companion.prototype.TemporalRedirect_61zpoe$ = function (uri) {
    return new Http$RedirectException(307, uri);
  };
  Http$Companion.prototype.PermanentRedirect_61zpoe$ = function (uri) {
    return new Http$RedirectException(301, uri);
  };
  Http$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Http$Companion_instance = null;
  function Http$Companion_getInstance() {
    if (Http$Companion_instance === null) {
      new Http$Companion();
    }
    return Http$Companion_instance;
  }
  Http.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Http',
    interfaces: []
  };
  function HttpClient() {
    HttpClient$Companion_getInstance();
    this.ignoreSslCertificates = false;
  }
  HttpClient.prototype.requestInternal_wintjk$ = function (method, url, headers, content, continuation, callback$default) {
    if (headers === void 0)
      headers = Http$Http$Headers_init([]);
    if (content === void 0)
      content = null;
    return callback$default ? callback$default(method, url, headers, content, continuation) : this.requestInternal_wintjk$$default(method, url, headers, content, continuation);
  };
  function HttpClient$Response(status, statusText, headers, content) {
    this.status = status;
    this.statusText = statusText;
    this.headers = headers;
    this.content = content;
    this.success = this.status < 400;
    this.responseCharset_pcy4sm$_0 = lazy(HttpClient$Response$responseCharset$lambda);
  }
  HttpClient$Response.prototype.readAllBytes = function (continuation_0, suspended) {
    var instance = new Coroutine$readAllBytes(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readAllBytes($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$readAllBytes.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAllBytes.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAllBytes.prototype.constructor = Coroutine$readAllBytes;
  Coroutine$readAllBytes.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readAll(this.$this.content, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var allContent = this.result_0;
            return allContent;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(HttpClient$Response.prototype, 'responseCharset', {
    get: function () {
      return this.responseCharset_pcy4sm$_0.value;
    }
  });
  HttpClient$Response.prototype.readAllString_qa9gbo$ = function (charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readAllString_qa9gbo$(this, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readAllString_qa9gbo$($this, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$charset = charset_0;
  }
  Coroutine$readAllString_qa9gbo$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAllString_qa9gbo$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAllString_qa9gbo$.prototype.constructor = Coroutine$readAllString_qa9gbo$;
  Coroutine$readAllString_qa9gbo$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = this.$this.responseCharset;
            this.state_0 = 2;
            this.result_0 = this.$this.readAllBytes(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var bytes = this.result_0;
            return toString_0(bytes, this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient$Response.prototype.checkErrors = function (continuation_0, suspended) {
    var instance = new Coroutine$checkErrors(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$checkErrors($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
  }
  Coroutine$checkErrors.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$checkErrors.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$checkErrors.prototype.constructor = Coroutine$checkErrors;
  Coroutine$checkErrors.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (!this.$this.success) {
              this.local$tmp$ = this.$this.status;
              this.state_0 = 2;
              this.result_0 = this.$this.readAllString_qa9gbo$(void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            throw new Http$HttpException(this.local$tmp$, this.result_0, this.$this.statusText);
          case 3:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient$Response.prototype.withStringResponse_6zdodq$ = function (str, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.copy_54vabp$(void 0, void 0, void 0, openAsync(toByteArray(str, charset)));
  };
  HttpClient$Response.prototype.toCompletedResponse_mh5how$ = function (content) {
    return new HttpClient$CompletedResponse(this.status, this.statusText, this.headers, content);
  };
  function HttpClient$Response$responseCharset$lambda() {
    return UTF8_getInstance();
  }
  HttpClient$Response.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Response',
    interfaces: []
  };
  HttpClient$Response.prototype.component1 = function () {
    return this.status;
  };
  HttpClient$Response.prototype.component2 = function () {
    return this.statusText;
  };
  HttpClient$Response.prototype.component3 = function () {
    return this.headers;
  };
  HttpClient$Response.prototype.component4 = function () {
    return this.content;
  };
  HttpClient$Response.prototype.copy_54vabp$ = function (status, statusText, headers, content) {
    return new HttpClient$Response(status === void 0 ? this.status : status, statusText === void 0 ? this.statusText : statusText, headers === void 0 ? this.headers : headers, content === void 0 ? this.content : content);
  };
  HttpClient$Response.prototype.toString = function () {
    return 'Response(status=' + Kotlin.toString(this.status) + (', statusText=' + Kotlin.toString(this.statusText)) + (', headers=' + Kotlin.toString(this.headers)) + (', content=' + Kotlin.toString(this.content)) + ')';
  };
  HttpClient$Response.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.status) | 0;
    result = result * 31 + Kotlin.hashCode(this.statusText) | 0;
    result = result * 31 + Kotlin.hashCode(this.headers) | 0;
    result = result * 31 + Kotlin.hashCode(this.content) | 0;
    return result;
  };
  HttpClient$Response.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.status, other.status) && Kotlin.equals(this.statusText, other.statusText) && Kotlin.equals(this.headers, other.headers) && Kotlin.equals(this.content, other.content)))));
  };
  function HttpClient$CompletedResponse(status, statusText, headers, content) {
    this.status = status;
    this.statusText = statusText;
    this.headers = headers;
    this.content = content;
    this.success = this.status < 400;
  }
  HttpClient$CompletedResponse.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CompletedResponse',
    interfaces: []
  };
  HttpClient$CompletedResponse.prototype.component1 = function () {
    return this.status;
  };
  HttpClient$CompletedResponse.prototype.component2 = function () {
    return this.statusText;
  };
  HttpClient$CompletedResponse.prototype.component3 = function () {
    return this.headers;
  };
  HttpClient$CompletedResponse.prototype.component4 = function () {
    return this.content;
  };
  HttpClient$CompletedResponse.prototype.copy_alsvp4$ = function (status, statusText, headers, content) {
    return new HttpClient$CompletedResponse(status === void 0 ? this.status : status, statusText === void 0 ? this.statusText : statusText, headers === void 0 ? this.headers : headers, content === void 0 ? this.content : content);
  };
  HttpClient$CompletedResponse.prototype.toString = function () {
    return 'CompletedResponse(status=' + Kotlin.toString(this.status) + (', statusText=' + Kotlin.toString(this.statusText)) + (', headers=' + Kotlin.toString(this.headers)) + (', content=' + Kotlin.toString(this.content)) + ')';
  };
  HttpClient$CompletedResponse.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.status) | 0;
    result = result * 31 + Kotlin.hashCode(this.statusText) | 0;
    result = result * 31 + Kotlin.hashCode(this.headers) | 0;
    result = result * 31 + Kotlin.hashCode(this.content) | 0;
    return result;
  };
  HttpClient$CompletedResponse.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.status, other.status) && Kotlin.equals(this.statusText, other.statusText) && Kotlin.equals(this.headers, other.headers) && Kotlin.equals(this.content, other.content)))));
  };
  function HttpClient$RequestConfig(followRedirects, throwErrors, maxRedirects, referer, simulateBrowser) {
    if (followRedirects === void 0)
      followRedirects = true;
    if (throwErrors === void 0)
      throwErrors = false;
    if (maxRedirects === void 0)
      maxRedirects = 10;
    if (referer === void 0)
      referer = null;
    if (simulateBrowser === void 0)
      simulateBrowser = false;
    this.followRedirects = followRedirects;
    this.throwErrors = throwErrors;
    this.maxRedirects = maxRedirects;
    this.referer = referer;
    this.simulateBrowser = simulateBrowser;
  }
  HttpClient$RequestConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RequestConfig',
    interfaces: []
  };
  HttpClient$RequestConfig.prototype.component1 = function () {
    return this.followRedirects;
  };
  HttpClient$RequestConfig.prototype.component2 = function () {
    return this.throwErrors;
  };
  HttpClient$RequestConfig.prototype.component3 = function () {
    return this.maxRedirects;
  };
  HttpClient$RequestConfig.prototype.component4 = function () {
    return this.referer;
  };
  HttpClient$RequestConfig.prototype.component5 = function () {
    return this.simulateBrowser;
  };
  HttpClient$RequestConfig.prototype.copy_nslxbw$ = function (followRedirects, throwErrors, maxRedirects, referer, simulateBrowser) {
    return new HttpClient$RequestConfig(followRedirects === void 0 ? this.followRedirects : followRedirects, throwErrors === void 0 ? this.throwErrors : throwErrors, maxRedirects === void 0 ? this.maxRedirects : maxRedirects, referer === void 0 ? this.referer : referer, simulateBrowser === void 0 ? this.simulateBrowser : simulateBrowser);
  };
  HttpClient$RequestConfig.prototype.toString = function () {
    return 'RequestConfig(followRedirects=' + Kotlin.toString(this.followRedirects) + (', throwErrors=' + Kotlin.toString(this.throwErrors)) + (', maxRedirects=' + Kotlin.toString(this.maxRedirects)) + (', referer=' + Kotlin.toString(this.referer)) + (', simulateBrowser=' + Kotlin.toString(this.simulateBrowser)) + ')';
  };
  HttpClient$RequestConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.followRedirects) | 0;
    result = result * 31 + Kotlin.hashCode(this.throwErrors) | 0;
    result = result * 31 + Kotlin.hashCode(this.maxRedirects) | 0;
    result = result * 31 + Kotlin.hashCode(this.referer) | 0;
    result = result * 31 + Kotlin.hashCode(this.simulateBrowser) | 0;
    return result;
  };
  HttpClient$RequestConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.followRedirects, other.followRedirects) && Kotlin.equals(this.throwErrors, other.throwErrors) && Kotlin.equals(this.maxRedirects, other.maxRedirects) && Kotlin.equals(this.referer, other.referer) && Kotlin.equals(this.simulateBrowser, other.simulateBrowser)))));
  };
  HttpClient.prototype.mergeUrls_h5cdg$_0 = function (base, append) {
    return URI$Companion_getInstance().resolve_puj7f4$(base, append);
  };
  HttpClient.prototype.request_v6tn8p$ = function (method_0, url_0, headers_0, content_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$request_v6tn8p$(this, method_0, url_0, headers_0, content_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$request_v6tn8p$($this, method_0, url_0, headers_0, content_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$response = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
    this.local$config = config_0;
  }
  Coroutine$request_v6tn8p$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$request_v6tn8p$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$request_v6tn8p$.prototype.constructor = Coroutine$request_v6tn8p$;
  Coroutine$request_v6tn8p$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$headers === void 0)
              this.local$headers = Http$Http$Headers_init([]);
            if (this.local$content === void 0)
              this.local$content = null;
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            var tmp$;
            if (this.local$content != null) {
              this.state_0 = 2;
              this.result_0 = this.local$content.getLength(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            var contentLength = (tmp$ = this.result_0) != null ? tmp$ : L0;
            var actualHeaders = this.local$headers;
            var tmp$_0 = this.local$content != null;
            if (tmp$_0) {
              var any$result;
              any$break: do {
                var tmp$_1;
                if (Kotlin.isType(this.local$headers, Collection) && this.local$headers.isEmpty()) {
                  any$result = false;
                  break any$break;
                }
                tmp$_1 = this.local$headers.iterator();
                while (tmp$_1.hasNext()) {
                  var element = tmp$_1.next();
                  if (equals_0(element.first, 'content-length', true)) {
                    any$result = true;
                    break any$break;
                  }
                }
                any$result = false;
              }
               while (false);
              tmp$_0 = !any$result;
            }

            if (tmp$_0) {
              actualHeaders = actualHeaders.withReplaceHeaders_9ih0sy$([to('content-length', contentLength.toString())]);
            }

            if (this.local$config.simulateBrowser) {
              if (actualHeaders.get_61zpoe$('user-agent') == null) {
                actualHeaders = actualHeaders.withReplaceHeaders_9ih0sy$([to('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'), to('user-agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36')]);
              }
            }

            this.state_0 = 4;
            this.result_0 = this.$this.requestInternal_wintjk$(this.local$method, this.local$url, actualHeaders, this.local$content, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$$receiver = this.result_0;
            if (this.local$config.throwErrors) {
              this.state_0 = 5;
              this.result_0 = this.local$$receiver.checkErrors(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.local$response = this.local$$receiver;
            if (this.local$config.followRedirects && this.local$config.maxRedirects >= 0) {
              var redirectLocation = this.local$response.headers.get_61zpoe$('location');
              if (redirectLocation != null) {
                this.state_0 = 7;
                this.result_0 = this.$this.request_v6tn8p$(this.local$method, this.$this.mergeUrls_h5cdg$_0(this.local$url, redirectLocation), this.local$headers.withReplaceHeaders_9ih0sy$([to('Referer', this.local$url)]), this.local$content, this.local$config.copy_nslxbw$(void 0, void 0, this.local$config.maxRedirects - 1 | 0), this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 8;
                continue;
              }
            }
             else {
              this.state_0 = 9;
              continue;
            }

          case 7:
            return this.result_0;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            return this.local$response;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient.prototype.requestAsString_v6tn8p$ = function (method_0, url_0, headers_0, content_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$requestAsString_v6tn8p$(this, method_0, url_0, headers_0, content_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$requestAsString_v6tn8p$($this, method_0, url_0, headers_0, content_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$res = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
    this.local$config = config_0;
  }
  Coroutine$requestAsString_v6tn8p$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$requestAsString_v6tn8p$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$requestAsString_v6tn8p$.prototype.constructor = Coroutine$requestAsString_v6tn8p$;
  Coroutine$requestAsString_v6tn8p$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$headers === void 0)
              this.local$headers = Http$Http$Headers_init([]);
            if (this.local$content === void 0)
              this.local$content = null;
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            this.state_0 = 2;
            this.result_0 = this.$this.request_v6tn8p$(this.local$method, this.local$url, this.local$headers, this.local$content, this.local$config, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$res = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$res.readAllString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$res.toCompletedResponse_mh5how$(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient.prototype.requestAsBytes_v6tn8p$ = function (method_0, url_0, headers_0, content_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$requestAsBytes_v6tn8p$(this, method_0, url_0, headers_0, content_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$requestAsBytes_v6tn8p$($this, method_0, url_0, headers_0, content_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$res = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
    this.local$config = config_0;
  }
  Coroutine$requestAsBytes_v6tn8p$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$requestAsBytes_v6tn8p$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$requestAsBytes_v6tn8p$.prototype.constructor = Coroutine$requestAsBytes_v6tn8p$;
  Coroutine$requestAsBytes_v6tn8p$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$headers === void 0)
              this.local$headers = Http$Http$Headers_init([]);
            if (this.local$content === void 0)
              this.local$content = null;
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            this.state_0 = 2;
            this.result_0 = this.$this.request_v6tn8p$(this.local$method, this.local$url, this.local$headers, this.local$content, this.local$config, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$res = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$res.readAllBytes(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$res.toCompletedResponse_mh5how$(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient.prototype.readBytes_2y0c3t$ = function (url_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$readBytes_2y0c3t$(this, url_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readBytes_2y0c3t$($this, url_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$url = url_0;
    this.local$config = config_0;
  }
  Coroutine$readBytes_2y0c3t$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBytes_2y0c3t$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBytes_2y0c3t$.prototype.constructor = Coroutine$readBytes_2y0c3t$;
  Coroutine$readBytes_2y0c3t$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            this.state_0 = 2;
            this.result_0 = this.$this.requestAsBytes_v6tn8p$(Http$Method$Companion_getInstance().GET, this.local$url, void 0, void 0, this.local$config.copy_nslxbw$(void 0, true), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient.prototype.readString_2y0c3t$ = function (url_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$readString_2y0c3t$(this, url_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readString_2y0c3t$($this, url_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$url = url_0;
    this.local$config = config_0;
  }
  Coroutine$readString_2y0c3t$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readString_2y0c3t$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readString_2y0c3t$.prototype.constructor = Coroutine$readString_2y0c3t$;
  Coroutine$readString_2y0c3t$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            this.state_0 = 2;
            this.result_0 = this.$this.requestAsString_v6tn8p$(Http$Method$Companion_getInstance().GET, this.local$url, void 0, void 0, this.local$config.copy_nslxbw$(void 0, true), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.content;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClient.prototype.readJson_2y0c3t$ = function (url_0, config_0, continuation_0, suspended) {
    var instance = new Coroutine$readJson_2y0c3t$(this, url_0, config_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readJson_2y0c3t$($this, url_0, config_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$url = url_0;
    this.local$config = config_0;
  }
  Coroutine$readJson_2y0c3t$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readJson_2y0c3t$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readJson_2y0c3t$.prototype.constructor = Coroutine$readJson_2y0c3t$;
  Coroutine$readJson_2y0c3t$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$config === void 0)
              this.local$config = new HttpClient$RequestConfig();
            this.local$tmp$ = Json_getInstance();
            this.state_0 = 2;
            this.result_0 = this.$this.requestAsString_v6tn8p$(Http$Method$Companion_getInstance().GET, this.local$url, void 0, void 0, this.local$config.copy_nslxbw$(void 0, true), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$tmp$.decode_61zpoe$(this.result_0.content);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpClient$Companion() {
    HttpClient$Companion_instance = this;
  }
  HttpClient$Companion.prototype.invoke = function () {
    return get_defaultHttpFactory().createClient();
  };
  HttpClient$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HttpClient$Companion_instance = null;
  function HttpClient$Companion_getInstance() {
    if (HttpClient$Companion_instance === null) {
      new HttpClient$Companion();
    }
    return HttpClient$Companion_instance;
  }
  HttpClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpClient',
    interfaces: []
  };
  function DelayedHttpClient(delayMs, parent) {
    HttpClient.call(this);
    this.delayMs = delayMs;
    this.parent = parent;
    this.queue_w2hal5$_0 = new AsyncThread();
  }
  function DelayedHttpClient$requestInternal$lambda(this$DelayedHttpClient_0, closure$url_0, closure$method_0, closure$headers_0, closure$content_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$DelayedHttpClient$requestInternal$lambda(this$DelayedHttpClient_0, closure$url_0, closure$method_0, closure$headers_0, closure$content_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$DelayedHttpClient$requestInternal$lambda(this$DelayedHttpClient_0, closure$url_0, closure$method_0, closure$headers_0, closure$content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$DelayedHttpClient = this$DelayedHttpClient_0;
    this.local$closure$url = closure$url_0;
    this.local$closure$method = closure$method_0;
    this.local$closure$headers = closure$headers_0;
    this.local$closure$content = closure$content_0;
  }
  Coroutine$DelayedHttpClient$requestInternal$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DelayedHttpClient$requestInternal$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DelayedHttpClient$requestInternal$lambda.prototype.constructor = Coroutine$DelayedHttpClient$requestInternal$lambda;
  Coroutine$DelayedHttpClient$requestInternal$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            println('Waiting ' + this.local$this$DelayedHttpClient.delayMs + ' milliseconds for ' + this.local$closure$url + '...');
            this.state_0 = 2;
            this.result_0 = delay(this.local$this$DelayedHttpClient.delayMs, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$this$DelayedHttpClient.parent.request_v6tn8p$(this.local$closure$method, this.local$closure$url, this.local$closure$headers, this.local$closure$content, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DelayedHttpClient.prototype.requestInternal_wintjk$$default = function (method, url, headers, content, continuation) {
    return this.queue_w2hal5$_0.invoke_lnyleu$(DelayedHttpClient$requestInternal$lambda(this, url, method, headers, content), continuation);
  };
  DelayedHttpClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DelayedHttpClient',
    interfaces: [HttpClient]
  };
  function delayed($receiver, ms) {
    return new DelayedHttpClient(ms, $receiver);
  }
  function FakeHttpClient(redirect) {
    if (redirect === void 0)
      redirect = null;
    HttpClient.call(this);
    this.redirect = redirect;
    this.log = ArrayList_init();
    this.defaultResponse = new HttpClient$Response(200, 'OK', Http$Http$Headers_init([]), openAsync(toByteArray('LogHttpClient.response', UTF8_getInstance())));
    this.rules_0 = LinkedHashMap_init();
  }
  FakeHttpClient.prototype.requestInternal_wintjk$$default = function (method_0, url_0, headers_0, content_0, continuation_0, suspended) {
    var instance = new Coroutine$requestInternal_wintjk$$default(this, method_0, url_0, headers_0, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$requestInternal_wintjk$$default($this, method_0, url_0, headers_0, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$requestNumber = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
  }
  Coroutine$requestInternal_wintjk$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$requestInternal_wintjk$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$requestInternal_wintjk$$default.prototype.constructor = Coroutine$requestInternal_wintjk$$default;
  Coroutine$requestInternal_wintjk$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
            if (this.local$content != null) {
              this.state_0 = 2;
              this.result_0 = slice_2(this.local$content, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            if ((tmp$ = this.result_0) != null) {
              this.state_0 = 4;
              this.result_0 = readAll(tmp$, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 5;
              continue;
            }

          case 4:
            this.state_0 = 5;
            continue;
          case 5:
            var contentString = (tmp$_0 = this.result_0) != null ? toString_0(tmp$_0, UTF8_getInstance()) : null;
            this.local$requestNumber = this.$this.log.size;
            var $receiver = this.$this.log;
            var element = this.local$method.toString() + ', ' + this.local$url + ', ' + this.local$headers + ', ' + toString(contentString);
            $receiver.add_11rb$(element);
            if (this.$this.redirect != null) {
              this.state_0 = 6;
              this.result_0 = this.$this.redirect.request_v6tn8p$(this.local$method, this.local$url, this.local$headers, this.local$content, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 7;
              continue;
            }

          case 6:
            return this.result_0;
          case 7:
            if (this.local$content != null) {
              this.state_0 = 8;
              this.result_0 = readAll(this.local$content, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 9;
              continue;
            }

          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            var readedContent = this.result_0;
            var $receiver_0 = reversed(this.$this.rules_0.entries);
            var destination = ArrayList_init();
            var tmp$_4;
            tmp$_4 = $receiver_0.iterator();
            while (tmp$_4.hasNext()) {
              var element_0 = tmp$_4.next();
              if (element_0.key.matches_wdsubw$(this.local$method, this.local$url, this.local$headers, readedContent))
                destination.add_11rb$(element_0);
            }

            var matchedRules = destination;
            var rule = firstOrNull(matchedRules);
            return (tmp$_3 = (tmp$_2 = (tmp$_1 = rule != null ? rule.value : null) != null ? getCyclic(tmp$_1, this.local$requestNumber) : null) != null ? tmp$_2.buildResponse_8be2vx$() : null) != null ? tmp$_3 : this.$this.defaultResponse;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function FakeHttpClient$ResponseBuilder() {
    this.responseCode_0 = 200;
    this.responseContent_0 = toByteArray('LogHttpClient.response', UTF8_getInstance());
    this.responseHeaders_0 = Http$Http$Headers_init([]);
  }
  FakeHttpClient$ResponseBuilder.prototype.response_hz75og$ = function (content, code, charset) {
    if (code === void 0)
      code = 200;
    if (charset === void 0)
      charset = UTF8_getInstance();
    this.responseCode_0 = code;
    this.responseContent_0 = toByteArray(content, charset);
  };
  FakeHttpClient$ResponseBuilder.prototype.response_ir89t6$ = function (content, code) {
    if (code === void 0)
      code = 200;
    this.responseCode_0 = code;
    this.responseContent_0 = content;
  };
  FakeHttpClient$ResponseBuilder.prototype.redirect_bm4lxs$ = function (url, code) {
    if (code === void 0)
      code = 302;
    this.responseCode_0 = code;
    this.responseHeaders_0 = this.responseHeaders_0.plus_5dayij$(Http$Http$Headers_init([to('Location', url)]));
  };
  FakeHttpClient$ResponseBuilder.prototype.ok_61zpoe$ = function (content) {
    this.response_hz75og$(content, 200);
  };
  FakeHttpClient$ResponseBuilder.prototype.notFound_61zpoe$ = function (content) {
    if (content === void 0)
      content = '404 - Not Found';
    this.response_hz75og$(content, 404);
  };
  FakeHttpClient$ResponseBuilder.prototype.internalServerError_61zpoe$ = function (content) {
    if (content === void 0)
      content = '500 - Internal Server Error';
    this.response_hz75og$(content, 500);
  };
  FakeHttpClient$ResponseBuilder.prototype.buildResponse_8be2vx$ = function () {
    return new HttpClient$Response(this.responseCode_0, HttpStatusMessage_getInstance().invoke_za3lpa$(this.responseCode_0), this.responseHeaders_0, openAsync(this.responseContent_0));
  };
  FakeHttpClient$ResponseBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ResponseBuilder',
    interfaces: []
  };
  function FakeHttpClient$Rule(method, url, headers) {
    if (url === void 0)
      url = null;
    if (headers === void 0)
      headers = null;
    this.method = method;
    this.url = url;
    this.headers = headers;
  }
  FakeHttpClient$Rule.prototype.matches_wdsubw$ = function (method, url, headers, content) {
    if (this.method != null && !equals(this.method, method))
      return false;
    if (this.url != null && !equals(this.url, url))
      return false;
    if (this.headers != null && !headers.containsAll_5dayij$(this.headers))
      return false;
    return true;
  };
  FakeHttpClient$Rule.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Rule',
    interfaces: []
  };
  FakeHttpClient$Rule.prototype.component1 = function () {
    return this.method;
  };
  FakeHttpClient$Rule.prototype.component2 = function () {
    return this.url;
  };
  FakeHttpClient$Rule.prototype.component3 = function () {
    return this.headers;
  };
  FakeHttpClient$Rule.prototype.copy_v43kw2$ = function (method, url, headers) {
    return new FakeHttpClient$Rule(method === void 0 ? this.method : method, url === void 0 ? this.url : url, headers === void 0 ? this.headers : headers);
  };
  FakeHttpClient$Rule.prototype.toString = function () {
    return 'Rule(method=' + Kotlin.toString(this.method) + (', url=' + Kotlin.toString(this.url)) + (', headers=' + Kotlin.toString(this.headers)) + ')';
  };
  FakeHttpClient$Rule.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.method) | 0;
    result = result * 31 + Kotlin.hashCode(this.url) | 0;
    result = result * 31 + Kotlin.hashCode(this.headers) | 0;
    return result;
  };
  FakeHttpClient$Rule.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.method, other.method) && Kotlin.equals(this.url, other.url) && Kotlin.equals(this.headers, other.headers)))));
  };
  FakeHttpClient.prototype.onRequest_v43kw2$ = function (method, url, headers) {
    if (method === void 0)
      method = null;
    if (url === void 0)
      url = null;
    if (headers === void 0)
      headers = null;
    var $receiver = this.rules_0;
    var key = new FakeHttpClient$Rule(method, url, headers);
    var tmp$;
    var value = $receiver.get_11rb$(key);
    if (value == null) {
      var answer = ArrayList_init();
      $receiver.put_xwzc9p$(key, answer);
      tmp$ = answer;
    }
     else {
      tmp$ = value;
    }
    var responseBuilders = tmp$;
    var responseBuilder = new FakeHttpClient$ResponseBuilder();
    responseBuilders.add_11rb$(responseBuilder);
    return responseBuilder;
  };
  FakeHttpClient.prototype.getAndClearLog = function () {
    var $receiver = toList(this.log);
    this.log.clear();
    return $receiver;
  };
  FakeHttpClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FakeHttpClient',
    interfaces: [HttpClient]
  };
  function LogHttpClient() {
    return new FakeHttpClient();
  }
  function HttpStatusMessage() {
    HttpStatusMessage_instance = this;
    this.CODES = lmapOf([to(100, 'Continue'), to(101, 'Switching Protocols'), to(200, 'OK'), to(201, 'Created'), to(202, 'Accepted'), to(203, 'Non-Authoritative Information'), to(204, 'No Content'), to(205, 'Reset Content'), to(206, 'Partial Content'), to(300, 'Multiple Choices'), to(301, 'Moved Permanently'), to(302, 'Found'), to(303, 'See Other'), to(304, 'Not Modified'), to(305, 'Use Proxy'), to(307, 'Temporary Redirect'), to(400, 'Bad Request'), to(401, 'Unauthorized'), to(402, 'Payment Required'), to(403, 'Forbidden'), to(404, 'Not Found'), to(405, 'Method Not Allowed'), to(406, 'Not Acceptable'), to(407, 'Proxy Authentication Required'), to(408, 'Request Timeout'), to(409, 'Conflict'), to(410, 'Gone'), to(411, 'Length Required'), to(412, 'Precondition Failed'), to(413, 'Request Entity Too Large'), to(414, 'Request-URI Too Long'), to(415, 'Unsupported Media Type'), to(416, 'Requested Range Not Satisfiable'), to(417, 'Expectation Failed'), to(418, "I'm a teapot"), to(422, 'Unprocessable Entity (WebDAV - RFC 4918)'), to(423, 'Locked (WebDAV - RFC 4918)'), to(424, 'Failed Dependency (WebDAV) (RFC 4918)'), to(425, 'Unassigned'), to(426, 'Upgrade Required (RFC 7231)'), to(428, 'Precondition Required'), to(429, 'Too Many Requests'), to(431, 'Request Header Fileds Too Large)'), to(449, 'Error449'), to(451, 'Unavailable for Legal Reasons'), to(500, 'Internal Server Error'), to(501, 'Not Implemented'), to(502, 'Bad Gateway'), to(503, 'Service Unavailable'), to(504, 'Gateway Timeout'), to(505, 'HTTP Version Not Supported'), to(506, 'Variant Also Negotiates (RFC 2295)'), to(507, 'Insufficient Storage (WebDAV - RFC 4918)'), to(508, 'Loop Detected (WebDAV)'), to(509, 'Bandwidth Limit Exceeded'), to(510, 'Not Extended (RFC 2774)'), to(511, 'Network Authentication Required')]);
  }
  HttpStatusMessage.prototype.invoke_za3lpa$ = function (code) {
    var tmp$;
    return (tmp$ = this.CODES.get_11rb$(code)) != null ? tmp$ : 'Error' + code;
  };
  HttpStatusMessage.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'HttpStatusMessage',
    interfaces: []
  };
  var HttpStatusMessage_instance = null;
  function HttpStatusMessage_getInstance() {
    if (HttpStatusMessage_instance === null) {
      new HttpStatusMessage();
    }
    return HttpStatusMessage_instance;
  }
  function HttpStats() {
    HttpStats_instance = this;
    this.connections = NewAtomicLong(L0);
    this.disconnections = NewAtomicLong(L0);
  }
  HttpStats.prototype.toString = function () {
    return 'HttpStats(connections=' + this.connections + ', Disconnections=' + this.disconnections + ')';
  };
  HttpStats.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'HttpStats',
    interfaces: []
  };
  var HttpStats_instance = null;
  function HttpStats_getInstance() {
    if (HttpStats_instance === null) {
      new HttpStats();
    }
    return HttpStats_instance;
  }
  function HttpFactory() {
  }
  HttpFactory.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'HttpFactory',
    interfaces: []
  };
  function ProxiedHttpFactory(parent) {
    this.parent = parent;
    this.$delegate_k7ip1y$_0 = parent;
  }
  ProxiedHttpFactory.prototype.createClient = function () {
    return this.$delegate_k7ip1y$_0.createClient();
  };
  ProxiedHttpFactory.prototype.createServer = function () {
    return this.$delegate_k7ip1y$_0.createServer();
  };
  ProxiedHttpFactory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProxiedHttpFactory',
    interfaces: [HttpFactory]
  };
  function _defaultHttpFactory$lambda() {
    return new ProxiedHttpFactory(KorioNative_getInstance().httpFactory);
  }
  var _defaultHttpFactory;
  function get__defaultHttpFactory() {
    return _defaultHttpFactory.value;
  }
  function get_defaultHttpFactory() {
    return get__defaultHttpFactory();
  }
  function setDefaultHttpFactory(factory) {
    get__defaultHttpFactory().parent = factory;
  }
  function createClientEndpoint($receiver, endpoint_0) {
    return endpoint($receiver.createClient(), endpoint_0);
  }
  function createHttpClient() {
    return get_defaultHttpFactory().createClient();
  }
  function createHttpServer() {
    return get_defaultHttpFactory().createServer();
  }
  function createHttpClientEndpoint(endpoint_0) {
    return endpoint(createHttpClient(), endpoint_0);
  }
  function httpError(code, msg) {
    throw new Http$HttpException(code, msg);
  }
  function HttpClientEndpoint() {
  }
  HttpClientEndpoint.prototype.request_v6tn8p$ = function (method, path, headers, content, config, continuation, callback$default) {
    if (headers === void 0)
      headers = Http$Http$Headers_init([]);
    if (content === void 0)
      content = null;
    if (config === void 0)
      config = new HttpClient$RequestConfig();
    return callback$default ? callback$default(method, path, headers, content, config, continuation) : this.request_v6tn8p$$default(method, path, headers, content, config, continuation);
  };
  HttpClientEndpoint.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'HttpClientEndpoint',
    interfaces: []
  };
  function Request(method, path, headers, content) {
    Request$Companion_getInstance();
    this.method = method;
    this.path = path;
    this.headers = headers;
    this.content = content;
  }
  function Request$Companion() {
    Request$Companion_instance = this;
    this.FORMAT_REGEX = Regex_init('\\{\\w+\\}');
  }
  Request$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Request$Companion_instance = null;
  function Request$Companion_getInstance() {
    if (Request$Companion_instance === null) {
      new Request$Companion();
    }
    return Request$Companion_instance;
  }
  Request.prototype.format_61zpoe$ = function (format_0, continuation_0, suspended) {
    var instance = new Coroutine$format_61zpoe$(this, format_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$format_61zpoe$($this, format_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$format = format_0;
  }
  Coroutine$format_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$format_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$format_61zpoe$.prototype.constructor = Coroutine$format_61zpoe$;
  Coroutine$format_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$format === void 0)
              this.local$format = '{METHOD}:{PATH}:{CONTENT}';
            var tmp$, tmp$_0;
            if ((tmp$ = this.$this.content) != null) {
              this.state_0 = 2;
              this.result_0 = readAll(tmp$, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            var content = (tmp$_0 = this.result_0) != null ? toString_0(tmp$_0, UTF8_getInstance()) : null;
            var regex = Request$Companion_getInstance().FORMAT_REGEX;
            var replace_20wsma$result;
            replace_20wsma$break: do {
              var match = regex.find_905azu$(this.local$format);
              if (match == null) {
                replace_20wsma$result = this.local$format.toString();
                break replace_20wsma$break;
              }
              var lastStart = 0;
              var length = this.local$format.length;
              var sb = StringBuilder_init_0(length);
              loop_label: do {
                var foundMatch = ensureNotNull(match);
                sb.append_ezbsdh$(this.local$format, lastStart, foundMatch.range.start);
                var tmp$_1 = sb.append_gw00v9$;
                var transform$result;
                transform$break: do {
                  var name = foundMatch.groupValues.get_za3lpa$(0);
                  switch (name) {
                    case '{METHOD}':
                      transform$result = this.$this.method.toString();
                      break transform$break;
                    case '{PATH}':
                      transform$result = this.$this.path;
                      break transform$break;
                    case '{CONTENT}':
                      transform$result = toString(content);
                      break transform$break;
                    default:transform$result = name;
                      break transform$break;
                  }
                }
                 while (false);
                tmp$_1.call(sb, transform$result);
                lastStart = foundMatch.range.endInclusive + 1 | 0;
                match = foundMatch.next();
              }
               while (lastStart < length && match != null);
              if (lastStart < length) {
                sb.append_ezbsdh$(this.local$format, lastStart, length);
              }
              replace_20wsma$result = sb.toString();
            }
             while (false);
            return replace_20wsma$result;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Request.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Request',
    interfaces: []
  };
  Request.prototype.component1 = function () {
    return this.method;
  };
  Request.prototype.component2 = function () {
    return this.path;
  };
  Request.prototype.component3 = function () {
    return this.headers;
  };
  Request.prototype.component4 = function () {
    return this.content;
  };
  Request.prototype.copy_wintjk$ = function (method, path, headers, content) {
    return new Request(method === void 0 ? this.method : method, path === void 0 ? this.path : path, headers === void 0 ? this.headers : headers, content === void 0 ? this.content : content);
  };
  Request.prototype.toString = function () {
    return 'Request(method=' + Kotlin.toString(this.method) + (', path=' + Kotlin.toString(this.path)) + (', headers=' + Kotlin.toString(this.headers)) + (', content=' + Kotlin.toString(this.content)) + ')';
  };
  Request.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.method) | 0;
    result = result * 31 + Kotlin.hashCode(this.path) | 0;
    result = result * 31 + Kotlin.hashCode(this.headers) | 0;
    result = result * 31 + Kotlin.hashCode(this.content) | 0;
    return result;
  };
  Request.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.method, other.method) && Kotlin.equals(this.path, other.path) && Kotlin.equals(this.headers, other.headers) && Kotlin.equals(this.content, other.content)))));
  };
  function FakeHttpClientEndpoint(defaultMessage) {
    if (defaultMessage === void 0)
      defaultMessage = '{}';
    this.defaultMessage = defaultMessage;
    this.log_0 = ArrayList_init();
    this.responsePointer_0 = 0;
    this.responses_0 = ArrayList_init();
  }
  FakeHttpClientEndpoint.prototype.getResponse_0 = function (code, content) {
    var tmp$;
    return new HttpClient$Response(code, (tmp$ = HttpStatusMessage_getInstance().CODES.get_11rb$(code)) != null ? tmp$ : 'Code' + code, Http$Http$Headers_init([]), openAsync_0(content));
  };
  FakeHttpClientEndpoint.prototype.addResponse_19mbxw$ = function (code, content) {
    var $receiver = this.responses_0;
    var element = this.getResponse_0(code, content);
    $receiver.add_11rb$(element);
  };
  FakeHttpClientEndpoint.prototype.addOkResponse_61zpoe$ = function (content) {
    this.addResponse_19mbxw$(200, content);
  };
  FakeHttpClientEndpoint.prototype.addNotFoundResponse_61zpoe$ = function (content) {
    this.addResponse_19mbxw$(404, content);
  };
  function FakeHttpClientEndpoint$request$lambda(this$FakeHttpClientEndpoint) {
    return function (it) {
      return this$FakeHttpClientEndpoint.getResponse_0(200, this$FakeHttpClientEndpoint.defaultMessage);
    };
  }
  FakeHttpClientEndpoint.prototype.request_v6tn8p$$default = function (method, path, headers, content, config, continuation) {
    var tmp$, tmp$_0;
    var $receiver = this.log_0;
    var element = new Request(method, path, headers, content);
    $receiver.add_11rb$(element);
    if (this.responses_0.isEmpty())
      this.addOkResponse_61zpoe$(this.defaultMessage);
    tmp$_0 = this.responses_0;
    var index = (tmp$ = this.responsePointer_0, this.responsePointer_0 = tmp$ + 1 | 0, tmp$) % this.responses_0.size;
    return index >= 0 && index <= get_lastIndex_0(tmp$_0) ? tmp$_0.get_za3lpa$(index) : FakeHttpClientEndpoint$request$lambda(this)(index);
  };
  FakeHttpClientEndpoint.prototype.capture_b6n9uf$ = function (format_0, callback_0, continuation_0, suspended) {
    var instance = new Coroutine$capture_b6n9uf$(this, format_0, callback_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$capture_b6n9uf$($this, format_0, callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$start = void 0;
    this.local$destination = void 0;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$format = format_0;
    this.local$callback = callback_0;
  }
  Coroutine$capture_b6n9uf$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$capture_b6n9uf$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$capture_b6n9uf$.prototype.constructor = Coroutine$capture_b6n9uf$;
  Coroutine$capture_b6n9uf$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$format === void 0)
              this.local$format = '{METHOD}:{PATH}:{CONTENT}';
            this.local$start = this.$this.log_0.size;
            this.state_0 = 2;
            this.result_0 = this.local$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var end = this.$this.log_0.size;
            var $receiver = slice(this.$this.log_0, until(this.local$start, end));
            this.local$destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
            this.local$tmp$ = $receiver.iterator();
            this.state_0 = 3;
            continue;
          case 3:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 5;
              continue;
            }

            var item = this.local$tmp$.next();
            this.local$tmp$_0 = this.local$destination.add_11rb$;
            this.state_0 = 4;
            this.result_0 = item.format_61zpoe$(this.local$format, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$tmp$_0.call(this.local$destination, this.result_0);
            this.state_0 = 3;
            continue;
          case 5:
            return this.local$destination;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  FakeHttpClientEndpoint.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FakeHttpClientEndpoint',
    interfaces: [HttpClientEndpoint]
  };
  function endpoint$ObjectLiteral(closure$endpoint, closure$client) {
    this.closure$endpoint = closure$endpoint;
    this.closure$client = closure$client;
  }
  endpoint$ObjectLiteral.prototype.request_v6tn8p$$default = function (method, path, headers, content, config, continuation) {
    var resolvedUrl = URI$Companion_getInstance().resolve_puj7f4$(this.closure$endpoint, '/' + trimStart(path, Kotlin.charArrayOf(47))).toString();
    return this.closure$client.request_v6tn8p$(method, resolvedUrl, headers, content, config, continuation);
  };
  endpoint$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [HttpClientEndpoint]
  };
  function endpoint($receiver, endpoint) {
    var client = $receiver;
    return new endpoint$ObjectLiteral(endpoint, client);
  }
  var HttpDate;
  function HttpServer() {
    HttpServer$Companion_getInstance();
    this.requestConfig = new HttpServer$RequestConfig();
    this.actualPort_dj4hyl$_0 = 0;
  }
  function HttpServer$Companion() {
    HttpServer$Companion_instance = this;
  }
  HttpServer$Companion.prototype.invoke = function () {
    return get_defaultHttpFactory().createServer();
  };
  HttpServer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HttpServer$Companion_instance = null;
  function HttpServer$Companion_getInstance() {
    if (HttpServer$Companion_instance === null) {
      new HttpServer$Companion();
    }
    return HttpServer$Companion_instance;
  }
  function HttpServer$BaseRequest(uri, headers) {
    this.uri = uri;
    this.headers = headers;
    this.$delegate_2xdu1s$_0 = new Extra$Mixin();
    this.parts_ivoofc$_aszb59$_0 = lazy(HttpServer$BaseRequest$parts$lambda(this));
    this.path_ptae93$_0 = lazy(HttpServer$BaseRequest$path$lambda(this));
    this.queryString_jju9jl$_0 = lazy(HttpServer$BaseRequest$queryString$lambda(this));
    this.getParams_n9fo1g$_0 = lazy(HttpServer$BaseRequest$getParams$lambda(this));
    this.absoluteURI_v23cnh$_0 = lazy(HttpServer$BaseRequest$absoluteURI$lambda(this));
  }
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'parts_ivoofc$_0', {
    get: function () {
      return this.parts_ivoofc$_aszb59$_0.value;
    }
  });
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'path', {
    get: function () {
      return this.path_ptae93$_0.value;
    }
  });
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'queryString', {
    get: function () {
      return this.queryString_jju9jl$_0.value;
    }
  });
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'getParams', {
    get: function () {
      return this.getParams_n9fo1g$_0.value;
    }
  });
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'absoluteURI', {
    get: function () {
      return this.absoluteURI_v23cnh$_0.value;
    }
  });
  Object.defineProperty(HttpServer$BaseRequest.prototype, 'extra', {
    get: function () {
      return this.$delegate_2xdu1s$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_2xdu1s$_0.extra = tmp$;
    }
  });
  function HttpServer$BaseRequest$parts$lambda(this$BaseRequest) {
    return function () {
      return split(this$BaseRequest.uri, Kotlin.charArrayOf(63), void 0, 2);
    };
  }
  function HttpServer$BaseRequest$path$lambda(this$BaseRequest) {
    return function () {
      return this$BaseRequest.parts_ivoofc$_0.get_za3lpa$(0);
    };
  }
  function HttpServer$BaseRequest$queryString$lambda(this$BaseRequest) {
    return function () {
      var $receiver = this$BaseRequest.parts_ivoofc$_0;
      return 1 >= 0 && 1 <= get_lastIndex_0($receiver) ? $receiver.get_za3lpa$(1) : '';
    };
  }
  function HttpServer$BaseRequest$getParams$lambda(this$BaseRequest) {
    return function () {
      return QueryString_getInstance().decode_6bul2c$(this$BaseRequest.queryString);
    };
  }
  function HttpServer$BaseRequest$absoluteURI$lambda(this$BaseRequest) {
    return function () {
      return this$BaseRequest.uri;
    };
  }
  HttpServer$BaseRequest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseRequest',
    interfaces: [Extra]
  };
  function HttpServer$WsRequest(uri, headers) {
    HttpServer$BaseRequest.call(this, uri, headers);
  }
  HttpServer$WsRequest.prototype.sendSafe_61zpoe$ = function (msg) {
    try {
      this.send_61zpoe$(msg);
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        printStackTrace(e);
      }
       else
        throw e;
    }
  };
  HttpServer$WsRequest.prototype.sendSafe_fqrh44$ = function (msg) {
    try {
      this.send_fqrh44$(msg);
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        printStackTrace(e);
      }
       else
        throw e;
    }
  };
  function HttpServer$WsRequest$stringMessageStream$lambda$lambda(this$_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda(this$_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda(this$_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda.prototype.constructor = Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda;
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.yield_trkh7z$(this.local$it), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$stringMessageStream$lambda$lambda_0(this$_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0(this$_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0(this$_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
  }
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0.prototype.constructor = Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0;
  Coroutine$HttpServer$WsRequest$stringMessageStream$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.close(), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$stringMessageStream$lambda(this$WsRequest) {
    return function ($receiver) {
      this$WsRequest.onStringMessage_2errf5$(HttpServer$WsRequest$stringMessageStream$lambda$lambda($receiver));
      this$WsRequest.onClose_g2bo5h$(HttpServer$WsRequest$stringMessageStream$lambda$lambda_0($receiver));
      return Unit;
    };
  }
  HttpServer$WsRequest.prototype.stringMessageStream = function () {
    return asyncGenerate3(HttpServer$WsRequest$stringMessageStream$lambda(this));
  };
  function HttpServer$WsRequest$binaryMessageStream$lambda$lambda(this$_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda(this$_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda(this$_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda.prototype.constructor = Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda;
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.yield_trkh7z$(this.local$it), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0(this$_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0(this$_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0(this$_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
  }
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0.prototype.constructor = Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0;
  Coroutine$HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.close(), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$binaryMessageStream$lambda(this$WsRequest) {
    return function ($receiver) {
      this$WsRequest.onBinaryMessage_e05lat$(HttpServer$WsRequest$binaryMessageStream$lambda$lambda($receiver));
      this$WsRequest.onClose_g2bo5h$(HttpServer$WsRequest$binaryMessageStream$lambda$lambda_0($receiver));
      return Unit;
    };
  }
  HttpServer$WsRequest.prototype.binaryMessageStream = function () {
    return asyncGenerate3(HttpServer$WsRequest$binaryMessageStream$lambda(this));
  };
  function HttpServer$WsRequest$anyMessageStream$lambda$lambda(this$_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda(this$_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda(this$_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda.prototype.constructor = Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda;
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.yield_trkh7z$(this.local$it), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$anyMessageStream$lambda$lambda_0(this$_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0(this$_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0(this$_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0.prototype.constructor = Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0;
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.yield_trkh7z$(this.local$it), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$anyMessageStream$lambda$lambda_1(this$_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1(this$_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1(this$_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$ = this$_0;
  }
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1.prototype.constructor = Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1;
  Coroutine$HttpServer$WsRequest$anyMessageStream$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$.close(), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$WsRequest$anyMessageStream$lambda(this$WsRequest) {
    return function ($receiver) {
      this$WsRequest.onStringMessage_2errf5$(HttpServer$WsRequest$anyMessageStream$lambda$lambda($receiver));
      this$WsRequest.onBinaryMessage_e05lat$(HttpServer$WsRequest$anyMessageStream$lambda$lambda_0($receiver));
      this$WsRequest.onClose_g2bo5h$(HttpServer$WsRequest$anyMessageStream$lambda$lambda_1($receiver));
      return Unit;
    };
  }
  HttpServer$WsRequest.prototype.anyMessageStream = function () {
    return asyncGenerate3(HttpServer$WsRequest$anyMessageStream$lambda(this));
  };
  HttpServer$WsRequest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WsRequest',
    interfaces: [HttpServer$BaseRequest]
  };
  function HttpServer$RequestConfig(beforeSendHeadersInterceptors) {
    if (beforeSendHeadersInterceptors === void 0)
      beforeSendHeadersInterceptors = lmapOf([]);
    this.beforeSendHeadersInterceptors = beforeSendHeadersInterceptors;
    this.$delegate_kjpl2l$_0 = new Extra$Mixin();
  }
  HttpServer$RequestConfig.prototype.registerComponent_xs5mav$ = function (component, dependsOn) {
    throw new NotImplementedError_init();
  };
  Object.defineProperty(HttpServer$RequestConfig.prototype, 'extra', {
    get: function () {
      return this.$delegate_kjpl2l$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_kjpl2l$_0.extra = tmp$;
    }
  });
  HttpServer$RequestConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RequestConfig',
    interfaces: [Extra]
  };
  HttpServer$RequestConfig.prototype.component1 = function () {
    return this.beforeSendHeadersInterceptors;
  };
  HttpServer$RequestConfig.prototype.copy_cbjoms$ = function (beforeSendHeadersInterceptors) {
    return new HttpServer$RequestConfig(beforeSendHeadersInterceptors === void 0 ? this.beforeSendHeadersInterceptors : beforeSendHeadersInterceptors);
  };
  HttpServer$RequestConfig.prototype.toString = function () {
    return 'RequestConfig(beforeSendHeadersInterceptors=' + Kotlin.toString(this.beforeSendHeadersInterceptors) + ')';
  };
  HttpServer$RequestConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.beforeSendHeadersInterceptors) | 0;
    return result;
  };
  HttpServer$RequestConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.beforeSendHeadersInterceptors, other.beforeSendHeadersInterceptors))));
  };
  function HttpServer$Request(method, uri, headers, requestConfig) {
    if (requestConfig === void 0)
      requestConfig = new HttpServer$RequestConfig();
    HttpServer$BaseRequest.call(this, uri, headers);
    this.method = method;
    this.requestConfig = requestConfig;
    this.finalizers = ArrayList_init();
    this.headersSent_5ao1rb$_0 = false;
    this.finalizingHeaders_ex4gi4$_0 = false;
    this.resHeaders_f2i43b$_0 = ArrayList_init();
    this.code_uo8l3k$_0 = 200;
    this.message_vb0f00$_0 = 'OK';
  }
  HttpServer$Request.prototype.getHeader_61zpoe$ = function (key) {
    return this.headers.get_61zpoe$(key);
  };
  HttpServer$Request.prototype.getHeaderList_61zpoe$ = function (key) {
    return this.headers.getAll_61zpoe$(key);
  };
  HttpServer$Request.prototype.ensureHeadersNotSent_smyc0q$_0 = function () {
    if (this.headersSent_5ao1rb$_0) {
      println('Sent headers: ' + this.resHeaders_f2i43b$_0);
      throw new IOException('Headers already sent');
    }
  };
  function HttpServer$Request$removeHeader$lambda(closure$key) {
    return function (it) {
      return equals_0(it.first, closure$key, true);
    };
  }
  HttpServer$Request.prototype.removeHeader_61zpoe$ = function (key) {
    this.ensureHeadersNotSent_smyc0q$_0();
    removeAll(this.resHeaders_f2i43b$_0, HttpServer$Request$removeHeader$lambda(key));
  };
  HttpServer$Request.prototype.addHeader_puj7f4$ = function (key, value) {
    this.ensureHeadersNotSent_smyc0q$_0();
    var $receiver = this.resHeaders_f2i43b$_0;
    var element = to(key, value);
    $receiver.add_11rb$(element);
  };
  HttpServer$Request.prototype.replaceHeader_puj7f4$ = function (key, value) {
    this.ensureHeadersNotSent_smyc0q$_0();
    this.removeHeader_61zpoe$(key);
    this.addHeader_puj7f4$(key, value);
  };
  HttpServer$Request.prototype._write_mj6st8$ = function (data, offset, size, continuation, callback$default) {
    if (offset === void 0)
      offset = 0;
    if (size === void 0)
      size = data.length - offset | 0;
    return callback$default ? callback$default(data, offset, size, continuation) : this._write_mj6st8$$default(data, offset, size, continuation);
  };
  HttpServer$Request.prototype.handler_949j03$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$handler_949j03$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$handler_949j03$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$handler_949j03$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$handler_949j03$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$handler_949j03$.prototype.constructor = Coroutine$handler_949j03$;
  Coroutine$handler_949j03$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this._handler_949j03$(this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.endHandler_o14v8n$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$endHandler_o14v8n$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$endHandler_o14v8n$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$endHandler_o14v8n$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$endHandler_o14v8n$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$endHandler_o14v8n$.prototype.constructor = Coroutine$endHandler_o14v8n$;
  Coroutine$endHandler_o14v8n$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this._endHandler_o14v8n$(this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$Request$readRawBody$lambda$lambda$lambda(closure$out, closure$maxSize) {
    return function (it) {
      if ((closure$out.size + it.length | 0) > closure$maxSize) {
        closure$out.clear();
      }
       else {
        closure$out.append_fqrh44$(it);
      }
      return Unit;
    };
  }
  function HttpServer$Request$readRawBody$lambda$lambda$lambda_0(closure$c, closure$out) {
    return function () {
      var $receiver = closure$c;
      var value = closure$out.toByteArray();
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      return Unit;
    };
  }
  function HttpServer$Request$readRawBody$lambda$lambda(closure$out_0, closure$maxSize_0, this$Request_0, closure$c_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$Request$readRawBody$lambda$lambda(closure$out_0, closure$maxSize_0, this$Request_0, closure$c_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$Request$readRawBody$lambda$lambda(closure$out_0, closure$maxSize_0, this$Request_0, closure$c_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$out = closure$out_0;
    this.local$closure$maxSize = closure$maxSize_0;
    this.local$this$Request = this$Request_0;
    this.local$closure$c = closure$c_0;
  }
  Coroutine$HttpServer$Request$readRawBody$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$Request$readRawBody$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$Request$readRawBody$lambda$lambda.prototype.constructor = Coroutine$HttpServer$Request$readRawBody$lambda$lambda;
  Coroutine$HttpServer$Request$readRawBody$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$Request.handler_949j03$(HttpServer$Request$readRawBody$lambda$lambda$lambda(this.local$closure$out, this.local$closure$maxSize), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$this$Request.endHandler_o14v8n$(HttpServer$Request$readRawBody$lambda$lambda$lambda_0(this.local$closure$c, this.local$closure$out), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$Request$readRawBody$lambda(closure$maxSize, this$Request) {
    return function (c) {
      var out = new ByteArrayBuilder();
      launchImmediately_0(c.context, void 0, HttpServer$Request$readRawBody$lambda$lambda(out, closure$maxSize, this$Request, c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_0(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  HttpServer$Request.prototype.readRawBody_za3lpa$ = function (maxSize_0, continuation_0, suspended) {
    var instance = new Coroutine$readRawBody_za3lpa$(this, maxSize_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readRawBody_za3lpa$($this, maxSize_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$maxSize = maxSize_0;
  }
  Coroutine$readRawBody_za3lpa$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readRawBody_za3lpa$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readRawBody_za3lpa$.prototype.constructor = Coroutine$readRawBody_za3lpa$;
  Coroutine$readRawBody_za3lpa$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$maxSize === void 0)
              this.local$maxSize = 4096;
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_0(HttpServer$Request$readRawBody$lambda(this.local$maxSize, this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.setStatus_19mbxw$ = function (code, message) {
    if (message === void 0)
      message = HttpStatusMessage_getInstance().invoke_za3lpa$(code);
    this.ensureHeadersNotSent_smyc0q$_0();
    this.code_uo8l3k$_0 = code;
    this.message_vb0f00$_0 = message;
  };
  HttpServer$Request.prototype.flushHeaders_8s3zmt$_0 = function (continuation_0, suspended) {
    var instance = new Coroutine$flushHeaders_8s3zmt$_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$flushHeaders_8s3zmt$_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
  }
  Coroutine$flushHeaders_8s3zmt$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$flushHeaders_8s3zmt$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$flushHeaders_8s3zmt$_0.prototype.constructor = Coroutine$flushHeaders_8s3zmt$_0;
  Coroutine$flushHeaders_8s3zmt$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.headersSent_5ao1rb$_0) {
              return;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.finalizingHeaders_ex4gi4$_0)
              invalidOp("Can't write while finalizing headers");
            this.$this.finalizingHeaders_ex4gi4$_0 = true;
            this.local$tmp$ = this.$this.requestConfig.beforeSendHeadersInterceptors.entries.iterator();
            this.state_0 = 3;
            continue;
          case 3:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 5;
              continue;
            }

            var interceptor = this.local$tmp$.next();
            this.state_0 = 4;
            this.result_0 = interceptor.value(this.$this, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 3;
            continue;
          case 5:
            this.$this.headersSent_5ao1rb$_0 = true;
            this.state_0 = 6;
            this.result_0 = this.$this._sendHeader_j29v25$(this.$this.code_uo8l3k$_0, this.$this.message_vb0f00$_0, new Http$Headers(this.$this.resHeaders_f2i43b$_0), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.write_mj6st8$$default = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_mj6st8$$default_2(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_mj6st8$$default_2($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_mj6st8$$default_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_mj6st8$$default_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_mj6st8$$default_2.prototype.constructor = Coroutine$write_mj6st8$$default_2;
  Coroutine$write_mj6st8$$default_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.flushHeaders_8s3zmt$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this._write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.end = function (continuation_0, suspended) {
    var instance = new Coroutine$end(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$end($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
  }
  Coroutine$end.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$end.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$end.prototype.constructor = Coroutine$end;
  Coroutine$end.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.flushHeaders_8s3zmt$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this._end(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$tmp$ = this.$this.finalizers.iterator();
            this.state_0 = 4;
            continue;
          case 4:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 6;
              continue;
            }

            var finalizer = this.local$tmp$.next();
            this.state_0 = 5;
            this.result_0 = finalizer(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 4;
            continue;
          case 6:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.end_fqrh44$ = function (data_0, continuation_0, suspended) {
    var instance = new Coroutine$end_fqrh44$(this, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$end_fqrh44$($this, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
  }
  Coroutine$end_fqrh44$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$end_fqrh44$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$end_fqrh44$.prototype.constructor = Coroutine$end_fqrh44$;
  Coroutine$end_fqrh44$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.replaceHeader_puj7f4$('Content-Length', this.local$data.length.toString());
            this.state_0 = 2;
            this.result_0 = this.$this.flushHeaders_8s3zmt$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this._write_mj6st8$(this.local$data, 0, this.local$data.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.$this.end(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.write_6zdodq$ = function (data_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$write_6zdodq$(this, data_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_6zdodq$($this, data_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$charset = charset_0;
  }
  Coroutine$write_6zdodq$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_6zdodq$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_6zdodq$.prototype.constructor = Coroutine$write_6zdodq$;
  Coroutine$write_6zdodq$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = this.$this.flushHeaders_8s3zmt$_0(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this._write_mj6st8$(toByteArray(this.local$data, this.local$charset), void 0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.end_6zdodq$ = function (data_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$end_6zdodq$(this, data_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$end_6zdodq$($this, data_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$charset = charset_0;
  }
  Coroutine$end_6zdodq$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$end_6zdodq$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$end_6zdodq$.prototype.constructor = Coroutine$end_6zdodq$;
  Coroutine$end_6zdodq$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = this.$this.end_fqrh44$(toByteArray(this.local$data, this.local$charset), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_0.prototype.constructor = Coroutine$close_0;
  Coroutine$close_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.end(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer$Request.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Request',
    interfaces: [AsyncOutputStream, HttpServer$BaseRequest]
  };
  HttpServer.prototype.websocketHandlerInternal_d3ycxo$ = function (handler, continuation) {
  };
  HttpServer.prototype.httpHandlerInternal_b59mbs$ = function (handler, continuation) {
  };
  function HttpServer$allHandler$lambda$lambda(closure$handler_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$allHandler$lambda$lambda(closure$handler_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$allHandler$lambda$lambda(closure$handler_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$allHandler$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$allHandler$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$allHandler$lambda$lambda.prototype.constructor = Coroutine$HttpServer$allHandler$lambda$lambda;
  Coroutine$HttpServer$allHandler$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpServer$allHandler$lambda$lambda_0(closure$handler_0) {
    return function (it_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpServer$allHandler$lambda$lambda_0(closure$handler_0, it_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpServer$allHandler$lambda$lambda_0(closure$handler_0, it_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$it = it_0;
  }
  Coroutine$HttpServer$allHandler$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpServer$allHandler$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpServer$allHandler$lambda$lambda_0.prototype.constructor = Coroutine$HttpServer$allHandler$lambda$lambda_0;
  Coroutine$HttpServer$allHandler$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(this.local$it, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.allHandler_w09d7d$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$allHandler_w09d7d$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$allHandler_w09d7d$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$allHandler_w09d7d$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$allHandler_w09d7d$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$allHandler_w09d7d$.prototype.constructor = Coroutine$allHandler_w09d7d$;
  Coroutine$allHandler_w09d7d$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.websocketHandler_d3ycxo$(HttpServer$allHandler$lambda$lambda(this.local$handler), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.httpHandler_b59mbs$(HttpServer$allHandler$lambda$lambda_0(this.local$handler), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.listenInternal_19mbxw$$default = function (port, host, continuation_0, suspended) {
    var instance = new Coroutine$listenInternal_19mbxw$$default_0(this, port, host, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listenInternal_19mbxw$$default_0($this, port, host, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$listenInternal_19mbxw$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listenInternal_19mbxw$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listenInternal_19mbxw$$default_0.prototype.constructor = Coroutine$listenInternal_19mbxw$$default_0;
  Coroutine$listenInternal_19mbxw$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var deferred = CompletableDeferred(Job());
            this.state_0 = 2;
            this.result_0 = deferred.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.listenInternal_19mbxw$ = function (port, host, continuation, callback$default) {
    if (host === void 0)
      host = '127.0.0.1';
    return callback$default ? callback$default(port, host, continuation) : this.listenInternal_19mbxw$$default(port, host, continuation);
  };
  Object.defineProperty(HttpServer.prototype, 'actualPort', {
    get: function () {
      return this.actualPort_dj4hyl$_0;
    }
  });
  HttpServer.prototype.closeInternal = function (continuation) {
  };
  HttpServer.prototype.websocketHandler_d3ycxo$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$websocketHandler_d3ycxo$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$websocketHandler_d3ycxo$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$websocketHandler_d3ycxo$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$websocketHandler_d3ycxo$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$websocketHandler_d3ycxo$.prototype.constructor = Coroutine$websocketHandler_d3ycxo$;
  Coroutine$websocketHandler_d3ycxo$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.websocketHandlerInternal_d3ycxo$(this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.httpHandler_b59mbs$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$httpHandler_b59mbs$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$httpHandler_b59mbs$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$httpHandler_b59mbs$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$httpHandler_b59mbs$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$httpHandler_b59mbs$.prototype.constructor = Coroutine$httpHandler_b59mbs$;
  Coroutine$httpHandler_b59mbs$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.httpHandlerInternal_b59mbs$(this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.listen_19mbxw$ = function (port_0, host_0, continuation_0, suspended) {
    var instance = new Coroutine$listen_19mbxw$(this, port_0, host_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listen_19mbxw$($this, port_0, host_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$port = port_0;
    this.local$host = host_0;
  }
  Coroutine$listen_19mbxw$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listen_19mbxw$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listen_19mbxw$.prototype.constructor = Coroutine$listen_19mbxw$;
  Coroutine$listen_19mbxw$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$port === void 0)
              this.local$port = 0;
            if (this.local$host === void 0)
              this.local$host = '127.0.0.1';
            this.state_0 = 2;
            this.result_0 = this.$this.listenInternal_19mbxw$(this.local$port, this.local$host, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.listen_iq1xc0$ = function (port_0, host_0, handler_0, continuation_0, suspended) {
    var instance = new Coroutine$listen_iq1xc0$(this, port_0, host_0, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listen_iq1xc0$($this, port_0, host_0, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$port = port_0;
    this.local$host = host_0;
    this.local$handler = handler_0;
  }
  Coroutine$listen_iq1xc0$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listen_iq1xc0$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listen_iq1xc0$.prototype.constructor = Coroutine$listen_iq1xc0$;
  Coroutine$listen_iq1xc0$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$port === void 0)
              this.local$port = 0;
            if (this.local$host === void 0)
              this.local$host = '127.0.0.1';
            this.state_0 = 2;
            this.result_0 = this.$this.httpHandler_b59mbs$(this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.listen_19mbxw$(this.local$port, this.local$host, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.$this;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_1(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_1($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_1.prototype.constructor = Coroutine$close_1;
  Coroutine$close_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closeInternal(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpServer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpServer',
    interfaces: [AsyncCloseable]
  };
  function FakeRequest(method, uri, headers, body, requestConfig) {
    if (headers === void 0)
      headers = Http$Http$Headers_init([]);
    if (body === void 0)
      body = EMPTY_BYTE_ARRAY;
    HttpServer$Request.call(this, method, uri, headers, requestConfig);
    this.body = body;
    this.buf_0 = new ByteArrayBuilder();
    this.outputHeaders = Http$Http$Headers_init([]);
    this.outputStatusCode = 0;
    this.outputStatusMessage = '';
    this.output = '';
    this.log = ArrayList_init();
  }
  FakeRequest.prototype._handler_949j03$ = function (handler, continuation) {
    var $receiver = this.log;
    var element = '_handler()';
    $receiver.add_11rb$(element);
    handler(this.body);
  };
  FakeRequest.prototype._endHandler_o14v8n$ = function (handler, continuation) {
    var $receiver = this.log;
    var element = '_endHandler()';
    $receiver.add_11rb$(element);
    handler();
  };
  FakeRequest.prototype._sendHeader_j29v25$ = function (code, message, headers, continuation) {
    var $receiver = this.log;
    var element = '_setStatus(' + code + ', ' + message + ')';
    $receiver.add_11rb$(element);
    this.outputStatusCode = code;
    this.outputStatusMessage = message;
    var $receiver_0 = this.log;
    var element_0 = '_sendHeaders(' + headers + ')';
    $receiver_0.add_11rb$(element_0);
    this.outputHeaders = headers;
  };
  FakeRequest.prototype._write_mj6st8$$default = function (data, offset, size, continuation) {
    var tmp$ = this.log;
    var toIndex = offset + size | 0;
    var element = '_write(' + toString_0(data.slice(offset, toIndex), UTF8_getInstance()) + ')';
    tmp$.add_11rb$(element);
    this.buf_0.append_mj6st8$(data, offset, size);
  };
  FakeRequest.prototype._end = function (continuation) {
    this.log.add_11rb$('_end()');
    this.output = toString_0(this.buf_0.toByteArray(), UTF8_getInstance());
  };
  FakeRequest.prototype.toString = function () {
    return this.outputStatusCode.toString() + ':' + this.outputStatusMessage + ':' + this.outputHeaders + ':' + this.output;
  };
  FakeRequest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FakeRequest',
    interfaces: [HttpServer$Request]
  };
  function HttpRestClient(endpoint) {
    this.endpoint = endpoint;
  }
  var emptyMap = Kotlin.kotlin.collections.emptyMap_q3lmfv$;
  HttpRestClient.prototype.request_3b91g6$ = function (method_0, path_0, request_0, mapper_0, continuation_0, suspended) {
    var instance = new Coroutine$request_3b91g6$(this, method_0, path_0, request_0, mapper_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$request_3b91g6$($this, method_0, path_0, request_0, mapper_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$result = void 0;
    this.local$method = method_0;
    this.local$path = path_0;
    this.local$request = request_0;
    this.local$mapper = mapper_0;
  }
  Coroutine$request_3b91g6$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$request_3b91g6$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$request_3b91g6$.prototype.constructor = Coroutine$request_3b91g6$;
  Coroutine$request_3b91g6$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$mapper === void 0)
              this.local$mapper = Mapper;
            var tmp$, tmp$_0, tmp$_1, tmp$_2;
            var tmp$_3;
            if (this.local$request != null) {
              var $this = Json_getInstance();
              var tmp$_4;
              if (false) {
                tmp$_4 = $this.encodePrettyUntyped_hvn9da$(this.local$mapper.toUntyped_b1ce0a$(getKClass(Any), this.local$request));
              }
               else {
                tmp$_4 = $this.encodeUntyped_s8jyv4$(this.local$mapper.toUntyped_b1ce0a$(getKClass(Any), this.local$request));
              }
              tmp$_3 = tmp$_4;
            }
             else
              tmp$_3 = null;
            var requestContent = tmp$_3;
            tmp$_0 = this.$this.endpoint;
            tmp$ = requestContent != null ? openAsync_0(requestContent) : null;
            this.state_0 = 2;
            this.result_0 = tmp$_0.request_v6tn8p$(this.local$method, this.local$path, Http$Http$Headers_init([to('Content-Type', 'application/json')]), tmp$, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$result = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$result.checkErrors(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$result.readAllString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            var stringResult = this.result_0;
            try {
              tmp$_2 = (tmp$_1 = Json_getInstance().decode_61zpoe$(stringResult)) != null ? tmp$_1 : emptyMap();
            }
             catch (e) {
              if (Kotlin.isType(e, IOException)) {
                tmp$_2 = emptyMap();
              }
               else
                throw e;
            }

            return tmp$_2;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpRestClient.prototype.head_61zpoe$ = function (path, continuation) {
    return this.request_3b91g6$(Http$Method$Companion_getInstance().HEAD, path, null, void 0, continuation);
  };
  HttpRestClient.prototype.delete_61zpoe$ = function (path, continuation) {
    return this.request_3b91g6$(Http$Method$Companion_getInstance().DELETE, path, null, void 0, continuation);
  };
  HttpRestClient.prototype.get_61zpoe$ = function (path, continuation) {
    return this.request_3b91g6$(Http$Method$Companion_getInstance().GET, path, null, void 0, continuation);
  };
  HttpRestClient.prototype.put_bm4g0d$ = function (path, request, continuation) {
    return this.request_3b91g6$(Http$Method$Companion_getInstance().PUT, path, request, void 0, continuation);
  };
  HttpRestClient.prototype.post_bm4g0d$ = function (path, request, continuation) {
    return this.request_3b91g6$(Http$Method$Companion_getInstance().POST, path, request, void 0, continuation);
  };
  HttpRestClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpRestClient',
    interfaces: []
  };
  function rest($receiver) {
    return new HttpRestClient($receiver);
  }
  function rest_0($receiver, endpoint_0) {
    return new HttpRestClient(endpoint($receiver, endpoint_0));
  }
  function createRestClient($receiver, endpoint_0, mapper) {
    return rest(endpoint($receiver.createClient(), endpoint_0));
  }
  function WebSocketClient(url, protocols, DEBUG) {
    this.url = url;
    this.protocols = protocols;
    this.onOpen = new Signal();
    this.onError = new Signal();
    this.onClose = new Signal();
    this.onBinaryMessage = new Signal();
    this.onStringMessage = new Signal();
    this.onAnyMessage = new Signal();
  }
  WebSocketClient.prototype.close_19mbxw$$default = function (code, reason) {
  };
  WebSocketClient.prototype.close_19mbxw$ = function (code, reason, callback$default) {
    if (code === void 0)
      code = 0;
    if (reason === void 0)
      reason = '';
    callback$default ? callback$default(code, reason) : this.close_19mbxw$$default(code, reason);
  };
  WebSocketClient.prototype.send_61zpoe$ = function (message, continuation) {
    return Unit;
  };
  WebSocketClient.prototype.send_fqrh44$ = function (message, continuation) {
    return Unit;
  };
  WebSocketClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebSocketClient',
    interfaces: []
  };
  function WebSocketClient_0(url, protocols, origin, wskey, debug, continuation) {
    if (protocols === void 0)
      protocols = null;
    if (origin === void 0)
      origin = null;
    if (wskey === void 0)
      wskey = 'wskey';
    if (debug === void 0)
      debug = false;
    return get_websockets().create_5y1boz$(url, protocols, origin, wskey, debug, continuation);
  }
  function get_websockets() {
    return KorioNative_getInstance().websockets;
  }
  function WebSocketClientFactory() {
  }
  WebSocketClientFactory.prototype.create_5y1boz$ = function (url, protocols, origin, wskey, debug, continuation, callback$default) {
    if (protocols === void 0)
      protocols = null;
    if (origin === void 0)
      origin = null;
    if (wskey === void 0)
      wskey = null;
    if (debug === void 0)
      debug = false;
    return callback$default ? callback$default(url, protocols, origin, wskey, debug, continuation) : this.create_5y1boz$$default(url, protocols, origin, wskey, debug, continuation);
  };
  WebSocketClientFactory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebSocketClientFactory',
    interfaces: []
  };
  function WebSocketException(message) {
    IOException.call(this, message);
    this.name = 'WebSocketException';
  }
  WebSocketException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebSocketException',
    interfaces: [IOException]
  };
  function AsyncFun(name, call) {
    this.name = name;
    this.call = call;
  }
  AsyncFun.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncFun',
    interfaces: []
  };
  function ClassReflect(clazz, props, propTypes, smethods, gen) {
    if (props === void 0) {
      props = emptyList();
    }
    if (propTypes === void 0) {
      propTypes = emptyList();
    }
    if (smethods === void 0) {
      smethods = emptyList();
    }
    if (gen === void 0)
      gen = ClassReflect_init$lambda;
    this.clazz = clazz;
    this.props = props;
    this.propTypes = propTypes;
    this.smethods = smethods;
    this.gen = gen;
  }
  function ClassReflect$Gen() {
    ClassReflect$Gen_instance = this;
  }
  ClassReflect$Gen.prototype.get_ww73n8$ = function (index) {
    throw new NotImplementedError_init();
  };
  ClassReflect$Gen.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Gen',
    interfaces: []
  };
  var ClassReflect$Gen_instance = null;
  function ClassReflect$Gen_getInstance() {
    if (ClassReflect$Gen_instance === null) {
      new ClassReflect$Gen();
    }
    return ClassReflect$Gen_instance;
  }
  function ClassReflect_init$lambda($receiver) {
    throw new NotImplementedError_init();
  }
  ClassReflect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ClassReflect',
    interfaces: []
  };
  function register($receiver, cr) {
    throw new NotImplementedError_init();
  }
  function asyncCaptureStdout(callback, continuation) {
    throw new NotImplementedError_init();
  }
  function ObjectMapper() {
    this._typers = lmapOf([]);
    this._untypers = lmapOf([]);
    this.fallbackTyper = null;
    this.fallbackUntyper = null;
    this.typeCtx_0 = new ObjectMapper$TypeContext(this);
    this.untypeCtx_0 = new ObjectMapper$UntypeContext(this);
    this.registerType_gs2qrt$(PrimitiveClasses$booleanClass, ObjectMapper_init$lambda);
    this.registerType_gs2qrt$(PrimitiveClasses$byteClass, ObjectMapper_init$lambda_0);
    this.registerType_gs2qrt$(getKClass(Char), ObjectMapper_init$lambda_1);
    this.registerType_gs2qrt$(PrimitiveClasses$shortClass, ObjectMapper_init$lambda_2);
    this.registerType_gs2qrt$(PrimitiveClasses$intClass, ObjectMapper_init$lambda_3);
    this.registerType_gs2qrt$(getKClass(Long), ObjectMapper_init$lambda_4);
    this.registerType_gs2qrt$(PrimitiveClasses$floatClass, ObjectMapper_init$lambda_5);
    this.registerType_gs2qrt$(PrimitiveClasses$doubleClass, ObjectMapper_init$lambda_6);
    this.registerType_gs2qrt$(getKClass(Set), ObjectMapper_init$lambda_7);
    this.registerType_gs2qrt$(getKClass(List), ObjectMapper_init$lambda_8);
    this.registerType_gs2qrt$(getKClass(MutableList), ObjectMapper_init$lambda_9);
    this.registerType_gs2qrt$(PrimitiveClasses$stringClass, ObjectMapper_init$lambda_10);
  }
  function ObjectMapper$TypeContext(map) {
    this.map = map;
  }
  ObjectMapper$TypeContext.prototype.gen_lsumxt$ = function ($receiver, clazz) {
    return this.map.toTyped_bju3lo$(clazz, $receiver);
  };
  ObjectMapper$TypeContext.prototype.genList_lsumxt$ = function ($receiver, clazz) {
    var $receiver_0 = this.toDynamicList_mzud1t$($receiver);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(this.gen_lsumxt$(item, clazz));
    }
    return ArrayList_init_0(toList(destination));
  };
  ObjectMapper$TypeContext.prototype.genSet_lsumxt$ = function ($receiver, clazz) {
    var $receiver_0 = this.toDynamicList_mzud1t$($receiver);
    var destination = ArrayList_init_1(collectionSizeOrDefault($receiver_0, 10));
    var tmp$;
    tmp$ = $receiver_0.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(this.gen_lsumxt$(item, clazz));
    }
    return HashSet_init(toSet(destination));
  };
  ObjectMapper$TypeContext.prototype.genMap_fapzid$ = function ($receiver, kclazz, vclazz) {
    var $receiver_0 = this.toDynamicMap_mzud1t$($receiver);
    var destination = ArrayList_init_1($receiver_0.size);
    var tmp$;
    tmp$ = $receiver_0.entries.iterator();
    while (tmp$.hasNext()) {
      var item = tmp$.next();
      destination.add_11rb$(to(this.gen_lsumxt$(item.key, kclazz), this.gen_lsumxt$(item.value, vclazz)));
    }
    return toLinkedMap(destination);
  };
  ObjectMapper$TypeContext.prototype.gen_m4kn9m$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.TypeContext.gen_m4kn9m$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, $receiver) {
      return this.map.toTyped_bju3lo$(getKClass(T_0), $receiver);
    };
  }));
  ObjectMapper$TypeContext.prototype.genList_m4kn9m$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.TypeContext.genList_m4kn9m$', wrapFunction(function () {
    var wrapFunction = Kotlin.wrapFunction;
    var toList = Kotlin.kotlin.collections.toList_7wnvza$;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_mqih57$;
    var ObjectMapper$TypeContext$genList$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      return function (typeClosure$T, isT, this$TypeContext) {
        return function (it) {
          var $this = this$TypeContext;
          var T_0 = typeClosure$T;
          return $this.map.toTyped_bju3lo$(getKClass(T_0), it);
        };
      };
    });
    var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
    var ArrayList_init_0 = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, $receiver) {
      var $receiver_0 = this.toDynamicList_mzud1t$($receiver);
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(this.map.toTyped_bju3lo$(getKClass(T_0), item));
      }
      return ArrayList_init(toList(destination));
    };
  }));
  ObjectMapper$TypeContext.prototype.genSet_m4kn9m$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.TypeContext.genSet_m4kn9m$', wrapFunction(function () {
    var wrapFunction = Kotlin.wrapFunction;
    var toSet = Kotlin.kotlin.collections.toSet_7wnvza$;
    var HashSet_init = Kotlin.kotlin.collections.HashSet_init_mqih57$;
    var ObjectMapper$TypeContext$genSet$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      return function (typeClosure$T, isT, this$TypeContext) {
        return function (it) {
          var $this = this$TypeContext;
          var T_0 = typeClosure$T;
          return $this.map.toTyped_bju3lo$(getKClass(T_0), it);
        };
      };
    });
    var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, $receiver) {
      var $receiver_0 = this.toDynamicList_mzud1t$($receiver);
      var destination = ArrayList_init(collectionSizeOrDefault($receiver_0, 10));
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(this.map.toTyped_bju3lo$(getKClass(T_0), item));
      }
      return HashSet_init(toSet(destination));
    };
  }));
  ObjectMapper$TypeContext.prototype.genMap_9jq766$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.TypeContext.genMap_9jq766$', wrapFunction(function () {
    var to = Kotlin.kotlin.to_ujzrz7$;
    var wrapFunction = Kotlin.wrapFunction;
    var toLinkedMap = _.$$importsForInline$$['kds-js'].com.soywiz.kds.toLinkedMap_6hr0sd$;
    var ObjectMapper$TypeContext$genMap$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      return function (typeClosure$K, isK, this$TypeContext, typeClosure$V, isV) {
        return function (it) {
          var $this = this$TypeContext;
          var T_0 = typeClosure$K;
          var $receiver = it.key;
          var tmp$ = $this.map.toTyped_bju3lo$(getKClass(T_0), $receiver);
          var $this_0 = this$TypeContext;
          var T_0_0 = typeClosure$V;
          var $receiver_0 = it.value;
          return to(tmp$, $this_0.map.toTyped_bju3lo$(getKClass(T_0_0), $receiver_0));
        };
      };
    });
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
    var getKClass = Kotlin.getKClass;
    return function (K_0, isK, V_0, isV, $receiver) {
      var $receiver_0 = this.toDynamicMap_mzud1t$($receiver);
      var destination = ArrayList_init($receiver_0.size);
      var tmp$;
      tmp$ = $receiver_0.entries.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        var tmp$_0 = destination.add_11rb$;
        var $receiver_1 = item.key;
        var tmp$_1 = this.map.toTyped_bju3lo$(getKClass(K_0), $receiver_1);
        var $receiver_2 = item.value;
        tmp$_0.call(destination, to(tmp$_1, this.map.toTyped_bju3lo$(getKClass(V_0), $receiver_2)));
      }
      return toLinkedMap(destination);
    };
  }));
  ObjectMapper$TypeContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TypeContext',
    interfaces: [DynamicContext]
  };
  function ObjectMapper$UntypeContext(map) {
    this.map = map;
  }
  ObjectMapper$UntypeContext.prototype.gen_irb06o$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_irb06o$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, $receiver) {
      return this.map.toUntyped_b1ce0a$(getKClass(T_0), $receiver);
    };
  }));
  ObjectMapper$UntypeContext.prototype.gen_1v8dcc$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_1v8dcc$', function ($receiver) {
    return $receiver;
  });
  ObjectMapper$UntypeContext.prototype.gen_pdl1vz$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_pdl1vz$', function ($receiver) {
    return $receiver;
  });
  ObjectMapper$UntypeContext.prototype.gen_rcaex3$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_rcaex3$', function ($receiver) {
    return $receiver;
  });
  ObjectMapper$UntypeContext.prototype.gen_m3lr2h$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_m3lr2h$', wrapFunction(function () {
    var wrapFunction = Kotlin.wrapFunction;
    var ObjectMapper$UntypeContext$gen$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      return function (typeClosure$T, isT, this$UntypeContext) {
        return function (it) {
          var $this = this$UntypeContext;
          var T_0 = typeClosure$T;
          return $this.map.toUntyped_b1ce0a$(getKClass(T_0), it);
        };
      };
    });
    var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, $receiver) {
      var destination = ArrayList_init(collectionSizeOrDefault($receiver, 10));
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(this.map.toUntyped_b1ce0a$(getKClass(T_0), item));
      }
      return destination;
    };
  }));
  ObjectMapper$UntypeContext.prototype.gen_cm4zns$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.UntypeContext.gen_cm4zns$', wrapFunction(function () {
    var to = Kotlin.kotlin.to_ujzrz7$;
    var wrapFunction = Kotlin.wrapFunction;
    var toMap = Kotlin.kotlin.collections.toMap_6hr0sd$;
    var ObjectMapper$UntypeContext$gen$lambda = wrapFunction(function () {
      var getKClass = Kotlin.getKClass;
      return function (typeClosure$K, isK, this$UntypeContext, typeClosure$V, isV) {
        return function (it) {
          var $this = this$UntypeContext;
          var T_0 = typeClosure$K;
          var $receiver = it.key;
          var tmp$ = $this.map.toUntyped_b1ce0a$(getKClass(T_0), $receiver);
          var $this_0 = this$UntypeContext;
          var T_0_0 = typeClosure$V;
          var $receiver_0 = it.value;
          return to(tmp$, $this_0.map.toUntyped_b1ce0a$(getKClass(T_0_0), $receiver_0));
        };
      };
    });
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
    var getKClass = Kotlin.getKClass;
    return function (K_0, isK, V_0, isV, $receiver) {
      var destination = ArrayList_init($receiver.size);
      var tmp$;
      tmp$ = $receiver.entries.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        var tmp$_0 = destination.add_11rb$;
        var $receiver_0 = item.key;
        var tmp$_1 = this.map.toUntyped_b1ce0a$(getKClass(K_0), $receiver_0);
        var $receiver_1 = item.value;
        tmp$_0.call(destination, to(tmp$_1, this.map.toUntyped_b1ce0a$(getKClass(V_0), $receiver_1)));
      }
      return toMap(destination);
    };
  }));
  ObjectMapper$UntypeContext.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UntypeContext',
    interfaces: []
  };
  ObjectMapper.prototype.registerType_gs2qrt$ = function (clazz, generate) {
    this._typers.put_xwzc9p$(clazz, generate);
    return this;
  };
  ObjectMapper.prototype.toTyped_bju3lo$ = function (clazz, obj) {
    var tmp$, tmp$_0;
    var generator = (tmp$ = this._typers.get_11rb$(clazz)) != null ? tmp$ : invalidArg('Unregistered ' + clazz);
    return Kotlin.isType(tmp$_0 = generator(this.typeCtx_0, obj), Any) ? tmp$_0 : throwCCE();
  };
  ObjectMapper.prototype.toUntyped_issdgt$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.toUntyped_issdgt$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, obj) {
      return this.toUntyped_b1ce0a$(getKClass(T_0), obj);
    };
  }));
  ObjectMapper.prototype.toUntyped_b1ce0a$ = function (clazz, obj) {
    var tmp$, tmp$_0;
    if (obj == null)
      return obj;
    else if (typeof obj === 'boolean')
      return obj;
    else if (Kotlin.isNumber(obj))
      return obj;
    else if (typeof obj === 'string')
      return obj;
    else if (Kotlin.isType(obj, Iterable)) {
      var destination = ArrayList_init_1(collectionSizeOrDefault(obj, 10));
      var tmp$_1;
      tmp$_1 = obj.iterator();
      while (tmp$_1.hasNext()) {
        var item = tmp$_1.next();
        var tmp$_2 = destination.add_11rb$;
        var obj_0 = ensureNotNull(item);
        tmp$_2.call(destination, this.toUntyped_b1ce0a$(getKClass(Any), obj_0));
      }
      return ArrayList_init_0(destination);
    }
     else if (Kotlin.isType(obj, Map)) {
      var destination_0 = ArrayList_init_1(obj.size);
      var tmp$_3;
      tmp$_3 = obj.entries.iterator();
      while (tmp$_3.hasNext()) {
        var item_0 = tmp$_3.next();
        var tmp$_4 = destination_0.add_11rb$;
        var obj_1 = ensureNotNull(item_0.key);
        var tmp$_5 = this.toUntyped_b1ce0a$(getKClass(Any), obj_1);
        var obj_2 = item_0.value;
        tmp$_4.call(destination_0, to(tmp$_5, this.toUntyped_b1ce0a$(getKClass(Any), obj_2)));
      }
      return toLinkedMap(destination_0);
    }
     else {
      var unt = this._untypers.get_11rb$(clazz);
      if (unt == null && this.fallbackUntyper != null) {
        return (tmp$ = this.fallbackUntyper) != null ? tmp$(obj) : null;
      }
       else if (unt == null) {
        println('Untypers: ' + toString(this._untypers.size));
        tmp$_0 = this._untypers.entries.iterator();
        while (tmp$_0.hasNext()) {
          var u = tmp$_0.next();
          println(' - ' + toString(u.key));
        }
        return invalidArg("Don't know how to untype " + clazz);
      }
       else {
        return unt(this.untypeCtx_0, obj);
      }
    }
  };
  function ObjectMapper$registerEnum$lambda(closure$nameToString) {
    return function ($receiver, it) {
      return ensureNotNull(closure$nameToString.get_11rb$(toString(it)));
    };
  }
  ObjectMapper.prototype.registerEnum_hytwtp$ = function (clazz, values) {
    var destination = ArrayList_init_1(values.length);
    var tmp$;
    for (tmp$ = 0; tmp$ !== values.length; ++tmp$) {
      var item = values[tmp$];
      destination.add_11rb$(to(item.name, item));
    }
    var nameToString = toMap(destination);
    this.registerType_gs2qrt$(clazz, ObjectMapper$registerEnum$lambda(nameToString));
  };
  ObjectMapper.prototype.registerType_ze1j52$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.registerType_ze1j52$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, generate) {
      return this.registerType_gs2qrt$(getKClass(T_0), generate);
    };
  }));
  ObjectMapper.prototype.registerEnum_zhhfti$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.registerEnum_zhhfti$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, values) {
      this.registerEnum_hytwtp$(getKClass(T_0), values);
    };
  }));
  ObjectMapper.prototype.registerUntype_tkuceq$ = function (clazz, untyper) {
    var tmp$;
    var $receiver = this._untypers;
    var value = typeof (tmp$ = untyper) === 'function' ? tmp$ : throwCCE();
    $receiver.put_xwzc9p$(clazz, value);
  };
  function ObjectMapper$registerUntypeEnum$lambda($receiver, it) {
    return it.name;
  }
  ObjectMapper.prototype.registerUntypeEnum_xvqrpl$ = function (clazz) {
    this.registerUntype_tkuceq$(clazz, ObjectMapper$registerUntypeEnum$lambda);
  };
  ObjectMapper.prototype.registerUntype_q1j5hn$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.registerUntype_q1j5hn$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, untyper) {
      this.registerUntype_tkuceq$(getKClass(T_0), untyper);
    };
  }));
  ObjectMapper.prototype.registerUntypeEnum_nxd2ia$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.registerUntypeEnum_nxd2ia$', wrapFunction(function () {
    var getKClass = Kotlin.getKClass;
    function ObjectMapper$registerUntypeEnum$lambda($receiver, it) {
      return it.name;
    }
    return function (T_0, isT) {
      this.registerUntype_tkuceq$(getKClass(T_0), ObjectMapper$registerUntypeEnum$lambda);
    };
  }));
  ObjectMapper.prototype.scoped_klfg04$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.ObjectMapper.scoped_klfg04$', wrapFunction(function () {
    var toMap = Kotlin.kotlin.collections.toMap_abgq59$;
    return function (callback) {
      var oldTypers = toMap(this._typers);
      var oldUntypers = toMap(this._untypers);
      try {
        return callback();
      }
      finally {
        this._typers.clear();
        this._typers.putAll_a2k3zr$(oldTypers);
        this._untypers.clear();
        this._untypers.putAll_a2k3zr$(oldUntypers);
      }
    };
  }));
  function ObjectMapper_init$lambda($receiver, it) {
    return $receiver.toBool_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_0($receiver, it) {
    return $receiver.toByte_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_1($receiver, it) {
    return $receiver.toChar_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_2($receiver, it) {
    return $receiver.toShort_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_3($receiver, it) {
    return $receiver.toInt_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_4($receiver, it) {
    return $receiver.toLong_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_5($receiver, it) {
    return $receiver.toFloat_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_6($receiver, it) {
    return $receiver.toDouble_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_7($receiver, it) {
    return toSet($receiver.toDynamicList_mzud1t$(it));
  }
  function ObjectMapper_init$lambda_8($receiver, it) {
    return $receiver.toDynamicList_mzud1t$(it);
  }
  function ObjectMapper_init$lambda_9($receiver, it) {
    return toMutableList($receiver.toDynamicList_mzud1t$(it));
  }
  function ObjectMapper_init$lambda_10($receiver, it) {
    var tmp$;
    return (tmp$ = it != null ? it.toString() : null) != null ? tmp$ : 'null';
  }
  ObjectMapper.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ObjectMapper',
    interfaces: []
  };
  var Mapper;
  function Json() {
    Json_instance = this;
  }
  Json.prototype.encodePretty_qg0us1$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.encodePretty_qg0us1$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, obj, mapper) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      var tmp$;
      if (true) {
        tmp$ = this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
       else {
        tmp$ = this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
      return tmp$;
    };
  }));
  Json.prototype.encode_904xui$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.encode_904xui$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, obj, mapper, pretty) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      if (pretty === void 0)
        pretty = false;
      var tmp$;
      if (pretty) {
        tmp$ = this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
       else {
        tmp$ = this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
      return tmp$;
    };
  }));
  Json.prototype.stringifyPretty_qg0us1$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.stringifyPretty_qg0us1$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, obj, mapper) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      var tmp$;
      if (true) {
        tmp$ = this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
       else {
        tmp$ = this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
      return tmp$;
    };
  }));
  Json.prototype.stringify_904xui$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.stringify_904xui$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, obj, mapper, pretty) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      if (pretty === void 0)
        pretty = false;
      var tmp$;
      if (pretty) {
        tmp$ = this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
       else {
        tmp$ = this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(T_0), obj));
      }
      return tmp$;
    };
  }));
  Json.prototype.parse_61zpoe$ = function (s) {
    return this.decode_qdjkzt$(new StrReader(s));
  };
  Json.prototype.parseTyped_iy04uf$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.parseTyped_iy04uf$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, s, mapper) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      return this.decodeToType_ye3lh8$(getKClass(T_0), s, mapper);
    };
  }));
  Json.prototype.invalidJson_61zpoe$ = function (msg) {
    if (msg === void 0)
      msg = 'Invalid JSON';
    throw new IOException(msg);
  };
  Json.prototype.decode_61zpoe$ = function (s) {
    return this.decode_qdjkzt$(new StrReader(s));
  };
  Json.prototype.decodeToType_iy04uf$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.json.Json.decodeToType_iy04uf$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, s, mapper) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      return this.decodeToType_ye3lh8$(getKClass(T_0), s, mapper);
    };
  }));
  Json.prototype.decodeToType_27ii8w$ = function (s, clazz, mapper) {
    if (mapper === void 0)
      mapper = Mapper;
    return mapper.toTyped_bju3lo$(clazz, this.decode_61zpoe$(s));
  };
  Json.prototype.decodeToType_ye3lh8$ = function (clazz, s, mapper) {
    if (mapper === void 0)
      mapper = Mapper;
    return mapper.toTyped_bju3lo$(clazz, this.decode_61zpoe$(s));
  };
  var StrReader$readWhile$lambda = wrapFunction(function () {
    return function (closure$filter, this$StrReader) {
      return function () {
        var $this = this$StrReader;
        var filter = closure$filter;
        while ($this.hasMore && filter($this.peekChar()))
          $this.readChar();
        return Unit;
      };
    };
  });
  Json.prototype.decode_qdjkzt$ = function ($receiver) {
    var tmp$;
    var ic = unboxChar($receiver.skipSpaces().read());
    switch (ic) {
      case 123:
        var out = LinkedHashMap_init();
        obj: while (true) {
          switch (unboxChar($receiver.skipSpaces().read())) {
            case 125:
              break obj;
            case 44:
              continue obj;
            default:$receiver.unread_za3lpa$();
              break;
          }
          var key = typeof (tmp$ = this.decode_qdjkzt$($receiver)) === 'string' ? tmp$ : throwCCE();
          $receiver.skipSpaces().expect_s8itvh$(58);
          var value = this.decode_qdjkzt$($receiver);
          out.put_xwzc9p$(key, value);
        }

        return out;
      case 91:
        var out_0 = ArrayList_init();
        array: while (true) {
          switch (unboxChar($receiver.skipSpaces().read())) {
            case 93:
              break array;
            case 44:
              continue array;
            default:$receiver.unread_za3lpa$();
              break;
          }
          var item = this.decode_qdjkzt$($receiver);
          out_0.add_11rb$(item);
        }

        return out_0;
      default:if (ic === 45 || ic === 43 || (new CharRange(48, 57)).contains_mef7kx$(ic)) {
          $receiver.unread_za3lpa$();
          var tmp$_0;
          var start = $receiver.pos;
          while (true) {
            var tmp$_1 = $receiver.hasMore;
            if (tmp$_1) {
              var it = $receiver.peekChar();
              tmp$_1 = (new CharRange(48, 57)).contains_mef7kx$(unboxChar(it)) || unboxChar(it) === 46 || unboxChar(it) === 101 || unboxChar(it) === 69 || unboxChar(it) === 45 || unboxChar(it) === 43;
            }
            if (!tmp$_1)
              break;
            $receiver.readChar();
          }
          var end = $receiver.pos;
          var res = (tmp$_0 = end > start ? $receiver.slice_vux9f0$(start, end) : null) != null ? tmp$_0 : '';
          return Dynamic_getInstance().toNumber_s8jyv4$(res);
        }
         else
          switch (ic) {
            case 116:
            case 102:
            case 110:
              $receiver.unread_za3lpa$();
              if ($receiver.tryRead_61zpoe$('true'))
                return true;
              if ($receiver.tryRead_61zpoe$('false'))
                return false;
              if ($receiver.tryRead_61zpoe$('null'))
                return null;
              this.invalidJson_61zpoe$();
              break;
            case 34:
              $receiver.unread_za3lpa$();
              return readStringLit($receiver);
            default:this.invalidJson_61zpoe$("Not expected '" + String.fromCharCode(ic) + "'");
              break;
          }

        break;
    }
  };
  Json.prototype.encodeUntyped_s8jyv4$ = function (obj) {
    var $receiver = StringBuilder_init();
    this.encodeUntyped_dx15ti$(obj, $receiver);
    return $receiver.toString();
  };
  Json.prototype.encodeUntyped_dx15ti$ = function (obj, b) {
    if (obj == null)
      b.append_gw00v9$('null');
    else if (typeof obj === 'boolean')
      b.append_gw00v9$(obj ? 'true' : 'false');
    else if (Kotlin.isType(obj, Map)) {
      b.append_s8itvh$(123);
      var i = 0;
      for (var tmp$ = obj.entries.iterator(); tmp$.hasNext(); ++i) {
        var v = tmp$.next();
        if (i !== 0)
          b.append_s8itvh$(44);
        this.encodeUntyped_dx15ti$(v.key, b);
        b.append_s8itvh$(58);
        this.encodeUntyped_dx15ti$(v.value, b);
      }
      b.append_s8itvh$(125);
    }
     else if (Kotlin.isType(obj, Iterable)) {
      b.append_s8itvh$(91);
      var i_0 = 0;
      for (var tmp$_0 = obj.iterator(); tmp$_0.hasNext(); ++i_0) {
        var v_0 = tmp$_0.next();
        if (i_0 !== 0)
          b.append_s8itvh$(44);
        this.encodeUntyped_dx15ti$(v_0, b);
      }
      b.append_s8itvh$(93);
    }
     else if (Kotlin.isType(obj, Enum))
      this.encodeString_0(obj.name, b);
    else if (typeof obj === 'string')
      this.encodeString_0(obj, b);
    else if (Kotlin.isNumber(obj))
      b.append_gw00v9$(toString(obj));
    else if (Kotlin.isType(obj, CustomJsonSerializer))
      obj.encodeToJson_irqrwq$(b);
    else {
      invalidOp("Don't know how to serialize " + toString(obj));
    }
  };
  Json.prototype.encodePrettyUntyped_hvn9da$ = function (obj, indentChunk) {
    if (indentChunk === void 0)
      indentChunk = '\t';
    var $receiver = new Indenter();
    this.encodePrettyUntyped_snnzj3$(obj, $receiver);
    return $receiver.toString_8kj6y5$(true, indentChunk);
  };
  Json.prototype.encodePrettyUntyped_snnzj3$ = function (obj, b) {
    if (obj == null)
      b.inline_61zpoe$('null');
    else if (typeof obj === 'boolean')
      b.inline_61zpoe$(obj ? 'true' : 'false');
    else if (Kotlin.isType(obj, Map)) {
      b.line_61zpoe$('{');
      b._indent();
      try {
        var entries = obj.entries;
        var i = 0;
        for (var tmp$ = entries.iterator(); tmp$.hasNext(); ++i) {
          var v = tmp$.next();
          if (i !== 0)
            b.line_61zpoe$(',');
          b.inline_61zpoe$(this.encodeString_1('' + toString(v.key)));
          b.inline_61zpoe$(': ');
          this.encodePrettyUntyped_snnzj3$(v.value, b);
          if (i === (entries.size - 1 | 0))
            b.line_61zpoe$('');
        }
      }
      finally {
        b._unindent();
      }
      b.inline_61zpoe$('}');
    }
     else if (Kotlin.isType(obj, Iterable)) {
      b.line_61zpoe$('[');
      b._indent();
      try {
        var entries_0 = toList(obj);
        var i_0 = 0;
        for (var tmp$_0 = entries_0.iterator(); tmp$_0.hasNext(); ++i_0) {
          var v_0 = tmp$_0.next();
          if (i_0 !== 0)
            b.line_61zpoe$(',');
          this.encodePrettyUntyped_snnzj3$(v_0, b);
          if (i_0 === (entries_0.size - 1 | 0))
            b.line_61zpoe$('');
        }
      }
      finally {
        b._unindent();
      }
      b.inline_61zpoe$(']');
    }
     else if (typeof obj === 'string')
      b.inline_61zpoe$(this.encodeString_1(obj));
    else if (Kotlin.isNumber(obj))
      b.inline_61zpoe$(toString(obj));
    else if (Kotlin.isType(obj, CustomJsonSerializer)) {
      var $receiver = StringBuilder_init();
      obj.encodeToJson_irqrwq$($receiver);
      b.inline_61zpoe$($receiver.toString());
    }
     else {
      invalidOp("Don't know how to serialize " + toString(obj));
    }
  };
  Json.prototype.encodeString_1 = function (str) {
    var $receiver = StringBuilder_init();
    this.encodeString_0(str, $receiver);
    return $receiver.toString();
  };
  Json.prototype.encodeString_0 = function (str, b) {
    var tmp$;
    b.append_s8itvh$(34);
    tmp$ = iterator(str);
    while (tmp$.hasNext()) {
      var c = unboxChar(tmp$.next());
      switch (c) {
        case 92:
          b.append_gw00v9$('\\\\');
          break;
        case 47:
          b.append_gw00v9$('\\/');
          break;
        case 39:
          b.append_gw00v9$("\\'");
          break;
        case 34:
          b.append_gw00v9$('\\"');
          break;
        case 8:
          b.append_gw00v9$('\\b');
          break;
        case 12:
          b.append_gw00v9$('\\f');
          break;
        case 10:
          b.append_gw00v9$('\\n');
          break;
        case 13:
          b.append_gw00v9$('\\r');
          break;
        case 9:
          b.append_gw00v9$('\\t');
          break;
        default:b.append_s8itvh$(c);
          break;
      }
    }
    b.append_s8itvh$(34);
  };
  Json.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Json',
    interfaces: []
  };
  var Json_instance = null;
  function Json_getInstance() {
    if (Json_instance === null) {
      new Json();
    }
    return Json_instance;
  }
  function CustomJsonSerializer() {
  }
  CustomJsonSerializer.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'CustomJsonSerializer',
    interfaces: []
  };
  function toJson($receiver, mapper) {
    var $this = Json_getInstance();
    var tmp$;
    if (false) {
      tmp$ = $this.encodePrettyUntyped_hvn9da$(mapper.toUntyped_b1ce0a$(getKClass(Map), $receiver));
    }
     else {
      tmp$ = $this.encodeUntyped_s8jyv4$(mapper.toUntyped_b1ce0a$(getKClass(Map), $receiver));
    }
    return tmp$;
  }
  function toJsonUntyped($receiver) {
    return Json_getInstance().encodeUntyped_s8jyv4$($receiver);
  }
  function Xml(type, name, attributes, allChildren, content) {
    Xml$Companion_getInstance();
    this.type = type;
    this.name = name;
    this.attributes = attributes;
    this.allChildren = allChildren;
    this.content = content;
    this.attributesLC = toCaseInsensitiveTreeMap(this.attributes);
    var $receiver = this.name.toLowerCase();
    var tmp$;
    this.nameLC = trim_0(Kotlin.isCharSequence(tmp$ = $receiver) ? tmp$ : throwCCE()).toString();
  }
  Object.defineProperty(Xml.prototype, 'descendants', {
    get: function () {
      var $receiver = this.allChildren;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var list = plus_2(element.descendants, element);
        addAll(destination, list);
      }
      return destination;
    }
  });
  Object.defineProperty(Xml.prototype, 'allChildrenNoComments', {
    get: function () {
      var $receiver = this.allChildren;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (!get_isComment(element))
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  Object.defineProperty(Xml.prototype, 'allNodeChildren', {
    get: function () {
      var $receiver = this.allChildren;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (get_isNode(element))
          destination.add_11rb$(element);
      }
      return destination;
    }
  });
  function Xml$Companion() {
    Xml$Companion_instance = this;
  }
  Xml$Companion.prototype.Tag_imnfz6$ = function (tagName, attributes, children) {
    var destination = LinkedHashMap_init();
    var tmp$;
    tmp$ = attributes.entries.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (element.value != null) {
        destination.put_xwzc9p$(element.key, element.value);
      }
    }
    var destination_0 = ArrayList_init_1(destination.size);
    var tmp$_0;
    tmp$_0 = destination.entries.iterator();
    while (tmp$_0.hasNext()) {
      var item = tmp$_0.next();
      destination_0.add_11rb$(to(item.key, toString(item.value)));
    }
    var att = toMap(destination_0);
    return new Xml(Xml$Type$NODE_getInstance(), tagName, att, children, '');
  };
  Xml$Companion.prototype.Text_61zpoe$ = function (text) {
    return new Xml(Xml$Type$TEXT_getInstance(), '_text_', lmapOf([]), emptyList(), text);
  };
  Xml$Companion.prototype.Comment_61zpoe$ = function (text) {
    return new Xml(Xml$Type$COMMENT_getInstance(), '_comment_', lmapOf([]), emptyList(), text);
  };
  function Xml$Companion$parse$Level(children, close) {
    this.children = children;
    this.close = close;
  }
  Xml$Companion$parse$Level.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Level',
    interfaces: []
  };
  Xml$Companion$parse$Level.prototype.component1 = function () {
    return this.children;
  };
  Xml$Companion$parse$Level.prototype.component2 = function () {
    return this.close;
  };
  Xml$Companion$parse$Level.prototype.copy_a017um$ = function (children, close) {
    return new Xml$Companion$parse$Level(children === void 0 ? this.children : children, close === void 0 ? this.close : close);
  };
  Xml$Companion$parse$Level.prototype.toString = function () {
    return 'Level(children=' + Kotlin.toString(this.children) + (', close=' + Kotlin.toString(this.close)) + ')';
  };
  Xml$Companion$parse$Level.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.children) | 0;
    result = result * 31 + Kotlin.hashCode(this.close) | 0;
    return result;
  };
  Xml$Companion$parse$Level.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.children, other.children) && Kotlin.equals(this.close, other.close)))));
  };
  function Xml$Companion$parse$level(closure$stream) {
    return function closure$level() {
      var tmp$, tmp$_0;
      var children = emptyList();
      while (closure$stream.hasNext()) {
        var tag = closure$stream.next();
        if (!Kotlin.isType(tag, XmlStream$Element$ProcessingInstructionTag))
          if (Kotlin.isType(tag, XmlStream$Element$CommentTag))
            children = plus(children, Xml$Companion_getInstance().Comment_61zpoe$(tag.text));
          else if (Kotlin.isType(tag, XmlStream$Element$Text))
            children = plus(children, Xml$Companion_getInstance().Text_61zpoe$(tag.text));
          else if (Kotlin.isType(tag, XmlStream$Element$OpenCloseTag)) {
            children = plus(children, Xml$Companion_getInstance().Tag_imnfz6$(tag.name, tag.attributes, emptyList()));
          }
           else if (Kotlin.isType(tag, XmlStream$Element$OpenTag)) {
            var out = closure$level();
            if (!equals((tmp$ = out.close) != null ? tmp$.name : null, tag.name)) {
              throw IllegalArgumentException_init('Expected ' + tag.name + ' but was ' + toString((tmp$_0 = out.close) != null ? tmp$_0.name : null));
            }
            children = plus(children, new Xml(Xml$Type$NODE_getInstance(), tag.name, tag.attributes, out.children, ''));
          }
           else if (Kotlin.isType(tag, XmlStream$Element$CloseTag))
            return new Xml$Companion$parse$Level(children, tag);
          else
            throw IllegalArgumentException_init('Unhandled ' + tag);
      }
      return new Xml$Companion$parse$Level(children, null);
    };
  }
  Xml$Companion.prototype.parse_61zpoe$ = function (str) {
    var tmp$, tmp$_0;
    try {
      var stream = XmlStream_getInstance().parse_61zpoe$(str).iterator();
      var level = Xml$Companion$parse$level(stream);
      var children = level().children;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_1;
        tmp$_1 = children.iterator();
        while (tmp$_1.hasNext()) {
          var element = tmp$_1.next();
          if (element.type === Xml$Type$NODE_getInstance()) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      return (tmp$_0 = (tmp$ = firstOrNull$result) != null ? tmp$ : firstOrNull(children)) != null ? tmp$_0 : Xml$Companion_getInstance().Text_61zpoe$('');
    }
     catch (t) {
      if (Kotlin.isType(t, NoSuchElementException)) {
        println('ERROR: XML: ' + str + ' thrown a NoSuchElementException');
        return Xml$Companion_getInstance().Text_61zpoe$('!!ERRORED!!');
      }
       else
        throw t;
    }
  };
  Xml$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Xml$Companion_instance = null;
  function Xml$Companion_getInstance() {
    if (Xml$Companion_instance === null) {
      new Xml$Companion();
    }
    return Xml$Companion_instance;
  }
  Object.defineProperty(Xml.prototype, 'text', {
    get: function () {
      switch (this.type.name) {
        case 'NODE':
          var $receiver = this.allChildren;
          var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
          var tmp$;
          tmp$ = $receiver.iterator();
          while (tmp$.hasNext()) {
            var item = tmp$.next();
            destination.add_11rb$(item.text);
          }

          return joinToString(destination, '');
        case 'TEXT':
          return this.content;
        case 'COMMENT':
          return '';
        default:return Kotlin.noWhenBranchMatched();
      }
    }
  });
  Xml.prototype.toOuterXmlIndented_2swh6d$ = function (indenter) {
    if (indenter === void 0)
      indenter = new Indenter();
    switch (this.type.name) {
      case 'NODE':
        if (this.allChildren.isEmpty()) {
          indenter.line_61zpoe$('<' + this.name + this.attributesStr + '/>');
        }
         else {
          indenter.line_61zpoe$('<' + this.name + this.attributesStr + '>');
          indenter._indent();
          try {
            var tmp$;
            tmp$ = this.allChildren.iterator();
            while (tmp$.hasNext()) {
              var child = tmp$.next();
              child.toOuterXmlIndented_2swh6d$(indenter);
            }
          }
          finally {
            indenter._unindent();
          }
          indenter.line_61zpoe$('<\/' + this.name + '>');
        }

        break;
      case 'TEXT':
        indenter.line_61zpoe$(this.content);
        break;
      case 'COMMENT':
        indenter.line_61zpoe$('<!--' + this.content + '-->');
        break;
      default:Kotlin.noWhenBranchMatched();
        break;
    }
    return indenter;
  };
  Object.defineProperty(Xml.prototype, 'attributesStr', {
    get: function () {
      var $receiver = toList_1(this.attributes);
      var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
      var tmp$;
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(' ' + item.first + '=' + '"' + item.second + '"');
      }
      return joinToString(destination, '');
    }
  });
  Object.defineProperty(Xml.prototype, 'outerXml', {
    get: function () {
      switch (this.type.name) {
        case 'NODE':
          if (this.allChildren.isEmpty()) {
            return '<' + this.name + this.attributesStr + '/>';
          }
           else {
            var $receiver = this.allChildren;
            var transform = getPropertyCallableRef('outerXml', 1, function ($receiver) {
              return $receiver.outerXml;
            });
            var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
            var tmp$;
            tmp$ = $receiver.iterator();
            while (tmp$.hasNext()) {
              var item = tmp$.next();
              destination.add_11rb$(transform(item));
            }
            var children = joinToString(destination, '');
            return '<' + this.name + this.attributesStr + '>' + children + '<\/' + this.name + '>';
          }

        case 'TEXT':
          return this.content;
        case 'COMMENT':
          return '<!--' + this.content + '-->';
        default:return Kotlin.noWhenBranchMatched();
      }
    }
  });
  Object.defineProperty(Xml.prototype, 'innerXml', {
    get: function () {
      switch (this.type.name) {
        case 'NODE':
          var $receiver = this.allChildren;
          var transform = getPropertyCallableRef('outerXml', 1, function ($receiver) {
            return $receiver.outerXml;
          });
          var destination = ArrayList_init_1(collectionSizeOrDefault($receiver, 10));
          var tmp$;
          tmp$ = $receiver.iterator();
          while (tmp$.hasNext()) {
            var item = tmp$.next();
            destination.add_11rb$(transform(item));
          }

          return joinToString(destination, '');
        case 'TEXT':
          return this.content;
        case 'COMMENT':
          return '<!--' + this.content + '-->';
        default:return Kotlin.noWhenBranchMatched();
      }
    }
  });
  Xml.prototype.get_61zpoe$ = function (name) {
    return this.children_61zpoe$(name);
  };
  Xml.prototype.children_61zpoe$ = function (name) {
    var $receiver = this.allChildren;
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (equals_0(element.name, name, true))
        destination.add_11rb$(element);
    }
    return destination;
  };
  Xml.prototype.child_61zpoe$ = function (name) {
    return firstOrNull_0(this.children_61zpoe$(name));
  };
  Xml.prototype.childText_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.child_61zpoe$(name)) != null ? tmp$.text : null;
  };
  Xml.prototype.hasAttribute_61zpoe$ = function (key) {
    return this.attributesLC.containsKey_11rb$(key);
  };
  Xml.prototype.attribute_61zpoe$ = function (name) {
    return this.attributesLC.get_11rb$(name);
  };
  Xml.prototype.getString_61zpoe$ = function (name) {
    return this.attributesLC.get_11rb$(name);
  };
  Xml.prototype.getInt_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toInt(tmp$) : null;
  };
  Xml.prototype.getLong_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toLong_0(tmp$) : null;
  };
  Xml.prototype.getDouble_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDouble(tmp$) : null;
  };
  Xml.prototype.getFloat_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDouble(tmp$) : null;
  };
  Xml.prototype.double_io5o9c$ = function (name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = 0.0;
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDoubleOrNull(tmp$) : null) != null ? tmp$_0 : defaultValue;
  };
  Xml.prototype.float_9sobi5$ = function (name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = 0.0;
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDoubleOrNull(tmp$) : null) != null ? tmp$_0 : defaultValue;
  };
  Xml.prototype.int_bm4lxs$ = function (name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = 0;
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toIntOrNull(tmp$) : null) != null ? tmp$_0 : defaultValue;
  };
  Xml.prototype.long_4wgjuj$ = function (name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = L0;
    var tmp$, tmp$_0;
    return (tmp$_0 = (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toLongOrNull(tmp$) : null) != null ? tmp$_0 : defaultValue;
  };
  Xml.prototype.str_puj7f4$ = function (name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = '';
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? tmp$ : defaultValue;
  };
  Xml.prototype.doubleNull_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDoubleOrNull(tmp$) : null;
  };
  Xml.prototype.floatNull_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toDoubleOrNull(tmp$) : null;
  };
  Xml.prototype.intNull_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toIntOrNull(tmp$) : null;
  };
  Xml.prototype.longNull_61zpoe$ = function (name) {
    var tmp$;
    return (tmp$ = this.attributesLC.get_11rb$(name)) != null ? toLongOrNull(tmp$) : null;
  };
  Xml.prototype.strNull_61zpoe$ = function (name) {
    return this.attributesLC.get_11rb$(name);
  };
  Xml.prototype.toString = function () {
    return this.outerXml;
  };
  function Xml$Type(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function Xml$Type_initFields() {
    Xml$Type_initFields = function () {
    };
    Xml$Type$NODE_instance = new Xml$Type('NODE', 0);
    Xml$Type$TEXT_instance = new Xml$Type('TEXT', 1);
    Xml$Type$COMMENT_instance = new Xml$Type('COMMENT', 2);
  }
  var Xml$Type$NODE_instance;
  function Xml$Type$NODE_getInstance() {
    Xml$Type_initFields();
    return Xml$Type$NODE_instance;
  }
  var Xml$Type$TEXT_instance;
  function Xml$Type$TEXT_getInstance() {
    Xml$Type_initFields();
    return Xml$Type$TEXT_instance;
  }
  var Xml$Type$COMMENT_instance;
  function Xml$Type$COMMENT_getInstance() {
    Xml$Type_initFields();
    return Xml$Type$COMMENT_instance;
  }
  Xml$Type.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Type',
    interfaces: [Enum]
  };
  function Xml$Type$values() {
    return [Xml$Type$NODE_getInstance(), Xml$Type$TEXT_getInstance(), Xml$Type$COMMENT_getInstance()];
  }
  Xml$Type.values = Xml$Type$values;
  function Xml$Type$valueOf(name) {
    switch (name) {
      case 'NODE':
        return Xml$Type$NODE_getInstance();
      case 'TEXT':
        return Xml$Type$TEXT_getInstance();
      case 'COMMENT':
        return Xml$Type$COMMENT_getInstance();
      default:throwISE('No enum constant com.soywiz.korio.serialization.xml.Xml.Type.' + name);
    }
  }
  Xml$Type.valueOf_61zpoe$ = Xml$Type$valueOf;
  Xml.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Xml',
    interfaces: []
  };
  Xml.prototype.component1 = function () {
    return this.type;
  };
  Xml.prototype.component2 = function () {
    return this.name;
  };
  Xml.prototype.component3 = function () {
    return this.attributes;
  };
  Xml.prototype.component4 = function () {
    return this.allChildren;
  };
  Xml.prototype.component5 = function () {
    return this.content;
  };
  Xml.prototype.copy_73d6zo$ = function (type, name, attributes, allChildren, content) {
    return new Xml(type === void 0 ? this.type : type, name === void 0 ? this.name : name, attributes === void 0 ? this.attributes : attributes, allChildren === void 0 ? this.allChildren : allChildren, content === void 0 ? this.content : content);
  };
  Xml.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.type) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.attributes) | 0;
    result = result * 31 + Kotlin.hashCode(this.allChildren) | 0;
    result = result * 31 + Kotlin.hashCode(this.content) | 0;
    return result;
  };
  Xml.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.type, other.type) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.attributes, other.attributes) && Kotlin.equals(this.allChildren, other.allChildren) && Kotlin.equals(this.content, other.content)))));
  };
  function get_isText($receiver) {
    return $receiver.type === Xml$Type$TEXT_getInstance();
  }
  function get_isComment($receiver) {
    return $receiver.type === Xml$Type$COMMENT_getInstance();
  }
  function get_isNode($receiver) {
    return $receiver.type === Xml$Type$NODE_getInstance();
  }
  function str($receiver, name, defaultValue) {
    if (defaultValue === void 0)
      defaultValue = '';
    var tmp$;
    return (tmp$ = first_1($receiver).attributes.get_11rb$(name)) != null ? tmp$ : defaultValue;
  }
  function children($receiver, name) {
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var list = element.children_61zpoe$(name);
      addAll(destination, list);
    }
    return destination;
  }
  function get_allChildren($receiver) {
    var transform = getPropertyCallableRef('allChildren', 1, function ($receiver) {
      return $receiver.allChildren;
    });
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var list = transform(element);
      addAll(destination, list);
    }
    return destination;
  }
  function get_1($receiver, name) {
    return children($receiver, name);
  }
  function toXml($receiver) {
    return Xml$Companion_getInstance().parse_61zpoe$($receiver);
  }
  function Xml_0(str) {
    return Xml$Companion_getInstance().parse_61zpoe$(str);
  }
  function readXml($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readXml($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readXml($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readXml.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readXml.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readXml.prototype.constructor = Coroutine$readXml;
  Coroutine$readXml.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.readString_qa9gbo$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return Xml_0(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function XmlEntities() {
    XmlEntities_instance = this;
    this.charToEntity_0 = lmapOf([to(toBoxedChar(34), '&quot;'), to(toBoxedChar(39), '&apos;'), to(toBoxedChar(60), '&lt;'), to(toBoxedChar(62), '&gt;'), to(toBoxedChar(38), '&amp;')]);
    this.entities_0 = StrReader$Literals$Companion_getInstance().fromList_kand9s$(copyToArray(this.charToEntity_0.values));
    this.entityToChar_0 = flip(this.charToEntity_0);
  }
  function XmlEntities$encode$lambda(this$XmlEntities) {
    return function (it) {
      var tmp$;
      return (tmp$ = this$XmlEntities.charToEntity_0.get_11rb$(it)) != null ? tmp$ : String.fromCharCode(unboxChar(it));
    };
  }
  XmlEntities.prototype.encode_61zpoe$ = function (str) {
    return transform(str, XmlEntities$encode$lambda(this));
  };
  XmlEntities.prototype.decode_61zpoe$ = function (str) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    var r = new StrReader(str);
    var out = '';
    while (!r.eof) {
      var c = unboxChar(r.readChar());
      if (c === 38) {
        var value = (tmp$ = r.readUntilIncluded_s8itvh$(59)) != null ? tmp$ : '';
        var full = '&' + value;
        tmp$_2 = out;
        if (startsWith_0(value, 35)) {
          var tmp$_3 = String;
          var tmp$_4 = tmp$_3.fromCharCode;
          var endIndex = value.length - 1 | 0;
          tmp$_1 = tmp$_4.call(tmp$_3, toChar(toInt(value.substring(1, endIndex))));
        }
         else {
          var $receiver = this.entityToChar_0;
          var tmp$_5;
          if ((Kotlin.isType(tmp$_5 = $receiver, Map) ? tmp$_5 : throwCCE()).containsKey_11rb$(full)) {
            tmp$_1 = (tmp$_0 = unboxChar(this.entityToChar_0.get_11rb$(full))) === null ? null : String.fromCharCode(tmp$_0);
          }
           else {
            tmp$_1 = full;
          }
        }
        out = tmp$_2 + tmp$_1;
      }
       else
        out += String.fromCharCode(c);
    }
    return out;
  };
  XmlEntities.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'XmlEntities',
    interfaces: []
  };
  var XmlEntities_instance = null;
  function XmlEntities_getInstance() {
    if (XmlEntities_instance === null) {
      new XmlEntities();
    }
    return XmlEntities_instance;
  }
  function XmlStream() {
    XmlStream_instance = this;
  }
  XmlStream.prototype.parse_61zpoe$ = function (str) {
    return this.parse_f6s5ko$(new StrReader(str));
  };
  XmlStream.prototype.parse_f6s5ko$ = function (r) {
    return new XmlStream$Xml2Iterable(r);
  };
  function XmlStream$Xml2Iterator(r2) {
    this.r = r2.clone();
    this.buffer = '';
    this.hasMore = true;
    this.current = null;
  }
  XmlStream$Xml2Iterator.prototype.flushBuffer = function () {
    if (this.buffer.length > 0) {
      this.current = new XmlStream$Element$Text(XmlEntities_getInstance().decode_61zpoe$(this.buffer));
      this.buffer = '';
    }
  };
  XmlStream$Xml2Iterator.prototype.prepare = function () {
    var tmp$, tmp$_0, tmp$_1;
    if (this.current != null)
      return;
    if (this.r.eof) {
      this.current = null;
      this.hasMore = false;
      return;
    }
    mainLoop: while (!this.r.eof) {
      if (unboxChar(this.r.peekChar()) === 60) {
        this.flushBuffer();
        if (this.current != null)
          return;
        this.r.readExpect_61zpoe$('<');
        if (this.r.matchLit_61zpoe$('![CDATA[') != null) {
          var start = this.r.pos;
          while (!this.r.eof) {
            var end = this.r.pos;
            if (this.r.matchLit_61zpoe$(']]>') != null) {
              this.current = new XmlStream$Element$Text(this.r.createRange_n8acyv$(until(start, end)).text);
              return;
            }
            this.r.readChar();
          }
          break mainLoop;
        }
         else if (this.r.matchLit_61zpoe$('!--') != null) {
          var start_0 = this.r.pos;
          while (!this.r.eof) {
            var end_0 = this.r.pos;
            if (this.r.matchLit_61zpoe$('-->') != null) {
              this.current = new XmlStream$Element$CommentTag(this.r.createRange_n8acyv$(until(start_0, end_0)).text);
              return;
            }
            this.r.readChar();
          }
          break mainLoop;
        }
         else {
          this.r.skipSpaces();
          var processingInstruction = this.r.matchLit_61zpoe$('?') != null;
          var processingEntityOrDocType = this.r.matchLit_61zpoe$('!') != null;
          var close = this.r.matchLit_61zpoe$('/') != null || processingEntityOrDocType;
          this.r.skipSpaces();
          var tmp$_2;
          if ((tmp$ = this.r.matchIdentifier()) != null)
            tmp$_2 = tmp$;
          else {
            throw IllegalStateException_init(("Couldn't match identifier after '<', offset=" + this.r.pos + ", around='" + this.r.peek_za3lpa$(10) + "'").toString());
          }
          var name = tmp$_2;
          this.r.skipSpaces();
          var attributes = lmapOf([]);
          while (unboxChar(this.r.peekChar()) !== 63 && unboxChar(this.r.peekChar()) !== 47 && unboxChar(this.r.peekChar()) !== 62) {
            tmp$_0 = this.matchStringOrId_0(this.r);
            if (tmp$_0 == null) {
              throw IllegalArgumentException_init('Malformed document or unsupported xml construct around ~' + this.r.peek_za3lpa$(10) + "~ for name '" + name + "'");
            }
            var key = tmp$_0;
            this.r.skipSpaces();
            if (this.r.matchLit_61zpoe$('=') != null) {
              this.r.skipSpaces();
              var argsQuote = this.matchStringOrId_0(this.r);
              if (argsQuote != null) {
                var tmp$_3 = XmlEntities_getInstance();
                var endIndex = argsQuote.length - 1 | 0;
                tmp$_1 = tmp$_3.decode_61zpoe$(argsQuote.substring(1, endIndex));
              }
               else {
                var argsNq = this.r.matchIdentifier();
                tmp$_1 = XmlEntities_getInstance().decode_61zpoe$(ensureNotNull(argsNq));
              }
              var value = tmp$_1;
              attributes.put_xwzc9p$(key, value);
            }
             else {
              attributes.put_xwzc9p$(key, key);
            }
            this.r.skipSpaces();
          }
          var openclose = this.r.matchLit_61zpoe$('/') != null;
          var processingInstructionEnd = this.r.matchLit_61zpoe$('?') != null;
          this.r.readExpect_61zpoe$('>');
          this.current = processingInstruction || processingEntityOrDocType ? new XmlStream$Element$ProcessingInstructionTag(name, attributes) : openclose ? new XmlStream$Element$OpenCloseTag(name, attributes) : close ? new XmlStream$Element$CloseTag(name) : new XmlStream$Element$OpenTag(name, attributes);
          return;
        }
      }
       else {
        this.buffer += String.fromCharCode(unboxChar(this.r.readChar()));
      }
    }
    this.hasMore = this.buffer.length > 0;
    this.flushBuffer();
  };
  XmlStream$Xml2Iterator.prototype.matchStringOrId_0 = function ($receiver) {
    var tmp$;
    return (tmp$ = $receiver.matchSingleOrDoubleQuoteString()) != null ? tmp$ : $receiver.matchIdentifier();
  };
  XmlStream$Xml2Iterator.prototype.next = function () {
    this.prepare();
    var out = this.current;
    this.current = null;
    return ensureNotNull(out);
  };
  XmlStream$Xml2Iterator.prototype.hasNext = function () {
    this.prepare();
    return this.hasMore;
  };
  XmlStream$Xml2Iterator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Xml2Iterator',
    interfaces: [Iterator]
  };
  function XmlStream$Xml2Iterable(reader2) {
    this.reader2 = reader2;
    this.reader = this.reader2.clone();
  }
  XmlStream$Xml2Iterable.prototype.iterator = function () {
    return new XmlStream$Xml2Iterator(this.reader);
  };
  XmlStream$Xml2Iterable.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Xml2Iterable',
    interfaces: [Iterable]
  };
  function XmlStream$Element() {
  }
  function XmlStream$Element$ProcessingInstructionTag(name, attributes) {
    XmlStream$Element.call(this);
    this.name = name;
    this.attributes = attributes;
  }
  XmlStream$Element$ProcessingInstructionTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProcessingInstructionTag',
    interfaces: [XmlStream$Element]
  };
  function XmlStream$Element$OpenCloseTag(name, attributes) {
    XmlStream$Element.call(this);
    this.name = name;
    this.attributes = attributes;
  }
  XmlStream$Element$OpenCloseTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OpenCloseTag',
    interfaces: [XmlStream$Element]
  };
  function XmlStream$Element$OpenTag(name, attributes) {
    XmlStream$Element.call(this);
    this.name = name;
    this.attributes = attributes;
  }
  XmlStream$Element$OpenTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'OpenTag',
    interfaces: [XmlStream$Element]
  };
  function XmlStream$Element$CommentTag(text) {
    XmlStream$Element.call(this);
    this.text = text;
  }
  XmlStream$Element$CommentTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CommentTag',
    interfaces: [XmlStream$Element]
  };
  function XmlStream$Element$CloseTag(name) {
    XmlStream$Element.call(this);
    this.name = name;
  }
  XmlStream$Element$CloseTag.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CloseTag',
    interfaces: [XmlStream$Element]
  };
  function XmlStream$Element$Text(text) {
    XmlStream$Element.call(this);
    this.text = text;
  }
  XmlStream$Element$Text.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Text',
    interfaces: [XmlStream$Element]
  };
  XmlStream$Element.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Element',
    interfaces: []
  };
  XmlStream.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'XmlStream',
    interfaces: []
  };
  var XmlStream_instance = null;
  function XmlStream_getInstance() {
    if (XmlStream_instance === null) {
      new XmlStream();
    }
    return XmlStream_instance;
  }
  function Yaml() {
    Yaml_instance = this;
    this.TRACE = false;
  }
  Yaml.prototype.decode_61zpoe$ = function (str) {
    return this.read_0(new ListReader(this.tokenize_qdjkzt$(new StrReader(str))), 0);
  };
  Yaml.prototype.decodeToType_iy04uf$ = defineInlineFunction('korio-js.com.soywiz.korio.serialization.yaml.Yaml.decodeToType_iy04uf$', wrapFunction(function () {
    var serialization = _.com.soywiz.korio.serialization;
    var getKClass = Kotlin.getKClass;
    return function (T_0, isT, s, mapper) {
      if (mapper === void 0)
        mapper = serialization.Mapper;
      return this.decodeToType_27ii8w$(s, getKClass(T_0), mapper);
    };
  }));
  Yaml.prototype.decodeToType_27ii8w$ = function (s, clazz, mapper) {
    if (mapper === void 0)
      mapper = Mapper;
    return mapper.toTyped_bju3lo$(clazz, this.decode_61zpoe$(s));
  };
  Yaml.prototype.read_61zpoe$ = function (str) {
    return this.read_0(new ListReader(this.tokenize_qdjkzt$(new StrReader(str))), 0);
  };
  Yaml.prototype.parseStr_1 = function (tok) {
    if (Kotlin.isType(tok, Yaml$Token$STR))
      return tok.ustr;
    else
      return this.parseStr_0(tok.str);
  };
  Yaml.prototype.parseStr_0 = function (str) {
    var tmp$, tmp$_0;
    switch (str) {
      case 'null':
        return null;
      case 'true':
        return true;
      case 'false':
        return false;
      default:return (tmp$_0 = (tmp$ = toIntOrNull(str)) != null ? tmp$ : toDoubleOrNull(str)) != null ? tmp$_0 : str;
    }
  };
  Yaml.prototype.read_0 = function (s, level) {
    var tmp$;
    var list = null;
    var map = null;
    var levelStr = this.TRACE ? repeat('  ', level) : '';
    linehandle: while (s.hasMore) {
      var token = s.peek();
      var line = Kotlin.isType(tmp$ = token, Yaml$Token$LINE) ? tmp$ : null;
      var lineLevel = line != null ? line.level : null;
      if (this.TRACE && line != null)
        println(levelStr + 'LINE(' + toString(lineLevel) + ')');
      if (lineLevel != null && lineLevel > level) {
        var res = this.read_0(s, lineLevel);
        if (list != null) {
          if (this.TRACE)
            println(levelStr + 'CHILD.list.add: ' + toString(res));
          list.add_11rb$(res);
        }
         else {
          if (this.TRACE)
            println(levelStr + 'CHILD.return: ' + toString(res));
          return res;
        }
      }
       else if (lineLevel != null && lineLevel < level) {
        if (this.TRACE)
          println(levelStr + 'PARENT: level < line.level');
        break;
      }
       else {
        if (line != null)
          s.read();
        if (s.eof)
          break;
        var item = s.peek();
        switch (item.str) {
          case '-':
            if (!equals(s.read().str, '-'))
              get_invalidOp();
            if (list == null) {
              list = ArrayList_init();
            }

            if (this.TRACE)
              println(levelStr + 'LIST_ITEM...');
            var res_0 = this.read_0(s, level + 1 | 0);
            if (this.TRACE)
              println(levelStr + 'LIST_ITEM: ' + toString(res_0));
            list.add_11rb$(res_0);
            break;
          case '[':
            if (!equals(s.read().str, '['))
              get_invalidOp();
            var olist = ArrayList_init();
            array: while (!equals(s.peek().str, ']')) {
              var element = this.read_0(s, level + 1 | 0);
              olist.add_11rb$(element);
              var p = s.peek().str;
              switch (p) {
                case ',':
                  s.read();
                  continue array;
                case ']':
                  break array;
                default:invalidOp("Unexpected '" + p + "'");
                  break;
              }
            }

            if (!equals(s.read().str, ']'))
              get_invalidOp();
            return olist;
          default:var kkey = s.read();
            var key = kkey.str;
            if (s.eof || !equals(s.peek().str, ':')) {
              if (this.TRACE)
                println(levelStr + 'LIT: ' + key);
              return this.parseStr_1(kkey);
            }
             else {
              if (map == null)
                map = lmapOf([]);
              if (!equals(s.read().str, ':'))
                get_invalidOp();
              if (this.TRACE)
                println(levelStr + 'MAP[' + key + ']...');
              var value = this.read_0(s, level + 1 | 0);
              map.put_xwzc9p$(key, value);
              if (this.TRACE)
                println(levelStr + 'MAP[' + key + ']: ' + toString(value));
            }

            break;
        }
      }
    }
    if (this.TRACE)
      println(levelStr + 'RETURN: list=' + toString(list) + ', map=' + toString(map));
    return list != null ? list : map;
  };
  var isBlank = Kotlin.kotlin.text.isBlank_gw00vp$;
  function Yaml$tokenize$flush(closure$str, closure$out) {
    return function () {
      var tmp$ = !isBlank(closure$str.v);
      if (tmp$) {
        tmp$ = closure$str.v.length > 0;
      }
      if (tmp$) {
        var tmp$_0 = closure$out;
        var $receiver = closure$str.v;
        var tmp$_1;
        var element = new Yaml$Token$ID(trim_0(Kotlin.isCharSequence(tmp$_1 = $receiver) ? tmp$_1 : throwCCE()).toString());
        tmp$_0.add_11rb$(element);
        closure$str.v = '';
      }
    };
  }
  var StrReader$readWhile$lambda_0 = wrapFunction(function () {
    return function (closure$filter, this$StrReader) {
      return function () {
        var $this = this$StrReader;
        var filter = closure$filter;
        while ($this.hasMore && filter($this.peekChar()))
          $this.readChar();
        return Unit;
      };
    };
  });
  Yaml.prototype.tokenize_qdjkzt$ = function ($receiver) {
    var out = ArrayList_init();
    var s = $receiver;
    var str = {v: ''};
    var flush = Yaml$tokenize$flush(str, out);
    var indents = LinkedList_init();
    linestart: while ($receiver.hasMore) {
      flush();
      var tmp$;
      var start = $receiver.pos;
      while (true) {
        var tmp$_0 = $receiver.hasMore;
        if (tmp$_0) {
          tmp$_0 = isWhitespace(unboxChar($receiver.peekChar()));
        }
        if (!tmp$_0)
          break;
        $receiver.readChar();
      }
      var end = $receiver.pos;
      var indentStr = replace((tmp$ = end > start ? $receiver.slice_vux9f0$(start, end) : null) != null ? tmp$ : '', '\t', '     ');
      var indent = indentStr.length;
      if (indents.isEmpty() || indent > ensureNotNull(indents.last)) {
        indents.add_11rb$(indent);
      }
       else {
        while (!indents.isEmpty() && indent < ensureNotNull(indents.last)) {
          indents.removeLast();
        }
        if (indents.isEmpty())
          get_invalidOp();
      }
      var indentLevel = indents.size - 1 | 0;
      while (!out.isEmpty() && Kotlin.isType(last(out), Yaml$Token$LINE)) {
        out.removeAt_za3lpa$(out.size - 1 | 0);
      }
      var element = new Yaml$Token$LINE(indentStr, indentLevel);
      out.add_11rb$(element);
      while ($receiver.hasMore) {
        var c = unboxChar($receiver.read());
        switch (c) {
          case 58:
          case 45:
          case 91:
          case 93:
          case 44:
            flush();
            var element_0 = new Yaml$Token$SYMBOL(String.fromCharCode(c));
            out.add_11rb$(element_0);
            break;
          case 35:
            flush();
            this.readUntilLineEnd_qdjkzt$($receiver);
            $receiver.skip_za3lpa$();
            continue linestart;
          case 10:
            flush();
            continue linestart;
          case 34:
          case 39:
            flush();
            s.unread_za3lpa$();
            var element_1 = new Yaml$Token$STR(readStringLit(s));
            out.add_11rb$(element_1);
            break;
          default:str.v += String.fromCharCode(c);
            break;
        }
      }
    }
    flush();
    return out;
  };
  function Yaml$Token() {
  }
  function Yaml$Token$LINE(str, level) {
    this.str_bmiag0$_0 = str;
    this.level = level;
  }
  Object.defineProperty(Yaml$Token$LINE.prototype, 'str', {
    get: function () {
      return this.str_bmiag0$_0;
    }
  });
  Yaml$Token$LINE.prototype.toString = function () {
    return 'LINE(' + this.level + ')';
  };
  Yaml$Token$LINE.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LINE',
    interfaces: [Yaml$Token]
  };
  Yaml$Token$LINE.prototype.component1 = function () {
    return this.str;
  };
  Yaml$Token$LINE.prototype.component2 = function () {
    return this.level;
  };
  Yaml$Token$LINE.prototype.copy_bm4lxs$ = function (str, level) {
    return new Yaml$Token$LINE(str === void 0 ? this.str : str, level === void 0 ? this.level : level);
  };
  Yaml$Token$LINE.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    result = result * 31 + Kotlin.hashCode(this.level) | 0;
    return result;
  };
  Yaml$Token$LINE.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.str, other.str) && Kotlin.equals(this.level, other.level)))));
  };
  function Yaml$Token$ID(str) {
    this.str_z6v5y1$_0 = str;
  }
  Object.defineProperty(Yaml$Token$ID.prototype, 'str', {
    get: function () {
      return this.str_z6v5y1$_0;
    }
  });
  Yaml$Token$ID.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ID',
    interfaces: [Yaml$Token]
  };
  Yaml$Token$ID.prototype.component1 = function () {
    return this.str;
  };
  Yaml$Token$ID.prototype.copy_61zpoe$ = function (str) {
    return new Yaml$Token$ID(str === void 0 ? this.str : str);
  };
  Yaml$Token$ID.prototype.toString = function () {
    return 'ID(str=' + Kotlin.toString(this.str) + ')';
  };
  Yaml$Token$ID.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    return result;
  };
  Yaml$Token$ID.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.str, other.str))));
  };
  function Yaml$Token$STR(str) {
    this.str_3qhttj$_0 = str;
    this.ustr = unquote(this.str);
  }
  Object.defineProperty(Yaml$Token$STR.prototype, 'str', {
    get: function () {
      return this.str_3qhttj$_0;
    }
  });
  Yaml$Token$STR.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'STR',
    interfaces: [Yaml$Token]
  };
  Yaml$Token$STR.prototype.component1 = function () {
    return this.str;
  };
  Yaml$Token$STR.prototype.copy_61zpoe$ = function (str) {
    return new Yaml$Token$STR(str === void 0 ? this.str : str);
  };
  Yaml$Token$STR.prototype.toString = function () {
    return 'STR(str=' + Kotlin.toString(this.str) + ')';
  };
  Yaml$Token$STR.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    return result;
  };
  Yaml$Token$STR.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.str, other.str))));
  };
  function Yaml$Token$SYMBOL(str) {
    this.str_q5hbek$_0 = str;
  }
  Object.defineProperty(Yaml$Token$SYMBOL.prototype, 'str', {
    get: function () {
      return this.str_q5hbek$_0;
    }
  });
  Yaml$Token$SYMBOL.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SYMBOL',
    interfaces: [Yaml$Token]
  };
  Yaml$Token$SYMBOL.prototype.component1 = function () {
    return this.str;
  };
  Yaml$Token$SYMBOL.prototype.copy_61zpoe$ = function (str) {
    return new Yaml$Token$SYMBOL(str === void 0 ? this.str : str);
  };
  Yaml$Token$SYMBOL.prototype.toString = function () {
    return 'SYMBOL(str=' + Kotlin.toString(this.str) + ')';
  };
  Yaml$Token$SYMBOL.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    return result;
  };
  Yaml$Token$SYMBOL.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.str, other.str))));
  };
  Yaml$Token.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Token',
    interfaces: []
  };
  var StrReader$readUntil$lambda = wrapFunction(function () {
    return function (closure$filter, this$StrReader) {
      return function () {
        var $this = this$StrReader;
        var filter = closure$filter;
        while ($this.hasMore && !filter($this.peekChar()))
          $this.readChar();
        return Unit;
      };
    };
  });
  Yaml.prototype.readUntilLineEnd_qdjkzt$ = function ($receiver) {
    var tmp$;
    var start = $receiver.pos;
    while (true) {
      var tmp$_0 = $receiver.hasMore;
      if (tmp$_0) {
        tmp$_0 = !(unboxChar($receiver.peekChar()) === 10);
      }
      if (!tmp$_0)
        break;
      $receiver.readChar();
    }
    var end = $receiver.pos;
    return (tmp$ = end > start ? $receiver.slice_vux9f0$(start, end) : null) != null ? tmp$ : '';
  };
  Yaml.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Yaml',
    interfaces: []
  };
  var Yaml_instance = null;
  function Yaml_getInstance() {
    if (Yaml_instance === null) {
      new Yaml();
    }
    return Yaml_instance;
  }
  function AsyncBufferedInputStream(base, bufferSize) {
    if (bufferSize === void 0)
      bufferSize = 8192;
    this.base = base;
    this.bufferSize = bufferSize;
    this.buf_0 = new SyncProduceConsumerByteBuffer();
    this.queue_0 = new AsyncThread();
  }
  function AsyncBufferedInputStream$require$lambda(this$AsyncBufferedInputStream_0, closure$len_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncBufferedInputStream$require$lambda(this$AsyncBufferedInputStream_0, closure$len_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncBufferedInputStream$require$lambda(this$AsyncBufferedInputStream_0, closure$len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$AsyncBufferedInputStream = this$AsyncBufferedInputStream_0;
    this.local$closure$len = closure$len_0;
    this.local$tmp$ = void 0;
  }
  Coroutine$AsyncBufferedInputStream$require$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncBufferedInputStream$require$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncBufferedInputStream$require$lambda.prototype.constructor = Coroutine$AsyncBufferedInputStream$require$lambda;
  Coroutine$AsyncBufferedInputStream$require$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$this$AsyncBufferedInputStream.buf_0.available >= this.local$closure$len) {
              this.state_0 = 4;
              continue;
            }

            this.local$tmp$ = this.local$this$AsyncBufferedInputStream.buf_0;
            this.state_0 = 3;
            this.result_0 = readBytesUpToFirst(this.local$this$AsyncBufferedInputStream.base, this.local$this$AsyncBufferedInputStream.bufferSize, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$tmp$.produce_fqrh44$(this.result_0);
            this.state_0 = 2;
            continue;
          case 4:
            return Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncBufferedInputStream.prototype.require_za3lpa$ = function (len, continuation) {
    if (len === void 0)
      len = 1;
    return this.queue_0.invoke_lnyleu$(AsyncBufferedInputStream$require$lambda(this, len), continuation);
  };
  AsyncBufferedInputStream.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_3(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_3($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_3.prototype.constructor = Coroutine$read_mj6st8$_3;
  Coroutine$read_mj6st8$_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.require_za3lpa$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.$this.buf_0.consume_mj6st8$(this.local$buffer, this.local$offset, this.local$len);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncBufferedInputStream.prototype.readBufferedUntil_vlsdy4$ = function (end_0, including_0, limit_0, continuation_0, suspended) {
    var instance = new Coroutine$readBufferedUntil_vlsdy4$(this, end_0, including_0, limit_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$readBufferedUntil_vlsdy4$($this, end_0, including_0, limit_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$out = void 0;
    this.local$end = end_0;
    this.local$including = including_0;
    this.local$limit = limit_0;
  }
  Coroutine$readBufferedUntil_vlsdy4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBufferedUntil_vlsdy4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBufferedUntil_vlsdy4$.prototype.constructor = Coroutine$readBufferedUntil_vlsdy4$;
  Coroutine$readBufferedUntil_vlsdy4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$including === void 0)
              this.local$including = true;
            if (this.local$limit === void 0)
              this.local$limit = 4096;
            this.local$out = new ByteArrayBuilder();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.$this.require_za3lpa$(void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var chunk = this.$this.buf_0.consumeUntil_vlsdy4$(this.local$end, this.local$including, this.local$limit);
            this.local$out.append_fqrh44$(chunk);
            if (!(chunk.length === 0) && last_0(chunk) === this.local$end) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 2;
            continue;
          case 5:
            return this.local$out.toByteArray();
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncBufferedInputStream.prototype.readUntil_vlsdy4$ = function (end, including, limit, continuation) {
    if (including === void 0)
      including = true;
    if (limit === void 0)
      limit = 4096;
    return this.readBufferedUntil_vlsdy4$(end, including, limit, continuation);
  };
  AsyncBufferedInputStream.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_2(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_2($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_2.prototype.constructor = Coroutine$close_2;
  Coroutine$close_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.base.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncBufferedInputStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncBufferedInputStream',
    interfaces: [AsyncInputStream]
  };
  function readBufferedLine($receiver_0, limit_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readBufferedLine($receiver_0, limit_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readBufferedLine($receiver_0, limit_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$limit = limit_0;
    this.local$charset = charset_0;
  }
  Coroutine$readBufferedLine.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBufferedLine.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBufferedLine.prototype.constructor = Coroutine$readBufferedLine;
  Coroutine$readBufferedLine.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$limit === void 0)
              this.local$limit = 4096;
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.readBufferedUntil_vlsdy4$(toByte(10 | 0), false, this.local$limit, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return toString_0(this.result_0, this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function toBuffered($receiver, bufferSize) {
    if (bufferSize === void 0)
      bufferSize = 8192;
    return new AsyncBufferedInputStream($receiver, bufferSize);
  }
  function AsyncProduceConsumerByteBuffer() {
    AsyncProduceConsumerByteBuffer$Companion_getInstance();
    this.current_0 = AsyncProduceConsumerByteBuffer$Companion_getInstance().EMPTY_0;
    this.currentPos_0 = 0;
    this.buffers_0 = LinkedList_init();
    this.availableInBuffers_0 = 0;
    this.producedSemaphore_0 = new AsyncSemaphore();
  }
  function AsyncProduceConsumerByteBuffer$Companion() {
    AsyncProduceConsumerByteBuffer$Companion_instance = this;
    this.EMPTY_0 = new Int8Array([]);
  }
  AsyncProduceConsumerByteBuffer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AsyncProduceConsumerByteBuffer$Companion_instance = null;
  function AsyncProduceConsumerByteBuffer$Companion_getInstance() {
    if (AsyncProduceConsumerByteBuffer$Companion_instance === null) {
      new AsyncProduceConsumerByteBuffer$Companion();
    }
    return AsyncProduceConsumerByteBuffer$Companion_instance;
  }
  Object.defineProperty(AsyncProduceConsumerByteBuffer.prototype, 'availableInCurrent_0', {
    get: function () {
      return this.current_0.length - this.currentPos_0 | 0;
    }
  });
  Object.defineProperty(AsyncProduceConsumerByteBuffer.prototype, 'available', {
    get: function () {
      return this.availableInCurrent_0 + this.availableInBuffers_0 | 0;
    }
  });
  AsyncProduceConsumerByteBuffer.prototype.produce_fqrh44$ = function (data) {
    this.buffers_0.add_11rb$(data);
    this.availableInBuffers_0 = this.availableInBuffers_0 + data.length | 0;
    this.producedSemaphore_0.release();
  };
  AsyncProduceConsumerByteBuffer.prototype.useNextBuffer_0 = function () {
    this.current_0 = this.buffers_0.isEmpty() ? AsyncProduceConsumerByteBuffer$Companion_getInstance().EMPTY_0 : this.buffers_0.removeFirst();
    this.currentPos_0 = 0;
    this.availableInBuffers_0 = this.availableInBuffers_0 - this.current_0.length | 0;
  };
  AsyncProduceConsumerByteBuffer.prototype.ensureCurrentBuffer_0 = function () {
    if (this.availableInCurrent_0 <= 0) {
      this.useNextBuffer_0();
    }
  };
  AsyncProduceConsumerByteBuffer.prototype.consume_mj6st8$ = function (data, offset, len) {
    if (offset === void 0)
      offset = 0;
    if (len === void 0)
      len = data.length;
    var totalRead = 0;
    var remaining = len;
    var outputPos = offset;
    while (remaining > 0) {
      this.ensureCurrentBuffer_0();
      var a = this.availableInCurrent_0;
      var readInCurrent = Math_0.min(a, len);
      if (readInCurrent <= 0)
        break;
      arraycopy(this.current_0, this.currentPos_0, data, outputPos, readInCurrent);
      this.currentPos_0 = this.currentPos_0 + readInCurrent | 0;
      remaining = remaining - readInCurrent | 0;
      totalRead = totalRead + readInCurrent | 0;
      outputPos = outputPos + readInCurrent | 0;
    }
    return totalRead;
  };
  AsyncProduceConsumerByteBuffer.prototype.consumeUpTo_za3lpa$ = function (len) {
    var $receiver = new Int8Array(len);
    return copyOf($receiver, this.consume_mj6st8$($receiver, 0, len));
  };
  AsyncProduceConsumerByteBuffer.prototype.consumeUntil_do4swe$ = function (end, including) {
    if (including === void 0)
      including = true;
    var out = new ByteArrayBuilder();
    while (true) {
      this.ensureCurrentBuffer_0();
      if (this.availableInCurrent_0 <= 0)
        break;
      var p = indexOf_3(this.current_0, this.currentPos_0, end);
      var pp = p < 0 ? this.current_0.length : including ? p + 1 | 0 : p;
      var len = pp - this.currentPos_0 | 0;
      if (len > 0)
        out.append_mj6st8$(this.current_0, this.currentPos_0, len);
      this.currentPos_0 = this.currentPos_0 + len | 0;
      if (p >= 0)
        break;
    }
    return out.toByteArray();
  };
  AsyncProduceConsumerByteBuffer.prototype.write_mj6st8$$default = function (buffer, offset, len, continuation) {
    var toIndex = offset + len | 0;
    this.produce_fqrh44$(buffer.slice(offset, toIndex));
  };
  AsyncProduceConsumerByteBuffer.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_4(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_4($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_4.prototype.constructor = Coroutine$read_mj6st8$_4;
  Coroutine$read_mj6st8$_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var out = this.$this.consume_mj6st8$(this.local$buffer, this.local$offset, this.local$len);
            if (out === 0) {
              this.state_0 = 3;
              this.result_0 = this.$this.producedSemaphore_0.acquire(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              return out;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncProduceConsumerByteBuffer.prototype.close = function (continuation) {
  };
  AsyncProduceConsumerByteBuffer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncProduceConsumerByteBuffer',
    interfaces: [AsyncInputStream, AsyncOutputStream]
  };
  function AsyncBaseStream() {
  }
  AsyncBaseStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncBaseStream',
    interfaces: [AsyncCloseable]
  };
  function AsyncInputOpenable() {
  }
  AsyncInputOpenable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncInputOpenable',
    interfaces: []
  };
  function AsyncInputStream() {
  }
  AsyncInputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncInputStream',
    interfaces: [AsyncBaseStream]
  };
  function AsyncOutputStream() {
  }
  AsyncOutputStream.prototype.write_mj6st8$ = function (buffer, offset, len, continuation, callback$default) {
    if (offset === void 0)
      offset = 0;
    if (len === void 0)
      len = buffer.length - offset | 0;
    return callback$default ? callback$default(buffer, offset, len, continuation) : this.write_mj6st8$$default(buffer, offset, len, continuation);
  };
  AsyncOutputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncOutputStream',
    interfaces: [AsyncBaseStream]
  };
  function AsyncGetPositionStream() {
  }
  AsyncGetPositionStream.prototype.getPosition = function (continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncGetPositionStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncGetPositionStream',
    interfaces: [AsyncBaseStream]
  };
  function AsyncPositionStream() {
  }
  AsyncPositionStream.prototype.setPosition_s8cxhz$ = function (value, continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncPositionStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncPositionStream',
    interfaces: [AsyncGetPositionStream]
  };
  function AsyncGetLengthStream() {
  }
  AsyncGetLengthStream.prototype.getLength = function (continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncGetLengthStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncGetLengthStream',
    interfaces: [AsyncBaseStream]
  };
  function AsyncLengthStream() {
  }
  AsyncLengthStream.prototype.setLength_s8cxhz$ = function (value, continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncLengthStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncLengthStream',
    interfaces: [AsyncGetLengthStream]
  };
  function AsyncPositionLengthStream() {
  }
  AsyncPositionLengthStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncPositionLengthStream',
    interfaces: [AsyncLengthStream, AsyncPositionStream]
  };
  function AsyncInputWithLengthStream() {
  }
  AsyncInputWithLengthStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncInputWithLengthStream',
    interfaces: [AsyncGetLengthStream, AsyncGetPositionStream, AsyncInputStream]
  };
  function getAvailable($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$getAvailable($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$getAvailable($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$getAvailable.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getAvailable.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getAvailable.prototype.constructor = Coroutine$getAvailable;
  Coroutine$getAvailable.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$tmp$.subtract(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function hasAvailable($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$hasAvailable($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$hasAvailable($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$hasAvailable.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasAvailable.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasAvailable.prototype.constructor = Coroutine$hasAvailable;
  Coroutine$hasAvailable.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = getAvailable(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.toNumber() > 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AsyncRAInputStream() {
  }
  AsyncRAInputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncRAInputStream',
    interfaces: []
  };
  function AsyncRAOutputStream() {
  }
  AsyncRAOutputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncRAOutputStream',
    interfaces: []
  };
  function toAsyncStream$ObjectLiteral(closure$input, closure$output, closure$rlen, closure$closeable) {
    this.closure$input = closure$input;
    this.closure$output = closure$output;
    this.closure$rlen = closure$rlen;
    this.closure$closeable = closure$closeable;
    AsyncStreamBase.call(this);
    this.expectedPosition = L0;
  }
  toAsyncStream$ObjectLiteral.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$_0(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$_0($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$_0.prototype.constructor = Coroutine$read_4m9kcn$_0;
  Coroutine$read_4m9kcn$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.closure$input == null)
              throw UnsupportedOperationException_init();
            this.$this.checkPosition_0(this.local$position);
            this.state_0 = 2;
            this.result_0 = this.$this.closure$input.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            if (read > 0)
              this.$this.expectedPosition = this.$this.expectedPosition.add(Kotlin.Long.fromInt(read));
            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncStream$ObjectLiteral.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_1(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_1($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_1.prototype.constructor = Coroutine$write_4m9kcn$_1;
  Coroutine$write_4m9kcn$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.closure$output == null)
              throw UnsupportedOperationException_init();
            this.$this.checkPosition_0(this.local$position);
            this.state_0 = 2;
            this.result_0 = this.$this.closure$output.write_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.$this.expectedPosition = this.$this.expectedPosition.add(Kotlin.Long.fromInt(this.local$len));
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncStream$ObjectLiteral.prototype.checkPosition_0 = function (position) {
    if (!equals(position, this.expectedPosition)) {
      throw UnsupportedOperationException_init_0('Seeking not supported!');
    }
  };
  toAsyncStream$ObjectLiteral.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$_1(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$_1($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$_1.prototype.constructor = Coroutine$setLength_s8cxhz$_1;
  Coroutine$setLength_s8cxhz$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$ = this.$this.closure$rlen) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$.setLength_s8cxhz$(this.local$value, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.result_0 = Unit;
            this.state_0 = 3;
            continue;
          case 3:
            tmp$_0 = this.result_0;
            if (tmp$_0 == null) {
              throw UnsupportedOperationException_init();
            }

            return tmp$_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncStream$ObjectLiteral.prototype.getLength = function (continuation_0, suspended) {
    var instance = new Coroutine$getLength(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getLength($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$getLength.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getLength.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getLength.prototype.constructor = Coroutine$getLength;
  Coroutine$getLength.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            if ((tmp$ = this.$this.closure$rlen) != null) {
              this.state_0 = 2;
              this.result_0 = tmp$.getLength(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.result_0 = null;
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            continue;
          case 3:
            tmp$_0 = this.result_0;
            if (tmp$_0 == null) {
              throw UnsupportedOperationException_init();
            }

            return tmp$_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncStream$ObjectLiteral.prototype.close = function (continuation) {
    return this.closure$closeable.close(continuation);
  };
  toAsyncStream$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncStreamBase]
  };
  function toAsyncStream($receiver) {
    var tmp$, tmp$_0, tmp$_1;
    var input = Kotlin.isType(tmp$ = $receiver, AsyncInputStream) ? tmp$ : null;
    var output = Kotlin.isType(tmp$_0 = $receiver, AsyncOutputStream) ? tmp$_0 : null;
    var rlen = Kotlin.isType(tmp$_1 = $receiver, AsyncLengthStream) ? tmp$_1 : null;
    var closeable = $receiver;
    return toAsyncStream_0(new toAsyncStream$ObjectLiteral(input, output, rlen, closeable));
  }
  function AsyncStreamBase() {
  }
  AsyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncStreamBase.prototype.setLength_s8cxhz$ = function (value, continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncStreamBase.prototype.getLength = function (continuation) {
    throw UnsupportedOperationException_init();
  };
  AsyncStreamBase.prototype.close = function (continuation) {
    return Unit;
  };
  AsyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncStreamBase',
    interfaces: [AsyncLengthStream, AsyncRAOutputStream, AsyncRAInputStream, AsyncCloseable]
  };
  function readBytes($receiver_0, position_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readBytes($receiver_0, position_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readBytes($receiver_0, position_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$out = void 0;
    this.local$$receiver = $receiver_0;
    this.local$position = position_0;
    this.local$count = count_0;
  }
  Coroutine$readBytes.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBytes.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBytes.prototype.constructor = Coroutine$readBytes;
  Coroutine$readBytes.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$out = new Int8Array(this.local$count);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.read_4m9kcn$(this.local$position, this.local$out, 0, this.local$out.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var readLen = this.result_0;
            return copyOf(this.local$out, readLen);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function toAsyncStream_0($receiver, position) {
    if (position === void 0)
      position = L0;
    return new AsyncStream($receiver, position);
  }
  function AsyncStream(base, position) {
    if (position === void 0)
      position = L0;
    this.base = base;
    this.position = position;
    this.$delegate_axnxby$_0 = new Extra$Mixin();
    this.readQueue_0 = new AsyncThread();
    this.writeQueue_0 = new AsyncThread();
  }
  function AsyncStream$read$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncStream$read$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncStream$read$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$AsyncStream = this$AsyncStream_0;
    this.local$closure$buffer = closure$buffer_0;
    this.local$closure$offset = closure$offset_0;
    this.local$closure$len = closure$len_0;
  }
  Coroutine$AsyncStream$read$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncStream$read$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncStream$read$lambda.prototype.constructor = Coroutine$AsyncStream$read$lambda;
  Coroutine$AsyncStream$read$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncStream.base.read_4m9kcn$(this.local$this$AsyncStream.position, this.local$closure$buffer, this.local$closure$offset, this.local$closure$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            if (read >= 0)
              this.local$this$AsyncStream.position = this.local$this$AsyncStream.position.add(Kotlin.Long.fromInt(read));
            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncStream.prototype.read_mj6st8$ = function (buffer, offset, len, continuation) {
    return this.readQueue_0.invoke_lnyleu$(AsyncStream$read$lambda(this, buffer, offset, len), continuation);
  };
  function AsyncStream$write$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncStream$write$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncStream$write$lambda(this$AsyncStream_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$AsyncStream = this$AsyncStream_0;
    this.local$closure$buffer = closure$buffer_0;
    this.local$closure$offset = closure$offset_0;
    this.local$closure$len = closure$len_0;
  }
  Coroutine$AsyncStream$write$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncStream$write$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncStream$write$lambda.prototype.constructor = Coroutine$AsyncStream$write$lambda;
  Coroutine$AsyncStream$write$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$AsyncStream.base.write_4m9kcn$(this.local$this$AsyncStream.position, this.local$closure$buffer, this.local$closure$offset, this.local$closure$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$this$AsyncStream.position = this.local$this$AsyncStream.position.add(Kotlin.Long.fromInt(this.local$closure$len)), Unit;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncStream.prototype.write_mj6st8$$default = function (buffer, offset, len, continuation) {
    return this.writeQueue_0.invoke_lnyleu$(AsyncStream$write$lambda(this, buffer, offset, len), continuation);
  };
  AsyncStream.prototype.setPosition_s8cxhz$ = function (value, continuation) {
    this.position = value;
    return Unit;
  };
  AsyncStream.prototype.getPosition = function (continuation) {
    return this.position;
  };
  AsyncStream.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return this.base.setLength_s8cxhz$(value, continuation);
  };
  AsyncStream.prototype.getLength = function (continuation) {
    return this.base.getLength(continuation);
  };
  AsyncStream.prototype.size = function (continuation) {
    return this.base.getLength(continuation);
  };
  AsyncStream.prototype.getAvailable = function (continuation_0, suspended) {
    var instance = new Coroutine$getAvailable_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getAvailable_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
  }
  Coroutine$getAvailable_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getAvailable_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getAvailable_0.prototype.constructor = Coroutine$getAvailable_0;
  Coroutine$getAvailable_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.$this.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$tmp$.subtract(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncStream.prototype.eof = function (continuation_0, suspended) {
    var instance = new Coroutine$eof(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$eof($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$eof.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$eof.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$eof.prototype.constructor = Coroutine$eof;
  Coroutine$eof.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.compareTo_11rb$(L0) <= 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncStream.prototype.close = function (continuation) {
    return this.base.close(continuation);
  };
  AsyncStream.prototype.clone = function (continuation) {
    return this.duplicate();
  };
  AsyncStream.prototype.duplicate = function () {
    return new AsyncStream(this.base, this.position);
  };
  Object.defineProperty(AsyncStream.prototype, 'extra', {
    get: function () {
      return this.$delegate_axnxby$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_axnxby$_0.extra = tmp$;
    }
  });
  AsyncStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncStream',
    interfaces: [AsyncPositionLengthStream, AsyncOutputStream, AsyncInputWithLengthStream, AsyncInputStream, AsyncCloseable, Extra]
  };
  function getAvailable_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$getAvailable_1($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$getAvailable_1($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$getAvailable_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getAvailable_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getAvailable_1.prototype.constructor = Coroutine$getAvailable_1;
  Coroutine$getAvailable_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.local$tmp$.subtract(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function eof($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$eof_0($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$eof_0($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$eof_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$eof_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$eof_0.prototype.constructor = Coroutine$eof_0;
  Coroutine$eof_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = getAvailable_0(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0.compareTo_11rb$(L0) <= 0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SliceAsyncStreamBase(base, baseStart, baseEnd) {
    AsyncStreamBase.call(this);
    this.base_8be2vx$ = base;
    this.baseStart_8be2vx$ = baseStart;
    this.baseEnd_8be2vx$ = baseEnd;
    this.baseLength_8be2vx$ = this.baseEnd_8be2vx$.subtract(this.baseStart_8be2vx$);
  }
  SliceAsyncStreamBase.prototype.clampPosition_0 = function (position) {
    return clamp_0(position, this.baseStart_8be2vx$, this.baseEnd_8be2vx$);
  };
  SliceAsyncStreamBase.prototype.clampPositionLen_0 = function (position, len) {
    if (position.compareTo_11rb$(L0) < 0)
      throw IllegalArgumentException_init('Invalid position');
    var targetStartPosition = this.clampPosition_0(this.baseStart_8be2vx$.add(position));
    var targetEndPosition = this.clampPosition_0(targetStartPosition.add(Kotlin.Long.fromInt(len)));
    var targetLen = targetEndPosition.subtract(targetStartPosition).toInt();
    return new Pair(targetStartPosition, targetLen);
  };
  SliceAsyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    var tmp$ = this.clampPositionLen_0(position, len);
    var targetStartPosition = tmp$.component1()
    , targetLen = tmp$.component2();
    return this.base_8be2vx$.read_4m9kcn$(targetStartPosition, buffer, offset, targetLen, continuation);
  };
  SliceAsyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    var tmp$ = this.clampPositionLen_0(position, len);
    var targetStartPosition = tmp$.component1()
    , targetLen = tmp$.component2();
    return this.base_8be2vx$.write_4m9kcn$(targetStartPosition, buffer, offset, targetLen, continuation);
  };
  SliceAsyncStreamBase.prototype.getLength = function (continuation) {
    return this.baseLength_8be2vx$;
  };
  SliceAsyncStreamBase.prototype.close = function (continuation) {
    return Unit;
  };
  SliceAsyncStreamBase.prototype.toString = function () {
    return 'SliceAsyncStreamBase(' + this.base_8be2vx$ + ', ' + this.baseStart_8be2vx$ + ', ' + this.baseEnd_8be2vx$ + ')';
  };
  SliceAsyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SliceAsyncStreamBase',
    interfaces: [AsyncStreamBase]
  };
  function buffered($receiver, blockSize, blocksToRead) {
    if (blockSize === void 0)
      blockSize = 2048;
    if (blocksToRead === void 0)
      blocksToRead = 16;
    return toAsyncStream_0(new BufferedStreamBase($receiver.base, blockSize, blocksToRead), $receiver.position);
  }
  function BufferedStreamBase(base, blockSize, blocksToRead) {
    if (blockSize === void 0)
      blockSize = 2048;
    if (blocksToRead === void 0)
      blocksToRead = 16;
    AsyncStreamBase.call(this);
    this.base = base;
    this.blockSize = blockSize;
    this.blocksToRead = blocksToRead;
    this.bsize = Kotlin.imul(this.blockSize, this.blocksToRead);
    this.cachedData = new Int8Array([]);
    this.cachedSector = L_1;
  }
  BufferedStreamBase.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$_1(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$_1($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$_1.prototype.constructor = Coroutine$read_4m9kcn$_1;
  Coroutine$read_4m9kcn$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this._read_4m9kcn$(this.local$position, this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var readLen = this.result_0;
            return readLen;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BufferedStreamBase.prototype._read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$_read_4m9kcn$(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_read_4m9kcn$($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$sector = void 0;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$_read_4m9kcn$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_read_4m9kcn$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_read_4m9kcn$.prototype.constructor = Coroutine$_read_4m9kcn$;
  Coroutine$_read_4m9kcn$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.base.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$position.compareTo_11rb$(this.result_0) >= 0) {
              return -1;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.local$sector = this.local$position.div(Kotlin.Long.fromInt(this.$this.bsize));
            if (!equals(this.$this.cachedSector, this.local$sector)) {
              this.state_0 = 4;
              this.result_0 = readBytes(this.$this.base, this.local$sector.multiply(Kotlin.Long.fromInt(this.$this.bsize)), this.$this.bsize, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 4:
            this.$this.cachedData = this.result_0;
            this.$this.cachedSector = this.local$sector;
            this.state_0 = 5;
            continue;
          case 5:
            var soffset = this.local$position.modulo(Kotlin.Long.fromInt(this.$this.bsize)).toInt();
            var available = this.$this.cachedData.length - soffset | 0;
            var toRead = Math_0.min(available, this.local$len);
            arraycopy(this.$this.cachedData, soffset, this.local$buffer, this.local$offset, toRead);
            return toRead;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BufferedStreamBase.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_2(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_2($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_2.prototype.constructor = Coroutine$write_4m9kcn$_2;
  Coroutine$write_4m9kcn$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.base.write_4m9kcn$(this.local$position, this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  BufferedStreamBase.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return this.base.setLength_s8cxhz$(value, continuation);
  };
  BufferedStreamBase.prototype.getLength = function (continuation) {
    return this.base.getLength(continuation);
  };
  BufferedStreamBase.prototype.close = function (continuation) {
    return this.base.close(continuation);
  };
  BufferedStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BufferedStreamBase',
    interfaces: [AsyncStreamBase]
  };
  function sliceWithSize($receiver, start, length, continuation) {
    return sliceWithBounds($receiver, start, start.add(length), continuation);
  }
  function sliceWithSize_0($receiver, start, length, continuation) {
    return sliceWithBounds($receiver, Kotlin.Long.fromInt(start), Kotlin.Long.fromInt(start + length | 0), continuation);
  }
  function slice_0($receiver, range, continuation) {
    return sliceWithBounds($receiver, Kotlin.Long.fromInt(range.start), Kotlin.Long.fromInt(range.endInclusive).add(Kotlin.Long.fromInt(1)), continuation);
  }
  function slice_1($receiver, range, continuation) {
    return sliceWithBounds($receiver, range.start, range.endInclusive.add(Kotlin.Long.fromInt(1)), continuation);
  }
  function sliceWithBounds($receiver_0, start_0, end_0, continuation_0, suspended) {
    var instance = new Coroutine$sliceWithBounds($receiver_0, start_0, end_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$sliceWithBounds($receiver_0, start_0, end_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$start = start_0;
    this.local$end = end_0;
  }
  Coroutine$sliceWithBounds.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sliceWithBounds.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sliceWithBounds.prototype.constructor = Coroutine$sliceWithBounds;
  Coroutine$sliceWithBounds.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var len = this.result_0;
            var clampedStart = clamp_0(this.local$start, L0, len);
            var clampedEnd = clamp_0(this.local$end, L0, len);
            if (Kotlin.isType(this.local$$receiver.base, SliceAsyncStreamBase)) {
              tmp$ = toAsyncStream_0(new SliceAsyncStreamBase(this.local$$receiver.base.base_8be2vx$, this.local$$receiver.base.baseStart_8be2vx$.add(clampedStart), this.local$$receiver.base.baseStart_8be2vx$.add(clampedEnd)));
            }
             else {
              tmp$ = toAsyncStream_0(new SliceAsyncStreamBase(this.local$$receiver.base, clampedStart, clampedEnd));
            }

            return tmp$;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function slice_2($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$slice($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$slice($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$slice.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$slice.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$slice.prototype.constructor = Coroutine$slice;
  Coroutine$slice.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = sliceWithSize(this.local$$receiver, L0, tmp$, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sliceWithStart($receiver_0, start_0, continuation_0, suspended) {
    var instance = new Coroutine$sliceWithStart($receiver_0, start_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$sliceWithStart($receiver_0, start_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$start = start_0;
  }
  Coroutine$sliceWithStart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sliceWithStart.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sliceWithStart.prototype.constructor = Coroutine$sliceWithStart;
  Coroutine$sliceWithStart.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = sliceWithBounds(this.local$$receiver, this.local$start, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sliceStart($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$sliceStart($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$sliceStart($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sliceStart.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sliceStart.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sliceStart.prototype.constructor = Coroutine$sliceStart;
  Coroutine$sliceStart.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            tmp$ = this.result_0;
            this.state_0 = 3;
            this.result_0 = sliceWithSize(this.local$$receiver, L0, tmp$, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function sliceHere($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$sliceHere($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$sliceHere($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$tmp$ = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$sliceHere.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sliceHere.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sliceHere.prototype.constructor = Coroutine$sliceHere;
  Coroutine$sliceHere.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$tmp$ = this.local$$receiver.position;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = sliceWithSize(this.local$$receiver, this.local$tmp$, this.result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readSlice($receiver_0, length_0, continuation_0, suspended) {
    var instance = new Coroutine$readSlice($receiver_0, length_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readSlice($receiver_0, length_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$start = void 0;
    this.local$out = void 0;
    this.local$$receiver = $receiver_0;
    this.local$length = length_0;
  }
  Coroutine$readSlice.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readSlice.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readSlice.prototype.constructor = Coroutine$readSlice;
  Coroutine$readSlice.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$start = this.result_0;
            this.state_0 = 3;
            this.result_0 = sliceWithSize(this.local$$receiver, this.local$start, this.local$length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$out = this.result_0;
            this.state_0 = 4;
            this.result_0 = this.local$$receiver.setPosition_s8cxhz$(this.local$start.add(this.local$length), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.local$out;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readStream($receiver, length, continuation) {
    return readSlice($receiver, Kotlin.Long.fromInt(length), continuation);
  }
  function readStream_0($receiver, length, continuation) {
    return readSlice($receiver, length, continuation);
  }
  function readStringz_1($receiver_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readStringz($receiver_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readStringz($receiver_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$buf = void 0;
    this.local$temp = void 0;
    this.local$$receiver = $receiver_0;
    this.local$charset = charset_0;
  }
  Coroutine$readStringz.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readStringz.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readStringz.prototype.constructor = Coroutine$readStringz;
  Coroutine$readStringz.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.local$buf = new ByteArrayBuilder();
            this.local$temp = new Int8Array(1);
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$temp, 0, 1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var read = this.result_0;
            if (read <= 0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            if (this.local$temp[0] === toByte(0)) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.local$buf.append_s8j3t7$(this.local$temp[0]);
            this.state_0 = 2;
            continue;
          case 6:
            return toString_0(this.local$buf.toByteArray(), this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readStringz_2($receiver_0, len_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readStringz_0($receiver_0, len_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readStringz_0($receiver_0, len_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$len = len_0;
    this.local$charset = charset_0;
  }
  Coroutine$readStringz_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readStringz_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readStringz_0.prototype.constructor = Coroutine$readStringz_0;
  Coroutine$readStringz_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var res = this.result_0;
            var index = indexOf_2(res, toByte(0));
            return toString_0(copyOf(res, index < 0 ? this.local$len : index), this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readString_0($receiver_0, len_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readString($receiver_0, len_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readString($receiver_0, len_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$len = len_0;
    this.local$charset = charset_0;
  }
  Coroutine$readString.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readString.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readString.prototype.constructor = Coroutine$readString;
  Coroutine$readString.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return toString_0(this.result_0, this.local$charset);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeStringz($receiver, str, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return writeBytes($receiver, toBytez_0(str, charset), continuation);
  }
  function writeStringz_0($receiver, str, len, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return writeBytes($receiver, toBytez(str, len, charset), continuation);
  }
  function writeString($receiver, string, charset, continuation) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return writeBytes($receiver, toByteArray(string, charset), continuation);
  }
  function readExact($receiver_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readExact($receiver_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readExact($receiver_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$remaining = void 0;
    this.local$coffset = void 0;
    this.local$reader = void 0;
    this.local$read = void 0;
    this.local$$receiver = $receiver_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$readExact.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readExact.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readExact.prototype.constructor = Coroutine$readExact;
  Coroutine$readExact.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$remaining = this.local$len;
            this.local$coffset = this.local$offset;
            this.local$reader = this.local$$receiver;
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$remaining <= 0) {
              this.state_0 = 5;
              continue;
            }

            this.state_0 = 3;
            this.result_0 = this.local$reader.read_mj6st8$(this.local$buffer, this.local$coffset, this.local$remaining, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$read = this.result_0;
            if (this.local$read < 0) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            if (this.local$read === 0)
              throw new EOFException('Not enough data. Expected=' + this.local$len + ', Read=' + (this.local$len - this.local$remaining | 0) + ', Remaining=' + this.local$remaining);
            this.local$coffset = this.local$coffset + this.local$read | 0;
            this.local$remaining = this.local$remaining - this.local$read | 0;
            this.state_0 = 2;
            continue;
          case 5:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readSmallTempExact($receiver, len, continuation) {
    return readBytesExact($receiver, len, continuation);
  }
  function readTempExact($receiver_0, len_0, temp_0, continuation_0, suspended) {
    var instance = new Coroutine$readTempExact($receiver_0, len_0, temp_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readTempExact($receiver_0, len_0, temp_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$len = len_0;
    this.local$temp = temp_0;
  }
  Coroutine$readTempExact.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readTempExact.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readTempExact.prototype.constructor = Coroutine$readTempExact;
  Coroutine$readTempExact.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readExact(this.local$$receiver, this.local$temp, 0, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$temp;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function read($receiver, data, continuation) {
    return $receiver.read_mj6st8$(data, 0, data.length, continuation);
  }
  function read_0($receiver, data, continuation) {
    return $receiver.read_mj6st8$(data.data, 0, data.size, continuation);
  }
  function readBytes_0($receiver, len, continuation) {
    return readBytesUpToFirst($receiver, len, continuation);
  }
  var EMPTY_BYTE_ARRAY;
  function readBytesUpToFirst($receiver_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readBytesUpToFirst($receiver_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readBytesUpToFirst($receiver_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$out = void 0;
    this.local$read = void 0;
    this.local$$receiver = $receiver_0;
    this.local$len = len_0;
  }
  Coroutine$readBytesUpToFirst.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBytesUpToFirst.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBytesUpToFirst.prototype.constructor = Coroutine$readBytesUpToFirst;
  Coroutine$readBytesUpToFirst.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$out = new Int8Array(this.local$len);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$out, 0, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$read = this.result_0;
            if (this.local$read <= 0) {
              return EMPTY_BYTE_ARRAY;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            return copyOf(this.local$out, this.local$read);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readBytesUpTo($receiver_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readBytesUpTo($receiver_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readBytesUpTo($receiver_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$ba_0 = void 0;
    this.local$available_0 = void 0;
    this.local$pos_0 = void 0;
    this.local$alen2 = void 0;
    this.local$pending = void 0;
    this.local$temp = void 0;
    this.local$bout = void 0;
    this.local$read = void 0;
    this.local$ba = void 0;
    this.local$available = void 0;
    this.local$pos = void 0;
    this.local$rlen = void 0;
    this.local$$receiver = $receiver_0;
    this.local$len = len_0;
  }
  Coroutine$readBytesUpTo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBytesUpTo.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBytesUpTo.prototype.constructor = Coroutine$readBytesUpTo;
  Coroutine$readBytesUpTo.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var BYTES_TEMP_SIZE = 4096;
            if (this.local$len > BYTES_TEMP_SIZE) {
              if (Kotlin.isType(this.local$$receiver, AsyncPositionLengthStream)) {
                this.state_0 = 10;
                this.result_0 = getAvailable_0(this.local$$receiver, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.local$pending = this.local$len;
                this.local$temp = new Int8Array(BYTES_TEMP_SIZE);
                this.local$bout = new ByteArrayBuilder();
                this.state_0 = 6;
                continue;
              }
            }
             else {
              this.local$ba = new Int8Array(this.local$len);
              this.local$available = this.local$len;
              this.local$pos = 0;
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$ba, this.local$pos, this.local$available, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$rlen = this.result_0;
            if (this.local$rlen <= 0) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.local$pos = this.local$pos + this.local$rlen | 0;
            this.local$available = this.local$available - this.local$rlen | 0;
            this.state_0 = 2;
            continue;
          case 5:
            return this.local$ba.length === this.local$pos ? this.local$ba : copyOf(this.local$ba, this.local$pos);
          case 6:
            if (this.local$pending <= 0) {
              this.state_0 = 9;
              continue;
            }

            var b = this.local$pending;
            this.state_0 = 7;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$temp, 0, Math_0.min(this.local$temp.length, b), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.local$read = this.result_0;
            if (this.local$read <= 0) {
              this.state_0 = 9;
              continue;
            }
             else {
              this.state_0 = 8;
              continue;
            }

          case 8:
            this.local$bout.append_mj6st8$(this.local$temp, 0, this.local$read);
            this.local$pending = this.local$pending - this.local$read | 0;
            this.state_0 = 6;
            continue;
          case 9:
            return this.local$bout.toByteArray();
          case 10:
            var b_0 = toIntClamp(this.result_0);
            var alen = Math_0.min(this.local$len, b_0);
            this.local$ba_0 = new Int8Array(alen);
            this.local$available_0 = alen;
            this.local$pos_0 = 0;
            this.state_0 = 11;
            continue;
          case 11:
            this.state_0 = 12;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$ba_0, this.local$pos_0, this.local$available_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            this.local$alen2 = this.result_0;
            if (this.local$alen2 <= 0) {
              this.state_0 = 14;
              continue;
            }
             else {
              this.state_0 = 13;
              continue;
            }

          case 13:
            this.local$pos_0 = this.local$pos_0 + this.local$alen2 | 0;
            this.local$available_0 = this.local$available_0 - this.local$alen2 | 0;
            this.state_0 = 11;
            continue;
          case 14:
            return this.local$ba_0.length === this.local$pos_0 ? this.local$ba_0 : copyOf(this.local$ba_0, this.local$pos_0);
          case 15:
            this.state_0 = 16;
            continue;
          case 16:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readBytesExact($receiver_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$readBytesExact($receiver_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readBytesExact($receiver_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = void 0;
    this.local$$receiver_0 = $receiver_0;
    this.local$len = len_0;
  }
  Coroutine$readBytesExact.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readBytesExact.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readBytesExact.prototype.constructor = Coroutine$readBytesExact;
  Coroutine$readBytesExact.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = new Int8Array(this.local$len);
            this.state_0 = 2;
            this.result_0 = readExact(this.local$$receiver_0, this.local$$receiver, 0, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU8_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU8($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU8($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU8.prototype.constructor = Coroutine$readU8;
  Coroutine$readU8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU8(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS8_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS8($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS8($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS8.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS8.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS8.prototype.constructor = Coroutine$readS8;
  Coroutine$readS8.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS8(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU16_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU16_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU16_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU16_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU16_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU16_le.prototype.constructor = Coroutine$readU16_le;
  Coroutine$readU16_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU16_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU24_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU24_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU24_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU24_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU24_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU24_le.prototype.constructor = Coroutine$readU24_le;
  Coroutine$readU24_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 3, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU24_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU32_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU32_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU32_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU32_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU32_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU32_le.prototype.constructor = Coroutine$readU32_le;
  Coroutine$readU32_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU32_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS16_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS16_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS16_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS16_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS16_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS16_le.prototype.constructor = Coroutine$readS16_le;
  Coroutine$readS16_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS16_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS24_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS24_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS24_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS24_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS24_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS24_le.prototype.constructor = Coroutine$readS24_le;
  Coroutine$readS24_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 3, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS24_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS32_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS32_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS32_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS32_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS32_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS32_le.prototype.constructor = Coroutine$readS32_le;
  Coroutine$readS32_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS32_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS64_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS64_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS64_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS64_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS64_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS64_le.prototype.constructor = Coroutine$readS64_le;
  Coroutine$readS64_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS64_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readF32_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readF32_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readF32_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readF32_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readF32_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readF32_le.prototype.constructor = Coroutine$readF32_le;
  Coroutine$readF32_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readF32_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readF64_le_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readF64_le($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readF64_le($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readF64_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readF64_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readF64_le.prototype.constructor = Coroutine$readF64_le;
  Coroutine$readF64_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readF64_le(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU16_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU16_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU16_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU16_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU16_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU16_be.prototype.constructor = Coroutine$readU16_be;
  Coroutine$readU16_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU16_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU24_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU24_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU24_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU24_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU24_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU24_be.prototype.constructor = Coroutine$readU24_be;
  Coroutine$readU24_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 3, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU24_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readU32_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readU32_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readU32_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readU32_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readU32_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readU32_be.prototype.constructor = Coroutine$readU32_be;
  Coroutine$readU32_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readU32_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS16_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS16_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS16_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS16_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS16_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS16_be.prototype.constructor = Coroutine$readS16_be;
  Coroutine$readS16_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 2, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS16_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS24_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS24_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS24_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS24_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS24_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS24_be.prototype.constructor = Coroutine$readS24_be;
  Coroutine$readS24_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 3, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS24_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS32_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS32_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS32_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS32_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS32_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS32_be.prototype.constructor = Coroutine$readS32_be;
  Coroutine$readS32_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS32_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readS64_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readS64_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readS64_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readS64_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readS64_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readS64_be.prototype.constructor = Coroutine$readS64_be;
  Coroutine$readS64_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readS64_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readF32_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readF32_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readF32_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readF32_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readF32_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readF32_be.prototype.constructor = Coroutine$readF32_be;
  Coroutine$readF32_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 4, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readF32_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readF64_be_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readF64_be($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readF64_be($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readF64_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readF64_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readF64_be.prototype.constructor = Coroutine$readF64_be;
  Coroutine$readF64_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readSmallTempExact(this.local$$receiver, 8, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readF64_be(this.result_0, 0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function hasLength($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$hasLength($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$hasLength($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$hasLength.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasLength.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasLength.prototype.constructor = Coroutine$hasLength;
  Coroutine$hasLength.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = this.local$$receiver.getLength(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            return true;
          case 2:
            this.exceptionState_0 = 5;
            var t = this.exception_0;
            if (Kotlin.isType(t, Throwable)) {
              return false;
            }
             else {
              throw t;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function hasAvailable_0($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$hasAvailable_0($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$hasAvailable_0($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 5;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$hasAvailable_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$hasAvailable_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$hasAvailable_0.prototype.constructor = Coroutine$hasAvailable_0;
  Coroutine$hasAvailable_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 2;
            this.state_0 = 1;
            this.result_0 = this.local$$receiver.getAvailable(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            return true;
          case 2:
            this.exceptionState_0 = 5;
            var t = this.exception_0;
            if (Kotlin.isType(t, Throwable)) {
              return false;
            }
             else {
              throw t;
            }

          case 3:
            this.state_0 = 4;
            continue;
          case 4:
            return;
          case 5:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 5) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAll($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$readAll($receiver_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readAll($receiver_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 20;
    this.local$tmp$ = void 0;
    this.local$tmp$_0 = void 0;
    this.local$out = void 0;
    this.local$temp = void 0;
    this.local$r = void 0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$readAll.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAll.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAll.prototype.constructor = Coroutine$readAll;
  Coroutine$readAll.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 17;
            if (Kotlin.isType(this.local$$receiver, AsyncGetPositionStream) && Kotlin.isType(this.local$$receiver, AsyncGetLengthStream)) {
              this.state_0 = 11;
              this.result_0 = this.local$$receiver.getLength(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              if (Kotlin.isType(this.local$$receiver, AsyncStream)) {
                this.state_0 = 1;
                this.result_0 = hasAvailable_0(this.local$$receiver, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.result_0 = false;
                this.state_0 = 2;
                continue;
              }
            }

          case 1:
            this.state_0 = 2;
            continue;
          case 2:
            if (this.result_0) {
              this.state_0 = 7;
              this.result_0 = this.local$$receiver.getAvailable(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$out = new ByteArrayBuilder();
              this.local$temp = new Int8Array(4096);
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$$receiver.read_mj6st8$(this.local$temp, 0, this.local$temp.length, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$r = this.result_0;
            if (this.local$r <= 0) {
              this.state_0 = 6;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            this.local$out.append_mj6st8$(this.local$temp, 0, this.local$r);
            this.state_0 = 3;
            continue;
          case 6:
            this.local$tmp$_0 = this.local$out.toByteArray();
            this.state_0 = 10;
            continue;
          case 7:
            var available = this.result_0.toInt();
            this.state_0 = 8;
            this.result_0 = readBytesExact(this.local$$receiver, available, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.exceptionState_0 = 20;
            this.finallyPath_0 = [9];
            this.state_0 = 18;
            this.$returnValue = this.result_0;
            continue;
          case 9:
            return this.$returnValue;
          case 10:
            this.state_0 = 15;
            continue;
          case 11:
            this.local$tmp$ = this.result_0;
            this.state_0 = 12;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 12:
            var available_0 = this.local$tmp$.subtract(this.result_0);
            this.state_0 = 13;
            this.result_0 = readBytesExact(this.local$$receiver, available_0.toInt(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 13:
            this.exceptionState_0 = 20;
            this.finallyPath_0 = [14];
            this.state_0 = 18;
            this.$returnValue = this.result_0;
            continue;
          case 14:
            return this.$returnValue;
          case 15:
            this.exceptionState_0 = 20;
            this.finallyPath_0 = [16];
            this.state_0 = 18;
            continue;
          case 16:
            return this.local$tmp$_0;
          case 17:
            this.finallyPath_0 = [20];
            this.state_0 = 18;
            continue;
          case 18:
            this.state_0 = 19;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 19:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 20:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 20) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readAvailable($receiver, continuation) {
    return readAll($receiver, continuation);
  }
  function skip($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$skip($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$skip($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$temp = void 0;
    this.local$remaining = void 0;
    this.local$toRead = void 0;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$skip.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$skip.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$skip.prototype.constructor = Coroutine$skip;
  Coroutine$skip.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (Kotlin.isType(this.local$$receiver, AsyncPositionLengthStream)) {
              this.state_0 = 5;
              this.result_0 = this.local$$receiver.getPosition(this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$temp = new Int8Array(4096);
              this.local$remaining = this.local$count;
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.local$remaining <= 0) {
              this.state_0 = 4;
              continue;
            }

            var a = this.local$remaining;
            this.local$toRead = Math_0.min(a, this.local$count);
            this.state_0 = 3;
            this.result_0 = readTempExact(this.local$$receiver, this.local$toRead, this.local$temp, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$remaining = this.local$remaining - this.local$toRead | 0;
            this.state_0 = 2;
            continue;
          case 4:
            this.state_0 = 7;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.setPosition_s8cxhz$(this.result_0.add(Kotlin.Long.fromInt(this.local$count)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = 7;
            continue;
          case 7:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readUByteArray($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readUByteArray($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readUByteArray($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readUByteArray.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readUByteArray.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readUByteArray.prototype.constructor = Coroutine$readUByteArray;
  Coroutine$readUByteArray.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return new UByteArray(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readShortArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readShortArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readShortArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readShortArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readShortArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readShortArray_le.prototype.constructor = Coroutine$readShortArray_le;
  Coroutine$readShortArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 2 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readShortArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readShortArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readShortArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readShortArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readShortArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readShortArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readShortArray_be.prototype.constructor = Coroutine$readShortArray_be;
  Coroutine$readShortArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 2 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readShortArray_be(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readCharArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readCharArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readCharArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readCharArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readCharArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readCharArray_le.prototype.constructor = Coroutine$readCharArray_le;
  Coroutine$readCharArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 2 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readCharArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readCharArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readCharArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readCharArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readCharArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readCharArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readCharArray_be.prototype.constructor = Coroutine$readCharArray_be;
  Coroutine$readCharArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 2 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readCharArray_be(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readIntArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readIntArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readIntArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readIntArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readIntArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readIntArray_le.prototype.constructor = Coroutine$readIntArray_le;
  Coroutine$readIntArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 4 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readIntArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readIntArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readIntArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readIntArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readIntArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readIntArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readIntArray_be.prototype.constructor = Coroutine$readIntArray_be;
  Coroutine$readIntArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 4 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readIntArray_be(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readLongArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readLongArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readLongArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readLongArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readLongArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readLongArray_le.prototype.constructor = Coroutine$readLongArray_le;
  Coroutine$readLongArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 8 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readLongArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readLongArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readLongArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readLongArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readLongArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readLongArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readLongArray_be.prototype.constructor = Coroutine$readLongArray_be;
  Coroutine$readLongArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 8 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readLongArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readFloatArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readFloatArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readFloatArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readFloatArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readFloatArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readFloatArray_le.prototype.constructor = Coroutine$readFloatArray_le;
  Coroutine$readFloatArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 4 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readFloatArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readFloatArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readFloatArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readFloatArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readFloatArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readFloatArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readFloatArray_be.prototype.constructor = Coroutine$readFloatArray_be;
  Coroutine$readFloatArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 4 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readFloatArray_be(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readDoubleArray_le_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readDoubleArray_le($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readDoubleArray_le($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readDoubleArray_le.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readDoubleArray_le.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readDoubleArray_le.prototype.constructor = Coroutine$readDoubleArray_le;
  Coroutine$readDoubleArray_le.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 8 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readDoubleArray_le(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readDoubleArray_be_0($receiver_0, count_0, continuation_0, suspended) {
    var instance = new Coroutine$readDoubleArray_be($receiver_0, count_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readDoubleArray_be($receiver_0, count_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$count = count_0;
  }
  Coroutine$readDoubleArray_be.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readDoubleArray_be.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readDoubleArray_be.prototype.constructor = Coroutine$readDoubleArray_be;
  Coroutine$readDoubleArray_be.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = readBytesExact(this.local$$receiver, this.local$count * 8 | 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return readDoubleArray_be(this.result_0, 0, this.local$count);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeBytes($receiver, data, continuation) {
    return $receiver.write_mj6st8$(data, 0, data.length, continuation);
  }
  function writeBytes_0($receiver, data, continuation) {
    return $receiver.write_mj6st8$(data.data, data.position, data.length, continuation);
  }
  function write8_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(1);
    write8($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 1, continuation);
  }
  function write16_le_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(2);
    write16_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 2, continuation);
  }
  function write24_le_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(3);
    write24_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 3, continuation);
  }
  function write32_le_1($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    write32_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function write32_le_2($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    write32_le_0($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function write64_le_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(8);
    write64_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 8, continuation);
  }
  function writeF32_le_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    writeF32_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function writeF64_le_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(8);
    writeF64_le($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 8, continuation);
  }
  function write16_be_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(2);
    write16_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 2, continuation);
  }
  function write24_be_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(3);
    write24_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 3, continuation);
  }
  function write32_be_1($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    write32_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function write32_be_2($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    write32_be_0($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function write64_be_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(8);
    write64_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 8, continuation);
  }
  function writeF32_be_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(4);
    writeF32_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 4, continuation);
  }
  function writeF64_be_0($receiver, v, continuation) {
    var $receiver_0 = new Int8Array(8);
    writeF64_be($receiver_0, 0, v);
    return $receiver.write_mj6st8$($receiver_0, 0, 8, continuation);
  }
  function toAsync_1($receiver) {
    return toAsyncStream_0(toAsync_2($receiver.base), $receiver.position);
  }
  function toAsync_2($receiver) {
    if (Kotlin.isType($receiver, MemorySyncStreamBase))
      return new MemoryAsyncStreamBase($receiver.data);
    else
      return new SyncAsyncStreamBase($receiver);
  }
  function toAsyncInWorker($receiver) {
    return toAsyncStream_0(toAsyncInWorker_0($receiver.base), $receiver.position);
  }
  function toAsyncInWorker_0($receiver) {
    return new SyncAsyncStreamBaseInWorker($receiver);
  }
  function SyncAsyncStreamBase(sync) {
    AsyncStreamBase.call(this);
    this.sync = sync;
  }
  SyncAsyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return this.sync.read_4m9kcn$(position, buffer, offset, len);
  };
  SyncAsyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return this.sync.write_4m9kcn$(position, buffer, offset, len);
  };
  SyncAsyncStreamBase.prototype.setLength_s8cxhz$ = function (value, continuation) {
    this.sync.length = value;
    return Unit;
  };
  SyncAsyncStreamBase.prototype.getLength = function (continuation) {
    return this.sync.length;
  };
  SyncAsyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncAsyncStreamBase',
    interfaces: [AsyncStreamBase]
  };
  function SyncAsyncStreamBaseInWorker(sync) {
    AsyncStreamBase.call(this);
    this.sync = sync;
  }
  function SyncAsyncStreamBaseInWorker$read$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SyncAsyncStreamBaseInWorker$read$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SyncAsyncStreamBaseInWorker$read$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$SyncAsyncStreamBaseInWorker = this$SyncAsyncStreamBaseInWorker_0;
    this.local$closure$position = closure$position_0;
    this.local$closure$buffer = closure$buffer_0;
    this.local$closure$offset = closure$offset_0;
    this.local$closure$len = closure$len_0;
  }
  Coroutine$SyncAsyncStreamBaseInWorker$read$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SyncAsyncStreamBaseInWorker$read$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SyncAsyncStreamBaseInWorker$read$lambda.prototype.constructor = Coroutine$SyncAsyncStreamBaseInWorker$read$lambda;
  Coroutine$SyncAsyncStreamBaseInWorker$read$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$SyncAsyncStreamBaseInWorker.sync.read_4m9kcn$(this.local$closure$position, this.local$closure$buffer, this.local$closure$offset, this.local$closure$len);
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SyncAsyncStreamBaseInWorker.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return executeInWorker(SyncAsyncStreamBaseInWorker$read$lambda(this, position, buffer, offset, len), continuation);
  };
  function SyncAsyncStreamBaseInWorker$write$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SyncAsyncStreamBaseInWorker$write$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SyncAsyncStreamBaseInWorker$write$lambda(this$SyncAsyncStreamBaseInWorker_0, closure$position_0, closure$buffer_0, closure$offset_0, closure$len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$SyncAsyncStreamBaseInWorker = this$SyncAsyncStreamBaseInWorker_0;
    this.local$closure$position = closure$position_0;
    this.local$closure$buffer = closure$buffer_0;
    this.local$closure$offset = closure$offset_0;
    this.local$closure$len = closure$len_0;
  }
  Coroutine$SyncAsyncStreamBaseInWorker$write$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SyncAsyncStreamBaseInWorker$write$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SyncAsyncStreamBaseInWorker$write$lambda.prototype.constructor = Coroutine$SyncAsyncStreamBaseInWorker$write$lambda;
  Coroutine$SyncAsyncStreamBaseInWorker$write$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$SyncAsyncStreamBaseInWorker.sync.write_4m9kcn$(this.local$closure$position, this.local$closure$buffer, this.local$closure$offset, this.local$closure$len), Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SyncAsyncStreamBaseInWorker.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    return executeInWorker(SyncAsyncStreamBaseInWorker$write$lambda(this, position, buffer, offset, len), continuation);
  };
  function SyncAsyncStreamBaseInWorker$setLength$lambda(closure$value_0, this$SyncAsyncStreamBaseInWorker_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda(closure$value_0, this$SyncAsyncStreamBaseInWorker_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda(closure$value_0, this$SyncAsyncStreamBaseInWorker_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$value = closure$value_0;
    this.local$this$SyncAsyncStreamBaseInWorker = this$SyncAsyncStreamBaseInWorker_0;
  }
  Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda.prototype.constructor = Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda;
  Coroutine$SyncAsyncStreamBaseInWorker$setLength$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$SyncAsyncStreamBaseInWorker.sync.length = this.local$closure$value, Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SyncAsyncStreamBaseInWorker.prototype.setLength_s8cxhz$ = function (value, continuation) {
    return executeInWorker(SyncAsyncStreamBaseInWorker$setLength$lambda(value, this), continuation);
  };
  function SyncAsyncStreamBaseInWorker$getLength$lambda(this$SyncAsyncStreamBaseInWorker_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda(this$SyncAsyncStreamBaseInWorker_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda(this$SyncAsyncStreamBaseInWorker_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$SyncAsyncStreamBaseInWorker = this$SyncAsyncStreamBaseInWorker_0;
  }
  Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda.prototype.constructor = Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda;
  Coroutine$SyncAsyncStreamBaseInWorker$getLength$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return this.local$this$SyncAsyncStreamBaseInWorker.sync.length;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SyncAsyncStreamBaseInWorker.prototype.getLength = function (continuation) {
    return executeInWorker(SyncAsyncStreamBaseInWorker$getLength$lambda(this), continuation);
  };
  SyncAsyncStreamBaseInWorker.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncAsyncStreamBaseInWorker',
    interfaces: [AsyncStreamBase]
  };
  function writeStream($receiver, source, continuation) {
    return copyTo(source, $receiver, void 0, continuation);
  }
  function writeFile$lambda(this$writeFile_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$writeFile$lambda(this$writeFile_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$writeFile$lambda(this$writeFile_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$writeFile = this$writeFile_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$writeFile$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeFile$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeFile$lambda.prototype.constructor = Coroutine$writeFile$lambda;
  Coroutine$writeFile$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = writeStream(this.local$this$writeFile, this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function VfsFile$openUse$lambda_0(closure$callback_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$VfsFile$openUse$lambda_0(closure$callback_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$VfsFile$openUse$lambda_0(closure$callback_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$VfsFile$openUse$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$VfsFile$openUse$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$VfsFile$openUse$lambda_0.prototype.constructor = Coroutine$VfsFile$openUse$lambda_0;
  Coroutine$VfsFile$openUse$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeFile($receiver_0, source_0, continuation_0, suspended) {
    var instance = new Coroutine$writeFile($receiver_0, source_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$writeFile($receiver_0, source_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.local$$receiver = void 0;
    this.local$$receiver_0 = $receiver_0;
    this.local$source = source_0;
  }
  Coroutine$writeFile.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeFile.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeFile.prototype.constructor = Coroutine$writeFile;
  Coroutine$writeFile.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 1;
            this.result_0 = this.local$source.open_tiaunm$(VfsOpenMode$READ_getInstance(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.local$$receiver = this.result_0;
            this.exceptionState_0 = 4;
            this.state_0 = 2;
            this.result_0 = await_0(VfsFile$openUse$lambda_0(writeFile$lambda(this.local$$receiver_0)), this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return this.result_0;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function copyTo($receiver_0, target_0, chunkSize_0, continuation_0, suspended) {
    var instance = new Coroutine$copyTo($receiver_0, target_0, chunkSize_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$copyTo($receiver_0, target_0, chunkSize_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$chunk = void 0;
    this.local$totalCount = void 0;
    this.local$count = void 0;
    this.local$$receiver = $receiver_0;
    this.local$target = target_0;
    this.local$chunkSize = chunkSize_0;
  }
  Coroutine$copyTo.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$copyTo.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$copyTo.prototype.constructor = Coroutine$copyTo;
  Coroutine$copyTo.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$chunkSize === void 0)
              this.local$chunkSize = 65536;
            if (Kotlin.isType(this.local$$receiver, AsyncStream) && Kotlin.isType(this.local$$receiver.base, MemoryAsyncStreamBase)) {
              this.state_0 = 2;
              this.result_0 = this.local$target.write_mj6st8$(this.local$$receiver.base.data.data, this.local$$receiver.position.toInt(), this.local$$receiver.base.ilength - this.local$$receiver.position.toInt() | 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            return Kotlin.Long.fromInt(this.local$$receiver.base.ilength);
          case 3:
            this.local$chunk = new Int8Array(this.local$chunkSize);
            this.local$totalCount = L0;
            this.state_0 = 4;
            continue;
          case 4:
            this.state_0 = 5;
            this.result_0 = read(this.local$$receiver, this.local$chunk, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.local$count = this.result_0;
            if (this.local$count <= 0) {
              this.state_0 = 8;
              continue;
            }
             else {
              this.state_0 = 6;
              continue;
            }

          case 6:
            this.state_0 = 7;
            this.result_0 = this.local$target.write_mj6st8$(this.local$chunk, 0, this.local$count, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 7:
            this.local$totalCount = this.local$totalCount.add(Kotlin.Long.fromInt(this.local$count));
            this.state_0 = 4;
            continue;
          case 8:
            return this.local$totalCount;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeToAlign($receiver_0, alignment_0, value_0, continuation_0, suspended) {
    var instance = new Coroutine$writeToAlign($receiver_0, alignment_0, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$writeToAlign($receiver_0, alignment_0, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$nextPosition = void 0;
    this.local$$receiver = $receiver_0;
    this.local$alignment = alignment_0;
    this.local$value = value_0;
  }
  Coroutine$writeToAlign.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeToAlign.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeToAlign.prototype.constructor = Coroutine$writeToAlign;
  Coroutine$writeToAlign.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$value === void 0)
              this.local$value = 0;
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$nextPosition = nextAlignedTo(this.result_0, Kotlin.Long.fromInt(this.local$alignment));
            this.state_0 = 3;
            this.result_0 = this.local$$receiver.getPosition(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            tmp$ = this.local$nextPosition.subtract(this.result_0).toInt();
            var data = new Int8Array(tmp$);
            var value = toByte(this.local$value);
            var end;
            end = data.length;
            data.fill(value, 0, end);
            this.state_0 = 4;
            this.result_0 = writeBytes(this.local$$receiver, data, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function skip_0($receiver, count, continuation) {
    $receiver.position = $receiver.position.add(Kotlin.Long.fromInt(count));
    return $receiver;
  }
  function skipToAlign($receiver, alignment, continuation) {
    $receiver.position = nextAlignedTo($receiver.position, Kotlin.Long.fromInt(alignment));
    return Unit;
  }
  function truncate($receiver, continuation) {
    return $receiver.setLength_s8cxhz$($receiver.position, continuation);
  }
  function writeCharArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_le($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeShortArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_le_0($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeIntArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_le_1($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeLongArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_le_2($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeFloatArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_le_3($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeDoubleArray_le($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_le_4($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeCharArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_be($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeShortArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_be_0($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeIntArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_be_1($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeLongArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_be_2($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeFloatArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_be_3($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function writeDoubleArray_be($receiver, array, continuation) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_be_4($receiver_0, 0, array);
    return writeBytes($receiver, $receiver_0, continuation);
  }
  function readUntil($receiver_0, endByte_0, limit_0, continuation_0, suspended) {
    var instance = new Coroutine$readUntil($receiver_0, endByte_0, limit_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readUntil($receiver_0, endByte_0, limit_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 8;
    this.local$temp = void 0;
    this.local$out = void 0;
    this.local$c = void 0;
    this.local$$receiver = $receiver_0;
    this.local$endByte = endByte_0;
    this.local$limit = limit_0;
  }
  Coroutine$readUntil.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readUntil.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readUntil.prototype.constructor = Coroutine$readUntil;
  Coroutine$readUntil.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$limit === void 0)
              this.local$limit = 4096;
            this.local$temp = new Int8Array(1);
            this.local$out = new ByteArrayBuilder();
            this.exceptionState_0 = 6;
            this.state_0 = 1;
            continue;
          case 1:
            this.state_0 = 2;
            this.result_0 = readExact(this.local$$receiver, this.local$temp, 0, 1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.local$c = this.local$temp[0];
            if (this.local$c === this.local$endByte) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.local$out.append_s8j3t7$(this.local$c);
            if (this.local$out.size >= this.local$limit) {
              this.state_0 = 5;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 4:
            this.state_0 = 1;
            continue;
          case 5:
            this.exceptionState_0 = 8;
            this.state_0 = 7;
            continue;
          case 6:
            this.exceptionState_0 = 8;
            var e = this.exception_0;
            if (!Kotlin.isType(e, EOFException))
              throw e;
            this.state_0 = 7;
            continue;
          case 7:
            return this.local$out.toByteArray();
          case 8:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 8) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function readLine($receiver_0, eol_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$readLine($receiver_0, eol_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readLine($receiver_0, eol_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.local$temp = void 0;
    this.local$out = void 0;
    this.local$c = void 0;
    this.local$$receiver = $receiver_0;
    this.local$eol = eol_0;
    this.local$charset = charset_0;
  }
  Coroutine$readLine.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readLine.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readLine.prototype.constructor = Coroutine$readLine;
  Coroutine$readLine.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$eol === void 0)
              this.local$eol = 10;
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            this.local$temp = new Int8Array(1);
            this.local$out = new ByteArrayBuilder();
            this.exceptionState_0 = 5;
            this.state_0 = 1;
            continue;
          case 1:
            this.state_0 = 2;
            this.result_0 = readExact(this.local$$receiver, this.local$temp, 0, 1, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.local$c = this.local$temp[0];
            if (toChar(this.local$c) === this.local$eol) {
              this.state_0 = 4;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.local$out.append_s8j3t7$(this.local$c);
            this.state_0 = 1;
            continue;
          case 4:
            this.exceptionState_0 = 7;
            this.state_0 = 6;
            continue;
          case 5:
            this.exceptionState_0 = 7;
            var e = this.exception_0;
            if (!Kotlin.isType(e, EOFException))
              throw e;
            this.state_0 = 6;
            continue;
          case 6:
            return toString_0(this.local$out.toByteArray(), this.local$charset);
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function toAsyncInputStream$ObjectLiteral(this$toAsyncInputStream) {
    this.sync = this$toAsyncInputStream;
  }
  toAsyncInputStream$ObjectLiteral.prototype.read_mj6st8$ = function (buffer, offset, len, continuation) {
    return this.sync.read_mj6st8$(buffer, offset, len);
  };
  toAsyncInputStream$ObjectLiteral.prototype.close = function (continuation) {
    var tmp$, tmp$_0;
    (tmp$_0 = Kotlin.isType(tmp$ = this.sync, Closeable) ? tmp$ : null) != null ? (tmp$_0.close(), Unit) : null;
    return Unit;
  };
  toAsyncInputStream$ObjectLiteral.prototype.getPosition = function (continuation_0, suspended) {
    var instance = new Coroutine$getPosition(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getPosition($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$_1 = void 0;
  }
  Coroutine$getPosition.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getPosition.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getPosition.prototype.constructor = Coroutine$getPosition;
  Coroutine$getPosition.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.local$tmp$_1 = (tmp$_0 = Kotlin.isType(tmp$ = this.$this.sync, SyncPositionStream) ? tmp$ : null) != null ? tmp$_0.position : null;
            if (this.local$tmp$_1 == null) {
              this.state_0 = 2;
              this.result_0 = AsyncInputWithLengthStream.prototype.getPosition.call(this.$this, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$_1 = this.result_0;
            this.state_0 = 3;
            continue;
          case 3:
            return this.local$tmp$_1;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncInputStream$ObjectLiteral.prototype.getLength = function (continuation_0, suspended) {
    var instance = new Coroutine$getLength_0(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getLength_0($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$_1 = void 0;
  }
  Coroutine$getLength_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getLength_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getLength_0.prototype.constructor = Coroutine$getLength_0;
  Coroutine$getLength_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.local$tmp$_1 = (tmp$_0 = Kotlin.isType(tmp$ = this.$this.sync, SyncLengthStream) ? tmp$ : null) != null ? tmp$_0.length : null;
            if (this.local$tmp$_1 == null) {
              this.state_0 = 2;
              this.result_0 = AsyncInputWithLengthStream.prototype.getLength.call(this.$this, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$tmp$_1 = this.result_0;
            this.state_0 = 3;
            continue;
          case 3:
            return this.local$tmp$_1;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  toAsyncInputStream$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncInputWithLengthStream]
  };
  function toAsyncInputStream_0($receiver) {
    return new toAsyncInputStream$ObjectLiteral($receiver);
  }
  function toAsyncOutputStream$ObjectLiteral(this$toAsyncOutputStream) {
    this.this$toAsyncOutputStream = this$toAsyncOutputStream;
  }
  toAsyncOutputStream$ObjectLiteral.prototype.write_mj6st8$$default = function (buffer, offset, len, continuation) {
    return this.this$toAsyncOutputStream.write_mj6st8$(buffer, offset, len);
  };
  toAsyncOutputStream$ObjectLiteral.prototype.close = function (continuation) {
    this.this$toAsyncOutputStream;
    var tmp$, tmp$_0;
    (tmp$_0 = Kotlin.isType(tmp$ = this.this$toAsyncOutputStream, Closeable) ? tmp$ : null) != null ? (tmp$_0.close(), Unit) : null;
    return Unit;
  };
  toAsyncOutputStream$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncOutputStream]
  };
  function toAsyncOutputStream_0($receiver) {
    return new toAsyncOutputStream$ObjectLiteral($receiver);
  }
  function asVfsFile($receiver, name) {
    if (name === void 0)
      name = 'unknown.bin';
    return MemoryVfs(mapOf(to(name, $receiver))).get_61zpoe$(name);
  }
  function readAllAsFastStream($receiver_0, offset_0, continuation_0, suspended) {
    var instance = new Coroutine$readAllAsFastStream($receiver_0, offset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$readAllAsFastStream($receiver_0, offset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$offset = offset_0;
  }
  Coroutine$readAllAsFastStream.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$readAllAsFastStream.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$readAllAsFastStream.prototype.constructor = Coroutine$readAllAsFastStream;
  Coroutine$readAllAsFastStream.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$offset === void 0)
              this.local$offset = 0;
            this.state_0 = 2;
            this.result_0 = readAll(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return openFastStream(this.result_0);
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  var getWrittenRange = defineInlineFunction('korio-js.com.soywiz.korio.stream.getWrittenRange_rj0k6g$', wrapFunction(function () {
    var until = Kotlin.kotlin.ranges.until_2p08ub$;
    return function ($receiver, callback) {
      var start = $receiver.position;
      callback();
      var end = $receiver.position;
      return until(start, end);
    };
  }));
  function writeU_VL($receiver_0, value_0, continuation_0, suspended) {
    var instance = new Coroutine$writeU_VL($receiver_0, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$writeU_VL($receiver_0, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$value = value_0;
  }
  Coroutine$writeU_VL.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeU_VL.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeU_VL.prototype.constructor = Coroutine$writeU_VL;
  Coroutine$writeU_VL.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(buffer);
            writeU_VL_0(s, this.local$value);
            this.state_0 = 2;
            this.result_0 = writeBytes(this.local$$receiver, buffer.toByteArray(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function writeStringVL($receiver_0, str_0, charset_0, continuation_0, suspended) {
    var instance = new Coroutine$writeStringVL($receiver_0, str_0, charset_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$writeStringVL($receiver_0, str_0, charset_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$$receiver = $receiver_0;
    this.local$str = str_0;
    this.local$charset = charset_0;
  }
  Coroutine$writeStringVL.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$writeStringVL.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$writeStringVL.prototype.constructor = Coroutine$writeStringVL;
  Coroutine$writeStringVL.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$charset === void 0)
              this.local$charset = UTF8_getInstance();
            var buffer = ByteArrayBuffer_init(4096);
            var s = MemorySyncStream_0(buffer);
            writeStringVL_0(s, this.local$str, this.local$charset);
            this.state_0 = 2;
            this.result_0 = writeBytes(this.local$$receiver, buffer.toByteArray(), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function withLength$ObjectLiteral(closure$base, closure$currentPos, closure$length) {
    this.closure$base = closure$base;
    this.closure$currentPos = closure$currentPos;
    this.closure$length = closure$length;
    this.$delegate_88yo8j$_0 = closure$base;
  }
  withLength$ObjectLiteral.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_5(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_5($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_5.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_5.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_5.prototype.constructor = Coroutine$read_mj6st8$_5;
  Coroutine$read_mj6st8$_5.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.$this.closure$base.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var read = this.result_0;
            if (read >= 0)
              this.$this.closure$currentPos.v = this.$this.closure$currentPos.v.add(Kotlin.Long.fromInt(read));
            return read;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  withLength$ObjectLiteral.prototype.getPosition = function (continuation) {
    return this.closure$currentPos.v;
  };
  withLength$ObjectLiteral.prototype.getLength = function (continuation) {
    return this.closure$length;
  };
  withLength$ObjectLiteral.prototype.close = function (continuation) {
    return this.$delegate_88yo8j$_0.close(continuation);
  };
  withLength$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncGetPositionStream, AsyncGetLengthStream, AsyncInputStream]
  };
  function withLength($receiver, length) {
    var base = $receiver;
    var currentPos = {v: L0};
    return new withLength$ObjectLiteral(base, currentPos, length);
  }
  function MemoryAsyncStreamBase(data) {
    AsyncStreamBase.call(this);
    this.data = data;
  }
  Object.defineProperty(MemoryAsyncStreamBase.prototype, 'ilength', {
    get: function () {
      return this.data.size;
    },
    set: function (value) {
      this.data.size = value;
    }
  });
  MemoryAsyncStreamBase.prototype.setLength_s8cxhz$ = function (value, continuation) {
    this.ilength = value.toInt();
    return Unit;
  };
  MemoryAsyncStreamBase.prototype.getLength = function (continuation) {
    return Kotlin.Long.fromInt(this.ilength);
  };
  MemoryAsyncStreamBase.prototype.checkPosition_s8cxhz$ = function (position) {
    if (position.toNumber() < 0)
      invalidOp('Invalid position ' + position);
  };
  MemoryAsyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    this.checkPosition_s8cxhz$(position);
    if (!contains_1(until(0, this.ilength), position))
      return 0;
    var a = Kotlin.Long.fromInt(this.ilength);
    var b = position.add(Kotlin.Long.fromInt(len));
    var end = a.compareTo_11rb$(b) <= 0 ? a : b;
    var a_0 = end.subtract(position).toInt();
    var actualLen = Math_0.max(a_0, 0);
    arraycopy(this.data.data, position.toInt(), buffer, offset, actualLen);
    return actualLen;
  };
  MemoryAsyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len, continuation) {
    this.checkPosition_s8cxhz$(position);
    var tmp$ = this.data;
    var a = this.data.size;
    var b = position.add(Kotlin.Long.fromInt(len)).toInt();
    tmp$.size = Math_0.max(a, b);
    arraycopy(buffer, offset, this.data.data, position.toInt(), len);
  };
  MemoryAsyncStreamBase.prototype.close = function (continuation) {
    return Unit;
  };
  MemoryAsyncStreamBase.prototype.toString = function () {
    return 'MemoryAsyncStreamBase(' + this.data.size + ')';
  };
  MemoryAsyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemoryAsyncStreamBase',
    interfaces: [AsyncStreamBase]
  };
  function MemoryAsyncStreamBase_init(initialCapacity, $this) {
    if (initialCapacity === void 0)
      initialCapacity = 4096;
    $this = $this || Object.create(MemoryAsyncStreamBase.prototype);
    MemoryAsyncStreamBase.call($this, ByteArrayBuffer_init(initialCapacity));
    return $this;
  }
  function ByteArrayBuilder() {
    this.chunks_0 = ArrayList_init();
    this.small_0 = ByteArrayBuilder$ByteArrayBuilder$Small_init();
  }
  Object.defineProperty(ByteArrayBuilder.prototype, 'size', {
    get: function () {
      var tmp$;
      var sum = 0;
      tmp$ = this.chunks_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        sum = sum + element.length | 0;
      }
      return sum + this.small_0.size | 0;
    }
  });
  ByteArrayBuilder.prototype.flush_0 = function () {
    if (this.small_0.size <= 0)
      return;
    var $receiver = this.chunks_0;
    var element = this.small_0.toByteArray();
    $receiver.add_11rb$(element);
    this.small_0.clear();
  };
  ByteArrayBuilder.prototype.clear = function () {
    this.chunks_0.clear();
    this.small_0.clear();
  };
  ByteArrayBuilder.prototype.append_mj6st8$ = function (chunk, offset, length) {
    this.flush_0();
    var toIndex = offset + length | 0;
    var achunk = chunk.slice(offset, toIndex);
    this.chunks_0.add_11rb$(achunk);
  };
  ByteArrayBuilder.prototype.append_h9g1yw$ = function (buffer) {
    this.flush_0();
    addAll(this.chunks_0, buffer.chunks_0);
  };
  ByteArrayBuilder.prototype.append_fqrh44$ = function (chunk) {
    this.append_mj6st8$(chunk, 0, chunk.length);
  };
  ByteArrayBuilder.prototype.append_s8j3t7$ = function (v) {
    this.small_0.append_s8j3t7$(v);
  };
  ByteArrayBuilder.prototype.plusAssign_h9g1yw$ = function (v) {
    this.append_h9g1yw$(v);
  };
  ByteArrayBuilder.prototype.plusAssign_fqrh44$ = function (v) {
    this.append_fqrh44$(v);
  };
  ByteArrayBuilder.prototype.plusAssign_s8j3t7$ = function (v) {
    this.append_s8j3t7$(v);
  };
  ByteArrayBuilder.prototype.toByteArray = function () {
    var tmp$;
    this.flush_0();
    var out = new Int8Array(this.size);
    var offset = 0;
    tmp$ = this.chunks_0.iterator();
    while (tmp$.hasNext()) {
      var chunk = tmp$.next();
      arraycopy(chunk, 0, out, offset, chunk.length);
      offset = offset + chunk.length | 0;
    }
    return out;
  };
  ByteArrayBuilder.prototype.toString_qa9gbo$ = function (charset) {
    return toString_0(this.toByteArray(), charset);
  };
  function ByteArrayBuilder$Small(bytes, len) {
    if (len === void 0)
      len = 0;
    this.bytes_0 = bytes;
    this.len_0 = len;
  }
  Object.defineProperty(ByteArrayBuilder$Small.prototype, 'size', {
    get: function () {
      return this.len_0;
    }
  });
  ByteArrayBuilder$Small.prototype.ensure_za3lpa$ = function (size) {
    if ((this.len_0 + size | 0) < this.bytes_0.length)
      return;
    var tmp$ = this.bytes_0;
    var a = this.bytes_0.length + size | 0;
    var b = this.bytes_0.length * 2 | 0;
    this.bytes_0 = copyOf(tmp$, Math_0.max(a, b));
  };
  ByteArrayBuilder$Small.prototype.append_s8j3t7$ = function (v) {
    var tmp$;
    this.ensure_za3lpa$(1);
    this.bytes_0[tmp$ = this.len_0, this.len_0 = tmp$ + 1 | 0, tmp$] = v;
  };
  ByteArrayBuilder$Small.prototype.clear = function () {
    this.len_0 = 0;
  };
  ByteArrayBuilder$Small.prototype.toByteArray = function () {
    return copyOf(this.bytes_0, this.len_0);
  };
  ByteArrayBuilder$Small.prototype.toString_qa9gbo$ = function (charset) {
    return toString_0(this.toByteArray(), charset);
  };
  ByteArrayBuilder$Small.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Small',
    interfaces: []
  };
  function ByteArrayBuilder$ByteArrayBuilder$Small_init(capacity, $this) {
    if (capacity === void 0)
      capacity = 64;
    $this = $this || Object.create(ByteArrayBuilder$Small.prototype);
    ByteArrayBuilder$Small.call($this, new Int8Array(capacity));
    return $this;
  }
  ByteArrayBuilder.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ByteArrayBuilder',
    interfaces: []
  };
  function ByteArrayBuilder_init(chunk, $this) {
    $this = $this || Object.create(ByteArrayBuilder.prototype);
    ByteArrayBuilder.call($this);
    $this.append_fqrh44$(chunk);
    return $this;
  }
  function ByteArrayBuilder_init_0(chunks, $this) {
    $this = $this || Object.create(ByteArrayBuilder.prototype);
    ByteArrayBuilder.call($this);
    var tmp$;
    for (tmp$ = 0; tmp$ !== chunks.length; ++tmp$) {
      var chunk = chunks[tmp$];
      $this.append_fqrh44$(chunk);
    }
    return $this;
  }
  function ByteArrayBuilder_init_1(chunks, $this) {
    $this = $this || Object.create(ByteArrayBuilder.prototype);
    ByteArrayBuilder_init_0(copyToArray(toList(chunks)).slice(), $this);
    return $this;
  }
  function ByteArrayBuilderSmall(bytes, len) {
    if (len === void 0)
      len = 0;
    this.bytes_0 = bytes;
    this.len_0 = len;
  }
  Object.defineProperty(ByteArrayBuilderSmall.prototype, 'size', {
    get: function () {
      return this.len_0;
    }
  });
  ByteArrayBuilderSmall.prototype.ensure_za3lpa$ = function (size) {
    if ((this.len_0 + size | 0) < this.bytes_0.length)
      return;
    var tmp$ = this.bytes_0;
    var a = this.bytes_0.length + size | 0;
    var b = this.bytes_0.length * 2 | 0;
    this.bytes_0 = copyOf(tmp$, Math_0.max(a, b));
  };
  ByteArrayBuilderSmall.prototype.append_s8j3t7$ = function (v) {
    var tmp$;
    this.ensure_za3lpa$(1);
    this.bytes_0[tmp$ = this.len_0, this.len_0 = tmp$ + 1 | 0, tmp$] = v;
  };
  ByteArrayBuilderSmall.prototype.clear = function () {
    this.len_0 = 0;
  };
  ByteArrayBuilderSmall.prototype.toByteArray = function () {
    return copyOf(this.bytes_0, this.len_0);
  };
  ByteArrayBuilderSmall.prototype.toString_qa9gbo$ = function (charset) {
    return toString_0(this.toByteArray(), charset);
  };
  ByteArrayBuilderSmall.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ByteArrayBuilderSmall',
    interfaces: []
  };
  function ByteArrayBuilderSmall_init(capacity, $this) {
    if (capacity === void 0)
      capacity = 64;
    $this = $this || Object.create(ByteArrayBuilderSmall.prototype);
    ByteArrayBuilderSmall.call($this, new Int8Array(capacity));
    return $this;
  }
  function FastByteArrayInputStream(ba, offset) {
    if (offset === void 0)
      offset = 0;
    this.ba = ba;
    this.offset = offset;
  }
  Object.defineProperty(FastByteArrayInputStream.prototype, 'length', {
    get: function () {
      return this.ba.length;
    }
  });
  Object.defineProperty(FastByteArrayInputStream.prototype, 'available', {
    get: function () {
      return this.ba.length - this.offset | 0;
    }
  });
  Object.defineProperty(FastByteArrayInputStream.prototype, 'hasMore', {
    get: function () {
      return this.available > 0;
    }
  });
  Object.defineProperty(FastByteArrayInputStream.prototype, 'eof', {
    get: function () {
      return !this.hasMore;
    }
  });
  FastByteArrayInputStream.prototype.skip_za3lpa$ = function (count) {
    this.offset = this.offset + count | 0;
  };
  FastByteArrayInputStream.prototype.skipToAlign_za3lpa$ = function (count) {
    var nextPosition = nextAlignedTo_0(this.offset, this.offset);
    this.readBytes_za3lpa$(nextPosition - this.offset | 0);
  };
  FastByteArrayInputStream.prototype.readS8 = function () {
    var tmp$;
    return this.ba[tmp$ = this.offset, this.offset = tmp$ + 1 | 0, tmp$];
  };
  FastByteArrayInputStream.prototype.readU8 = function () {
    var tmp$;
    return this.ba[tmp$ = this.offset, this.offset = tmp$ + 1 | 0, tmp$] & 255;
  };
  FastByteArrayInputStream.prototype.readS16_le = function () {
    var out = readS16_le(this.ba, this.offset);
    this.offset = this.offset + 2 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readS16_be = function () {
    var out = readS16_be(this.ba, this.offset);
    this.offset = this.offset + 2 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU16_le = function () {
    var out = readU16_le(this.ba, this.offset);
    this.offset = this.offset + 2 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU16_be = function () {
    var out = readU16_be(this.ba, this.offset);
    this.offset = this.offset + 2 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readS24_le = function () {
    var out = readS24_le(this.ba, this.offset);
    this.offset = this.offset + 3 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readS24_be = function () {
    var out = readS24_be(this.ba, this.offset);
    this.offset = this.offset + 3 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU24_le = function () {
    var out = readU24_le(this.ba, this.offset);
    this.offset = this.offset + 3 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU24_be = function () {
    var out = readU24_be(this.ba, this.offset);
    this.offset = this.offset + 3 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readS32_le = function () {
    var out = readS32_le(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readS32_be = function () {
    var out = readS32_be(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU32_le = function () {
    var out = readU32_le(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU32_be = function () {
    var out = readU32_be(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readF32_le = function () {
    var out = readF32_le(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readF32_be = function () {
    var out = readF32_be(this.ba, this.offset);
    this.offset = this.offset + 4 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readF64_le = function () {
    var out = readF64_le(this.ba, this.offset);
    this.offset = this.offset + 8 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readF64_be = function () {
    var out = readF64_be(this.ba, this.offset);
    this.offset = this.offset + 8 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readBytes_za3lpa$ = function (count) {
    var out = readByteArray(this.ba, this.offset, count);
    this.offset = this.offset + count | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readUBytes_za3lpa$ = function (count) {
    return new UByteArray(this.readBytes_za3lpa$(count));
  };
  FastByteArrayInputStream.prototype.readShortArray_le_za3lpa$ = function (count) {
    var count_0 = count * 2 | 0;
    var out = readShortArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readShortArray_be_za3lpa$ = function (count) {
    var count_0 = count * 2 | 0;
    var out = readShortArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readCharArray_le_za3lpa$ = function (count) {
    var count_0 = count * 2 | 0;
    var out = readCharArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readCharArray_be_za3lpa$ = function (count) {
    var count_0 = count * 2 | 0;
    var out = readCharArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readIntArray_le_za3lpa$ = function (count) {
    var count_0 = count * 4 | 0;
    var out = readIntArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readIntArray_be_za3lpa$ = function (count) {
    var count_0 = count * 4 | 0;
    var out = readIntArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readLongArray_le_za3lpa$ = function (count) {
    var count_0 = count * 8 | 0;
    var out = readLongArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readLongArray_be_za3lpa$ = function (count) {
    var count_0 = count * 8 | 0;
    var out = readLongArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readFloatArray_le_za3lpa$ = function (count) {
    var count_0 = count * 4 | 0;
    var out = readFloatArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readFloatArray_be_za3lpa$ = function (count) {
    var count_0 = count * 4 | 0;
    var out = readFloatArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readDoubleArray_le_za3lpa$ = function (count) {
    var count_0 = count * 8 | 0;
    var out = readDoubleArray_le(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readDoubleArray_be_za3lpa$ = function (count) {
    var count_0 = count * 8 | 0;
    var out = readDoubleArray_be(this.ba, this.offset, count);
    this.offset = this.offset + count_0 | 0;
    return out;
  };
  FastByteArrayInputStream.prototype.readU_VL = function () {
    var result = this.readU8();
    if ((result & 128) === 0)
      return result;
    result = result & 127 | this.readU8() << 7;
    if ((result & 16384) === 0)
      return result;
    result = result & 16383 | this.readU8() << 14;
    if ((result & 2097152) === 0)
      return result;
    result = result & 2097151 | this.readU8() << 21;
    if ((result & 268435456) === 0)
      return result;
    result = result & 268435455 | this.readU8() << 28;
    return result;
  };
  FastByteArrayInputStream.prototype.readS_VL = function () {
    var v = this.readU_VL();
    var sign = (v & 1) !== 0;
    var uvalue = v >>> 1;
    return sign ? (-uvalue | 0) - 1 | 0 : uvalue;
  };
  FastByteArrayInputStream.prototype.readString_uyw3ma$ = function (len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return toString_0(this.readBytes_za3lpa$(len), charset);
  };
  FastByteArrayInputStream.prototype.readStringz_uyw3ma$ = function (len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var res = this.readBytes_za3lpa$(len);
    var index = indexOf_2(res, toByte(0));
    return toString_0(copyOf(res, index < 0 ? len : index), charset);
  };
  FastByteArrayInputStream.prototype.readStringz_qa9gbo$ = function (charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var startOffset = this.offset;
    var index = indexOf_3(this.ba, this.offset, toByte(0));
    var end = index >= 0 ? index : this.ba.length;
    var $receiver = this.ba;
    var toIndex = end - startOffset | 0;
    var str = toString_0($receiver.slice(startOffset, toIndex), charset);
    this.offset = index >= 0 ? end + 1 | 0 : end;
    return str;
  };
  FastByteArrayInputStream.prototype.readStringVL_qa9gbo$ = function (charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return this.readString_uyw3ma$(this.readU_VL(), charset);
  };
  FastByteArrayInputStream.prototype.increment_0 = function (count, callback) {
    var out = callback();
    this.offset = this.offset + count | 0;
    return out;
  };
  FastByteArrayInputStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FastByteArrayInputStream',
    interfaces: []
  };
  function openFastStream($receiver, offset) {
    if (offset === void 0)
      offset = 0;
    return new FastByteArrayInputStream($receiver, offset);
  }
  function SyncProduceConsumerByteBuffer() {
    SyncProduceConsumerByteBuffer$Companion_getInstance();
    this.current_0 = SyncProduceConsumerByteBuffer$Companion_getInstance().EMPTY_0;
    this.currentPos_0 = 0;
    this.buffers_0 = new Queue();
    this.availableInBuffers_0 = 0;
    this.producedSema_0 = new Semaphore(0);
  }
  function SyncProduceConsumerByteBuffer$Companion() {
    SyncProduceConsumerByteBuffer$Companion_instance = this;
    this.EMPTY_0 = new Int8Array([]);
  }
  SyncProduceConsumerByteBuffer$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SyncProduceConsumerByteBuffer$Companion_instance = null;
  function SyncProduceConsumerByteBuffer$Companion_getInstance() {
    if (SyncProduceConsumerByteBuffer$Companion_instance === null) {
      new SyncProduceConsumerByteBuffer$Companion();
    }
    return SyncProduceConsumerByteBuffer$Companion_instance;
  }
  Object.defineProperty(SyncProduceConsumerByteBuffer.prototype, 'availableInCurrent_0', {
    get: function () {
      return this.current_0.length - this.currentPos_0 | 0;
    }
  });
  Object.defineProperty(SyncProduceConsumerByteBuffer.prototype, 'available', {
    get: function () {
      return this.availableInCurrent_0 + this.availableInBuffers_0 | 0;
    }
  });
  SyncProduceConsumerByteBuffer.prototype.produce_fqrh44$ = function (data) {
    this.buffers_0.enqueue_11rb$(data);
    this.availableInBuffers_0 = this.availableInBuffers_0 + data.length | 0;
    this.producedSema_0.release();
  };
  SyncProduceConsumerByteBuffer.prototype.useNextBuffer_0 = function () {
    this.current_0 = this.buffers_0.size === 0 ? SyncProduceConsumerByteBuffer$Companion_getInstance().EMPTY_0 : this.buffers_0.dequeue();
    this.currentPos_0 = 0;
    this.availableInBuffers_0 = this.availableInBuffers_0 - this.current_0.length | 0;
  };
  SyncProduceConsumerByteBuffer.prototype.ensureCurrentBuffer_0 = function () {
    if (this.availableInCurrent_0 <= 0) {
      this.useNextBuffer_0();
    }
  };
  SyncProduceConsumerByteBuffer.prototype.consume_mj6st8$ = function (data, offset, len) {
    if (offset === void 0)
      offset = 0;
    if (len === void 0)
      len = data.length;
    var totalRead = 0;
    var remaining = len;
    var outputPos = offset;
    while (remaining > 0) {
      this.ensureCurrentBuffer_0();
      var a = this.availableInCurrent_0;
      var readInCurrent = Math_0.min(a, len);
      if (readInCurrent <= 0)
        break;
      arraycopy(this.current_0, this.currentPos_0, data, outputPos, readInCurrent);
      this.currentPos_0 = this.currentPos_0 + readInCurrent | 0;
      remaining = remaining - readInCurrent | 0;
      totalRead = totalRead + readInCurrent | 0;
      outputPos = outputPos + readInCurrent | 0;
    }
    return totalRead;
  };
  SyncProduceConsumerByteBuffer.prototype.consume_za3lpa$ = function (len) {
    var $receiver = new Int8Array(len);
    return copyOf($receiver, this.consume_mj6st8$($receiver, 0, len));
  };
  SyncProduceConsumerByteBuffer.prototype.consumeUntil_vlsdy4$ = function (end, including, limit) {
    if (including === void 0)
      including = true;
    if (limit === void 0)
      limit = 2147483647;
    var out = new ByteArrayBuilder();
    while (true) {
      this.ensureCurrentBuffer_0();
      if (this.availableInCurrent_0 <= 0)
        break;
      var p = indexOf_3(this.current_0, this.currentPos_0, end);
      var pp = p < 0 ? this.current_0.length : including ? p + 1 | 0 : p;
      var len = pp - this.currentPos_0 | 0;
      if (len > 0)
        out.append_mj6st8$(this.current_0, this.currentPos_0, len);
      if (out.size >= limit)
        break;
      this.currentPos_0 = this.currentPos_0 + len | 0;
      if (p >= 0)
        break;
    }
    return out.toByteArray();
  };
  SyncProduceConsumerByteBuffer.prototype.write_mj6st8$ = function (buffer, offset, len) {
    var toIndex = offset + len | 0;
    this.produce_fqrh44$(buffer.slice(offset, toIndex));
  };
  SyncProduceConsumerByteBuffer.prototype.read_mj6st8$ = function (buffer, offset, len) {
    while (true) {
      if (len === 0)
        return 0;
      var out = this.consume_mj6st8$(buffer, offset, len);
      if (out === 0) {
        this.producedSema_0.acquire();
      }
       else {
        return out;
      }
    }
  };
  SyncProduceConsumerByteBuffer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncProduceConsumerByteBuffer',
    interfaces: [SyncInputStream, SyncOutputStream]
  };
  function SyncInputStream() {
  }
  SyncInputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncInputStream',
    interfaces: [OptionalCloseable]
  };
  function SyncOutputStream() {
  }
  SyncOutputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncOutputStream',
    interfaces: [OptionalCloseable]
  };
  function flush($receiver) {
  }
  function write($receiver, buffer) {
    $receiver.write_mj6st8$(buffer, 0, buffer.length);
  }
  function SyncPositionStream() {
  }
  SyncPositionStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncPositionStream',
    interfaces: []
  };
  function SyncLengthStream() {
  }
  SyncLengthStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncLengthStream',
    interfaces: []
  };
  function SyncRAInputStream() {
  }
  SyncRAInputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncRAInputStream',
    interfaces: []
  };
  function SyncRAOutputStream() {
  }
  SyncRAOutputStream.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'SyncRAOutputStream',
    interfaces: []
  };
  function SyncStreamBase() {
    this.smallTemp = new Int8Array(16);
  }
  SyncStreamBase.prototype.read_s8cxhz$ = function (position) {
    var count = this.read_4m9kcn$(position, this.smallTemp, 0, 1);
    return count >= 1 ? this.smallTemp[0] & 255 : -1;
  };
  SyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    throw UnsupportedOperationException_init();
  };
  SyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    throw UnsupportedOperationException_init();
  };
  Object.defineProperty(SyncStreamBase.prototype, 'length', {
    get: function () {
      throw UnsupportedOperationException_init();
    },
    set: function (value) {
      throw UnsupportedOperationException_init();
    }
  });
  SyncStreamBase.prototype.close = function () {
  };
  SyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncStreamBase',
    interfaces: [SyncLengthStream, SyncRAOutputStream, SyncRAInputStream, Closeable]
  };
  function SyncStream(base, position) {
    if (position === void 0)
      position = L0;
    this.base = base;
    this.position_p67izg$_0 = position;
    this.$delegate_39qel5$_0 = new Extra$Mixin();
  }
  Object.defineProperty(SyncStream.prototype, 'position', {
    get: function () {
      return this.position_p67izg$_0;
    },
    set: function (position) {
      this.position_p67izg$_0 = position;
    }
  });
  SyncStream.prototype.read_mj6st8$ = function (buffer, offset, len) {
    var read = this.base.read_4m9kcn$(this.position, buffer, offset, len);
    this.position = this.position.add(Kotlin.Long.fromInt(read));
    return read;
  };
  SyncStream.prototype.write_mj6st8$ = function (buffer, offset, len) {
    this.base.write_4m9kcn$(this.position, buffer, offset, len);
    this.position = this.position.add(Kotlin.Long.fromInt(len));
  };
  Object.defineProperty(SyncStream.prototype, 'length', {
    get: function () {
      return this.base.length;
    },
    set: function (value) {
      this.base.length = value;
    }
  });
  Object.defineProperty(SyncStream.prototype, 'available', {
    get: function () {
      return this.length.subtract(this.position);
    }
  });
  SyncStream.prototype.flush = function () {
  };
  SyncStream.prototype.close = function () {
    this.base.close();
  };
  SyncStream.prototype.clone = function () {
    return new SyncStream(this.base, this.position);
  };
  SyncStream.prototype.toString = function () {
    return 'SyncStream(' + this.base + ', ' + this.position + ')';
  };
  Object.defineProperty(SyncStream.prototype, 'extra', {
    get: function () {
      return this.$delegate_39qel5$_0.extra;
    },
    set: function (tmp$) {
      this.$delegate_39qel5$_0.extra = tmp$;
    }
  });
  SyncStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SyncStream',
    interfaces: [SyncLengthStream, SyncOutputStream, SyncPositionStream, SyncInputStream, Closeable, Extra]
  };
  var keepPosition = defineInlineFunction('korio-js.com.soywiz.korio.stream.keepPosition_1v0ofm$', function ($receiver, callback) {
    var old = $receiver.position;
    try {
      return callback();
    }
    finally {
      $receiver.position = old;
    }
  });
  function SliceSyncStreamBase(base, baseStart, baseEnd) {
    SyncStreamBase.call(this);
    this.base_8be2vx$ = base;
    this.baseStart_8be2vx$ = baseStart;
    this.baseEnd_8be2vx$ = baseEnd;
    this.baseLength_8be2vx$ = this.baseEnd_8be2vx$.subtract(this.baseStart_8be2vx$);
  }
  Object.defineProperty(SliceSyncStreamBase.prototype, 'length', {
    get: function () {
      return this.baseLength_8be2vx$;
    },
    set: function (value) {
      throw UnsupportedOperationException_init();
    }
  });
  SliceSyncStreamBase.prototype.clampPosition_0 = function (position) {
    return clamp_0(position, this.baseStart_8be2vx$, this.baseEnd_8be2vx$);
  };
  SliceSyncStreamBase.prototype.clampPositionLen_0 = function (position, len) {
    if (position.compareTo_11rb$(L0) < 0)
      throw IllegalArgumentException_init('Invalid position');
    var targetStartPosition = this.clampPosition_0(this.baseStart_8be2vx$.add(position));
    var targetEndPosition = this.clampPosition_0(targetStartPosition.add(Kotlin.Long.fromInt(len)));
    var targetLen = targetEndPosition.subtract(targetStartPosition).toInt();
    return new Pair(targetStartPosition, targetLen);
  };
  SliceSyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    var tmp$ = this.clampPositionLen_0(position, len);
    var targetStartPosition = tmp$.component1()
    , targetLen = tmp$.component2();
    return this.base_8be2vx$.read_4m9kcn$(targetStartPosition, buffer, offset, targetLen);
  };
  SliceSyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    var tmp$ = this.clampPositionLen_0(position, len);
    var targetStartPosition = tmp$.component1()
    , targetLen = tmp$.component2();
    return this.base_8be2vx$.write_4m9kcn$(targetStartPosition, buffer, offset, targetLen);
  };
  SliceSyncStreamBase.prototype.close = function () {
  };
  SliceSyncStreamBase.prototype.toString = function () {
    return 'SliceAsyncStreamBase(' + this.base_8be2vx$ + ', ' + this.baseStart_8be2vx$ + ', ' + this.baseEnd_8be2vx$ + ')';
  };
  SliceSyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SliceSyncStreamBase',
    interfaces: [SyncStreamBase]
  };
  function FillSyncStreamBase(fill, length) {
    SyncStreamBase.call(this);
    this.fill = fill;
    this.length_9bjrn1$_0 = length;
  }
  Object.defineProperty(FillSyncStreamBase.prototype, 'length', {
    get: function () {
      return this.length_9bjrn1$_0;
    },
    set: function (length) {
      this.length_9bjrn1$_0 = length;
    }
  });
  FillSyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    var a = this.length;
    var b = position.add(Kotlin.Long.fromInt(len));
    var end = a.compareTo_11rb$(b) <= 0 ? a : b;
    var actualLen = toIntSafe(end.subtract(position));
    var value = this.fill;
    var end_0 = offset + actualLen | 0;
    buffer.fill(value, offset, end_0);
    return actualLen;
  };
  FillSyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
  };
  FillSyncStreamBase.prototype.close = function () {
  };
  FillSyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FillSyncStreamBase',
    interfaces: [SyncStreamBase]
  };
  function FillSyncStream(fillByte, length) {
    if (fillByte === void 0)
      fillByte = 0;
    if (length === void 0)
      length = Long$Companion$MAX_VALUE;
    return toSyncStream(new FillSyncStreamBase(toByte(fillByte), length));
  }
  function MemorySyncStream(data) {
    if (data === void 0)
      data = EMPTY_BYTE_ARRAY;
    return toSyncStream(new MemorySyncStreamBase(new ByteArrayBuffer(data)));
  }
  function MemorySyncStream_0(data) {
    return toSyncStream(new MemorySyncStreamBase(data));
  }
  var MemorySyncStreamToByteArray = defineInlineFunction('korio-js.com.soywiz.korio.stream.MemorySyncStreamToByteArray_l6bp58$', wrapFunction(function () {
    var ByteArrayBuffer_init = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.ByteArrayBuffer_init_za3lpa$;
    var MemorySyncStream = _.com.soywiz.korio.stream.MemorySyncStream_yyklod$;
    return function (initialCapacity, callback) {
      if (initialCapacity === void 0)
        initialCapacity = 4096;
      var buffer = ByteArrayBuffer_init(initialCapacity);
      var s = MemorySyncStream(buffer);
      callback(s);
      return buffer.toByteArray();
    };
  }));
  function MemorySyncStreamToByteArraySuspend(initialCapacity, callback, continuation, suspended) {
    var instance = new Coroutine$MemorySyncStreamToByteArraySuspend(initialCapacity, callback, continuation);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$MemorySyncStreamToByteArraySuspend(initialCapacity, callback, continuation) {
    CoroutineImpl.call(this, continuation);
    this.exceptionState_0 = 1;
    this.local$buffer = void 0;
    this.local$initialCapacity = initialCapacity;
    this.local$callback = callback;
  }
  Coroutine$MemorySyncStreamToByteArraySuspend.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$MemorySyncStreamToByteArraySuspend.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$MemorySyncStreamToByteArraySuspend.prototype.constructor = Coroutine$MemorySyncStreamToByteArraySuspend;
  Coroutine$MemorySyncStreamToByteArraySuspend.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.local$initialCapacity === void 0)
              this.local$initialCapacity = 4096;
            this.local$buffer = ByteArrayBuffer_init(this.local$initialCapacity);
            var s_0 = MemorySyncStream(this.local$buffer);
            this.state_0 = 2;
            this.result_0 = this.local$callback(s_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$buffer.toByteArray();
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  defineInlineFunction('korio-js.com.soywiz.korio.stream.MemorySyncStreamToByteArraySuspend_5gy4q2$', wrapFunction(function () {
    var ByteArrayBuffer_init = _.$$importsForInline$$['kmem-js'].com.soywiz.kmem.ByteArrayBuffer_init_za3lpa$;
    var MemorySyncStream = _.com.soywiz.korio.stream.MemorySyncStream_yyklod$;
    return function (initialCapacity, callback, continuation) {
      if (initialCapacity === void 0)
        initialCapacity = 4096;
      var buffer = ByteArrayBuffer_init(initialCapacity);
      var s_0 = MemorySyncStream(buffer);
      Kotlin.suspendCall(callback(s_0, Kotlin.coroutineReceiver()));
      return buffer.toByteArray();
    };
  }));
  function get_hasLength($receiver) {
    try {
      $receiver.length;
      return true;
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        return false;
      }
       else
        throw e;
    }
  }
  function get_hasAvailable($receiver) {
    try {
      $receiver.available;
      return true;
    }
     catch (e) {
      if (Kotlin.isType(e, Throwable)) {
        return false;
      }
       else
        throw e;
    }
  }
  function toByteArray_0($receiver) {
    if (get_hasLength($receiver)) {
      return readAll_0(sliceWithBounds_0($receiver, L0, $receiver.length));
    }
     else {
      return readAll_0($receiver.clone());
    }
  }
  function MemorySyncStreamBase(data) {
    SyncStreamBase.call(this);
    this.data = data;
  }
  Object.defineProperty(MemorySyncStreamBase.prototype, 'ilength', {
    get: function () {
      return this.data.size;
    },
    set: function (value) {
      this.data.size = value;
    }
  });
  Object.defineProperty(MemorySyncStreamBase.prototype, 'length', {
    get: function () {
      return Kotlin.Long.fromInt(this.data.size);
    },
    set: function (value) {
      this.data.size = value.toInt();
    }
  });
  MemorySyncStreamBase.prototype.checkPosition_s8cxhz$ = function (position) {
    if (position.toNumber() < 0)
      invalidOp('Invalid position ' + position);
  };
  MemorySyncStreamBase.prototype.read_4m9kcn$ = function (position, buffer, offset, len) {
    this.checkPosition_s8cxhz$(position);
    var ipos = position.toInt();
    if (!contains_1(until(0, this.ilength), position))
      return 0;
    var a = this.ilength;
    var b = ipos + len | 0;
    var end = Math_0.min(a, b);
    var a_0 = end - ipos | 0;
    var actualLen = Math_0.max(a_0, 0);
    arraycopy(this.data.data, ipos, buffer, offset, actualLen);
    return actualLen;
  };
  MemorySyncStreamBase.prototype.write_4m9kcn$ = function (position, buffer, offset, len) {
    this.checkPosition_s8cxhz$(position);
    var tmp$ = this.data;
    var a = this.data.size;
    var b = position.add(Kotlin.Long.fromInt(len)).toInt();
    tmp$.size = Math_0.max(a, b);
    arraycopy(buffer, offset, this.data.data, position.toInt(), len);
  };
  MemorySyncStreamBase.prototype.close = function () {
  };
  MemorySyncStreamBase.prototype.toString = function () {
    return 'MemorySyncStreamBase(' + this.data.size + ')';
  };
  MemorySyncStreamBase.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemorySyncStreamBase',
    interfaces: [SyncStreamBase]
  };
  function MemorySyncStreamBase_init(initialCapacity, $this) {
    if (initialCapacity === void 0)
      initialCapacity = 4096;
    $this = $this || Object.create(MemorySyncStreamBase.prototype);
    MemorySyncStreamBase.call($this, ByteArrayBuffer_init(initialCapacity));
    return $this;
  }
  function slice_3($receiver) {
    return new SyncStream(new SliceSyncStreamBase($receiver.base, L0, $receiver.length));
  }
  function sliceWithStart_0($receiver, start) {
    return sliceWithBounds_0($receiver, start, $receiver.length);
  }
  function sliceStart_0($receiver) {
    return sliceWithBounds_0($receiver, L0, $receiver.length);
  }
  function sliceStart_1($receiver, start) {
    return sliceWithBounds_0($receiver, start, $receiver.length);
  }
  function sliceHere_0($receiver) {
    return new SyncStream(new SliceSyncStreamBase($receiver.base, $receiver.position, $receiver.length));
  }
  function slice_4($receiver, range) {
    return sliceWithBounds_0($receiver, Kotlin.Long.fromInt(range.start), Kotlin.Long.fromInt(range.endInclusive).add(Kotlin.Long.fromInt(1)));
  }
  function slice_5($receiver, range) {
    return sliceWithBounds_0($receiver, range.start, range.endInclusive.add(Kotlin.Long.fromInt(1)));
  }
  function sliceWithBounds_0($receiver, start, end) {
    var len = $receiver.length;
    var clampedStart = clamp_0(start, L0, len);
    var clampedEnd = clamp_0(end, L0, len);
    if (Kotlin.isType($receiver.base, SliceSyncStreamBase)) {
      return toSyncStream(new SliceSyncStreamBase($receiver.base.base_8be2vx$, $receiver.base.baseStart_8be2vx$.add(clampedStart), $receiver.base.baseStart_8be2vx$.add(clampedEnd)));
    }
     else {
      return toSyncStream(new SliceSyncStreamBase($receiver.base, clampedStart, clampedEnd));
    }
  }
  function sliceWithSize_1($receiver, position, length) {
    return sliceWithBounds_0($receiver, position, position.add(length));
  }
  function sliceWithSize_2($receiver, position, length) {
    return sliceWithBounds_0($receiver, Kotlin.Long.fromInt(position), Kotlin.Long.fromInt(position + length | 0));
  }
  function readSlice_0($receiver, length) {
    var $receiver_0 = sliceWithSize_1($receiver, $receiver.position, length);
    $receiver.position = $receiver.position.add(length);
    return $receiver_0;
  }
  function readStream_1($receiver, length) {
    return readSlice_0($receiver, Kotlin.Long.fromInt(length));
  }
  function readStream_2($receiver, length) {
    return readSlice_0($receiver, length);
  }
  function readStringz_3($receiver, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var buf = new ByteArrayBuilder();
    var temp = get_BYTES_TEMP();
    while (true) {
      var read = $receiver.read_mj6st8$(temp, 0, 1);
      if (read <= 0)
        break;
      if (temp[0] === toByte(0))
        break;
      buf.append_s8j3t7$(temp[0]);
    }
    return toString_0(buf.toByteArray(), charset);
  }
  function readStringz_4($receiver, len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var res = readBytes_1($receiver, len);
    var index = indexOf_2(res, toByte(0));
    return toString_0(copyOf(res, index < 0 ? len : index), charset);
  }
  function readString_1($receiver, len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return toString_0(readBytes_1($receiver, len), charset);
  }
  function writeString_0($receiver, string, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    writeBytes_1($receiver, toByteArray(string, charset));
  }
  function readExact_0($receiver, out, offset, len) {
    var ooffset = offset;
    var remaining = len;
    while (remaining > 0) {
      var read = $receiver.read_mj6st8$(out, ooffset, remaining);
      if (read <= 0) {
        throw new RuntimeException('EOF');
      }
      remaining = remaining - read | 0;
      ooffset = ooffset + read | 0;
    }
  }
  function read_1($receiver, data) {
    return $receiver.read_mj6st8$(data, 0, data.length);
  }
  function read_2($receiver, data) {
    return $receiver.read_mj6st8$(data.data, 0, data.size);
  }
  function readBytesExact_0($receiver, len) {
    var $receiver_0 = new Int8Array(len);
    readExact_0($receiver, $receiver_0, 0, len);
    return $receiver_0;
  }
  function writeStringz_1($receiver, str, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    writeBytes_1($receiver, toBytez_0(str, charset));
  }
  function writeStringz_2($receiver, str, len, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    writeBytes_1($receiver, toBytez(str, len, charset));
  }
  function readBytes_1($receiver, len) {
    var bytes = new Int8Array(len);
    return copyOf(bytes, $receiver.read_mj6st8$(bytes, 0, len));
  }
  function writeBytes_1($receiver, data) {
    $receiver.write_mj6st8$(data, 0, data.length);
  }
  function writeBytes_2($receiver, data) {
    $receiver.write_mj6st8$(data.data, data.position, data.length);
  }
  function smallTemp$lambda() {
    return new Int8Array(16);
  }
  var smallTemp;
  function get_smallTemp() {
    return smallTemp.local.get();
  }
  function read_3($receiver) {
    var count = $receiver.read_mj6st8$(get_smallTemp(), 0, 1);
    return count < 0 ? -1 : get_smallTemp()[0] & 255;
  }
  function get_eof($receiver) {
    return $receiver.available.compareTo_11rb$(L0) <= 0;
  }
  function readSmallTempExact_0($receiver, count) {
    var t = get_smallTemp();
    readExact_0($receiver, t, 0, count);
    return t;
  }
  function readTempExact_0($receiver, count) {
    var temp = get_BYTES_TEMP();
    readExact_0($receiver, temp, 0, count);
    return temp;
  }
  function readTemp($receiver, count) {
    var temp = get_BYTES_TEMP();
    $receiver.read_mj6st8$(temp, 0, count);
    return temp;
  }
  function fastReadU8($receiver) {
    return read_3($receiver) & 255;
  }
  function fastReadS8($receiver) {
    return toByte(read_3($receiver));
  }
  function readU8_1($receiver) {
    return readU8(readSmallTempExact_0($receiver, 1), 0);
  }
  function readS8_1($receiver) {
    return readS8(readSmallTempExact_0($receiver, 1), 0);
  }
  function readU16_le_1($receiver) {
    return readU16_le(readSmallTempExact_0($receiver, 2), 0);
  }
  function readU24_le_1($receiver) {
    return readU24_le(readSmallTempExact_0($receiver, 3), 0);
  }
  function readU32_le_1($receiver) {
    return readU32_le(readSmallTempExact_0($receiver, 4), 0);
  }
  function readS16_le_1($receiver) {
    return readS16_le(readSmallTempExact_0($receiver, 2), 0);
  }
  function readS24_le_1($receiver) {
    return readS24_le(readSmallTempExact_0($receiver, 3), 0);
  }
  function readS32_le_1($receiver) {
    return readS32_le(readSmallTempExact_0($receiver, 4), 0);
  }
  function readS64_le_1($receiver) {
    return readS64_le(readSmallTempExact_0($receiver, 8), 0);
  }
  function readF32_le_1($receiver) {
    return readF32_le(readSmallTempExact_0($receiver, 4), 0);
  }
  function readF64_le_1($receiver) {
    return readF64_le(readSmallTempExact_0($receiver, 8), 0);
  }
  function readU16_be_1($receiver) {
    return readU16_be(readSmallTempExact_0($receiver, 2), 0);
  }
  function readU24_be_1($receiver) {
    return readU24_be(readSmallTempExact_0($receiver, 3), 0);
  }
  function readU32_be_1($receiver) {
    return readU32_be(readSmallTempExact_0($receiver, 4), 0);
  }
  function readS16_be_1($receiver) {
    return readS16_be(readSmallTempExact_0($receiver, 2), 0);
  }
  function readS24_be_1($receiver) {
    return readS24_be(readSmallTempExact_0($receiver, 3), 0);
  }
  function readS32_be_1($receiver) {
    return readS32_be(readSmallTempExact_0($receiver, 4), 0);
  }
  function readS64_be_1($receiver) {
    return readS64_be(readSmallTempExact_0($receiver, 8), 0);
  }
  function readF32_be_1($receiver) {
    return readF32_be(readSmallTempExact_0($receiver, 4), 0);
  }
  function readF64_be_1($receiver) {
    return readF64_be(readSmallTempExact_0($receiver, 8), 0);
  }
  function readAvailable_0($receiver) {
    return readBytes_1($receiver, $receiver.available.toInt());
  }
  function readAll_0($receiver) {
    return readBytes_1($receiver, $receiver.available.toInt());
  }
  function readUByteArray_0($receiver, count) {
    return new UByteArray(readBytesExact_0($receiver, count));
  }
  function readShortArray_le_1($receiver, count) {
    return readShortArray_le(readBytesExact_0($receiver, count * 2 | 0), 0, count);
  }
  function readShortArray_be_1($receiver, count) {
    return readShortArray_be(readBytesExact_0($receiver, count * 2 | 0), 0, count);
  }
  function readCharArray_le_1($receiver, count) {
    return readCharArray_le(readBytesExact_0($receiver, count * 2 | 0), 0, count);
  }
  function readCharArray_be_1($receiver, count) {
    return readCharArray_be(readBytesExact_0($receiver, count * 2 | 0), 0, count);
  }
  function readIntArray_le_1($receiver, count) {
    return readIntArray_le(readBytesExact_0($receiver, count * 4 | 0), 0, count);
  }
  function readIntArray_be_1($receiver, count) {
    return readIntArray_be(readBytesExact_0($receiver, count * 4 | 0), 0, count);
  }
  function readLongArray_le_1($receiver, count) {
    return readLongArray_le(readBytesExact_0($receiver, count * 8 | 0), 0, count);
  }
  function readLongArray_be_1($receiver, count) {
    return readLongArray_be(readBytesExact_0($receiver, count * 8 | 0), 0, count);
  }
  function readFloatArray_le_1($receiver, count) {
    return readFloatArray_le(readBytesExact_0($receiver, count * 4 | 0), 0, count);
  }
  function readFloatArray_be_1($receiver, count) {
    return readFloatArray_be(readBytesExact_0($receiver, count * 4 | 0), 0, count);
  }
  function readDoubleArray_le_1($receiver, count) {
    return readDoubleArray_le(readBytesExact_0($receiver, count * 8 | 0), 0, count);
  }
  function readDoubleArray_be_1($receiver, count) {
    return readDoubleArray_be(readBytesExact_0($receiver, count * 8 | 0), 0, count);
  }
  function write8_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write8(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 1);
  }
  function write16_le_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write16_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 2);
  }
  function write24_le_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write24_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 3);
  }
  function write32_le_3($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write32_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function write32_le_4($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write32_le_0(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function write64_le_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write64_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 8);
  }
  function writeF32_le_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    writeF32_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function writeF64_le_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    writeF64_le(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 8);
  }
  function write16_be_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write16_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 2);
  }
  function write24_be_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write24_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 3);
  }
  function write32_be_3($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write32_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function write32_be_4($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write32_be_0(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function write64_be_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    write64_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 8);
  }
  function writeF32_be_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    writeF32_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 4);
  }
  function writeF64_be_1($receiver, v) {
    var $receiver_0 = get_BYTES_TEMP();
    writeF64_be(get_BYTES_TEMP(), 0, v);
    $receiver.write_mj6st8$($receiver_0, 0, 8);
  }
  function toSyncStream($receiver, position) {
    if (position === void 0)
      position = L0;
    return new SyncStream($receiver, position);
  }
  function openSync($receiver, mode) {
    if (mode === void 0)
      mode = 'r';
    return toSyncStream(new MemorySyncStreamBase(new ByteArrayBuffer($receiver)), L0);
  }
  function openAsync($receiver, mode) {
    if (mode === void 0)
      mode = 'r';
    return toAsyncStream_0(new MemoryAsyncStreamBase(new ByteArrayBuffer($receiver, void 0, true)), L0);
  }
  function openAsync_0($receiver, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    return toAsync_1(openSync(toByteArray($receiver, charset), 'r'));
  }
  function writeStream_0($receiver, source) {
    copyTo_0(source, $receiver);
  }
  function copyTo_0($receiver, target) {
    var chunk = get_BYTES_TEMP();
    while (true) {
      var count = read_1($receiver, chunk);
      if (count <= 0)
        break;
      target.write_mj6st8$(chunk, 0, count);
    }
  }
  function writeToAlign_0($receiver, alignment, value) {
    if (value === void 0)
      value = 0;
    var nextPosition = nextAlignedTo($receiver.position, Kotlin.Long.fromInt(alignment));
    var data = new Int8Array(nextPosition.subtract($receiver.position).toInt());
    var value_0 = toByte(value);
    var end;
    end = data.length;
    data.fill(value_0, 0, end);
    writeBytes_1($receiver, data);
  }
  function skip_1($receiver, count) {
    $receiver.position = $receiver.position.add(Kotlin.Long.fromInt(count));
    return $receiver;
  }
  function skipToAlign_0($receiver, alignment) {
    var nextPosition = nextAlignedTo($receiver.position, Kotlin.Long.fromInt(alignment));
    readBytes_1($receiver, nextPosition.subtract($receiver.position).toInt());
  }
  function truncate_0($receiver) {
    $receiver.length = $receiver.position;
  }
  function writeCharArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_le($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeShortArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_le_0($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeIntArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_le_1($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeLongArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_le_2($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeFloatArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_le_3($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeDoubleArray_le_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_le_4($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeCharArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_be($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeShortArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 2 | 0);
    writeArray_be_0($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeIntArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_be_1($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeLongArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_be_2($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeFloatArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 4 | 0);
    writeArray_be_3($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function writeDoubleArray_be_0($receiver, array) {
    var $receiver_0 = new Int8Array(array.length * 8 | 0);
    writeArray_be_4($receiver_0, 0, array);
    writeBytes_1($receiver, $receiver_0);
  }
  function readU_VL($receiver) {
    var result = readU8_1($receiver);
    if ((result & 128) === 0)
      return result;
    result = result & 127 | readU8_1($receiver) << 7;
    if ((result & 16384) === 0)
      return result;
    result = result & 16383 | readU8_1($receiver) << 14;
    if ((result & 2097152) === 0)
      return result;
    result = result & 2097151 | readU8_1($receiver) << 21;
    if ((result & 268435456) === 0)
      return result;
    result = result & 268435455 | readU8_1($receiver) << 28;
    return result;
  }
  function readS_VL($receiver) {
    var v = readU_VL($receiver);
    var sign = (v & 1) !== 0;
    var uvalue = v >>> 1;
    return sign ? (-uvalue | 0) - 1 | 0 : uvalue;
  }
  function writeU_VL_0($receiver, v) {
    var value = v;
    while (true) {
      var c = value & 127;
      value = value >>> 7;
      if (value === 0) {
        write8_1($receiver, c);
        break;
      }
      write8_1($receiver, c | 128);
    }
  }
  function writeS_VL($receiver, v) {
    var sign = v < 0 ? 1 : 0;
    writeU_VL_0($receiver, sign | (v < 0 ? (-v | 0) - 1 | 0 : v) << 1);
  }
  function writeStringVL_0($receiver, str, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var bytes = toByteArray(str, charset);
    writeU_VL_0($receiver, bytes.length);
    writeBytes_1($receiver, bytes);
  }
  function readStringVL($receiver, charset) {
    if (charset === void 0)
      charset = UTF8_getInstance();
    var bytes = new Int8Array(readU_VL($receiver));
    readExact_0($receiver, bytes, 0, bytes.length);
    return toString_0(bytes, charset);
  }
  function readExactTo($receiver, buffer, offset, length) {
    if (offset === void 0)
      offset = 0;
    if (length === void 0)
      length = buffer.length - offset | 0;
    var end = offset + length | 0;
    var pos = offset;
    while (true) {
      var read = $receiver.read_mj6st8$(buffer, pos, end - pos | 0);
      if (read <= 0)
        break;
      pos = pos + read | 0;
    }
    return pos - offset | 0;
  }
  function AsyncCache() {
    this.promises = LinkedHashMap_init();
  }
  function AsyncCache$invoke$lambda$lambda(closure$gen_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncCache$invoke$lambda$lambda(closure$gen_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncCache$invoke$lambda$lambda(closure$gen_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$gen = closure$gen_0;
  }
  Coroutine$AsyncCache$invoke$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncCache$invoke$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncCache$invoke$lambda$lambda.prototype.constructor = Coroutine$AsyncCache$invoke$lambda$lambda;
  Coroutine$AsyncCache$invoke$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$gen(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncCache.prototype.invoke_vvrf4k$ = function (key, gen, continuation) {
    var tmp$;
    var $receiver = this.promises;
    var tmp$_0;
    var value = $receiver.get_11rb$(key);
    if (value == null) {
      var answer = asyncImmediately_0(continuation.context, void 0, AsyncCache$invoke$lambda$lambda(gen));
      $receiver.put_xwzc9p$(key, answer);
      tmp$_0 = answer;
    }
     else {
      tmp$_0 = value;
    }
    return (Kotlin.isType(tmp$ = tmp$_0, Deferred) ? tmp$ : throwCCE()).await(continuation);
  };
  AsyncCache.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncCache',
    interfaces: []
  };
  function AsyncCacheItem() {
    this.promise = null;
  }
  function AsyncCacheItem$invoke$lambda(closure$gen_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncCacheItem$invoke$lambda(closure$gen_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncCacheItem$invoke$lambda(closure$gen_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$gen = closure$gen_0;
  }
  Coroutine$AsyncCacheItem$invoke$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncCacheItem$invoke$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncCacheItem$invoke$lambda.prototype.constructor = Coroutine$AsyncCacheItem$invoke$lambda;
  Coroutine$AsyncCacheItem$invoke$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$gen(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncCacheItem.prototype.invoke_cbny1b$ = function (gen, continuation) {
    if (this.promise == null)
      this.promise = asyncImmediately_0(continuation.context, void 0, AsyncCacheItem$invoke$lambda(gen));
    return ensureNotNull(this.promise).await(continuation);
  };
  AsyncCacheItem.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncCacheItem',
    interfaces: []
  };
  function AsyncCloseable() {
    AsyncCloseable$Companion_getInstance();
  }
  function AsyncCloseable$Companion() {
    AsyncCloseable$Companion_instance = this;
    this.DUMMY = new AsyncCloseable$Companion$DUMMY$ObjectLiteral();
  }
  function AsyncCloseable$Companion$DUMMY$ObjectLiteral() {
  }
  AsyncCloseable$Companion$DUMMY$ObjectLiteral.prototype.close = function (continuation) {
    return Unit;
  };
  AsyncCloseable$Companion$DUMMY$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncCloseable]
  };
  AsyncCloseable$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AsyncCloseable$Companion_instance = null;
  function AsyncCloseable$Companion_getInstance() {
    if (AsyncCloseable$Companion_instance === null) {
      new AsyncCloseable$Companion();
    }
    return AsyncCloseable$Companion_instance;
  }
  AsyncCloseable.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'AsyncCloseable',
    interfaces: []
  };
  function use_0($receiver, callback, continuation, suspended) {
    var instance = new Coroutine$use($receiver, callback, continuation);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$use($receiver, callback, continuation) {
    CoroutineImpl.call(this, continuation);
    this.exceptionState_0 = 7;
    this.local$$receiver = $receiver;
    this.local$callback = callback;
  }
  Coroutine$use.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$use.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$use.prototype.constructor = Coroutine$use;
  Coroutine$use.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.exceptionState_0 = 4;
            this.state_0 = 1;
            this.result_0 = await_0(this.local$callback, this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [2];
            this.state_0 = 5;
            this.$returnValue = this.result_0;
            continue;
          case 2:
            return this.$returnValue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [7];
            this.state_0 = 5;
            continue;
          case 5:
            this.state_0 = 6;
            this.result_0 = this.local$$receiver.close(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  defineInlineFunction('korio-js.com.soywiz.korio.util.use_fs35jz$', wrapFunction(function () {
    var await_0 = _.com.soywiz.korio.async.await_7zc599$;
    return function ($receiver, callback, continuation) {
      try {
        Kotlin.suspendCall(await_0(callback, $receiver, Kotlin.coroutineReceiver()));
        return Kotlin.coroutineResult(Kotlin.coroutineReceiver());
      }
      finally {
        Kotlin.suspendCall($receiver.close(Kotlin.coroutineReceiver()));
      }
    };
  }));
  function AsyncInmemoryCache() {
    this.cache = LinkedHashMap_init();
  }
  function AsyncInmemoryCache$Entry(timestamp, data) {
    this.timestamp = timestamp;
    this.data = data;
  }
  AsyncInmemoryCache$Entry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Entry',
    interfaces: []
  };
  AsyncInmemoryCache$Entry.prototype.component1 = function () {
    return this.timestamp;
  };
  AsyncInmemoryCache$Entry.prototype.component2 = function () {
    return this.data;
  };
  AsyncInmemoryCache$Entry.prototype.copy_b8imdh$ = function (timestamp, data) {
    return new AsyncInmemoryCache$Entry(timestamp === void 0 ? this.timestamp : timestamp, data === void 0 ? this.data : data);
  };
  AsyncInmemoryCache$Entry.prototype.toString = function () {
    return 'Entry(timestamp=' + Kotlin.toString(this.timestamp) + (', data=' + Kotlin.toString(this.data)) + ')';
  };
  AsyncInmemoryCache$Entry.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.timestamp) | 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  AsyncInmemoryCache$Entry.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.timestamp, other.timestamp) && Kotlin.equals(this.data, other.data)))));
  };
  AsyncInmemoryCache.prototype.get_ulu11i$ = function (clazz, key, ttlMs) {
    return new AsyncInmemoryEntry(clazz, this, key, ttlMs);
  };
  function AsyncInmemoryCache$get$lambda(closure$gen_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncInmemoryCache$get$lambda(closure$gen_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncInmemoryCache$get$lambda(closure$gen_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$gen = closure$gen_0;
  }
  Coroutine$AsyncInmemoryCache$get$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncInmemoryCache$get$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncInmemoryCache$get$lambda.prototype.constructor = Coroutine$AsyncInmemoryCache$get$lambda;
  Coroutine$AsyncInmemoryCache$get$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$gen(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncInmemoryCache.prototype.get_7z9egy$ = function (key, ttlMs, gen, continuation) {
    var tmp$;
    var entry = this.cache.get_11rb$(key);
    if (entry == null || klock.Klock.currentTimeMillis().subtract(entry.timestamp).toNumber() >= ttlMs) {
      var $receiver = this.cache;
      var value = new AsyncInmemoryCache$Entry(TimeProvider.Companion.now(), asyncImmediately_0(continuation.context, void 0, AsyncInmemoryCache$get$lambda(gen)));
      $receiver.put_xwzc9p$(key, value);
    }
    return (Kotlin.isType(tmp$ = ensureNotNull(this.cache.get_11rb$(key)).data, Deferred) ? tmp$ : throwCCE()).await(continuation);
  };
  AsyncInmemoryCache.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncInmemoryCache',
    interfaces: []
  };
  function AsyncInmemoryEntry(clazz, cache, key, ttlMs) {
    this.clazz = clazz;
    this.cache = cache;
    this.key = key;
    this.ttlMs = ttlMs;
  }
  AsyncInmemoryEntry.prototype.get_1xgmjb$ = function (routine, continuation) {
    return this.cache.get_7z9egy$(this.key, this.ttlMs, routine, continuation);
  };
  AsyncInmemoryEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncInmemoryEntry',
    interfaces: []
  };
  var BYTES_EMPTY;
  var BYTES_TEMP_SIZE;
  function BYTES_TEMP$lambda() {
    return new Int8Array(65536);
  }
  var BYTES_TEMP;
  function get_BYTES_TEMP() {
    return BYTES_TEMP.local.get();
  }
  function set($receiver, o, v) {
    $receiver[o] = toByte(v);
  }
  function set_0($receiver, o, v) {
    $receiver[o] = toByte(v.toInt());
  }
  function getu($receiver, o) {
    return toUnsigned($receiver[o]);
  }
  function join($receiver) {
    var tmp$;
    var tmp$_0 = Int8Array;
    var tmp$_1;
    var sum = 0;
    tmp$_1 = $receiver.iterator();
    while (tmp$_1.hasNext()) {
      var element = tmp$_1.next();
      sum = sum + element.length | 0;
    }
    var out = new tmp$_0(sum);
    var pos = 0;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var c = tmp$.next();
      arraycopy(c, 0, out, pos, c.length);
      pos = pos + c.length | 0;
    }
    return out;
  }
  function indexOfElse($receiver, element, default_0) {
    if (default_0 === void 0)
      default_0 = $receiver.length;
    var idx = indexOf_2($receiver, element);
    return idx >= 0 ? idx : default_0;
  }
  function indexOf_3($receiver, startOffset, v) {
    for (var n = startOffset; n < $receiver.length; n++)
      if ($receiver[n] === v)
        return n;
    return -1;
  }
  function isDigit($receiver) {
    return (new CharRange(48, 57)).contains_mef7kx$($receiver);
  }
  function isLetter($receiver) {
    return (new CharRange(97, 122)).contains_mef7kx$($receiver) || (new CharRange(65, 90)).contains_mef7kx$($receiver);
  }
  function isLetterOrDigit($receiver) {
    return isLetter($receiver) || isDigit($receiver);
  }
  function isLetterOrUnderscore($receiver) {
    return isLetter($receiver) || $receiver === 95 || $receiver === 36;
  }
  function isLetterDigitOrUnderscore($receiver) {
    return isLetterOrDigit($receiver) || $receiver === 95 || $receiver === 36;
  }
  function isLetterOrDigitOrDollar($receiver) {
    return isLetterOrDigit($receiver) || $receiver === 36;
  }
  function get_isNumeric($receiver) {
    return isDigit($receiver) || $receiver === 46 || $receiver === 101 || $receiver === 45;
  }
  function isPrintable($receiver) {
    return (new CharRange(32, 126)).contains_mef7kx$($receiver) || (new CharRange(161, 255)).contains_mef7kx$($receiver);
  }
  var firstNotNullOrNull = defineInlineFunction('korio-js.com.soywiz.korio.util.firstNotNullOrNull_dvm6j0$', function ($receiver, predicate) {
    var tmp$;
    tmp$ = $receiver.iterator();
    while (tmp$.hasNext()) {
      var e = tmp$.next();
      var res = predicate(e);
      if (res != null)
        return res;
    }
    return null;
  });
  var compareToChain = defineInlineFunction('korio-js.com.soywiz.korio.util.compareToChain_ssq1th$', function ($receiver, callback) {
    return $receiver !== 0 ? $receiver : callback();
  });
  function toString_1($receiver, dplaces, skipTrailingZeros) {
    if (skipTrailingZeros === void 0)
      skipTrailingZeros = false;
    var res = $receiver.toString();
    var parts = split(res, Kotlin.charArrayOf(46), void 0, 2);
    var integral = 0 >= 0 && 0 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(0) : '0';
    var decimal = 1 >= 0 && 1 <= get_lastIndex_0(parts) ? parts.get_za3lpa$(1) : '0';
    if (dplaces === 0)
      return integral;
    var out = integral + '.' + substr_0(decimal + repeat('0', dplaces), 0, dplaces);
    if (skipTrailingZeros) {
      while (endsWith_0(out, 48)) {
        var $receiver_0 = out;
        var endIndex = out.length - 1 | 0;
        out = $receiver_0.substring(0, endIndex);
      }
      if (endsWith_0(out, 46)) {
        var $receiver_1 = out;
        var endIndex_0 = out.length - 1 | 0;
        out = $receiver_1.substring(0, endIndex_0);
      }
    }
    return out;
  }
  function NumericEnum() {
  }
  NumericEnum.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'NumericEnum',
    interfaces: []
  };
  function Flags() {
  }
  Flags.prototype.hasFlag_89au20$ = function (item) {
    return (this.id & item.id) === item.id;
  };
  Flags.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Flags',
    interfaces: [NumericEnum]
  };
  function IdEnum() {
  }
  function IdEnum$SmallCompanion(values) {
    this.values = values;
    this.defaultValue_sqeh2h$_0 = first_2(this.values);
    var tmp$, tmp$_0, tmp$_1;
    var $receiver = this.values;
    var destination = ArrayList_init_1($receiver.length);
    var tmp$_2;
    for (tmp$_2 = 0; tmp$_2 !== $receiver.length; ++tmp$_2) {
      var item = $receiver[tmp$_2];
      destination.add_11rb$(item.id);
    }
    this.MAX_ID_rkpm4x$_0 = (tmp$ = max_0(destination)) != null ? tmp$ : 0;
    var array = Array_0(this.MAX_ID_rkpm4x$_0 + 1 | 0);
    var tmp$_3;
    tmp$_3 = array.length - 1 | 0;
    for (var i = 0; i <= tmp$_3; i++) {
      array[i] = this.defaultValue_sqeh2h$_0;
    }
    this.valuesById_v2cepf$_0 = array;
    tmp$_0 = this.values;
    for (tmp$_1 = 0; tmp$_1 !== tmp$_0.length; ++tmp$_1) {
      var v = tmp$_0[tmp$_1];
      this.valuesById_v2cepf$_0[v.id] = v;
    }
  }
  var get_lastIndex_1 = Kotlin.kotlin.collections.get_lastIndex_m7z4lg$;
  IdEnum$SmallCompanion.prototype.invoke_za3lpa$ = function (id) {
    var tmp$;
    var $receiver = this.valuesById_v2cepf$_0;
    return Kotlin.isType(tmp$ = id >= 0 && id <= get_lastIndex_1($receiver) ? $receiver[id] : this.defaultValue_sqeh2h$_0, IdEnum) ? tmp$ : throwCCE();
  };
  IdEnum$SmallCompanion.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SmallCompanion',
    interfaces: []
  };
  IdEnum.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'IdEnum',
    interfaces: []
  };
  function Indenter(actions) {
    Indenter$Companion_getInstance();
    if (actions === void 0) {
      actions = ArrayList_init();
    }
    this.actions_8be2vx$ = actions;
    this.indentEmptyLines = true;
    this.out = '';
  }
  function Indenter$INDENTS() {
    Indenter$INDENTS_instance = this;
    var array = Array_0(1024);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = '';
    }
    var indent = StringBuilder_init();
    for (var n = 0; n < array.length; n++) {
      array[n] = indent.toString();
      indent.append_gw00v9$('\t');
    }
    this.INDENTS_0 = array;
  }
  Indenter$INDENTS.prototype.get_za3lpa$ = function (index) {
    if (index >= this.INDENTS_0.length) {
      throw new NotImplementedError_init('An operation is not implemented: ' + ('Too much indentation ' + index));
    }
    return index <= 0 ? '' : this.INDENTS_0[index];
  };
  Indenter$INDENTS.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'INDENTS',
    interfaces: []
  };
  var Indenter$INDENTS_instance = null;
  function Indenter$INDENTS_getInstance() {
    if (Indenter$INDENTS_instance === null) {
      new Indenter$INDENTS();
    }
    return Indenter$INDENTS_instance;
  }
  function Indenter$Action() {
  }
  function Indenter$Action$Text() {
  }
  Indenter$Action$Text.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Text',
    interfaces: [Indenter$Action]
  };
  function Indenter$Action$Marker(data) {
    this.data = data;
  }
  Indenter$Action$Marker.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Marker',
    interfaces: [Indenter$Action]
  };
  Indenter$Action$Marker.prototype.component1 = function () {
    return this.data;
  };
  Indenter$Action$Marker.prototype.copy_za3rmp$ = function (data) {
    return new Indenter$Action$Marker(data === void 0 ? this.data : data);
  };
  Indenter$Action$Marker.prototype.toString = function () {
    return 'Marker(data=' + Kotlin.toString(this.data) + ')';
  };
  Indenter$Action$Marker.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.data) | 0;
    return result;
  };
  Indenter$Action$Marker.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.data, other.data))));
  };
  function Indenter$Action$Inline(str) {
    this.str_ozhef3$_0 = str;
  }
  Object.defineProperty(Indenter$Action$Inline.prototype, 'str', {
    get: function () {
      return this.str_ozhef3$_0;
    }
  });
  Indenter$Action$Inline.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Inline',
    interfaces: [Indenter$Action$Text]
  };
  Indenter$Action$Inline.prototype.component1 = function () {
    return this.str;
  };
  Indenter$Action$Inline.prototype.copy_61zpoe$ = function (str) {
    return new Indenter$Action$Inline(str === void 0 ? this.str : str);
  };
  Indenter$Action$Inline.prototype.toString = function () {
    return 'Inline(str=' + Kotlin.toString(this.str) + ')';
  };
  Indenter$Action$Inline.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    return result;
  };
  Indenter$Action$Inline.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.str, other.str))));
  };
  function Indenter$Action$Line(str) {
    this.str_qqk64k$_0 = str;
  }
  Object.defineProperty(Indenter$Action$Line.prototype, 'str', {
    get: function () {
      return this.str_qqk64k$_0;
    }
  });
  Indenter$Action$Line.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Line',
    interfaces: [Indenter$Action$Text]
  };
  Indenter$Action$Line.prototype.component1 = function () {
    return this.str;
  };
  Indenter$Action$Line.prototype.copy_61zpoe$ = function (str) {
    return new Indenter$Action$Line(str === void 0 ? this.str : str);
  };
  Indenter$Action$Line.prototype.toString = function () {
    return 'Line(str=' + Kotlin.toString(this.str) + ')';
  };
  Indenter$Action$Line.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.str) | 0;
    return result;
  };
  Indenter$Action$Line.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.str, other.str))));
  };
  function Indenter$Action$LineDeferred(callback) {
    this.callback = callback;
  }
  Indenter$Action$LineDeferred.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LineDeferred',
    interfaces: [Indenter$Action]
  };
  Indenter$Action$LineDeferred.prototype.component1 = function () {
    return this.callback;
  };
  Indenter$Action$LineDeferred.prototype.copy_1ckakx$ = function (callback) {
    return new Indenter$Action$LineDeferred(callback === void 0 ? this.callback : callback);
  };
  Indenter$Action$LineDeferred.prototype.toString = function () {
    return 'LineDeferred(callback=' + Kotlin.toString(this.callback) + ')';
  };
  Indenter$Action$LineDeferred.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.callback) | 0;
    return result;
  };
  Indenter$Action$LineDeferred.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.callback, other.callback))));
  };
  function Indenter$Action$EmptyLineOnce() {
    Indenter$Action$EmptyLineOnce_instance = this;
  }
  Indenter$Action$EmptyLineOnce.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'EmptyLineOnce',
    interfaces: [Indenter$Action]
  };
  var Indenter$Action$EmptyLineOnce_instance = null;
  function Indenter$Action$EmptyLineOnce_getInstance() {
    if (Indenter$Action$EmptyLineOnce_instance === null) {
      new Indenter$Action$EmptyLineOnce();
    }
    return Indenter$Action$EmptyLineOnce_instance;
  }
  function Indenter$Action$Indent() {
    Indenter$Action$Indent_instance = this;
  }
  Indenter$Action$Indent.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Indent',
    interfaces: [Indenter$Action]
  };
  var Indenter$Action$Indent_instance = null;
  function Indenter$Action$Indent_getInstance() {
    if (Indenter$Action$Indent_instance === null) {
      new Indenter$Action$Indent();
    }
    return Indenter$Action$Indent_instance;
  }
  function Indenter$Action$Unindent() {
    Indenter$Action$Unindent_instance = this;
  }
  Indenter$Action$Unindent.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Unindent',
    interfaces: [Indenter$Action]
  };
  var Indenter$Action$Unindent_instance = null;
  function Indenter$Action$Unindent_getInstance() {
    if (Indenter$Action$Unindent_instance === null) {
      new Indenter$Action$Unindent();
    }
    return Indenter$Action$Unindent_instance;
  }
  Indenter$Action.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Action',
    interfaces: []
  };
  function Indenter$Companion() {
    Indenter$Companion_instance = this;
    var indenter = new Indenter();
    this.EMPTY = indenter;
  }
  Indenter$Companion.prototype.genString_z3r7a6$ = function (init) {
    var indenter = new Indenter();
    init(indenter);
    return indenter.toString();
  };
  Indenter$Companion.prototype.gen_z3r7a6$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.Companion.gen_z3r7a6$', wrapFunction(function () {
    var Indenter_init = _.com.soywiz.korio.util.Indenter;
    return function (init) {
      var indenter = new Indenter_init();
      init(indenter);
      return indenter;
    };
  }));
  Indenter$Companion.prototype.single_61zpoe$ = function (str) {
    return new Indenter(arrayListOf([new Indenter$Action$Line(str)]));
  };
  Indenter$Companion.prototype.invoke_z3r7a6$ = function (init) {
    var indenter = new Indenter();
    init(indenter);
    return indenter;
  };
  Indenter$Companion.prototype.invoke_61zpoe$ = function (str) {
    return this.single_61zpoe$(str);
  };
  Indenter$Companion.prototype.replaceString_mvjluj$ = function (templateString, replacements) {
    var pattern = Regex_init('\\$(\\w+)');
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = pattern.find_905azu$(templateString);
      if (match == null) {
        replace_20wsma$result = templateString.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = templateString.length;
      var sb = StringBuilder_init_0(length);
      do {
        var foundMatch = ensureNotNull(match);
        sb.append_ezbsdh$(templateString, lastStart, foundMatch.range.start);
        var tmp$;
        sb.append_gw00v9$((tmp$ = replacements.get_11rb$(foundMatch.groupValues.get_za3lpa$(1))) != null ? tmp$ : '');
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$(templateString, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    return replace_20wsma$result;
  };
  Indenter$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var Indenter$Companion_instance = null;
  function Indenter$Companion_getInstance() {
    if (Indenter$Companion_instance === null) {
      new Indenter$Companion();
    }
    return Indenter$Companion_instance;
  }
  Indenter.prototype.inline_61zpoe$ = function (str) {
    this.actions_8be2vx$.add_11rb$(new Indenter$Action$Inline(str));
    return this;
  };
  Indenter.prototype.line_2swh6d$ = function (indenter) {
    this.actions_8be2vx$.addAll_brywnq$(indenter.actions_8be2vx$);
    return this;
  };
  Indenter.prototype.line_61zpoe$ = function (str) {
    this.actions_8be2vx$.add_11rb$(new Indenter$Action$Line(str));
    return this;
  };
  Indenter.prototype.line_pdl1vj$ = function (str) {
    if (str != null)
      this.line_61zpoe$(str);
  };
  Indenter.prototype.mark_za3rmp$ = function (data) {
    this.actions_8be2vx$.add_11rb$(new Indenter$Action$Marker(data));
    return this;
  };
  function Indenter$linedeferred$lambda(closure$init) {
    return function () {
      var indenter = new Indenter();
      closure$init(indenter);
      return indenter;
    };
  }
  Indenter.prototype.linedeferred_z3r7a6$ = function (init) {
    this.actions_8be2vx$.add_11rb$(new Indenter$Action$LineDeferred(Indenter$linedeferred$lambda(init)));
    return this;
  };
  Indenter.prototype.line_a4mwiz$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.line_a4mwiz$', function (str, callback) {
    this.line_61zpoe$(str.length === 0 ? '{' : str + ' {');
    this._indent();
    try {
      callback();
    }
    finally {
      this._unindent();
    }
    this;
    this.line_61zpoe$('}');
    return this;
  });
  Indenter.prototype.line_slzebz$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.line_slzebz$', function (str, after, after2, callback) {
    if (after === void 0)
      after = '';
    if (after2 === void 0)
      after2 = '';
    var rafter = after.length === 0 ? '' : ' ' + after;
    this.line_61zpoe$(str.length === 0 ? '{' + rafter : str + ' {' + rafter);
    this._indent();
    try {
      callback();
    }
    finally {
      this._unindent();
    }
    this;
    this.line_61zpoe$('}' + after2);
    return this;
  });
  Indenter.prototype.indent_o14v8n$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.indent_o14v8n$', function (callback) {
    this._indent();
    try {
      callback();
    }
    finally {
      this._unindent();
    }
    return this;
  });
  Indenter.prototype._indent = function () {
    this.actions_8be2vx$.add_11rb$(Indenter$Action$Indent_getInstance());
  };
  Indenter.prototype._unindent = function () {
    this.actions_8be2vx$.add_11rb$(Indenter$Action$Unindent_getInstance());
  };
  function Indenter$IndenterEvaluator(markHandler, indentEmptyLines, doIndent) {
    this.markHandler = markHandler;
    this.indentEmptyLines = indentEmptyLines;
    this.doIndent = doIndent;
    this.out = StringBuilder_init();
    this.line = 0;
    this.newLine = true;
    this.indentIndex = 0;
    this.allowEmptyLine = false;
  }
  Indenter$IndenterEvaluator.prototype.outAppend_61zpoe$ = function (str) {
    return this.out.append_gw00v9$(str);
  };
  Indenter$IndenterEvaluator.prototype.outAppend_s8itvh$ = function (str) {
    return this.out.append_s8itvh$(str);
  };
  Indenter$IndenterEvaluator.prototype.doLine = function () {
    if (this.doIndent)
      this.outAppend_s8itvh$(10);
    this.line = this.line + 1 | 0;
    this.newLine = true;
  };
  Indenter$IndenterEvaluator.prototype.eval_41l8yq$ = function (actions) {
    var tmp$, tmp$_0;
    tmp$ = actions.iterator();
    while (tmp$.hasNext()) {
      var action = tmp$.next();
      if (Kotlin.isType(action, Indenter$Action$Text)) {
        if (this.newLine) {
          var tmp$_1 = !this.indentEmptyLines;
          if (tmp$_1) {
            tmp$_1 = action.str.length === 0;
          }
          if (tmp$_1) {
            this.doLine();
          }
           else {
            if (this.doIndent)
              this.outAppend_61zpoe$(Indenter$INDENTS_getInstance().get_za3lpa$(this.indentIndex));
            else
              this.outAppend_61zpoe$(' ');
          }
        }
        this.outAppend_61zpoe$(action.str);
        if (Kotlin.isType(action, Indenter$Action$Line)) {
          var tmp$_2 = this.line;
          var tmp$_3;
          var count = 0;
          tmp$_3 = iterator(action.str);
          while (tmp$_3.hasNext()) {
            var element = unboxChar(tmp$_3.next());
            if (unboxChar(toBoxedChar(element)) === 10) {
              count = count + 1 | 0;
            }
          }
          this.line = tmp$_2 + count | 0;
          this.doLine();
        }
         else {
          this.newLine = false;
        }
        this.allowEmptyLine = true;
      }
       else if (Kotlin.isType(action, Indenter$Action$LineDeferred))
        this.eval_41l8yq$(action.callback().actions_8be2vx$);
      else if (equals(action, Indenter$Action$Indent_getInstance()) || equals(action, Indenter$Action$Unindent_getInstance())) {
        this.allowEmptyLine = false;
        this.indentIndex = this.indentIndex + (equals(action, Indenter$Action$Indent_getInstance()) ? 1 : -1) | 0;
      }
       else if (equals(action, Indenter$Action$EmptyLineOnce_getInstance())) {
        if (this.allowEmptyLine) {
          this.doLine();
          this.allowEmptyLine = false;
        }
      }
       else if (Kotlin.isType(action, Indenter$Action$Marker))
        (tmp$_0 = this.markHandler) != null ? tmp$_0(this.out, this.line, action.data) : null;
    }
  };
  Indenter$IndenterEvaluator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IndenterEvaluator',
    interfaces: []
  };
  Indenter.prototype.toString_l6l5ny$ = function (markHandler, doIndent) {
    var $receiver = new Indenter$IndenterEvaluator(markHandler, this.indentEmptyLines, doIndent);
    $receiver.eval_41l8yq$(this.actions_8be2vx$);
    return $receiver.out.toString();
  };
  Indenter.prototype.invoke_44doqu$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.invoke_44doqu$', function ($receiver, suffix, callback) {
    if (suffix === void 0)
      suffix = '';
    var rafter = suffix.length === 0 ? '' : ' ' + suffix;
    this.line_61zpoe$($receiver.length === 0 ? '{' + rafter : $receiver + ' {' + rafter);
    this._indent();
    try {
      callback();
    }
    finally {
      this._unindent();
    }
    this;
    this.line_61zpoe$('}' + '');
    return this;
  });
  Indenter.prototype.unaryPlus_pdl1vz$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.unaryPlus_pdl1vz$', function ($receiver) {
    return this.line_61zpoe$($receiver);
  });
  Indenter.prototype.xml_79xod4$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Indenter.xml_79xod4$', wrapFunction(function () {
    var Regex_init = Kotlin.kotlin.text.Regex_init_61zpoe$;
    var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
    var IllegalStateException_init = Kotlin.kotlin.IllegalStateException_init_pdl1vj$;
    return function ($receiver, callback) {
      var tmp$, tmp$_0, tmp$_1;
      var tmp$_2;
      if ((tmp$_1 = (tmp$_0 = (tmp$ = Regex_init('<(\\w+)').find_905azu$($receiver)) != null ? tmp$.groupValues : null) != null ? getOrNull(tmp$_0, 1) : null) != null)
        tmp$_2 = tmp$_1;
      else {
        throw IllegalStateException_init('Invalid XML tag'.toString());
      }
      var tagName = tmp$_2;
      this.line_61zpoe$($receiver);
      this._indent();
      try {
        callback();
      }
      finally {
        this._unindent();
      }
      this;
      this.line_61zpoe$('<\/' + tagName + '>');
    };
  }));
  Indenter.prototype.toString_95lvll$ = function (markHandler) {
    return this.toString_l6l5ny$(markHandler, true);
  };
  Indenter.prototype.toString_8kj6y5$ = function (doIndent, indentChunk) {
    if (doIndent === void 0)
      doIndent = true;
    if (indentChunk === void 0)
      indentChunk = '\t';
    var out = this.toString_l6l5ny$(null, doIndent);
    return equals(indentChunk, '\t') ? out : replace(out, '\t', indentChunk);
  };
  Indenter.prototype.toString = function () {
    return this.toString_l6l5ny$(null, true);
  };
  Indenter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Indenter',
    interfaces: []
  };
  function get_SEPARATOR($receiver) {
    EMPTY_LINE_ONCE($receiver);
  }
  function EMPTY_LINE_ONCE($receiver) {
    $receiver.actions_8be2vx$.add_11rb$(Indenter$Action$EmptyLineOnce_getInstance());
  }
  function SEPARATOR($receiver, callback) {
    get_SEPARATOR($receiver);
    callback($receiver);
  }
  function XmlIndenter(indenter) {
    this.indenter = indenter;
  }
  XmlIndenter.prototype.invoke_79xod4$ = defineInlineFunction('korio-js.com.soywiz.korio.util.XmlIndenter.invoke_79xod4$', wrapFunction(function () {
    var Regex_init = Kotlin.kotlin.text.Regex_init_61zpoe$;
    var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
    var IllegalStateException_init = Kotlin.kotlin.IllegalStateException_init_pdl1vj$;
    return function ($receiver, callback) {
      var tmp$, tmp$_0, tmp$_1;
      var tmp$_2;
      if ((tmp$_1 = (tmp$_0 = (tmp$ = Regex_init('<(\\w+)').find_905azu$($receiver)) != null ? tmp$.groupValues : null) != null ? getOrNull(tmp$_0, 1) : null) != null)
        tmp$_2 = tmp$_1;
      else {
        throw IllegalStateException_init('Invalid XML tag'.toString());
      }
      var tagName = tmp$_2;
      this.indenter.line_61zpoe$($receiver);
      var $this = this.indenter;
      $this._indent();
      try {
        callback();
      }
      finally {
        $this._unindent();
      }
      this.indenter.line_61zpoe$('<\/' + tagName + '>');
    };
  }));
  XmlIndenter.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'XmlIndenter',
    interfaces: []
  };
  function xml($receiver, callback) {
    callback(new XmlIndenter($receiver));
  }
  var nonNullMap = defineInlineFunction('korio-js.com.soywiz.korio.util.nonNullMap_96jf0l$', function ($receiver, map) {
    return $receiver == null ? null : map($receiver);
  });
  var nullIf = defineInlineFunction('korio-js.com.soywiz.korio.util.nullIf_ujn5f2$', function ($receiver, cond) {
    return cond($receiver) ? null : $receiver;
  });
  var DIGITS;
  var reversed_0 = Kotlin.kotlin.text.reversed_gw00vp$;
  function toString_2($receiver, radix) {
    var isNegative = $receiver.toNumber() < 0;
    var temp = abs($receiver);
    if (equals(temp, L0))
      return '0';
    var out = '';
    while (!equals(temp, L0)) {
      var digit = temp.modulo(Kotlin.Long.fromInt(radix));
      temp = temp.div(Kotlin.Long.fromInt(radix));
      out += String.fromCharCode(DIGITS.charCodeAt(digit.toInt()));
    }
    var tmp$;
    var rout = reversed_0(Kotlin.isCharSequence(tmp$ = out) ? tmp$ : throwCCE()).toString();
    return isNegative ? '-' + rout : rout;
  }
  function toString_3($receiver, radix) {
    var isNegative = $receiver < 0;
    var temp = abs_0($receiver);
    if (temp === 0)
      return '0';
    var out = '';
    while (temp !== 0) {
      var digit = temp % radix;
      temp = temp / radix | 0;
      out += String.fromCharCode(DIGITS.charCodeAt(digit));
    }
    var tmp$;
    var rout = reversed_0(Kotlin.isCharSequence(tmp$ = out) ? tmp$ : throwCCE()).toString();
    return isNegative ? '-' + rout : rout;
  }
  function toStringUnsigned($receiver, radix) {
    var temp = $receiver;
    if (temp === 0)
      return '0';
    var out = '';
    while (temp !== 0) {
      var digit = urem(temp, radix);
      temp = udiv(temp, radix);
      out += String.fromCharCode(DIGITS.charCodeAt(digit));
    }
    var tmp$;
    return reversed_0(Kotlin.isCharSequence(tmp$ = out) ? tmp$ : throwCCE()).toString();
  }
  function toStringUnsigned_0($receiver, radix) {
    var temp = $receiver;
    if (equals(temp, L0))
      return '0';
    var out = '';
    while (!equals(temp, L0)) {
      var digit = urem_0(temp, Kotlin.Long.fromInt(radix));
      temp = udiv_0(temp, Kotlin.Long.fromInt(radix));
      out += String.fromCharCode(DIGITS.charCodeAt(digit.toInt()));
    }
    var tmp$;
    return reversed_0(Kotlin.isCharSequence(tmp$ = out) ? tmp$ : throwCCE()).toString();
  }
  function OS() {
    OS_instance = this;
    this.rawName = KorioNative_getInstance().rawOsName;
    this.rawNameLC = this.rawName.toLowerCase();
    this.platformName = KorioNative_getInstance().platformName;
    this.platformNameLC = this.platformName.toLowerCase();
    this.isWindows = contains_2(this.rawNameLC, 'win');
    this.isUnix = !this.isWindows;
    this.isLinux = contains_2(this.rawNameLC, 'nix') || contains_2(this.rawNameLC, 'nux') || contains_2(this.rawNameLC, 'aix');
    this.isMac = contains_2(this.rawNameLC, 'mac');
    this.isJs = contains_2(this.platformNameLC, 'js');
    this.isNodejs = contains_2(this.platformNameLC, 'node.js');
  }
  Object.defineProperty(OS.prototype, 'isBrowserJs', {
    get: function () {
      return this.isJs && !this.isNodejs;
    }
  });
  Object.defineProperty(OS.prototype, 'isNative', {
    get: function () {
      return equals(this.platformNameLC, 'native');
    }
  });
  Object.defineProperty(OS.prototype, 'isJvm', {
    get: function () {
      return !this.isJs && !this.isNative;
    }
  });
  OS.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'OS',
    interfaces: []
  };
  var OS_instance = null;
  function OS_getInstance() {
    if (OS_instance === null) {
      new OS();
    }
    return OS_instance;
  }
  function Once() {
    this.completed = false;
  }
  Once.prototype.invoke_o14v8n$ = defineInlineFunction('korio-js.com.soywiz.korio.util.Once.invoke_o14v8n$', function (callback) {
    if (!this.completed) {
      this.completed = true;
      callback();
    }
  });
  Once.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Once',
    interfaces: []
  };
  function AsyncOnce() {
    this.promise = null;
  }
  function AsyncOnce$invoke$lambda(closure$callback_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$AsyncOnce$invoke$lambda(closure$callback_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$AsyncOnce$invoke$lambda(closure$callback_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
  }
  Coroutine$AsyncOnce$invoke$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AsyncOnce$invoke$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AsyncOnce$invoke$lambda.prototype.constructor = Coroutine$AsyncOnce$invoke$lambda;
  Coroutine$AsyncOnce$invoke$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  AsyncOnce.prototype.invoke_cbny1b$ = function (callback, continuation) {
    if (this.promise == null) {
      this.promise = asyncImmediately_0(continuation.context, void 0, AsyncOnce$invoke$lambda(callback));
    }
    return ensureNotNull(this.promise).await(continuation);
  };
  AsyncOnce.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AsyncOnce',
    interfaces: []
  };
  var LONG_ZERO_TO_MAX_RANGE;
  function toLongRange($receiver) {
    return Kotlin.Long.fromInt($receiver.start).rangeTo(Kotlin.Long.fromInt($receiver.endInclusive));
  }
  function get_length($receiver) {
    return $receiver.endInclusive - $receiver.start + 1 | 0;
  }
  function get_length_0($receiver) {
    return $receiver.endInclusive.subtract($receiver.start).add(Kotlin.Long.fromInt(1));
  }
  function get_endExclusive($receiver) {
    return $receiver.endInclusive + 1 | 0;
  }
  function get_endExclusive_0($receiver) {
    return $receiver.endInclusive.add(Kotlin.Long.fromInt(1));
  }
  function RedirectField(redirect) {
    this.redirect = redirect;
  }
  RedirectField.prototype.getValue_t0xcdd$ = defineInlineFunction('korio-js.com.soywiz.korio.util.RedirectField.getValue_t0xcdd$', function (thisRef, property) {
    return this.redirect.get();
  });
  RedirectField.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RedirectField',
    interfaces: []
  };
  function RedirectMutableField(redirect) {
    this.redirect = redirect;
  }
  RedirectMutableField.prototype.getValue_t0xcdd$ = defineInlineFunction('korio-js.com.soywiz.korio.util.RedirectMutableField.getValue_t0xcdd$', function (thisRef, property) {
    return this.redirect.get();
  });
  RedirectMutableField.prototype.setValue_cvomos$ = defineInlineFunction('korio-js.com.soywiz.korio.util.RedirectMutableField.setValue_cvomos$', function (thisRef, property, value) {
    this.redirect.set(value);
  });
  RedirectMutableField.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RedirectMutableField',
    interfaces: []
  };
  function RedirectMutableFieldGen(redirect) {
    this.redirect = redirect;
  }
  RedirectMutableFieldGen.prototype.getValue_t0xcdd$ = defineInlineFunction('korio-js.com.soywiz.korio.util.RedirectMutableFieldGen.getValue_t0xcdd$', function (thisRef, property) {
    return this.redirect().get();
  });
  RedirectMutableFieldGen.prototype.setValue_cvomos$ = defineInlineFunction('korio-js.com.soywiz.korio.util.RedirectMutableFieldGen.setValue_cvomos$', function (thisRef, property, value) {
    this.redirect().set(value);
  });
  RedirectMutableFieldGen.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RedirectMutableFieldGen',
    interfaces: []
  };
  var redirectField = defineInlineFunction('korio-js.com.soywiz.korio.util.redirectField_ky7ay8$', wrapFunction(function () {
    var RedirectMutableFieldGen_init = _.com.soywiz.korio.util.RedirectMutableFieldGen;
    return function (redirect) {
      return new RedirectMutableFieldGen_init(redirect);
    };
  }));
  var redirectField_0 = defineInlineFunction('korio-js.com.soywiz.korio.util.redirectField_w7kr7o$', wrapFunction(function () {
    var RedirectMutableField_init = _.com.soywiz.korio.util.RedirectMutableField;
    return function (redirect) {
      return new RedirectMutableField_init(redirect);
    };
  }));
  var redirectField_1 = defineInlineFunction('korio-js.com.soywiz.korio.util.redirectField_7kt5xd$', wrapFunction(function () {
    var RedirectField_init = _.com.soywiz.korio.util.RedirectField;
    return function (redirect) {
      return new RedirectField_init(redirect);
    };
  }));
  var redirect = defineInlineFunction('korio-js.com.soywiz.korio.util.redirect_58ahrt$', wrapFunction(function () {
    var RedirectMutableField_init = _.com.soywiz.korio.util.RedirectMutableField;
    return function ($receiver) {
      return new RedirectMutableField_init($receiver);
    };
  }));
  var redirect_0 = defineInlineFunction('korio-js.com.soywiz.korio.util.redirect_myrrmk$', wrapFunction(function () {
    var RedirectField_init = _.com.soywiz.korio.util.RedirectField;
    return function ($receiver) {
      return new RedirectField_init($receiver);
    };
  }));
  function quote($receiver, str) {
    var regex = Regex_init('[.?*+^$\\[\\]\\\\(){}|\\-]');
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = regex.find_905azu$(str);
      if (match == null) {
        replace_20wsma$result = str.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = str.length;
      var sb = StringBuilder_init_0(length);
      do {
        var foundMatch = ensureNotNull(match);
        sb.append_ezbsdh$(str, lastStart, foundMatch.range.start);
        sb.append_gw00v9$('\\' + foundMatch.value);
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$(str, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    return replace_20wsma$result;
  }
  function StrReader(str, file, pos) {
    StrReader$Companion_getInstance();
    if (file === void 0)
      file = 'file';
    if (pos === void 0)
      pos = 0;
    this.str = str;
    this.file = file;
    this.pos = pos;
    this.length = this.str.length;
  }
  function StrReader$Companion() {
    StrReader$Companion_instance = this;
  }
  StrReader$Companion.prototype.literals_vqirvp$ = function (lits) {
    return StrReader$Literals$Companion_getInstance().fromList_kand9s$(copyToArray(toList_0(lits)));
  };
  StrReader$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StrReader$Companion_instance = null;
  function StrReader$Companion_getInstance() {
    if (StrReader$Companion_instance === null) {
      new StrReader$Companion();
    }
    return StrReader$Companion_instance;
  }
  Object.defineProperty(StrReader.prototype, 'available', {
    get: function () {
      return this.length - this.pos | 0;
    }
  });
  Object.defineProperty(StrReader.prototype, 'eof', {
    get: function () {
      return this.pos >= this.str.length;
    }
  });
  Object.defineProperty(StrReader.prototype, 'hasMore', {
    get: function () {
      return this.pos < this.str.length;
    }
  });
  StrReader.prototype.reset = function () {
    this.pos = 0;
  };
  StrReader.prototype.createRange_n8acyv$ = function (range) {
    return this.createRange_vux9f0$(range.start, range.endInclusive + 1 | 0);
  };
  StrReader.prototype.createRange_vux9f0$ = function (start, end) {
    if (start === void 0)
      start = this.pos;
    if (end === void 0)
      end = this.pos;
    return new StrReader$TRange(start, end, this);
  };
  StrReader.prototype.readRange_za3lpa$ = function (length) {
    var range = new StrReader$TRange(this.pos, this.pos + length | 0, this);
    this.pos = this.pos + length | 0;
    return range;
  };
  StrReader.prototype.slice_o14v8n$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.slice_o14v8n$', function (action) {
    var start = this.pos;
    action();
    var end = this.pos;
    return end > start ? this.slice_vux9f0$(start, end) : null;
  });
  StrReader.prototype.slice_vux9f0$ = function (start, end) {
    return this.str.substring(start, end);
  };
  StrReader.prototype.peek_za3lpa$ = function (count) {
    return this.substr_0(this.pos, count);
  };
  StrReader.prototype.peek = function () {
    return this.hasMore ? this.str.charCodeAt(this.pos) : 0;
  };
  StrReader.prototype.peekChar = function () {
    return this.hasMore ? this.str.charCodeAt(this.pos) : 0;
  };
  StrReader.prototype.read_za3lpa$ = function (count) {
    var $receiver = this.peek_za3lpa$(count);
    this.skip_za3lpa$(count);
    return $receiver;
  };
  StrReader.prototype.skipUntil_s8itvh$ = function (char) {
    while (this.hasMore && unboxChar(this.peekChar()) !== char)
      this.readChar();
  };
  StrReader.prototype.skipUntilIncluded_s8itvh$ = function (char) {
    while (this.hasMore && unboxChar(this.readChar()) !== char) {
    }
  };
  StrReader.prototype.skipWhile_akknk2$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.skipWhile_akknk2$', wrapFunction(function () {
    return function (filter) {
      while (this.hasMore && filter(this.peekChar()))
        this.readChar();
    };
  }));
  StrReader.prototype.skipUntil_akknk2$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.skipUntil_akknk2$', wrapFunction(function () {
    return function (filter) {
      while (this.hasMore && !filter(this.peekChar()))
        this.readChar();
    };
  }));
  StrReader.prototype.matchWhile_akknk2$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.matchWhile_akknk2$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var wrapFunction = Kotlin.wrapFunction;
    var StrReader$matchWhile$lambda = wrapFunction(function () {
      return function (closure$check, this$StrReader) {
        return function () {
          var $this = this$StrReader;
          var filter = closure$check;
          while ($this.hasMore && filter($this.peekChar()))
            $this.readChar();
          return Unit;
        };
      };
    });
    return function (check) {
      var start = this.pos;
      while (this.hasMore && check(this.peekChar()))
        this.readChar();
      var end = this.pos;
      return end > start ? this.slice_vux9f0$(start, end) : null;
    };
  }));
  StrReader.prototype.readUntil_s8itvh$ = function (char) {
    var start = this.pos;
    this.skipUntil_s8itvh$(char);
    var end = this.pos;
    return end > start ? this.slice_vux9f0$(start, end) : null;
  };
  StrReader.prototype.readUntilIncluded_s8itvh$ = function (char) {
    var start = this.pos;
    this.skipUntilIncluded_s8itvh$(char);
    var end = this.pos;
    return end > start ? this.slice_vux9f0$(start, end) : null;
  };
  StrReader.prototype.readWhile_akknk2$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.readWhile_akknk2$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var wrapFunction = Kotlin.wrapFunction;
    var StrReader$readWhile$lambda = wrapFunction(function () {
      return function (closure$filter, this$StrReader) {
        return function () {
          var $this = this$StrReader;
          var filter = closure$filter;
          while ($this.hasMore && filter($this.peekChar()))
            $this.readChar();
          return Unit;
        };
      };
    });
    return function (filter) {
      var tmp$;
      var start = this.pos;
      while (this.hasMore && filter(this.peekChar()))
        this.readChar();
      var end = this.pos;
      return (tmp$ = end > start ? this.slice_vux9f0$(start, end) : null) != null ? tmp$ : '';
    };
  }));
  StrReader.prototype.readUntil_akknk2$ = defineInlineFunction('korio-js.com.soywiz.korio.util.StrReader.readUntil_akknk2$', wrapFunction(function () {
    var Unit = Kotlin.kotlin.Unit;
    var wrapFunction = Kotlin.wrapFunction;
    var StrReader$readUntil$lambda = wrapFunction(function () {
      return function (closure$filter, this$StrReader) {
        return function () {
          var $this = this$StrReader;
          var filter = closure$filter;
          while ($this.hasMore && !filter($this.peekChar()))
            $this.readChar();
          return Unit;
        };
      };
    });
    return function (filter) {
      var tmp$;
      var start = this.pos;
      while (this.hasMore && !filter(this.peekChar()))
        this.readChar();
      var end = this.pos;
      return (tmp$ = end > start ? this.slice_vux9f0$(start, end) : null) != null ? tmp$ : '';
    };
  }));
  StrReader.prototype.unread_za3lpa$ = function (count) {
    if (count === void 0)
      count = 1;
    this.pos = this.pos - count | 0;
    return this;
  };
  StrReader.prototype.readChar = function () {
    var tmp$;
    if (this.hasMore) {
      return toBoxedChar(this.str.charCodeAt((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$)));
    }
     else
      return toBoxedChar(0);
  };
  StrReader.prototype.read = function () {
    var tmp$;
    if (this.hasMore) {
      return toBoxedChar(this.str.charCodeAt((tmp$ = this.pos, this.pos = tmp$ + 1 | 0, tmp$)));
    }
     else
      return toBoxedChar(0);
  };
  StrReader.prototype.readRemaining = function () {
    return this.read_za3lpa$(this.available);
  };
  StrReader.prototype.readExpect_61zpoe$ = function (expected) {
    var readed = this.read_za3lpa$(expected.length);
    if (!equals(readed, expected))
      throw IllegalArgumentException_init("Expected '" + expected + "' but found '" + readed + "' at " + this.pos);
    return readed;
  };
  StrReader.prototype.expect_s8itvh$ = function (expected) {
    return this.readExpect_61zpoe$(String.fromCharCode(expected));
  };
  StrReader.prototype.skip_za3lpa$ = function (count) {
    if (count === void 0)
      count = 1;
    this.pos = this.pos + count | 0;
    return this;
  };
  StrReader.prototype.substr_0 = function (pos, length) {
    var tmp$ = this.str;
    var b = this.length;
    var tmp$_0 = Math_0.min(pos, b);
    var a = pos + length | 0;
    var b_0 = this.length;
    var endIndex = Math_0.min(a, b_0);
    return tmp$.substring(tmp$_0, endIndex);
  };
  StrReader.prototype.tryLit_61zpoe$ = function (lit) {
    if (!equals(this.substr_0(this.pos, lit.length), lit))
      return null;
    this.pos = this.pos + lit.length | 0;
    return lit;
  };
  StrReader.prototype.tryLitRange_61zpoe$ = function (lit) {
    return equals(this.substr_0(this.pos, lit.length), lit) ? this.readRange_za3lpa$(lit.length) : null;
  };
  StrReader.prototype.matchLit_61zpoe$ = function (lit) {
    return this.tryLit_61zpoe$(lit);
  };
  StrReader.prototype.matchLitRange_61zpoe$ = function (lit) {
    return this.tryLitRange_61zpoe$(lit);
  };
  StrReader.prototype.matchLitListRange_ir5yrq$ = function (lits) {
    var tmp$, tmp$_0;
    tmp$ = lits.lengths;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var len = tmp$[tmp$_0];
      if (lits.contains_61zpoe$(this.substr_0(this.pos, len)))
        return this.readRange_za3lpa$(len);
    }
    return null;
  };
  StrReader.prototype.skipSpaces = function () {
    while (true) {
      var tmp$ = this.hasMore;
      if (tmp$) {
        tmp$ = isWhitespace(unboxChar(this.peekChar()));
      }
      if (!tmp$)
        break;
      this.readChar();
    }
    return this;
  };
  var StrReader$matchWhile$lambda = wrapFunction(function () {
    return function (closure$check, this$StrReader) {
      return function () {
        var $this = this$StrReader;
        var filter = closure$check;
        while ($this.hasMore && filter($this.peekChar()))
          $this.readChar();
        return Unit;
      };
    };
  });
  StrReader.prototype.matchIdentifier = function () {
    var start = this.pos;
    while (true) {
      var tmp$ = this.hasMore;
      if (tmp$) {
        var it = this.peekChar();
        tmp$ = isLetterDigitOrUnderscore(unboxChar(it)) || unboxChar(it) === 45 || unboxChar(it) === 126 || unboxChar(it) === 58;
      }
      if (!tmp$)
        break;
      this.readChar();
    }
    var end = this.pos;
    return end > start ? this.slice_vux9f0$(start, end) : null;
  };
  StrReader.prototype.matchSingleOrDoubleQuoteString = function () {
    var tmp$;
    switch (unboxChar(this.peekChar())) {
      case 39:
      case 34:
        var start = this.pos;
        var quoteType = unboxChar(this.readChar());
        this.readUntil_s8itvh$(quoteType);
        this.readChar();
        var end = this.pos;
        tmp$ = end > start ? this.slice_vux9f0$(start, end) : null;
        break;
      default:tmp$ = null;
        break;
    }
    return tmp$;
  };
  StrReader.prototype.tryRegex_t7befh$ = function (v) {
    var tmp$;
    var $receiver = this.str;
    var startIndex = this.pos;
    tmp$ = v.find_905azu$($receiver.substring(startIndex));
    if (tmp$ == null) {
      return null;
    }
    var result = tmp$;
    var m = ensureNotNull(result.groups.get_za3lpa$(0)).value;
    this.pos = this.pos + m.length | 0;
    return m;
  };
  StrReader.prototype.tryRegexRange_t7befh$ = function (v) {
    var tmp$;
    var $receiver = this.str;
    var startIndex = this.pos;
    tmp$ = v.find_905azu$($receiver.substring(startIndex));
    if (tmp$ == null) {
      return null;
    }
    var result = tmp$;
    return this.readRange_za3lpa$(ensureNotNull(result.groups.get_za3lpa$(0)).value.length);
  };
  StrReader.prototype.matchStartEnd_puj7f4$ = function (start, end) {
    if (!equals(this.substr_0(this.pos, start.length), start))
      return null;
    var startIndex = this.pos;
    var index = indexOf(this.str, end, this.pos);
    if (index < 0)
      return null;
    this.pos = index + end.length | 0;
    return this.slice_vux9f0$(startIndex, this.pos);
  };
  StrReader.prototype.clone = function () {
    return new StrReader(this.str, this.file, this.pos);
  };
  StrReader.prototype.tryRead_61zpoe$ = function (str) {
    if (equals(this.peek_za3lpa$(str.length), str)) {
      this.skip_za3lpa$(str.length);
      return true;
    }
    return false;
  };
  function StrReader$Literals(lits, map, lengths) {
    StrReader$Literals$Companion_getInstance();
    this.lits_0 = lits;
    this.map_0 = map;
    this.lengths = lengths;
  }
  function StrReader$Literals$Companion() {
    StrReader$Literals$Companion_instance = this;
  }
  StrReader$Literals$Companion.prototype.invoke_vqirvp$ = function (lits) {
    return this.fromList_kand9s$(copyToArray(toCollection(lits, ArrayList_init())));
  };
  StrReader$Literals$Companion.prototype.fromList_kand9s$ = function (lits) {
    var tmp$;
    var destination = ArrayList_init_1(lits.length);
    var tmp$_0;
    for (tmp$_0 = 0; tmp$_0 !== lits.length; ++tmp$_0) {
      var item = lits[tmp$_0];
      destination.add_11rb$(item.length);
    }
    var lengths = copyToArray(distinct(reversed(sorted(destination))));
    var map = lmapOf([]);
    for (tmp$ = 0; tmp$ !== lits.length; ++tmp$) {
      var lit = lits[tmp$];
      map.put_xwzc9p$(lit, true);
    }
    return new StrReader$Literals(lits, map, lengths);
  };
  StrReader$Literals$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StrReader$Literals$Companion_instance = null;
  function StrReader$Literals$Companion_getInstance() {
    if (StrReader$Literals$Companion_instance === null) {
      new StrReader$Literals$Companion();
    }
    return StrReader$Literals$Companion_instance;
  }
  StrReader$Literals.prototype.contains_61zpoe$ = function (lit) {
    return this.map_0.containsKey_11rb$(lit);
  };
  StrReader$Literals.prototype.matchAt_bm4lxs$ = function (str, offset) {
    var tmp$, tmp$_0;
    tmp$ = this.lengths;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var len = tmp$[tmp$_0];
      var id = substr_0(str, offset, len);
      if (this.contains_61zpoe$(id))
        return id;
    }
    return null;
  };
  StrReader$Literals.prototype.toString = function () {
    return 'Literals(' + joinToString_0(this.lits_0, ' ') + ')';
  };
  StrReader$Literals.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Literals',
    interfaces: []
  };
  function StrReader$TRange(min, max, reader) {
    StrReader$TRange$Companion_getInstance();
    this.min = min;
    this.max = max;
    this.reader = reader;
  }
  function StrReader$TRange$Companion() {
    StrReader$TRange$Companion_instance = this;
  }
  StrReader$TRange$Companion.prototype.combine_vw4zp0$ = function (a, b) {
    var a_0 = a.min;
    var b_0 = b.min;
    var tmp$ = Math_0.min(a_0, b_0);
    var a_1 = a.max;
    var b_1 = b.max;
    return new StrReader$TRange(tmp$, Math_0.max(a_1, b_1), a.reader);
  };
  StrReader$TRange$Companion.prototype.combineList_hbyypg$ = function (list) {
    var tmp$;
    if (list.isEmpty())
      return null;
    var first = list.get_za3lpa$(0);
    var min = first.min;
    var max = first.max;
    tmp$ = list.iterator();
    while (tmp$.hasNext()) {
      var i = tmp$.next();
      var a = min;
      var b = i.min;
      min = Math_0.min(a, b);
      var a_0 = max;
      var b_0 = i.max;
      max = Math_0.max(a_0, b_0);
    }
    return new StrReader$TRange(min, max, first.reader);
  };
  StrReader$TRange$Companion.prototype.createDummy = function () {
    return new StrReader$TRange(0, 0, new StrReader(''));
  };
  StrReader$TRange$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var StrReader$TRange$Companion_instance = null;
  function StrReader$TRange$Companion_getInstance() {
    if (StrReader$TRange$Companion_instance === null) {
      new StrReader$TRange$Companion();
    }
    return StrReader$TRange$Companion_instance;
  }
  StrReader$TRange.prototype.contains_za3lpa$ = function (index) {
    return index >= this.min && index <= this.max;
  };
  StrReader$TRange.prototype.toString = function () {
    return this.min.toString() + ':' + this.max;
  };
  Object.defineProperty(StrReader$TRange.prototype, 'file', {
    get: function () {
      return this.reader.file;
    }
  });
  Object.defineProperty(StrReader$TRange.prototype, 'text', {
    get: function () {
      return this.reader.slice_vux9f0$(this.min, this.max);
    }
  });
  StrReader$TRange.prototype.startEmptyRange = function () {
    return new StrReader$TRange(this.min, this.min, this.reader);
  };
  StrReader$TRange.prototype.endEmptyRange = function () {
    return new StrReader$TRange(this.max, this.max, this.reader);
  };
  StrReader$TRange.prototype.displace_za3lpa$ = function (offset) {
    return new StrReader$TRange(this.min + offset | 0, this.max + offset | 0, this.reader);
  };
  StrReader$TRange.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TRange',
    interfaces: []
  };
  StrReader.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StrReader',
    interfaces: []
  };
  function readStringLit($receiver, reportErrors) {
    if (reportErrors === void 0)
      reportErrors = true;
    var tmp$;
    var out = StringBuilder_init();
    var quotec = unboxChar($receiver.read());
    switch (quotec) {
      case 34:
      case 39:
        break;
      default:invalidOp('Invalid string literal');
        break;
    }
    var closed = false;
    while ($receiver.hasMore) {
      var c = unboxChar($receiver.read());
      if (c === 92) {
        var cc = unboxChar($receiver.read());
        switch (cc) {
          case 92:
            tmp$ = 92;
            break;
          case 47:
            tmp$ = 47;
            break;
          case 39:
            tmp$ = 39;
            break;
          case 34:
            tmp$ = 34;
            break;
          case 98:
            tmp$ = 8;
            break;
          case 102:
            tmp$ = 12;
            break;
          case 110:
            tmp$ = 10;
            break;
          case 114:
            tmp$ = 13;
            break;
          case 116:
            tmp$ = 9;
            break;
          case 117:
            tmp$ = toChar(toInt_0($receiver.read_za3lpa$(4), 16));
            break;
          default:tmp$ = unboxChar(Json_getInstance().invalidJson_61zpoe$("Invalid char '" + String.fromCharCode(cc) + "'"));
            break;
        }
        out.append_s8itvh$(tmp$);
      }
       else if (c === quotec) {
        closed = true;
        break;
      }
       else {
        out.append_s8itvh$(c);
      }
    }
    if (!closed && reportErrors) {
      throw RuntimeException_init("String literal not closed! '" + $receiver.str + "'");
    }
    return out.toString();
  }
  function reader($receiver, file, pos) {
    if (file === void 0)
      file = 'file';
    if (pos === void 0)
      pos = 0;
    return new StrReader($receiver, file, pos);
  }
  function UByteArraySlice(data, position, length) {
    UByteArraySlice$Companion_getInstance();
    this.data = data;
    this.position = position;
    this.length = length;
  }
  UByteArraySlice.prototype.getPointer = function () {
    return new Pointer(this.data, this.position);
  };
  UByteArraySlice.prototype.toString = function () {
    return 'UByteArraySlice(data=' + this.data + ', position=' + this.position + ', length=' + this.length + ')';
  };
  UByteArraySlice.prototype.get_za3lpa$ = function (n) {
    return this.data[this.position + n | 0] & 255;
  };
  UByteArraySlice.prototype.set_vux9f0$ = function (n, value) {
    this.data[this.position + n | 0] = toByte(value);
  };
  function UByteArraySlice$Companion() {
    UByteArraySlice$Companion_instance = this;
  }
  UByteArraySlice$Companion.prototype.create_4p0eoe$ = function (start, end) {
    if (start.ba !== end.ba)
      throw RuntimeException_init('Pointer must reference the samea array');
    return new ByteArraySlice(start.ba, start.offset, end.offset - start.offset | 0);
  };
  UByteArraySlice$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var UByteArraySlice$Companion_instance = null;
  function UByteArraySlice$Companion_getInstance() {
    if (UByteArraySlice$Companion_instance === null) {
      new UByteArraySlice$Companion();
    }
    return UByteArraySlice$Companion_instance;
  }
  UByteArraySlice.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UByteArraySlice',
    interfaces: []
  };
  function toUByteArraySlice($receiver) {
    return new UByteArraySlice($receiver, 0, $receiver.length);
  }
  function toUnsigned_0($receiver) {
    return new UByteArraySlice($receiver.data, $receiver.position, $receiver.length);
  }
  function UUID(data) {
    UUID$Companion_getInstance();
    this.data = data;
  }
  function UUID$Companion() {
    UUID$Companion_instance = this;
    this.regex_0 = Regex_init_0('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}', RegexOption.IGNORE_CASE);
  }
  UUID$Companion.prototype.fix_0 = function (data, version, variant) {
    var v = data.data[6] & 255 & 15 | version << 4;
    data.data[6] = toByte(v);
    var v_0 = data.data[8] & 255 & 1118481 | variant << 6;
    data.data[8] = toByte(v_0);
    return data;
  };
  UUID$Companion.prototype.randomUUID = function () {
    var $receiver = UByteArray_init(16);
    KorioNative_getInstance().getRandomValues_fqrh44$($receiver.data);
    return new UUID(this.fix_0($receiver, 4, 1));
  };
  UUID$Companion.prototype.invoke_61zpoe$ = function (str) {
    if (this.regex_0.matchEntire_6bul2c$(str) == null)
      invalidArg('Invalid UUID');
    return new UUID(new UByteArray(Hex_getInstance().decode_61zpoe$(replace(str, '-', ''))));
  };
  UUID$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var UUID$Companion_instance = null;
  function UUID$Companion_getInstance() {
    if (UUID$Companion_instance === null) {
      new UUID$Companion();
    }
    return UUID$Companion_instance;
  }
  Object.defineProperty(UUID.prototype, 'version', {
    get: function () {
      return (this.data.data[6] & 255) >>> 4 & 15;
    }
  });
  Object.defineProperty(UUID.prototype, 'variant', {
    get: function () {
      return (this.data.data[8] & 255) >>> 6 & 3;
    }
  });
  UUID.prototype.toString = function () {
    return format('%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x', [this.data.data[0] & 255, this.data.data[1] & 255, this.data.data[2] & 255, this.data.data[3] & 255, this.data.data[4] & 255, this.data.data[5] & 255, this.data.data[6] & 255, this.data.data[7] & 255, this.data.data[8] & 255, this.data.data[9] & 255, this.data.data[10] & 255, this.data.data[11] & 255, this.data.data[12] & 255, this.data.data[13] & 255, this.data.data[14] & 255, this.data.data[15] & 255]);
  };
  UUID.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UUID',
    interfaces: []
  };
  var computeRle = defineInlineFunction('korio-js.com.soywiz.korio.util.computeRle_3fhhkf$', wrapFunction(function () {
    var throwUPAE = Kotlin.throwUPAE;
    var equals = Kotlin.equals;
    var until = Kotlin.kotlin.ranges.until_dqglrj$;
    var to = Kotlin.kotlin.to_ujzrz7$;
    var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
    return function ($receiver, callback) {
      var tmp$;
      var first = true;
      var pos = 0;
      var startpos = 0;
      var lastRes;
      var out = ArrayList_init();
      tmp$ = $receiver.iterator();
      while (tmp$.hasNext()) {
        var it = tmp$.next();
        var current = callback(it);
        if (!first) {
          if (!equals(current, lastRes == null ? throwUPAE('lastRes') : lastRes)) {
            var element = to(lastRes == null ? throwUPAE('lastRes') : lastRes, until(startpos, pos));
            out.add_11rb$(element);
            startpos = pos;
          }
        }
        lastRes = current;
        first = false;
        pos = pos + 1 | 0;
      }
      if (startpos !== pos) {
        var element_0 = to(lastRes == null ? throwUPAE('lastRes') : lastRes, until(startpos, pos));
        out.add_11rb$(element_0);
      }
      return out;
    };
  }));
  function escape($receiver) {
    var tmp$;
    var out = StringBuilder_init();
    tmp$ = $receiver.length;
    for (var n = 0; n < tmp$; n++) {
      var c = $receiver.charCodeAt(n);
      switch (c) {
        case 92:
          out.append_gw00v9$('\\\\');
          break;
        case 34:
          out.append_gw00v9$('\\"');
          break;
        case 10:
          out.append_gw00v9$('\\n');
          break;
        case 13:
          out.append_gw00v9$('\\r');
          break;
        case 9:
          out.append_gw00v9$('\\t');
          break;
        default:if ((new CharRange(0, 31)).contains_mef7kx$(c))
            out.append_gw00v9$('\\x' + format('%02x', [c | 0]));
          else
            out.append_s8itvh$(c);
          break;
      }
    }
    return out.toString();
  }
  function uescape($receiver) {
    var tmp$;
    var out = StringBuilder_init();
    tmp$ = $receiver.length;
    for (var n = 0; n < tmp$; n++) {
      var c = $receiver.charCodeAt(n);
      switch (c) {
        case 92:
          out.append_gw00v9$('\\\\');
          break;
        case 34:
          out.append_gw00v9$('\\"');
          break;
        case 10:
          out.append_gw00v9$('\\n');
          break;
        case 13:
          out.append_gw00v9$('\\r');
          break;
        case 9:
          out.append_gw00v9$('\\t');
          break;
        default:if (isPrintable(c)) {
            out.append_s8itvh$(c);
          }
           else {
            out.append_gw00v9$('\\u' + format('%04x', [c | 0]));
          }

          break;
      }
    }
    return out.toString();
  }
  function unescape($receiver) {
    var tmp$, tmp$_0;
    var out = StringBuilder_init();
    var n = 0;
    while (n < $receiver.length) {
      var c = $receiver.charCodeAt((tmp$ = n, n = tmp$ + 1 | 0, tmp$));
      if (c === 92) {
        var c2 = $receiver.charCodeAt((tmp$_0 = n, n = tmp$_0 + 1 | 0, tmp$_0));
        switch (c2) {
          case 92:
            out.append_s8itvh$(92);
            break;
          case 34:
            out.append_s8itvh$(34);
            break;
          case 110:
            out.append_s8itvh$(10);
            break;
          case 114:
            out.append_s8itvh$(13);
            break;
          case 116:
            out.append_s8itvh$(9);
            break;
          case 117:
            var startIndex = n;
            var endIndex = n + 4 | 0;
            var chars = $receiver.substring(startIndex, endIndex);
            n = n + 4 | 0;
            out.append_s8itvh$(toChar(toInt_0(chars, 16)));
            break;
          default:out.append_gw00v9$('\\' + String.fromCharCode(c2));
            break;
        }
      }
       else
        out.append_s8itvh$(c);
    }
    return out.toString();
  }
  function uquote($receiver) {
    return $receiver != null ? '"' + uescape($receiver) + '"' : 'null';
  }
  function quote_0($receiver) {
    return $receiver != null ? '"' + escape($receiver) + '"' : 'null';
  }
  function isQuoted($receiver) {
    return startsWith_0($receiver, 34) && endsWith_0($receiver, 34);
  }
  function unquote($receiver) {
    if (isQuoted($receiver)) {
      var endIndex = $receiver.length - 1 | 0;
      return unescape($receiver.substring(1, endIndex));
    }
     else {
      return $receiver;
    }
  }
  var expectException = defineInlineFunction('korio-js.com.soywiz.korio.util.expectException_73903m$', wrapFunction(function () {
    var ExpectedException_init = _.com.soywiz.korio.util.ExpectedException;
    var Throwable = Error;
    return function (T_0, isT, callback) {
      try {
        callback();
        throw new ExpectedException_init('Expected');
      }
       catch (e) {
        if (Kotlin.isType(e, Throwable)) {
          if (!isT(e))
            throw e;
        }
         else
          throw e;
      }
    };
  }));
  function ExpectedException(msg) {
    Exception_init(msg, this);
    this.name = 'ExpectedException';
  }
  ExpectedException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ExpectedException',
    interfaces: [Exception]
  };
  function generateSync(block) {
    return buildSequence(block);
  }
  function generate(block) {
    return buildSequence(block);
  }
  function htmlspecialchars($receiver) {
    return XmlEntities_getInstance().encode_61zpoe$($receiver);
  }
  function createURLForData(data, contentType) {
    var o = {};
    o['type'] = contentType;
    return URL.createObjectURL(new Blob([data], o));
  }
  function revokeRLForData(url) {
    URL.revokeObjectURL(url);
  }
  var createTemporalURLForData = defineInlineFunction('korio-js.com.soywiz.korio.createTemporalURLForData_y2mrn0$', wrapFunction(function () {
    var createURLForData = _.com.soywiz.korio.createURLForData_nwlife$;
    var revokeRLForData = _.com.soywiz.korio.revokeRLForData_61zpoe$;
    return function (data, contentType, callback) {
      var blobURL = createURLForData(data, contentType);
      try {
        return callback(blobURL);
      }
      finally {
        revokeRLForData(blobURL);
      }
    };
  }));
  function jsLocalStorageVfs$lambda$ObjectLiteral() {
  }
  jsLocalStorageVfs$lambda$ObjectLiteral.prototype.get_61zpoe$ = function (key, continuation) {
    return localStorage[key];
  };
  jsLocalStorageVfs$lambda$ObjectLiteral.prototype.set_puj7f4$ = function (key, value, continuation) {
    localStorage[key] = value;
    return Unit;
  };
  jsLocalStorageVfs$lambda$ObjectLiteral.prototype.remove_61zpoe$ = function (key, continuation) {
    return localStorage.removeItem(key);
  };
  jsLocalStorageVfs$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [SimpleStorage]
  };
  function jsLocalStorageVfs$lambda() {
    return new MapLikeStorageVfs(new jsLocalStorageVfs$lambda$ObjectLiteral());
  }
  var jsLocalStorageVfs;
  function get_jsLocalStorageVfs() {
    return jsLocalStorageVfs.value;
  }
  function Synchronized() {
  }
  Synchronized.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Synchronized',
    interfaces: [Annotation]
  };
  function JvmField() {
  }
  JvmField.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JvmField',
    interfaces: [Annotation]
  };
  function JvmStatic() {
  }
  JvmStatic.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JvmStatic',
    interfaces: [Annotation]
  };
  function JvmOverloads() {
  }
  JvmOverloads.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JvmOverloads',
    interfaces: [Annotation]
  };
  function Transient() {
  }
  Transient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Transient',
    interfaces: [Annotation]
  };
  function IOException(msg) {
    Exception_init(msg, this);
    this.name = 'IOException';
  }
  IOException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IOException',
    interfaces: [Exception]
  };
  function EOFException(msg) {
    IOException.call(this, msg);
    this.name = 'EOFException';
  }
  EOFException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EOFException',
    interfaces: [IOException]
  };
  function FileNotFoundException(msg) {
    IOException.call(this, msg);
    this.name = 'FileNotFoundException';
  }
  FileNotFoundException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FileNotFoundException',
    interfaces: [IOException]
  };
  function RuntimeException(msg) {
    Exception_init(msg, this);
    this.name = 'RuntimeException';
  }
  RuntimeException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RuntimeException',
    interfaces: [Exception]
  };
  function IllegalStateException(msg) {
    RuntimeException.call(this, msg);
    this.name = 'IllegalStateException';
  }
  IllegalStateException.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IllegalStateException',
    interfaces: [RuntimeException]
  };
  var global_0;
  function Semaphore(initial) {
  }
  Semaphore.prototype.acquire = function () {
  };
  Semaphore.prototype.release = function () {
  };
  Semaphore.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Semaphore',
    interfaces: []
  };
  function isNodeJs$lambda() {
    return typeof window === 'undefined';
  }
  var isNodeJs;
  function get_isNodeJs() {
    return isNodeJs.value;
  }
  function KorioNative() {
    KorioNative_instance = this;
    this.currentThreadId = L1;
    var tmp$;
    if (get_isNodeJs())
      tmp$ = process.platform;
    else
      tmp$ = navigator.platform;
    this.rawOsName = tmp$;
    this.absoluteCwd_0 = get_isNodeJs() ? require('path').resolve('.') : '.';
    this.tmpdir_lwyg5t$_0 = lazy(KorioNative$tmpdir$lambda);
    this.File_separatorChar = toBoxedChar(47);
    this.asyncSocketFactory_l5wxho$_0 = lazy(KorioNative$asyncSocketFactory$lambda);
    this.websockets_994cgr$_0 = lazy(KorioNative$websockets$lambda);
    this.systemLanguageStrings_sqddu6$_0 = lazy(KorioNative$systemLanguageStrings$lambda);
    this.httpFactory_ou0pbp$_0 = lazy(KorioNative$httpFactory$lambda);
    this.ResourcesVfs_lgm9jr$_0 = lazy(KorioNative$ResourcesVfs$lambda(this));
  }
  KorioNative.prototype.getClassSimpleName_xo1ogr$ = function (clazz) {
    var tmp$;
    return (tmp$ = clazz.simpleName) != null ? tmp$ : 'unknown';
  };
  KorioNative.prototype.executeInWorker_lnyleu$ = function (callback, continuation) {
    return callback(continuation);
  };
  function KorioNative$asyncEntryPoint$lambda$ObjectLiteral(closure$resolve, closure$reject, closure$context) {
    this.closure$resolve = closure$resolve;
    this.closure$reject = closure$reject;
    OldContinuationAdaptor.call(this);
    this.context_n11ox4$_0 = closure$context;
  }
  Object.defineProperty(KorioNative$asyncEntryPoint$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_n11ox4$_0;
    }
  });
  KorioNative$asyncEntryPoint$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    this.closure$resolve(undefined);
  };
  KorioNative$asyncEntryPoint$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    this.closure$reject(exception);
  };
  KorioNative$asyncEntryPoint$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [OldContinuationAdaptor]
  };
  function KorioNative$asyncEntryPoint$lambda(closure$callback, closure$context) {
    return function (resolve, reject) {
      startCoroutine(closure$callback, new KorioNative$asyncEntryPoint$lambda$ObjectLiteral(resolve, reject, closure$context));
      return Unit;
    };
  }
  KorioNative.prototype.asyncEntryPoint_ykkwzu$ = function (context, callback) {
    return new Promise(KorioNative$asyncEntryPoint$lambda(callback, context));
  };
  function KorioNative$NativeThreadLocal() {
    this.value_b5oj0g$_0 = this.initialValue();
  }
  KorioNative$NativeThreadLocal.prototype.get = function () {
    return this.value_b5oj0g$_0;
  };
  KorioNative$NativeThreadLocal.prototype.set_11rb$ = function (value) {
    this.value_b5oj0g$_0 = value;
  };
  KorioNative$NativeThreadLocal.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NativeThreadLocal',
    interfaces: []
  };
  Object.defineProperty(KorioNative.prototype, 'platformName', {
    get: function () {
      if (get_isNodeJs())
        return 'node.js';
      else
        return 'js';
    }
  });
  KorioNative.prototype.getRandomValues_fqrh44$ = function (data) {
    if (get_isNodeJs()) {
      require('crypto').randomFillSync(new Uint8Array(data));
    }
     else {
      global_0.crypto.getRandomValues(data);
    }
  };
  KorioNative.prototype.rootLocalVfs = function () {
    return this.localVfs_61zpoe$(this.absoluteCwd_0);
  };
  KorioNative.prototype.applicationVfs = function () {
    return this.localVfs_61zpoe$(this.absoluteCwd_0);
  };
  KorioNative.prototype.applicationDataVfs = function () {
    return get_jsLocalStorageVfs().root;
  };
  KorioNative.prototype.cacheVfs = function () {
    return MemoryVfs();
  };
  KorioNative.prototype.externalStorageVfs = function () {
    return this.localVfs_61zpoe$(this.absoluteCwd_0);
  };
  KorioNative.prototype.userHomeVfs = function () {
    return this.localVfs_61zpoe$(this.absoluteCwd_0);
  };
  KorioNative.prototype.tempVfs = function () {
    return this.localVfs_61zpoe$(this.tmpdir);
  };
  KorioNative.prototype.localVfs_61zpoe$ = function (path) {
    var tmp$, tmp$_0, tmp$_1;
    if (get_isNodeJs())
      tmp$_1 = (new NodeJsLocalVfs()).get_61zpoe$(path);
    else {
      tmp$_1 = UrlVfs((tmp$_0 = (tmp$ = document.location) != null ? tmp$.href : null) != null ? tmp$_0 : '.').get_61zpoe$(path);
    }
    return tmp$_1;
  };
  Object.defineProperty(KorioNative.prototype, 'tmpdir', {
    get: function () {
      return this.tmpdir_lwyg5t$_0.value;
    }
  });
  Object.defineProperty(KorioNative.prototype, 'asyncSocketFactory', {
    get: function () {
      return this.asyncSocketFactory_l5wxho$_0.value;
    }
  });
  Object.defineProperty(KorioNative.prototype, 'websockets', {
    get: function () {
      return this.websockets_994cgr$_0.value;
    }
  });
  Object.defineProperty(KorioNative.prototype, 'systemLanguageStrings', {
    get: function () {
      return this.systemLanguageStrings_sqddu6$_0.value;
    }
  });
  KorioNative.prototype.Thread_sleep_s8cxhz$ = function (time) {
  };
  function KorioNative$SimplerMessageDigest(name) {
    this.nname = replace(name.toLowerCase(), '-', '');
    var tmp$;
    switch (this.nname) {
      case 'hmacsha256':
      case 'sha256':
        tmp$ = 'sha256';
        break;
      default:tmp$ = invalidOp("Unsupported message digest '" + name + "'");
        break;
    }
    this.hname = tmp$;
    this.hash = require('crypto').createHash(this.hname);
  }
  KorioNative$SimplerMessageDigest.prototype.update_mj6st8$ = function (data, offset, size, continuation) {
    var toIndex = offset + size | 0;
    return this.update_fqrh44$(data.slice(offset, toIndex), continuation);
  };
  KorioNative$SimplerMessageDigest.prototype.update_fqrh44$ = function (data, continuation) {
    return this.hash.update(data);
  };
  KorioNative$SimplerMessageDigest.prototype.digest = function (continuation) {
    return Hex_getInstance().decode_61zpoe$(this.hash.digest('hex'));
  };
  KorioNative$SimplerMessageDigest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SimplerMessageDigest',
    interfaces: []
  };
  function KorioNative$SimplerMac(name, key) {
    this.nname = replace(name.toLowerCase(), '-', '');
    var tmp$;
    switch (this.nname) {
      case 'hmacsha256':
      case 'sha256':
        tmp$ = 'sha256';
        break;
      case 'hmacsha1':
      case 'sha1':
        tmp$ = 'sha1';
        break;
      default:tmp$ = invalidOp("Unsupported hmac '" + name + "'");
        break;
    }
    this.hname = tmp$;
    this.hmac = require('crypto').createHmac(this.hname, key);
  }
  KorioNative$SimplerMac.prototype.update_mj6st8$ = function (data, offset, size, continuation) {
    var toIndex = offset + size | 0;
    return this.update_fqrh44$(data.slice(offset, toIndex), continuation);
  };
  KorioNative$SimplerMac.prototype.update_fqrh44$ = function (data, continuation) {
    return this.hmac.update(data);
  };
  KorioNative$SimplerMac.prototype.finalize = function (continuation) {
    return Hex_getInstance().decode_61zpoe$(this.hmac.digest('hex'));
  };
  KorioNative$SimplerMac.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SimplerMac',
    interfaces: []
  };
  Object.defineProperty(KorioNative.prototype, 'httpFactory', {
    get: function () {
      return this.httpFactory_ou0pbp$_0.value;
    }
  });
  Object.defineProperty(KorioNative.prototype, 'ResourcesVfs', {
    get: function () {
      return this.ResourcesVfs_lgm9jr$_0.value;
    }
  });
  KorioNative.prototype.enterDebugger = function () {
    debugger;
  };
  KorioNative.prototype.printStackTrace_tcv7n7$ = function (e) {
    console.error(e);
    console.error(e.stack);
  };
  KorioNative.prototype.getenv_61zpoe$ = function (key) {
    var tmp$, tmp$_0;
    if (OS_getInstance().isNodejs) {
      return process.env[key];
    }
     else {
      var qs = QueryString_getInstance().decode_6bul2c$(trimStart((tmp$_0 = (tmp$ = document.location) != null ? tmp$.search : null) != null ? tmp$_0 : '', Kotlin.charArrayOf(63)));
      var destination = ArrayList_init_1(qs.size);
      var tmp$_1;
      tmp$_1 = qs.entries.iterator();
      while (tmp$_1.hasNext()) {
        var item = tmp$_1.next();
        var tmp$_2;
        destination.add_11rb$(to(item.key.toUpperCase(), (tmp$_2 = firstOrNull(item.value)) != null ? tmp$_2 : item.key));
      }
      var envs = toMap(destination);
      return envs.get_11rb$(key.toUpperCase());
    }
  };
  function KorioNative$suspendTest$lambda$ObjectLiteral(closure$resolve, closure$reject) {
    this.closure$resolve = closure$resolve;
    this.closure$reject = closure$reject;
    OldContinuationAdaptor.call(this);
    this.context_r4zqis$_0 = KorioDefaultDispatcher;
  }
  Object.defineProperty(KorioNative$suspendTest$lambda$ObjectLiteral.prototype, 'context', {
    get: function () {
      return this.context_r4zqis$_0;
    }
  });
  KorioNative$suspendTest$lambda$ObjectLiteral.prototype.resume_11rb$ = function (value) {
    this.closure$resolve(undefined);
  };
  KorioNative$suspendTest$lambda$ObjectLiteral.prototype.resumeWithException_tcv7n7$ = function (exception) {
    this.closure$reject(exception);
  };
  KorioNative$suspendTest$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [OldContinuationAdaptor]
  };
  function KorioNative$suspendTest$lambda(closure$callback) {
    return function (resolve, reject) {
      startCoroutine(closure$callback, new KorioNative$suspendTest$lambda$ObjectLiteral(resolve, reject));
      return Unit;
    };
  }
  KorioNative.prototype.suspendTest_g2bo5h$ = function (callback) {
    return new Promise(KorioNative$suspendTest$lambda(callback));
  };
  function KorioNative$tmpdir$lambda() {
    if (get_isNodeJs()) {
      return require('os').tmpdir();
    }
     else
      return '/tmp';
  }
  function KorioNative$asyncSocketFactory$lambda$ObjectLiteral() {
    AsyncSocketFactory.call(this);
  }
  KorioNative$asyncSocketFactory$lambda$ObjectLiteral.prototype.createClient = function (continuation) {
    return new NodeJsAsyncClient();
  };
  KorioNative$asyncSocketFactory$lambda$ObjectLiteral.prototype.createServer_jl0c9m$$default = function (port, host, backlog, continuation) {
    return (new NodeJsAsyncServer()).init_jl0c9m$(port, host, backlog, continuation);
  };
  KorioNative$asyncSocketFactory$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [AsyncSocketFactory]
  };
  function KorioNative$asyncSocketFactory$lambda() {
    return new KorioNative$asyncSocketFactory$lambda$ObjectLiteral();
  }
  function KorioNative$websockets$lambda() {
    return new JsWebSocketClientFactory();
  }
  function KorioNative$systemLanguageStrings$lambda() {
    var tmp$, tmp$_0, tmp$_1, tmp$_2;
    if (get_isNodeJs()) {
      var env = process.env;
      return listOf_0((tmp$_2 = (tmp$_1 = (tmp$_0 = (tmp$ = env.LANG) != null ? tmp$ : env.LANGUAGE) != null ? tmp$_0 : env.LC_ALL) != null ? tmp$_1 : env.LC_MESSAGES) != null ? tmp$_2 : 'english');
    }
     else {
      return toList_0(window.navigator.languages);
    }
  }
  function KorioNative$httpFactory$lambda$ObjectLiteral() {
  }
  KorioNative$httpFactory$lambda$ObjectLiteral.prototype.createClient = function () {
    return OS_getInstance().isNodejs ? new HttpClientNodeJs() : new HttpClientBrowserJs();
  };
  KorioNative$httpFactory$lambda$ObjectLiteral.prototype.createServer = function () {
    return new HttpSeverNodeJs();
  };
  KorioNative$httpFactory$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [HttpFactory]
  };
  function KorioNative$httpFactory$lambda() {
    return new KorioNative$httpFactory$lambda$ObjectLiteral();
  }
  function KorioNative$ResourcesVfs$lambda(this$KorioNative) {
    return function () {
      return this$KorioNative.applicationVfs();
    };
  }
  KorioNative.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'KorioNative',
    interfaces: []
  };
  var KorioNative_instance = null;
  function KorioNative_getInstance() {
    if (KorioNative_instance === null) {
      new KorioNative();
    }
    return KorioNative_instance;
  }
  function jsNew(clazz) {
    return (new clazz())();
  }
  function jsNew_0(clazz, a0) {
    return (new clazz())(a0);
  }
  function jsNew_1(clazz, a0, a1) {
    return (new clazz())(a0, a1);
  }
  function jsNew_2(clazz, a0, a1, a2) {
    return (new clazz())(a0, a1, a2);
  }
  function jsEnsureNumber(v) {
    return +v;
  }
  function jsEnsureInt(v) {
    return v | 0;
  }
  function jsEmptyObj() {
    return {};
  }
  function jsEmptyArray() {
    return [];
  }
  function jsObjectKeys(obj) {
    return Object.keys(obj);
  }
  function jsToArray(obj) {
    var array = Array_0(obj.length);
    var tmp$;
    tmp$ = array.length - 1 | 0;
    for (var i = 0; i <= tmp$; i++) {
      array[i] = obj[i];
    }
    return array;
  }
  function jsArray(elements) {
    var tmp$;
    var out = jsEmptyArray();
    for (tmp$ = 0; tmp$ !== elements.length; ++tmp$) {
      var e = elements[tmp$];
      out.push(e);
    }
    return out;
  }
  var jsToArrayT = defineInlineFunction('korio-js.com.soywiz.korio.jsToArrayT_86eaif$', wrapFunction(function () {
    var Array_0 = Array;
    return function (T_0, isT, obj) {
      var array = Array_0(obj.length);
      var tmp$;
      tmp$ = array.length - 1 | 0;
      for (var i = 0; i <= tmp$; i++) {
        array[i] = obj[i];
      }
      return array;
    };
  }));
  function jsObject(pairs) {
    var tmp$;
    var out = jsEmptyObj();
    for (tmp$ = 0; tmp$ !== pairs.length; ++tmp$) {
      var pair = pairs[tmp$];
      out[pair.first] = pair.second;
    }
    return out;
  }
  function jsToObjectMap(obj) {
    var tmp$;
    if (obj == null)
      return null;
    var out = lmapOf([]);
    var keys = jsObjectKeys(obj);
    tmp$ = keys.length;
    for (var n = 0; n < tmp$; n++) {
      var key = keys[n];
      var key_0 = key.toString();
      var value = obj[key];
      out.put_xwzc9p$(key_0, value);
    }
    return out;
  }
  function HttpClientBrowserJs() {
    HttpClient.call(this);
  }
  function HttpClientBrowserJs$requestInternal$lambda(closure$xhr, closure$deferred) {
    return function (e) {
      var tmp$;
      var u8array = new Uint8Array(Kotlin.isType(tmp$ = closure$xhr.response, ArrayBuffer) ? tmp$ : throwCCE());
      var out = new Int8Array(u8array.length);
      for (var n = 0; n !== out.length; ++n) {
        out[n] = u8array[n];
      }
      return closure$deferred.complete_11rb$(new HttpClient$Response(closure$xhr.status, closure$xhr.statusText, Http$Http$Headers_init_1(closure$xhr.getAllResponseHeaders()), openAsync(out)));
    };
  }
  function HttpClientBrowserJs$requestInternal$lambda_0(closure$deferred, closure$xhr, closure$url) {
    return function (e) {
      return closure$deferred.completeExceptionally_tcv7n7$(RuntimeException_init('Error ' + closure$xhr.status + ' opening ' + closure$url));
    };
  }
  function HttpClientBrowserJs$requestInternal$lambda_1(closure$deferred, closure$xhr) {
    return function (it) {
      if (closure$deferred.isCancelled) {
        closure$xhr.abort();
      }
      return Unit;
    };
  }
  HttpClientBrowserJs.prototype.requestInternal_wintjk$$default = function (method_0, url_0, headers_0, content_0, continuation_0, suspended) {
    var instance = new Coroutine$requestInternal_wintjk$$default_0(this, method_0, url_0, headers_0, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$requestInternal_wintjk$$default_0($this, method_0, url_0, headers_0, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$deferred = void 0;
    this.local$xhr = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
  }
  Coroutine$requestInternal_wintjk$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$requestInternal_wintjk$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$requestInternal_wintjk$$default_0.prototype.constructor = Coroutine$requestInternal_wintjk$$default_0;
  Coroutine$requestInternal_wintjk$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$deferred = CompletableDeferred(Job());
            this.local$xhr = new XMLHttpRequest();
            this.local$xhr.open(this.local$method.name, this.local$url, true);
            this.local$xhr.responseType = 'arraybuffer';
            this.local$xhr.onload = HttpClientBrowserJs$requestInternal$lambda(this.local$xhr, this.local$deferred);
            this.local$xhr.onerror = HttpClientBrowserJs$requestInternal$lambda_0(this.local$deferred, this.local$xhr, this.local$url);
            tmp$ = this.local$headers.iterator();
            while (tmp$.hasNext()) {
              var header = tmp$.next();
              var $receiver = header.first.toLowerCase();
              var tmp$_0;
              var hnname = trim_0(Kotlin.isCharSequence(tmp$_0 = $receiver) ? tmp$_0 : throwCCE()).toString();
              switch (hnname) {
                case 'connection':
                case 'content-length':
                  break;
                default:this.local$xhr.setRequestHeader(header.first, header.second);
                  break;
              }
            }

            this.local$deferred.invokeOnCompletion_f05bi3$(HttpClientBrowserJs$requestInternal$lambda_1(this.local$deferred, this.local$xhr));
            if (this.local$content != null) {
              this.state_0 = 2;
              this.result_0 = readAll(this.local$content, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$xhr.send();
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$xhr.send(this.result_0);
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$deferred.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClientBrowserJs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpClientBrowserJs',
    interfaces: [HttpClient]
  };
  function JsWebSocketClientFactory() {
    WebSocketClientFactory.call(this);
  }
  JsWebSocketClientFactory.prototype.create_5y1boz$$default = function (url_0, protocols_0, origin, wskey, debug_0, continuation_0, suspended) {
    var instance = new Coroutine$create_5y1boz$$default(this, url_0, protocols_0, origin, wskey, debug_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$create_5y1boz$$default($this, url_0, protocols_0, origin, wskey, debug_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$url = url_0;
    this.local$protocols = protocols_0;
    this.local$debug = debug_0;
  }
  Coroutine$create_5y1boz$$default.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$create_5y1boz$$default.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$create_5y1boz$$default.prototype.constructor = Coroutine$create_5y1boz$$default;
  Coroutine$create_5y1boz$$default.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = new JsWebSocketClient(this.local$url, this.local$protocols, this.local$debug);
            this.state_0 = 2;
            this.result_0 = this.local$$receiver.init(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$$receiver;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  JsWebSocketClientFactory.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsWebSocketClientFactory',
    interfaces: [WebSocketClientFactory]
  };
  function JsWebSocketClient(url, protocols, DEBUG) {
    WebSocketClient.call(this, url, protocols, true);
    this.DEBUG = DEBUG;
    var tmp$;
    if (protocols != null) {
      tmp$ = new WebSocket(url, copyToArray(protocols).slice());
    }
     else {
      tmp$ = new WebSocket(url);
    }
    var $receiver = tmp$;
    $receiver.binaryType = 'arraybuffer';
    $receiver.addEventListener('open', JsWebSocketClient$jsws$lambda$lambda(this));
    $receiver.addEventListener('close', JsWebSocketClient$jsws$lambda$lambda_0(this));
    $receiver.addEventListener('message', JsWebSocketClient$jsws$lambda$lambda_1(this));
    this.jsws = $receiver;
  }
  JsWebSocketClient.prototype.init = function (continuation_0, suspended) {
    var instance = new Coroutine$init(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$init($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$init.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$init.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$init.prototype.constructor = Coroutine$init;
  Coroutine$init.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.DEBUG)
              println('[WS] Wait connection (' + this.$this.url + ')...');
            this.state_0 = 2;
            this.result_0 = waitOne_1(this.$this.onOpen, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (this.$this.DEBUG)
              println('[WS] Connected!');
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  JsWebSocketClient.prototype.close_19mbxw$$default = function (code, reason) {
    this.jsws.close();
  };
  JsWebSocketClient.prototype.send_61zpoe$ = function (message, continuation) {
    if (this.DEBUG)
      println('[WS-SEND]: ' + message);
    this.jsws.send(message);
  };
  JsWebSocketClient.prototype.send_fqrh44$ = function (message, continuation) {
    if (this.DEBUG)
      println('[WS-SEND]: ' + toList_2(message));
    var bb = new Int8Array(message.length);
    for (var n = 0; n !== message.length; ++n) {
      bb[n] = message[n];
    }
    this.jsws.send(bb);
  };
  function JsWebSocketClient$jsws$lambda$lambda(this$JsWebSocketClient) {
    return function (it) {
      this$JsWebSocketClient.onOpen.invoke_11rb$(Unit);
      return Unit;
    };
  }
  function JsWebSocketClient$jsws$lambda$lambda_0(this$JsWebSocketClient) {
    return function (e) {
      var tmp$;
      var event = Kotlin.isType(tmp$ = e, CloseEvent) ? tmp$ : throwCCE();
      var code = event.code;
      var reason = event.reason;
      var wasClean = event.wasClean;
      this$JsWebSocketClient.onClose.invoke_11rb$(Unit);
      return Unit;
    };
  }
  function JsWebSocketClient$jsws$lambda$lambda_1(this$JsWebSocketClient) {
    return function (e) {
      var tmp$;
      var event = Kotlin.isType(tmp$ = e, MessageEvent) ? tmp$ : throwCCE();
      var data = event.data;
      if (this$JsWebSocketClient.DEBUG)
        println('[WS-RECV]: ' + toString(data) + ' :: stringListeners=' + this$JsWebSocketClient.onStringMessage.listenerCount + ', binaryListeners=' + this$JsWebSocketClient.onBinaryMessage.listenerCount + ', anyListeners=' + this$JsWebSocketClient.onAnyMessage.listenerCount);
      if (typeof data === 'string') {
        var js = data;
        this$JsWebSocketClient.onStringMessage.invoke_11rb$(js);
        this$JsWebSocketClient.onAnyMessage.invoke_11rb$(js);
      }
       else {
        var jb = data;
        throw new NotImplementedError_init('An operation is not implemented: ' + 'onBinaryMessage, onAnyMessage');
      }
      return Unit;
    };
  }
  JsWebSocketClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsWebSocketClient',
    interfaces: [WebSocketClient]
  };
  function toByteArray_1($receiver) {
    return new Int8Array($receiver);
  }
  function asInt8Array($receiver) {
    return $receiver;
  }
  function asUint8Array($receiver) {
    var i = asInt8Array($receiver);
    return new Uint8Array(i.buffer, i.byteOffset, i.length);
  }
  function toNodeJsBuffer($receiver) {
    return asUint8Array($receiver);
  }
  function toNodeJsBuffer_0($receiver, offset, size) {
    return global_0.Buffer.from($receiver, offset, size);
  }
  function HttpClientNodeJs() {
    HttpClient.call(this);
  }
  function HttpClientNodeJs$requestInternal$lambda$lambda(closure$body) {
    return function (d) {
      return closure$body.push(d);
    };
  }
  function HttpClientNodeJs$requestInternal$lambda$lambda_0(closure$body, closure$statusCode, closure$statusMessage, closure$jsHeadersObj, closure$deferred) {
    return function () {
      var tmp$, tmp$_0;
      var r = global_0.Buffer.concat(closure$body);
      var u8array = new Int8Array(r);
      var out = new Int8Array(u8array.length);
      tmp$ = u8array.length;
      for (var n = 0; n < tmp$; n++) {
        out[n] = u8array[n];
      }
      var $receiver = (tmp$_0 = jsToObjectMap(closure$jsHeadersObj)) != null ? tmp$_0 : lmapOf([]);
      var destination = LinkedHashMap_init_0(mapCapacity($receiver.size));
      var tmp$_1;
      tmp$_1 = $receiver.entries.iterator();
      while (tmp$_1.hasNext()) {
        var element = tmp$_1.next();
        destination.put_xwzc9p$(element.key, toString(element.value));
      }
      var response = new HttpClient$Response(closure$statusCode, closure$statusMessage, Http$Http$Headers_init_0(destination), openAsync(out));
      return closure$deferred.complete_11rb$(response);
    };
  }
  function HttpClientNodeJs$requestInternal$lambda(closure$deferred) {
    return function (res) {
      var tmp$;
      var statusCode = res.statusCode;
      var statusMessage = (tmp$ = res.statusMessage) != null ? tmp$ : '';
      var jsHeadersObj = res.headers;
      var body = jsEmptyArray();
      res.on('data', HttpClientNodeJs$requestInternal$lambda$lambda(body));
      return res.on('end', HttpClientNodeJs$requestInternal$lambda$lambda_0(body, statusCode, statusMessage, jsHeadersObj, closure$deferred));
    };
  }
  function HttpClientNodeJs$requestInternal$lambda_0(closure$deferred) {
    return function (e) {
      return closure$deferred.completeExceptionally_tcv7n7$(RuntimeException_init('Error: ' + e));
    };
  }
  function HttpClientNodeJs$requestInternal$lambda_1(closure$deferred, closure$r) {
    return function (it) {
      if (closure$deferred.isCancelled) {
        closure$r.abort();
      }
      return Unit;
    };
  }
  HttpClientNodeJs.prototype.requestInternal_wintjk$$default = function (method_0, url_0, headers_0, content_0, continuation_0, suspended) {
    var instance = new Coroutine$requestInternal_wintjk$$default_1(this, method_0, url_0, headers_0, content_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$requestInternal_wintjk$$default_1($this, method_0, url_0, headers_0, content_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$deferred = void 0;
    this.local$r = void 0;
    this.local$method = method_0;
    this.local$url = url_0;
    this.local$headers = headers_0;
    this.local$content = content_0;
  }
  Coroutine$requestInternal_wintjk$$default_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$requestInternal_wintjk$$default_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$requestInternal_wintjk$$default_1.prototype.constructor = Coroutine$requestInternal_wintjk$$default_1;
  Coroutine$requestInternal_wintjk$$default_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$deferred = CompletableDeferred(Job());
            var http = require('http');
            var jsurl = require('url');
            var info = jsurl.parse(this.local$url);
            var reqHeaders = jsEmptyObj();
            tmp$ = this.local$headers.iterator();
            while (tmp$.hasNext()) {
              var header = tmp$.next();
              reqHeaders[header.first] = header.second;
            }

            var req = jsEmptyObj();
            req.method = this.local$method.name;
            req.host = info['hostname'];
            req.port = info['port'];
            req.path = info['path'];
            req.agent = false;
            req.encoding = null;
            req.headers = reqHeaders;
            this.local$r = http.request(req, HttpClientNodeJs$requestInternal$lambda(this.local$deferred)).on('error', HttpClientNodeJs$requestInternal$lambda_0(this.local$deferred));
            this.local$deferred.invokeOnCompletion_f05bi3$(HttpClientNodeJs$requestInternal$lambda_1(this.local$deferred, this.local$r));
            if (this.local$content != null) {
              this.state_0 = 2;
              this.result_0 = readAll(this.local$content, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.local$r.end();
              this.state_0 = 3;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            this.local$r.end(toTypedArray(this.result_0));
            this.state_0 = 3;
            continue;
          case 3:
            this.state_0 = 4;
            this.result_0 = this.local$deferred.await(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpClientNodeJs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpClientNodeJs',
    interfaces: [HttpClient]
  };
  function HttpSeverNodeJs() {
    HttpServer.call(this);
    this.context_0 = coroutines.EmptyCoroutineContext;
    this.handler_0 = HttpSeverNodeJs$handler$lambda;
    this.http = require('http');
    this.server = this.http.createServer(HttpSeverNodeJs$server$lambda(this));
  }
  HttpSeverNodeJs.prototype.websocketHandlerInternal_d3ycxo$ = function (handler_0, continuation_0, suspended) {
    var instance = new Coroutine$websocketHandlerInternal_d3ycxo$(this, handler_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$websocketHandlerInternal_d3ycxo$($this, handler_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$handler = handler_0;
  }
  Coroutine$websocketHandlerInternal_d3ycxo$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$websocketHandlerInternal_d3ycxo$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$websocketHandlerInternal_d3ycxo$.prototype.constructor = Coroutine$websocketHandlerInternal_d3ycxo$;
  Coroutine$websocketHandlerInternal_d3ycxo$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = HttpServer.prototype.websocketHandlerInternal_d3ycxo$.call(this.$this, this.local$handler, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral(closure$req, closure$res, method, uri, headers, requestConfig) {
    this.closure$req = closure$req;
    this.closure$res = closure$res;
    HttpServer$Request.call(this, method, uri, headers, requestConfig);
  }
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_handler$lambda(closure$handler) {
    return function (chunk) {
      closure$handler(new Int8Array(chunk.buffer));
      return Unit;
    };
  }
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype._handler_949j03$ = function (handler, continuation) {
    this.closure$req.on('data', HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_handler$lambda(handler));
  };
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_endHandler$lambda(closure$handler) {
    return function () {
      closure$handler();
      return Unit;
    };
  }
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_endHandler$lambda_0(closure$handler) {
    return function () {
      closure$handler();
      return Unit;
    };
  }
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype._endHandler_o14v8n$ = function (handler, continuation) {
    this.closure$req.on('end', HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_endHandler$lambda(handler));
    this.closure$req.on('error', HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_endHandler$lambda_0(handler));
  };
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype._sendHeader_j29v25$ = function (code, message, headers, continuation) {
    var tmp$;
    this.closure$res.statusCode = code;
    this.closure$res.statusMessage = message;
    tmp$ = headers.iterator();
    while (tmp$.hasNext()) {
      var header = tmp$.next();
      this.closure$res.setHeader(header.first, header.second);
    }
  };
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_write$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_write$lambda(closure$res, closure$data, closure$offset, closure$size) {
    return function (c) {
      closure$res.write(toNodeJsBuffer_0(closure$data, closure$offset, closure$size), HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_write$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_1(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype._write_mj6st8$$default = function (data_0, offset_0, size_0, continuation_0, suspended) {
    var instance = new Coroutine$_write_mj6st8$$default_0(this, data_0, offset_0, size_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_write_mj6st8$$default_0($this, data_0, offset_0, size_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$data = data_0;
    this.local$offset = offset_0;
    this.local$size = size_0;
  }
  Coroutine$_write_mj6st8$$default_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_write_mj6st8$$default_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_write_mj6st8$$default_0.prototype.constructor = Coroutine$_write_mj6st8$$default_0;
  Coroutine$_write_mj6st8$$default_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_1(HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_write$lambda(this.$this.closure$res, this.local$data, this.local$offset, this.local$size))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_end$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_end$lambda(closure$res) {
    return function (c) {
      closure$res.end(HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_end$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_2(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.prototype._end = function (continuation_0, suspended) {
    var instance = new Coroutine$_end(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_end($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$_end.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_end.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_end.prototype.constructor = Coroutine$_end;
  Coroutine$_end.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_2(HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral$_end$lambda(this.$this.closure$res))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: [HttpServer$Request]
  };
  function HttpSeverNodeJs$httpHandlerInternal$lambda(closure$handler_0) {
    return function (req_0, res_0, continuation_0, suspended) {
      var instance = new Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda(closure$handler_0, req_0, res_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda(closure$handler_0, req_0, res_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$closure$handler = closure$handler_0;
    this.local$req = req_0;
    this.local$res = res_0;
  }
  Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda.prototype.constructor = Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda;
  Coroutine$HttpSeverNodeJs$httpHandlerInternal$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var method = Http$Method$Companion_getInstance().get_61zpoe$(this.local$req.method);
            var url = this.local$req.url;
            var $receiver = jsToArray(this.local$req.rawHeaders);
            var destination = ArrayList_init_1($receiver.length);
            var tmp$;
            for (tmp$ = 0; tmp$ !== $receiver.length; ++tmp$) {
              var item = $receiver[tmp$];
              destination.add_11rb$(toString(item));
            }

            var headers = new Http$Headers(zipWithNext(destination));
            this.state_0 = 2;
            this.result_0 = this.local$closure$handler(new HttpSeverNodeJs$httpHandlerInternal$lambda$ObjectLiteral(this.local$req, this.local$res, method, url, headers, new HttpServer$RequestConfig()), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpSeverNodeJs.prototype.httpHandlerInternal_b59mbs$ = function (handler, continuation) {
    this.context_0 = continuation.context;
    this.handler_0 = HttpSeverNodeJs$httpHandlerInternal$lambda(handler);
  };
  function HttpSeverNodeJs$listenInternal$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function HttpSeverNodeJs$listenInternal$lambda(this$HttpSeverNodeJs, closure$port, closure$host) {
    return function (c) {
      this$HttpSeverNodeJs.context_0 = c.context;
      this$HttpSeverNodeJs.server.listen(closure$port, closure$host, 511, HttpSeverNodeJs$listenInternal$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_3(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  HttpSeverNodeJs.prototype.listenInternal_19mbxw$$default = function (port_0, host_0, continuation_0, suspended) {
    var instance = new Coroutine$listenInternal_19mbxw$$default_1(this, port_0, host_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$listenInternal_19mbxw$$default_1($this, port_0, host_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$port = port_0;
    this.local$host = host_0;
  }
  Coroutine$listenInternal_19mbxw$$default_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$listenInternal_19mbxw$$default_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$listenInternal_19mbxw$$default_1.prototype.constructor = Coroutine$listenInternal_19mbxw$$default_1;
  Coroutine$listenInternal_19mbxw$$default_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_3(HttpSeverNodeJs$listenInternal$lambda(this.$this, this.local$port, this.local$host))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  Object.defineProperty(HttpSeverNodeJs.prototype, 'actualPort', {
    get: function () {
      return jsEnsureInt(this.server.address().port);
    }
  });
  function HttpSeverNodeJs$closeInternal$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function HttpSeverNodeJs$closeInternal$lambda(this$HttpSeverNodeJs) {
    return function (c) {
      this$HttpSeverNodeJs.context_0 = c.context;
      this$HttpSeverNodeJs.server.close(HttpSeverNodeJs$closeInternal$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_4(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  HttpSeverNodeJs.prototype.closeInternal = function (continuation_0, suspended) {
    var instance = new Coroutine$closeInternal(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$closeInternal($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$closeInternal.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$closeInternal.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$closeInternal.prototype.constructor = Coroutine$closeInternal;
  Coroutine$closeInternal.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_4(HttpSeverNodeJs$closeInternal$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpSeverNodeJs$handler$lambda(req, res, continuation_0, suspended) {
    var instance = new Coroutine$HttpSeverNodeJs$handler$lambda(req, res, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$HttpSeverNodeJs$handler$lambda(req, res, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
  }
  Coroutine$HttpSeverNodeJs$handler$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpSeverNodeJs$handler$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpSeverNodeJs$handler$lambda.prototype.constructor = Coroutine$HttpSeverNodeJs$handler$lambda;
  Coroutine$HttpSeverNodeJs$handler$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpSeverNodeJs$server$lambda$lambda(this$HttpSeverNodeJs_0, closure$req_0, closure$res_0) {
    return function (continuation_0, suspended) {
      var instance = new Coroutine$HttpSeverNodeJs$server$lambda$lambda(this$HttpSeverNodeJs_0, closure$req_0, closure$res_0, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$HttpSeverNodeJs$server$lambda$lambda(this$HttpSeverNodeJs_0, closure$req_0, closure$res_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.local$this$HttpSeverNodeJs = this$HttpSeverNodeJs_0;
    this.local$closure$req = closure$req_0;
    this.local$closure$res = closure$res_0;
  }
  Coroutine$HttpSeverNodeJs$server$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HttpSeverNodeJs$server$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HttpSeverNodeJs$server$lambda$lambda.prototype.constructor = Coroutine$HttpSeverNodeJs$server$lambda$lambda;
  Coroutine$HttpSeverNodeJs$server$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$HttpSeverNodeJs.handler_0(this.local$closure$req, this.local$closure$res, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HttpSeverNodeJs$server$lambda(this$HttpSeverNodeJs) {
    return function (req, res) {
      return launchImmediately_0(this$HttpSeverNodeJs.context_0, void 0, HttpSeverNodeJs$server$lambda$lambda(this$HttpSeverNodeJs, req, res));
    };
  }
  HttpSeverNodeJs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpSeverNodeJs',
    interfaces: [HttpServer]
  };
  function NodeJsAsyncClient() {
    this.net_0 = require('net');
    this.connection_0 = null;
    this.input_0 = new AsyncProduceConsumerByteBuffer();
    this.connected_da9yc3$_0 = false;
  }
  Object.defineProperty(NodeJsAsyncClient.prototype, 'connected', {
    get: function () {
      return this.connected_da9yc3$_0;
    },
    set: function (connected) {
      this.connected_da9yc3$_0 = connected;
    }
  });
  function NodeJsAsyncClient$connect$lambda$lambda$lambda(this$NodeJsAsyncClient) {
    return function (it) {
      this$NodeJsAsyncClient.input_0.produce_fqrh44$(it);
      return Unit;
    };
  }
  function NodeJsAsyncClient$connect$lambda$lambda(this$NodeJsAsyncClient, closure$c) {
    return function () {
      var tmp$, tmp$_0;
      this$NodeJsAsyncClient.connected = true;
      (tmp$ = this$NodeJsAsyncClient.connection_0) != null ? tmp$.pause() : null;
      (tmp$_0 = this$NodeJsAsyncClient.connection_0) != null ? tmp$_0.on('data', NodeJsAsyncClient$connect$lambda$lambda$lambda(this$NodeJsAsyncClient)) : null;
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function NodeJsAsyncClient$connect$lambda(this$NodeJsAsyncClient, closure$port, closure$host) {
    return function (c) {
      this$NodeJsAsyncClient.connection_0 = this$NodeJsAsyncClient.net_0.createConnection(closure$port, closure$host, NodeJsAsyncClient$connect$lambda$lambda(this$NodeJsAsyncClient, c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_5(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsAsyncClient.prototype.connect_bm4lxs$ = function (host_0, port_0, continuation_0, suspended) {
    var instance = new Coroutine$connect_bm4lxs$(this, host_0, port_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$connect_bm4lxs$($this, host_0, port_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$host = host_0;
    this.local$port = port_0;
  }
  Coroutine$connect_bm4lxs$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$connect_bm4lxs$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$connect_bm4lxs$.prototype.constructor = Coroutine$connect_bm4lxs$;
  Coroutine$connect_bm4lxs$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_5(NodeJsAsyncClient$connect$lambda(this.$this, this.local$port, this.local$host))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeJsAsyncClient.prototype.read_mj6st8$ = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_mj6st8$_6(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_mj6st8$_6($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_mj6st8$_6.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_mj6st8$_6.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_mj6st8$_6.prototype.constructor = Coroutine$read_mj6st8$_6;
  Coroutine$read_mj6st8$_6.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            (tmp$ = this.$this.connection_0) != null ? tmp$.resume() : null;
            this.exceptionState_0 = 4;
            this.state_0 = 1;
            this.result_0 = this.$this.input_0.read_mj6st8$(this.local$buffer, this.local$offset, this.local$len, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [2];
            this.state_0 = 5;
            this.$returnValue = this.result_0;
            continue;
          case 2:
            return this.$returnValue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            (tmp$_0 = this.$this.connection_0) != null ? tmp$_0.pause() : null;
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeJsAsyncClient$write$lambda$lambda(closure$c) {
    return function () {
      closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      return Unit;
    };
  }
  function NodeJsAsyncClient$write$lambda(this$NodeJsAsyncClient, closure$buffer, closure$offset, closure$len) {
    return function (c) {
      var tmp$;
      (tmp$ = this$NodeJsAsyncClient.connection_0) != null ? tmp$.write(toNodeJsBuffer_0(closure$buffer, closure$offset, closure$len), NodeJsAsyncClient$write$lambda$lambda(c)) : null;
      return Unit;
    };
  }
  function suspendCoroutine$lambda_6(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsAsyncClient.prototype.write_mj6st8$$default = function (buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_mj6st8$$default_3(this, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_mj6st8$$default_3($this, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_mj6st8$$default_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_mj6st8$$default_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_mj6st8$$default_3.prototype.constructor = Coroutine$write_mj6st8$$default_3;
  Coroutine$write_mj6st8$$default_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_6(NodeJsAsyncClient$write$lambda(this.$this, this.local$buffer, this.local$offset, this.local$len))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeJsAsyncClient.prototype.close = function (continuation) {
    var tmp$;
    (tmp$ = this.connection_0) != null ? tmp$.close() : null;
  };
  NodeJsAsyncClient.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeJsAsyncClient',
    interfaces: [AsyncClient]
  };
  function NodeJsAsyncServer() {
  }
  Object.defineProperty(NodeJsAsyncServer.prototype, 'requestPort', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(NodeJsAsyncServer.prototype, 'host', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(NodeJsAsyncServer.prototype, 'backlog', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(NodeJsAsyncServer.prototype, 'port', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  NodeJsAsyncServer.prototype.listen_lsub1v$ = function (handler, continuation) {
    throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
  };
  NodeJsAsyncServer.prototype.listen = function (continuation) {
    return AsyncServer.prototype.listen.call(this, continuation);
  };
  NodeJsAsyncServer.prototype.init_jl0c9m$ = function (port, host, backlog, continuation) {
    return this;
  };
  NodeJsAsyncServer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeJsAsyncServer',
    interfaces: [AsyncServer]
  };
  function NodeJsLocalVfs() {
    LocalVfs.call(this);
    this.fs = require('fs');
  }
  function NodeJsLocalVfs$FD() {
  }
  NodeJsLocalVfs$FD.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'FD',
    interfaces: []
  };
  NodeJsLocalVfs.prototype.getFullPath_0 = function (path) {
    return VfsUtil_getInstance().normalize_61zpoe$(path);
  };
  function NodeJsLocalVfs$mkdir$lambda$lambda(closure$c) {
    return function (err) {
      var $receiver = closure$c;
      var value = err == null;
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      return Unit;
    };
  }
  function NodeJsLocalVfs$mkdir$lambda(this$NodeJsLocalVfs, closure$path) {
    return function (c) {
      this$NodeJsLocalVfs.fs.mkdir(this$NodeJsLocalVfs.getFullPath_0(closure$path), toInt_0('777', 8), NodeJsLocalVfs$mkdir$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_7(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsLocalVfs.prototype.mkdir_z6b3ik$ = function (path_0, attributes, continuation_0, suspended) {
    var instance = new Coroutine$mkdir_z6b3ik$_1(this, path_0, attributes, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$mkdir_z6b3ik$_1($this, path_0, attributes, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$mkdir_z6b3ik$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$mkdir_z6b3ik$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$mkdir_z6b3ik$_1.prototype.constructor = Coroutine$mkdir_z6b3ik$_1;
  Coroutine$mkdir_z6b3ik$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_7(NodeJsLocalVfs$mkdir$lambda(this.$this, this.local$path))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeJsLocalVfs$rename$lambda$lambda(closure$c) {
    return function (err) {
      var $receiver = closure$c;
      var value = err == null;
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      return Unit;
    };
  }
  function NodeJsLocalVfs$rename$lambda(this$NodeJsLocalVfs, closure$src, closure$dst) {
    return function (c) {
      this$NodeJsLocalVfs.fs.rename(this$NodeJsLocalVfs.getFullPath_0(closure$src), this$NodeJsLocalVfs.getFullPath_0(closure$dst), NodeJsLocalVfs$rename$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_8(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsLocalVfs.prototype.rename_puj7f4$ = function (src_0, dst_0, continuation_0, suspended) {
    var instance = new Coroutine$rename_puj7f4$_1(this, src_0, dst_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$rename_puj7f4$_1($this, src_0, dst_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$src = src_0;
    this.local$dst = dst_0;
  }
  Coroutine$rename_puj7f4$_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$rename_puj7f4$_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$rename_puj7f4$_1.prototype.constructor = Coroutine$rename_puj7f4$_1;
  Coroutine$rename_puj7f4$_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_8(NodeJsLocalVfs$rename$lambda(this.$this, this.local$src, this.local$dst))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeJsLocalVfs$delete$lambda$lambda(closure$c) {
    return function (err) {
      var $receiver = closure$c;
      var value = err == null;
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      return Unit;
    };
  }
  function NodeJsLocalVfs$delete$lambda(this$NodeJsLocalVfs, closure$path) {
    return function (c) {
      this$NodeJsLocalVfs.fs.unlink(this$NodeJsLocalVfs.getFullPath_0(closure$path), NodeJsLocalVfs$delete$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_9(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsLocalVfs.prototype.delete_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$delete_61zpoe$_0(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$delete_61zpoe$_0($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$delete_61zpoe$_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delete_61zpoe$_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delete_61zpoe$_0.prototype.constructor = Coroutine$delete_61zpoe$_0;
  Coroutine$delete_61zpoe$_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_9(NodeJsLocalVfs$delete$lambda(this.$this, this.local$path))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeJsLocalVfs$rmdir$lambda$lambda(closure$c) {
    return function (err) {
      var $receiver = closure$c;
      var value = err == null;
      $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      return Unit;
    };
  }
  function NodeJsLocalVfs$rmdir$lambda(this$NodeJsLocalVfs, closure$path) {
    return function (c) {
      this$NodeJsLocalVfs.fs.rmdir(this$NodeJsLocalVfs.getFullPath_0(closure$path), NodeJsLocalVfs$rmdir$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_10(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsLocalVfs.prototype.rmdir_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$rmdir_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$rmdir_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
  }
  Coroutine$rmdir_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$rmdir_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$rmdir_61zpoe$.prototype.constructor = Coroutine$rmdir_61zpoe$;
  Coroutine$rmdir_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_10(NodeJsLocalVfs$rmdir$lambda(this.$this, this.local$path))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeJsLocalVfs.prototype.open_vb0dls$ = function (path_0, mode_0, continuation_0, suspended) {
    var instance = new Coroutine$open_vb0dls$_4(this, path_0, mode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$open_vb0dls$_4($this, path_0, mode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$tmp$ = void 0;
    this.local$path = path_0;
    this.local$mode = mode_0;
  }
  Coroutine$open_vb0dls$_4.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$open_vb0dls$_4.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$open_vb0dls$_4.prototype.constructor = Coroutine$open_vb0dls$_4;
  Coroutine$open_vb0dls$_4.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            switch (this.local$mode.name) {
              case 'READ':
                this.local$tmp$ = 'r';
                this.state_0 = 3;
                continue;
              case 'WRITE':
                this.local$tmp$ = 'r+';
                this.state_0 = 3;
                continue;
              case 'CREATE_OR_TRUNCATE':
                this.local$tmp$ = 'w+';
                this.state_0 = 3;
                continue;
              case 'CREATE_NEW':
                this.state_0 = 2;
                this.result_0 = this.$this.stat_61zpoe$(this.local$path, this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              case 'CREATE':
                this.local$tmp$ = 'wx+';
                this.state_0 = 3;
                continue;
              case 'APPEND':
                this.local$tmp$ = 'a';
                this.state_0 = 3;
                continue;
              default:this.local$tmp$ = Kotlin.noWhenBranchMatched();
                this.state_0 = 3;
                continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            if (this.result_0.exists)
              throw new FileNotFoundException(this.local$path);
            this.local$tmp$ = 'w+';
            this.state_0 = 3;
            continue;
          case 3:
            var cmode = this.local$tmp$;
            this.state_0 = 4;
            this.result_0 = this.$this._open_puj7f4$(this.local$path, cmode, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeJsLocalVfs$_open$lambda$lambda(closure$cc, this$NodeJsLocalVfs) {
    return function (err, fd) {
      if (err != null) {
        closure$cc.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        var $receiver = closure$cc;
        var value = toAsyncStream_0(new NodeFDStream(this$NodeJsLocalVfs.fs, fd));
        $receiver.resumeWith_i5d895$(new SuccessOrFailure(value));
      }
      return Unit;
    };
  }
  function NodeJsLocalVfs$_open$lambda(this$NodeJsLocalVfs, closure$path, closure$cmode) {
    return function (cc) {
      this$NodeJsLocalVfs.fs.open(this$NodeJsLocalVfs.getFullPath_0(closure$path), closure$cmode, NodeJsLocalVfs$_open$lambda$lambda(cc, this$NodeJsLocalVfs));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_11(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeJsLocalVfs.prototype._open_puj7f4$ = function (path_0, cmode_0, continuation_0, suspended) {
    var instance = new Coroutine$_open_puj7f4$(this, path_0, cmode_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$_open_puj7f4$($this, path_0, cmode_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$path = path_0;
    this.local$cmode = cmode_0;
  }
  Coroutine$_open_puj7f4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$_open_puj7f4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$_open_puj7f4$.prototype.constructor = Coroutine$_open_puj7f4$;
  Coroutine$_open_puj7f4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_11(NodeJsLocalVfs$_open$lambda(this.$this, this.local$path, this.local$cmode))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeJsLocalVfs.prototype.toString = function () {
    return 'NodeJsLocalVfs';
  };
  NodeJsLocalVfs.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeJsLocalVfs',
    interfaces: [LocalVfs]
  };
  function NodeFDStream(fs, fd) {
    AsyncStreamBase.call(this);
    this.fs = fs;
    this.fd = fd;
  }
  function NodeFDStream$read$lambda$lambda(closure$c) {
    return function (err, bytesRead, buffer) {
      if (err != null) {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(bytesRead));
      }
      return Unit;
    };
  }
  function NodeFDStream$read$lambda(this$NodeFDStream, closure$buffer, closure$offset, closure$len, closure$position) {
    return function (c) {
      this$NodeFDStream.fs.read(this$NodeFDStream.fd, toNodeJsBuffer(closure$buffer), closure$offset, closure$len, closure$position.toNumber(), NodeFDStream$read$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_12(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeFDStream.prototype.read_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$read_4m9kcn$_2(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$read_4m9kcn$_2($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$read_4m9kcn$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$read_4m9kcn$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$read_4m9kcn$_2.prototype.constructor = Coroutine$read_4m9kcn$_2;
  Coroutine$read_4m9kcn$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_12(NodeFDStream$read$lambda(this.$this, this.local$buffer, this.local$offset, this.local$len, this.local$position))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeFDStream$write$lambda$lambda(closure$c) {
    return function (err, bytesWritten, buffer) {
      if (err != null) {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      }
      return Unit;
    };
  }
  function NodeFDStream$write$lambda(this$NodeFDStream, closure$buffer, closure$offset, closure$len, closure$position) {
    return function (c) {
      this$NodeFDStream.fs.write(this$NodeFDStream.fd, toNodeJsBuffer(closure$buffer), closure$offset, closure$len, closure$position.toNumber(), NodeFDStream$write$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_13(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeFDStream.prototype.write_4m9kcn$ = function (position_0, buffer_0, offset_0, len_0, continuation_0, suspended) {
    var instance = new Coroutine$write_4m9kcn$_3(this, position_0, buffer_0, offset_0, len_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$write_4m9kcn$_3($this, position_0, buffer_0, offset_0, len_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$position = position_0;
    this.local$buffer = buffer_0;
    this.local$offset = offset_0;
    this.local$len = len_0;
  }
  Coroutine$write_4m9kcn$_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$write_4m9kcn$_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$write_4m9kcn$_3.prototype.constructor = Coroutine$write_4m9kcn$_3;
  Coroutine$write_4m9kcn$_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_13(NodeFDStream$write$lambda(this.$this, this.local$buffer, this.local$offset, this.local$len, this.local$position))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeFDStream$setLength$lambda$lambda(closure$c) {
    return function (err) {
      if (err != null) {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      }
      return Unit;
    };
  }
  function NodeFDStream$setLength$lambda(this$NodeFDStream, closure$value) {
    return function (c) {
      this$NodeFDStream.fs.ftruncate(this$NodeFDStream.fd, closure$value.toNumber(), NodeFDStream$setLength$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_14(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeFDStream.prototype.setLength_s8cxhz$ = function (value_0, continuation_0, suspended) {
    var instance = new Coroutine$setLength_s8cxhz$_2(this, value_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$setLength_s8cxhz$_2($this, value_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$value = value_0;
  }
  Coroutine$setLength_s8cxhz$_2.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$setLength_s8cxhz$_2.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$setLength_s8cxhz$_2.prototype.constructor = Coroutine$setLength_s8cxhz$_2;
  Coroutine$setLength_s8cxhz$_2.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_14(NodeFDStream$setLength$lambda(this.$this, this.local$value))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeFDStream$getLength$lambda$lambda(closure$c) {
    return function (err, stats) {
      var tmp$, tmp$_0;
      if (err != null) {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        tmp$_0 = Kotlin.Long.fromNumber(typeof (tmp$ = stats.size) === 'number' ? tmp$ : throwCCE());
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(tmp$_0));
      }
      return Unit;
    };
  }
  function NodeFDStream$getLength$lambda(this$NodeFDStream) {
    return function (c) {
      this$NodeFDStream.fs.fstat(this$NodeFDStream.fd, NodeFDStream$getLength$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_15(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeFDStream.prototype.getLength = function (continuation_0, suspended) {
    var instance = new Coroutine$getLength_1(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$getLength_1($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$getLength_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getLength_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getLength_1.prototype.constructor = Coroutine$getLength_1;
  Coroutine$getLength_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_15(NodeFDStream$getLength$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function NodeFDStream$close$lambda$lambda(closure$c) {
    return function (err) {
      if (err != null) {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(new SuccessOrFailure$SuccessOrFailure$Failure_init(err)));
      }
       else {
        closure$c.resumeWith_i5d895$(new SuccessOrFailure(Unit));
      }
      return Unit;
    };
  }
  function NodeFDStream$close$lambda(this$NodeFDStream) {
    return function (c) {
      this$NodeFDStream.fs.close(this$NodeFDStream.fd, NodeFDStream$close$lambda$lambda(c));
      return Unit;
    };
  }
  function suspendCoroutine$lambda_16(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  NodeFDStream.prototype.close = function (continuation_0, suspended) {
    var instance = new Coroutine$close_3(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$close_3($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
  }
  Coroutine$close_3.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$close_3.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$close_3.prototype.constructor = Coroutine$close_3;
  Coroutine$close_3.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda_16(NodeFDStream$close$lambda(this.$this))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  NodeFDStream.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'NodeFDStream',
    interfaces: [AsyncStreamBase]
  };
  var KorioDefaultDispatcher;
  var package$com = _.com || (_.com = {});
  var package$soywiz = package$com.soywiz || (package$com.soywiz = {});
  var package$korio = package$soywiz.korio || (package$soywiz.korio = {});
  package$korio.Korio_pdzd2i$ = Korio;
  package$korio.Korio_u4brvc$ = Korio_0;
  Object.defineProperty(package$korio, 'Korio', {
    get: Korio_getInstance
  });
  package$korio.Language = Language;
  $$importsForInline$$['klogger-js'] = $module$klogger_js;
  Object.defineProperty(package$korio, 'KorioNativeDefaults', {
    get: KorioNativeDefaults_getInstance
  });
  package$korio.createBase64URLForData_nwlife$ = createBase64URLForData;
  Object.defineProperty(package$korio, 'KORIO_VERSION_8be2vx$', {
    get: function () {
      return KORIO_VERSION;
    }
  });
  var package$async = package$korio.async || (package$korio.async = {});
  package$async.await_7zc599$ = await_0;
  package$async.await_xhrrtj$ = await_1;
  package$async.get_tryDispatcher_qdnslq$ = get_tryDispatcher;
  package$async.get_dispatcher_qdnslq$ = get_dispatcher;
  package$async.delayNextFrame = delayNextFrame;
  package$async.DelayFrame = DelayFrame;
  $$importsForInline$$['kotlinx-coroutines-core'] = $module$kotlinx_coroutines_core;
  package$async.delayFrame_ym1ver$ = delayFrame;
  Object.defineProperty(package$async, 'DefaultDelayFrame', {
    get: function () {
      return DefaultDelayFrame;
    }
  });
  package$async.get_delayFrame_qdnslq$ = get_delayFrame;
  package$async.delayNextFrame_qdnslq$ = delayNextFrame_0;
  package$async.delayMs_iwlh9o$ = delayMs;
  package$async.delay_fv8bff$ = delay_0;
  package$async.delay_boqi9f$ = delay_1;
  package$async.animationFrameLoop_4os2gr$ = animationFrameLoop;
  package$async.CoroutineContextHolder = CoroutineContextHolder;
  TestCoroutineDispatcher.TimedTask = TestCoroutineDispatcher$TimedTask;
  package$async.TestCoroutineDispatcher = TestCoroutineDispatcher;
  package$async.executeInNewThread_lnyleu$ = executeInNewThread;
  package$async.executeInWorker_lnyleu$ = executeInWorker;
  package$async.suspendTest_g2bo5h$ = suspendTest;
  package$async.suspendTest_ykkwzu$ = suspendTest_0;
  package$async.suspendTestExceptJs_g2bo5h$ = suspendTestExceptJs;
  package$async.launchImmediately_to1gs7$ = launchImmediately;
  package$async.launchAsap_to1gs7$ = launchAsap;
  package$async.asyncImmediately_7atg38$ = asyncImmediately;
  package$async.asyncAsap_7atg38$ = asyncAsap;
  package$async.launchImmediately_vruxnc$ = launchImmediately_0;
  package$async.launchAsap_vruxnc$ = launchAsap_0;
  package$async.asyncImmediately_zctz99$ = asyncImmediately_0;
  package$async.asyncAsap_zctz99$ = asyncAsap_0;
  package$async.AsyncPool = AsyncPool;
  package$async.AsyncQueue = AsyncQueue;
  package$async.withContext_z63kqd$ = withContext_0;
  package$async.withContext_uu8uhk$ = withContext_1;
  package$async.AsyncQueueWithContext = AsyncQueueWithContext;
  package$async.AsyncThread = AsyncThread;
  package$async.AsyncSemaphore = AsyncSemaphore;
  AsyncSignal.Node = AsyncSignal$Node;
  package$async.AsyncSignal = AsyncSignal;
  package$async.mapSignal_d1llwn$ = mapSignal;
  package$async.invoke_if7m94$ = invoke;
  package$async.waitOne_2ag0ef$ = waitOne;
  package$async.addSuspend_lurw3q$ = addSuspend;
  package$async.addSuspend_w4tsgb$ = addSuspend_0;
  package$async.toContinuation_z0yhv$ = toContinuation;
  Object.defineProperty(EmptyContinuation, 'Companion', {
    get: EmptyContinuation$Companion_getInstance
  });
  package$async.EmptyContinuation = EmptyContinuation;
  package$async.OldContinuationAdaptor = OldContinuationAdaptor;
  Signal.Node = Signal$Node;
  package$async.Signal = Signal;
  package$async.mapSignal_h51bwf$ = mapSignal_0;
  package$async.invoke_4l50cw$ = invoke_0;
  package$async.waitOne_ru8xum$ = waitOne_0;
  package$async.waitOne_b1yv1r$ = waitOne_1;
  package$async.waitOnePromise_b1yv1r$ = waitOnePromise;
  package$async.SuspendingSequenceBuilder = SuspendingSequenceBuilder;
  package$async.SuspendingSequence = SuspendingSequence;
  package$async.SuspendingSuspendSequence = SuspendingSuspendSequence;
  package$async.SuspendingIterator = SuspendingIterator;
  package$async.suspendingSequence_a02r2b$ = suspendingSequence;
  package$async.suspendingIterator_a02r2b$ = suspendingIterator;
  Object.defineProperty(SuspendingIteratorCoroutine$State, 'INITIAL', {
    get: SuspendingIteratorCoroutine$State$INITIAL_getInstance
  });
  Object.defineProperty(SuspendingIteratorCoroutine$State, 'COMPUTING_HAS_NEXT', {
    get: SuspendingIteratorCoroutine$State$COMPUTING_HAS_NEXT_getInstance
  });
  Object.defineProperty(SuspendingIteratorCoroutine$State, 'COMPUTING_NEXT', {
    get: SuspendingIteratorCoroutine$State$COMPUTING_NEXT_getInstance
  });
  Object.defineProperty(SuspendingIteratorCoroutine$State, 'COMPUTED', {
    get: SuspendingIteratorCoroutine$State$COMPUTED_getInstance
  });
  Object.defineProperty(SuspendingIteratorCoroutine$State, 'DONE', {
    get: SuspendingIteratorCoroutine$State$DONE_getInstance
  });
  SuspendingIteratorCoroutine.State = SuspendingIteratorCoroutine$State;
  package$async.SuspendingIteratorCoroutine = SuspendingIteratorCoroutine;
  package$async.toAsync_35ci02$ = toAsync;
  package$async.SuspendingSequence_yl67zr$ = SuspendingSequence_0;
  package$async.toAsync_7wnvza$ = toAsync_0;
  package$async.asyncGenerate_a02r2b$ = asyncGenerate;
  package$async.asyncGenerate_4utg50$ = asyncGenerate_0;
  package$async.chunks_cmp905$ = chunks;
  package$async.toList_otmutl$ = toList_3;
  $$importsForInline$$['korio-js'] = _;
  package$async.sum_bzcv3p$ = sum;
  package$async.isEmpty_otmutl$ = isEmpty;
  package$async.isNotEmpty_otmutl$ = isNotEmpty;
  package$async.firstOrNull_otmutl$ = firstOrNull_1;
  package$async.take_cmp905$ = take;
  package$async.AsyncSequenceEmitter = AsyncSequenceEmitter;
  package$async.SuspendingSequenceBuilder2 = SuspendingSequenceBuilder2;
  package$async.SuspendingSequence2 = SuspendingSequence2;
  package$async.asyncGenerate2_drgute$ = asyncGenerate2;
  package$async.asyncGenerate3_izcdss$ = asyncGenerate3;
  package$async.Consumer = Consumer;
  package$async.Producer = Producer;
  package$async.ProduceConsumer = ProduceConsumer;
  package$async.asyncProducer_k05bmq$ = asyncProducer;
  package$async.toAsyncOutputStream_1g035v$ = toAsyncOutputStream;
  package$async.toAsyncInputStream_vu4x5z$ = toAsyncInputStream;
  package$async.AsyncProducerStream = AsyncProducerStream;
  package$async.AsyncConsumerStream = AsyncConsumerStream;
  package$async.getCoroutineContext = getCoroutineContext;
  Object.defineProperty(package$async, 'ParallelContext', {
    get: ParallelContext_getInstance
  });
  package$async.parallel_c6mrjl$ = parallel;
  package$async.sequence_z6plms$ = sequence;
  package$async.runBlockingNoSuspensions_g8ox3d$ = runBlockingNoSuspensions;
  package$async.withOptTimeout_a8wvfh$ = withOptTimeout;
  var package$compression = package$korio.compression || (package$korio.compression = {});
  package$compression.CompressionContext = CompressionContext;
  package$compression.CompressionMethod = CompressionMethod;
  package$compression.compress_ne07lz$ = compress;
  package$compression.uncompress_srxvbw$ = uncompress;
  package$compression.uncompressTo_iv4qtz$ = uncompressTo;
  Object.defineProperty(package$compression, 'Uncompressed', {
    get: Uncompressed_getInstance
  });
  package$compression.uncompress_hxpw0q$ = uncompress_0;
  package$compression.compress_yhvi5r$ = compress_0;
  package$compression.syncUncompress_hxpw0q$ = syncUncompress;
  package$compression.syncCompress_yhvi5r$ = syncCompress;
  package$compression.syncUncompress_spqvkl$ = syncUncompress_0;
  $$importsForInline$$['kmem-js'] = $module$kmem_js;
  Object.defineProperty(Deflate, 'Companion', {
    get: Deflate$Companion_getInstance
  });
  var package$deflate = package$compression.deflate || (package$compression.deflate = {});
  package$deflate.Deflate = Deflate;
  package$deflate.SlidingWindowWithOutput = SlidingWindowWithOutput;
  Object.defineProperty(package$deflate, 'GZIP', {
    get: function () {
      return GZIP;
    }
  });
  Object.defineProperty(package$deflate, 'GZIPNoCrc', {
    get: function () {
      return GZIPNoCrc;
    }
  });
  package$deflate.GZIPBase = GZIPBase;
  Object.defineProperty(package$deflate, 'ZLib', {
    get: ZLib_getInstance
  });
  var package$lzma = package$compression.lzma || (package$compression.lzma = {});
  Object.defineProperty(package$lzma, 'Lzma', {
    get: Lzma_getInstance
  });
  Object.defineProperty(SevenZip$LzmaAlone$CommandLine, 'Companion', {
    get: SevenZip$LzmaAlone$CommandLine$Companion_getInstance
  });
  SevenZip$LzmaAlone.prototype.CommandLine = SevenZip$LzmaAlone$CommandLine;
  Object.defineProperty(SevenZip.prototype, 'LzmaAlone', {
    get: SevenZip$LzmaAlone_getInstance
  });
  SevenZip.prototype.ICodeProgress = SevenZip$ICodeProgress;
  Object.defineProperty(SevenZip$BitTreeEncoder, 'Companion', {
    get: SevenZip$BitTreeEncoder$Companion_getInstance
  });
  SevenZip.prototype.BitTreeEncoder = SevenZip$BitTreeEncoder;
  Object.defineProperty(SevenZip$BitTreeDecoder, 'Companion', {
    get: SevenZip$BitTreeDecoder$Companion_getInstance
  });
  SevenZip.prototype.BitTreeDecoder = SevenZip$BitTreeDecoder;
  Object.defineProperty(SevenZip$RangeDecoder, 'Companion', {
    get: SevenZip$RangeDecoder$Companion_getInstance
  });
  SevenZip.prototype.RangeDecoder = SevenZip$RangeDecoder;
  Object.defineProperty(SevenZip$RangeEncoder, 'Companion', {
    get: SevenZip$RangeEncoder$Companion_getInstance
  });
  SevenZip.prototype.RangeEncoder = SevenZip$RangeEncoder;
  Object.defineProperty(SevenZip.prototype, 'LzmaBase', {
    get: SevenZip$LzmaBase_getInstance
  });
  SevenZip$LzmaDecoder.LenDecoder = SevenZip$LzmaDecoder$LenDecoder;
  SevenZip$LzmaDecoder$LiteralDecoder.Decoder2 = SevenZip$LzmaDecoder$LiteralDecoder$Decoder2;
  SevenZip$LzmaDecoder.LiteralDecoder = SevenZip$LzmaDecoder$LiteralDecoder;
  SevenZip.prototype.LzmaDecoder = SevenZip$LzmaDecoder;
  SevenZip$LzmaEncoder$LiteralEncoder.Encoder2 = SevenZip$LzmaEncoder$LiteralEncoder$Encoder2;
  SevenZip$LzmaEncoder.LiteralEncoder = SevenZip$LzmaEncoder$LiteralEncoder;
  SevenZip$LzmaEncoder.LenEncoder = SevenZip$LzmaEncoder$LenEncoder;
  SevenZip$LzmaEncoder.LenPriceTableEncoder = SevenZip$LzmaEncoder$LenPriceTableEncoder;
  SevenZip$LzmaEncoder.Optimal = SevenZip$LzmaEncoder$Optimal;
  Object.defineProperty(SevenZip$LzmaEncoder, 'Companion', {
    get: SevenZip$LzmaEncoder$Companion_getInstance
  });
  SevenZip.prototype.LzmaEncoder = SevenZip$LzmaEncoder;
  Object.defineProperty(SevenZip$LzBinTree, 'Companion', {
    get: SevenZip$LzBinTree$Companion_getInstance
  });
  SevenZip.prototype.LzBinTree = SevenZip$LzBinTree;
  SevenZip.prototype.LzInWindow = SevenZip$LzInWindow;
  SevenZip.prototype.LzOutWindow = SevenZip$LzOutWindow;
  Object.defineProperty(package$lzma, 'SevenZip', {
    get: SevenZip_getInstance
  });
  var package$util = package$compression.util || (package$compression.util = {});
  package$util.BitReader = BitReader;
  Object.defineProperty(HuffmanTree$Node, 'Companion', {
    get: HuffmanTree$Node$Companion_getInstance
  });
  HuffmanTree.Node = HuffmanTree$Node;
  HuffmanTree.Result = HuffmanTree$Result;
  Object.defineProperty(HuffmanTree, 'Companion', {
    get: HuffmanTree$Companion_getInstance
  });
  package$util.HuffmanTree = HuffmanTree;
  package$util.SlidingWindow = SlidingWindow;
  package$util.CompressionAlgoAsyncStream = CompressionAlgoAsyncStream;
  package$util.UncompressAsyncStream_m65zfx$ = UncompressAsyncStream;
  package$util.CompressAsyncStream_ym1563$ = CompressAsyncStream;
  LimitedOutputStream.Task = LimitedOutputStream$Task;
  package$util.LimitedOutputStream = LimitedOutputStream;
  Object.defineProperty(AsyncHash, 'Companion', {
    get: AsyncHash$Companion_getInstance
  });
  AsyncHash.MessageDigestHash = AsyncHash$MessageDigestHash;
  AsyncHash.CRC32Hash = AsyncHash$CRC32Hash;
  var package$crypto = package$korio.crypto || (package$korio.crypto = {});
  package$crypto.AsyncHash = AsyncHash;
  package$crypto.hashSync_r89cpu$ = hashSync;
  package$crypto.hashSync_ahpzpy$ = hashSync_0;
  package$crypto.hashSync_dv4hyq$ = hashSync_1;
  package$crypto.hash_r89cpu$ = hash;
  package$crypto.hash_ahpzpy$ = hash_0;
  package$crypto.hash_dv4hyq$ = hash_1;
  Object.defineProperty(package$crypto, 'Base64', {
    get: Base64_getInstance
  });
  package$crypto.fromBase64_pdl1vz$ = fromBase64;
  package$crypto.toBase64_964n91$ = toBase64;
  Object.defineProperty(package$crypto, 'Hex', {
    get: Hex_getInstance
  });
  package$crypto.get_unhexIgnoreSpaces_d2950k$ = get_unhexIgnoreSpaces;
  package$crypto.get_unhexIgnoreSpaces_pdl1vz$ = get_unhexIgnoreSpaces_0;
  package$crypto.get_unhex_pdl1vz$ = get_unhex;
  package$crypto.get_hex_964n91$ = get_hex;
  package$crypto.get_hex_s8ev3n$ = get_hex_0;
  package$crypto.get_shex_s8ev3n$ = get_shex;
  Object.defineProperty(SimpleChecksum, 'Companion', {
    get: SimpleChecksum$Companion_getInstance
  });
  package$crypto.SimpleChecksum = SimpleChecksum;
  package$crypto.compute_i4mny7$ = compute;
  Object.defineProperty(package$crypto, 'Adler32', {
    get: Adler32_getInstance
  });
  Object.defineProperty(package$crypto, 'CRC32', {
    get: CRC32_getInstance
  });
  Object.defineProperty(SyncHash, 'Companion', {
    get: SyncHash$Companion_getInstance
  });
  SyncHash.MessageDigestHash = SyncHash$MessageDigestHash;
  package$crypto.SyncHash = SyncHash;
  package$crypto.md5_964n91$ = md5;
  package$crypto.sha1_964n91$ = sha1;
  package$crypto.update_dzyz91$ = update;
  package$crypto.digest_dzyz91$ = digest;
  package$crypto.update_flaygf$ = update_0;
  package$crypto.finalize_flaygf$ = finalize;
  var package$ds = package$korio.ds || (package$korio.ds = {});
  package$ds.BoolArrayLike = BoolArrayLike;
  package$ds.ByteArrayLike = ByteArrayLike;
  package$ds.ShortArrayLike = ShortArrayLike;
  package$ds.IntArrayLike = IntArrayLike;
  package$ds.FloatArrayLike = FloatArrayLike;
  package$ds.DoubleArrayLike = DoubleArrayLike;
  package$ds.asBool_n7sg4a$ = asBool;
  package$ds.asByte_n7sg4a$ = asByte;
  package$ds.asShort_n7sg4a$ = asShort;
  package$ds.asInt_n7sg4a$ = asInt;
  package$ds.asFloat_n7sg4a$ = asFloat;
  package$ds.asDouble_n7sg4a$ = asDouble;
  package$ds.NumberRawArray = NumberRawArray;
  package$ds.BoolRaw = BoolRaw;
  package$ds.get_raw_anuwch$ = get_raw;
  package$ds.get_raw_13y6u6$ = get_raw_0;
  package$ds.get_raw_1c7w7g$ = get_raw_1;
  package$ds.get_raw_1qrwyz$ = get_raw_2;
  package$ds.get_raw_2t43qp$ = get_raw_3;
  package$ds.get_raw_948t6k$ = get_raw_4;
  package$ds.get_raw_h4bb51$ = get_raw_5;
  package$ds.get_raw_l1lu5t$ = get_raw_6;
  package$ds.get_raw_964n91$ = get_raw_7;
  package$ds.get_raw_i2lc79$ = get_raw_8;
  package$ds.get_raw_355ntz$ = get_raw_9;
  package$ds.get_raw_tmsbgo$ = get_raw_10;
  package$ds.get_raw_rjqryz$ = get_raw_11;
  package$ds.get_raw_bvy38s$ = get_raw_12;
  package$ds.get_raw_se6h4x$ = get_raw_13;
  package$ds.get_raw_tlvhdp$ = get_raw_14;
  package$ds.get_raw_i5tfnx$ = get_raw_15;
  package$ds.get_raw_2wzazw$ = get_raw_16;
  package$ds.NumberRawArray_s8jyv4$ = NumberRawArray_0;
  package$ds.SubListGeneric = SubListGeneric;
  package$ds.GenericListIterator = GenericListIterator;
  var package$error = package$korio.error || (package$korio.error = {});
  package$error.InvalidOperationException = InvalidOperationException;
  package$error.OutOfBoundsException = OutOfBoundsException;
  package$error.KeyNotFoundException = KeyNotFoundException;
  package$error.NotImplementedException = NotImplementedException;
  package$error.InvalidArgumentException = InvalidArgumentException;
  package$error.MustValidateCodeException = MustValidateCodeException;
  package$error.MustOverrideException = MustOverrideException;
  package$error.DeprecatedException = DeprecatedException;
  package$error.UnexpectedException = UnexpectedException;
  Object.defineProperty(package$error, 'deprecated', {
    get: get_deprecated
  });
  Object.defineProperty(package$error, 'mustValidate', {
    get: get_mustValidate
  });
  Object.defineProperty(package$error, 'noImpl', {
    get: get_noImpl
  });
  Object.defineProperty(package$error, 'invalidOp', {
    get: get_invalidOp
  });
  Object.defineProperty(package$error, 'invalidArg', {
    get: get_invalidArg
  });
  package$error.deprecated_61zpoe$ = deprecated;
  package$error.mustValidate_61zpoe$ = mustValidate;
  package$error.noImpl_61zpoe$ = noImpl;
  package$error.invalidOp_61zpoe$ = invalidOp;
  package$error.invalidArg_61zpoe$ = invalidArg;
  package$error.unsupported_61zpoe$ = unsupported;
  package$error.unsupported = unsupported_0;
  package$error.invalidArgument_61zpoe$ = invalidArgument;
  package$error.unexpected_61zpoe$ = unexpected;
  package$error.untestedWarn_61zpoe$ = untestedWarn;
  package$error.noImplWarn_61zpoe$ = noImplWarn;
  var package$lang = package$korio.lang || (package$korio.lang = {});
  package$lang.printStackTrace_dbl4o4$ = printStackTrace;
  package$error.ignoreErrors_nkfre5$ = ignoreErrors;
  var package$file = package$korio.file || (package$korio.file = {});
  package$file.PathInfo = PathInfo;
  package$file.get_pathInfo_pdl1vz$ = get_pathInfo;
  Object.defineProperty(package$file, 'PathInfoExt', {
    get: PathInfoExt_getInstance
  });
  package$file.PathInfo_vvjixc$ = PathInfo_0;
  package$file.Path = Path;
  package$file.get_fullpathNormalized_hsf53c$ = get_fullpathNormalized;
  package$file.get_folder_hsf53c$ = get_folder;
  package$file.get_folderWithSlash_hsf53c$ = get_folderWithSlash;
  package$file.get_basename_hsf53c$ = get_basename;
  package$file.get_pathWithoutExtension_hsf53c$ = get_pathWithoutExtension;
  package$file.fullPathWithExtension_cn9rna$ = fullPathWithExtension;
  package$file.get_fullnameWithoutExtension_hsf53c$ = get_fullnameWithoutExtension;
  package$file.get_basenameWithoutExtension_hsf53c$ = get_basenameWithoutExtension;
  package$file.get_fullnameWithoutCompoundExtension_hsf53c$ = get_fullnameWithoutCompoundExtension;
  package$file.get_basenameWithoutCompoundExtension_hsf53c$ = get_basenameWithoutCompoundExtension;
  package$file.basenameWithExtension_cn9rna$ = basenameWithExtension;
  package$file.basenameWithCompoundExtension_cn9rna$ = basenameWithCompoundExtension;
  package$file.get_extension_hsf53c$ = get_extension;
  package$file.get_extensionLC_hsf53c$ = get_extensionLC;
  package$file.get_compoundExtension_hsf53c$ = get_compoundExtension;
  package$file.get_compoundExtensionLC_hsf53c$ = get_compoundExtensionLC;
  package$file.get_mimeTypeByExtension_hsf53c$ = get_mimeTypeByExtension;
  package$file.getPathComponents_hsf53c$ = getPathComponents;
  package$file.getPathFullComponents_hsf53c$ = getPathFullComponents;
  package$file.get_fullname_hsf53c$ = get_fullname;
  package$file.VfsNamed = VfsNamed;
  Vfs.Attribute = Vfs$Attribute;
  Vfs.Proxy = Vfs$Proxy;
  Vfs.Decorator = Vfs$Decorator;
  Object.defineProperty(Vfs$FileEvent$Kind, 'DELETED', {
    get: Vfs$FileEvent$Kind$DELETED_getInstance
  });
  Object.defineProperty(Vfs$FileEvent$Kind, 'MODIFIED', {
    get: Vfs$FileEvent$Kind$MODIFIED_getInstance
  });
  Object.defineProperty(Vfs$FileEvent$Kind, 'CREATED', {
    get: Vfs$FileEvent$Kind$CREATED_getInstance
  });
  Object.defineProperty(Vfs$FileEvent$Kind, 'RENAMED', {
    get: Vfs$FileEvent$Kind$RENAMED_getInstance
  });
  Vfs$FileEvent.Kind = Vfs$FileEvent$Kind;
  Vfs.FileEvent = Vfs$FileEvent;
  package$file.Vfs = Vfs;
  Object.defineProperty(VfsOpenMode, 'READ', {
    get: VfsOpenMode$READ_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'WRITE', {
    get: VfsOpenMode$WRITE_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'APPEND', {
    get: VfsOpenMode$APPEND_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'CREATE_OR_TRUNCATE', {
    get: VfsOpenMode$CREATE_OR_TRUNCATE_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'CREATE', {
    get: VfsOpenMode$CREATE_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'CREATE_NEW', {
    get: VfsOpenMode$CREATE_NEW_getInstance
  });
  Object.defineProperty(VfsOpenMode, 'Companion', {
    get: VfsOpenMode$Companion_getInstance
  });
  package$file.VfsOpenMode = VfsOpenMode;
  package$file.VfsProcessHandler = VfsProcessHandler;
  package$file.VfsProcessException = VfsProcessException;
  package$file.VfsStat = VfsStat;
  package$file.get_createDate_ybf8sm$ = get_createDate;
  package$file.get_modifiedDate_ybf8sm$ = get_modifiedDate;
  package$file.get_lastAccessDate_ybf8sm$ = get_lastAccessDate;
  package$file.writeToFile_m1iwyb$ = writeToFile;
  package$file.writeToFile_hb5vwy$ = writeToFile_0;
  var package$util_0 = package$korio.util || (package$korio.util = {});
  package$util_0.use_fs35jz$ = use_0;
  package$file.VfsFile = VfsFile;
  package$file.toUnscaped_yirdke$ = toUnscaped;
  package$file.toFile_t7pgv8$ = toFile;
  package$file.FinalVfsFile = FinalVfsFile;
  Object.defineProperty(package$file, 'VfsUtil', {
    get: VfsUtil_getInstance
  });
  var package$std = package$file.std || (package$file.std = {});
  package$std.IsoVfs_3ekr7n$ = IsoVfs;
  package$std.IsoVfs_axnxby$ = IsoVfs_0;
  package$std.openAsIso_g5ykjz$ = openAsIso;
  package$std.openAsIso_yirdke$ = openAsIso_0;
  package$std.IsoVfs = IsoVfs_1;
  ISO.prototype.IsoReader = ISO$IsoReader;
  ISO.prototype.IsoFile = ISO$IsoFile;
  Object.defineProperty(ISO$UdfDescriptorTag$TagId, 'Companion', {
    get: ISO$UdfDescriptorTag$TagId$Companion_getInstance
  });
  ISO$UdfDescriptorTag.TagId = ISO$UdfDescriptorTag$TagId;
  ISO.prototype.UdfDescriptorTag_init_39qel5$ = ISO$ISO$UdfDescriptorTag_init;
  ISO.prototype.UdfDescriptorTag = ISO$UdfDescriptorTag;
  ISO.prototype.UdfExtent_init_39qel5$ = ISO$ISO$UdfExtent_init;
  ISO.prototype.UdfExtent = ISO$UdfExtent;
  ISO.prototype.UdfAnchorVolumeDescriptorPointer_init_39qel5$ = ISO$ISO$UdfAnchorVolumeDescriptorPointer_init;
  ISO.prototype.UdfAnchorVolumeDescriptorPointer = ISO$UdfAnchorVolumeDescriptorPointer;
  ISO.prototype.UdfCharspec_init_39qel5$ = ISO$ISO$UdfCharspec_init;
  ISO.prototype.UdfCharspec = ISO$UdfCharspec;
  ISO.prototype.UdfEntityId_init_39qel5$ = ISO$ISO$UdfEntityId_init;
  ISO.prototype.UdfEntityId = ISO$UdfEntityId;
  ISO.prototype.UdfTimestamp_init_39qel5$ = ISO$ISO$UdfTimestamp_init;
  ISO.prototype.UdfTimestamp = ISO$UdfTimestamp;
  ISO.prototype.UdfPrimaryVolumeDescriptor_init_39qel5$ = ISO$ISO$UdfPrimaryVolumeDescriptor_init;
  ISO.prototype.UdfPrimaryVolumeDescriptor = ISO$UdfPrimaryVolumeDescriptor;
  ISO.prototype.PrimaryVolumeDescriptor_init_39qel5$ = ISO$ISO$PrimaryVolumeDescriptor_init;
  ISO.prototype.PrimaryVolumeDescriptor = ISO$PrimaryVolumeDescriptor;
  Object.defineProperty(ISO$VolumeDescriptorHeader$TypeEnum, 'Companion', {
    get: ISO$VolumeDescriptorHeader$TypeEnum$Companion_getInstance
  });
  ISO$VolumeDescriptorHeader.TypeEnum = ISO$VolumeDescriptorHeader$TypeEnum;
  ISO.prototype.VolumeDescriptorHeader_init_39qel5$ = ISO$ISO$VolumeDescriptorHeader_init;
  ISO.prototype.VolumeDescriptorHeader = ISO$VolumeDescriptorHeader;
  ISO.prototype.IsoDate_init_39qel5$ = ISO$ISO$IsoDate_init;
  ISO.prototype.IsoDate = ISO$IsoDate;
  ISO.prototype.DateStruct_init_39qel5$ = ISO$ISO$DateStruct_init;
  ISO.prototype.DateStruct = ISO$DateStruct;
  Object.defineProperty(ISO$DirectoryRecord, 'Companion', {
    get: ISO$DirectoryRecord$Companion_getInstance
  });
  ISO.prototype.DirectoryRecord = ISO$DirectoryRecord;
  Object.defineProperty(package$std, 'ISO', {
    get: ISO_getInstance
  });
  package$std.readUdfDString_hsu5ns$ = readUdfDString;
  package$std.readUtf16_le_hsu5ns$ = readUtf16_le;
  package$std.JailVfs_3ekr7n$ = JailVfs;
  Object.defineProperty(LocalVfs, 'Companion', {
    get: LocalVfs$Companion_getInstance
  });
  package$std.LocalVfs = LocalVfs;
  Object.defineProperty(package$std, 'resourcesVfs', {
    get: get_resourcesVfs
  });
  Object.defineProperty(package$std, 'rootLocalVfs', {
    get: get_rootLocalVfs
  });
  Object.defineProperty(package$std, 'applicationVfs', {
    get: get_applicationVfs
  });
  Object.defineProperty(package$std, 'cacheVfs', {
    get: get_cacheVfs
  });
  Object.defineProperty(package$std, 'externalStorageVfs', {
    get: get_externalStorageVfs
  });
  Object.defineProperty(package$std, 'userHomeVfs', {
    get: get_userHomeVfs
  });
  Object.defineProperty(package$std, 'localCurrentDirVfs', {
    get: get_localCurrentDirVfs
  });
  Object.defineProperty(package$std, 'tempVfs', {
    get: get_tempVfs
  });
  package$std.RootLocalVfs = RootLocalVfs;
  package$std.ApplicationVfs = ApplicationVfs;
  package$std.CacheVfs = CacheVfs;
  package$std.ExternalStorageVfs = ExternalStorageVfs;
  package$std.UserHomeVfs = UserHomeVfs;
  package$std.LocalCurrentDirVfs = LocalCurrentDirVfs;
  package$std.TempVfs = TempVfs;
  package$std.LocalVfs_61zpoe$ = LocalVfs_0;
  package$std.JailedLocalVfs_61zpoe$ = JailedLocalVfs;
  package$std.LogVfs = LogVfs;
  package$std.log_yirdke$ = log;
  package$std.SimpleStorage = SimpleStorage;
  package$std.MapLikeStorageVfs = MapLikeStorageVfs;
  package$std.MemoryVfs_r2g07k$ = MemoryVfs;
  package$std.MemoryVfsMix_t3okmp$ = MemoryVfsMix;
  package$std.MemoryVfsMix_pp8hmc$ = MemoryVfsMix_0;
  package$std.MergedVfs = MergedVfs;
  package$std.MountableVfs_r2gkaf$ = MountableVfs;
  package$std.Mountable = Mountable;
  NodeVfs.Node = NodeVfs$Node;
  package$std.NodeVfs = NodeVfs;
  Object.defineProperty(package$std, 'ResourcesVfs', {
    get: get_ResourcesVfs
  });
  Object.defineProperty(package$std, 'ApplicationDataVfs', {
    get: get_ApplicationDataVfs
  });
  Object.defineProperty(package$std, 'UniversalVfs', {
    get: UniversalVfs_getInstance
  });
  package$std.UniSchema = UniSchema;
  package$std.UniSchemaProviders_init_kenoap$ = UniSchemaProviders_init;
  package$std.UniSchemaProviders_init_64wpi9$ = UniSchemaProviders_init_0;
  package$std.UniSchemaProviders = UniSchemaProviders;
  Object.defineProperty(package$std, 'defaultUniSchema', {
    get: function () {
      return defaultUniSchema;
    }
  });
  package$std.plus_hhtshb$ = plus_3;
  package$std.plus_lkui5v$ = plus_4;
  package$std.get_uniVfs_pdl1vz$ = get_uniVfs;
  package$std.uniVfs_rgq6yn$ = uniVfs;
  package$std.UrlVfs_at2g62$ = UrlVfs;
  package$std.UrlVfs_arpgxl$ = UrlVfs_0;
  UrlVfs_1.HttpHeaders = UrlVfs$HttpHeaders;
  package$std.UrlVfs = UrlVfs_1;
  package$std.ZipVfs_wgdbw0$ = ZipVfs;
  package$std.ZipVfs_ws7jjr$ = ZipVfs_0;
  package$std.openAsZip_yirdke$ = openAsZip;
  package$std.openAsZip_thwgyb$ = openAsZip_0;
  package$std.openAsZip_g5ykjz$ = openAsZip_1;
  package$std.openAsZip_ysx5pw$ = openAsZip_2;
  package$std.createZipFromTree_yirdke$ = createZipFromTree;
  package$std.createZipFromTreeTo_vg4evo$ = createZipFromTreeTo;
  Object.defineProperty(Language_0, 'JAPANESE', {
    get: Language$JAPANESE_getInstance
  });
  Object.defineProperty(Language_0, 'ENGLISH', {
    get: Language$ENGLISH_getInstance
  });
  Object.defineProperty(Language_0, 'FRENCH', {
    get: Language$FRENCH_getInstance
  });
  Object.defineProperty(Language_0, 'SPANISH', {
    get: Language$SPANISH_getInstance
  });
  Object.defineProperty(Language_0, 'GERMAN', {
    get: Language$GERMAN_getInstance
  });
  Object.defineProperty(Language_0, 'ITALIAN', {
    get: Language$ITALIAN_getInstance
  });
  Object.defineProperty(Language_0, 'DUTCH', {
    get: Language$DUTCH_getInstance
  });
  Object.defineProperty(Language_0, 'PORTUGUESE', {
    get: Language$PORTUGUESE_getInstance
  });
  Object.defineProperty(Language_0, 'RUSSIAN', {
    get: Language$RUSSIAN_getInstance
  });
  Object.defineProperty(Language_0, 'KOREAN', {
    get: Language$KOREAN_getInstance
  });
  Object.defineProperty(Language_0, 'CHINESE', {
    get: Language$CHINESE_getInstance
  });
  Object.defineProperty(Language_0, 'Companion', {
    get: Language$Companion_getInstance
  });
  var package$i18n = package$korio.i18n || (package$korio.i18n = {});
  package$i18n.Language = Language_0;
  package$lang.Bytes = Bytes;
  package$lang.toBytes_964n91$ = toBytes;
  Object.defineProperty(Charset, 'Companion', {
    get: Charset$Companion_getInstance
  });
  package$lang.Charset = Charset;
  package$lang.UTC8CharsetBase = UTC8CharsetBase;
  package$lang.SingleByteCharset = SingleByteCharset;
  Object.defineProperty(package$lang, 'ISO_8859_1', {
    get: ISO_8859_1_getInstance
  });
  Object.defineProperty(package$lang, 'UTF8', {
    get: UTF8_getInstance
  });
  package$lang.UTF16Charset = UTF16Charset;
  Object.defineProperty(package$lang, 'ASCII', {
    get: ASCII_getInstance
  });
  Object.defineProperty(package$lang, 'LATIN1', {
    get: function () {
      return LATIN1;
    }
  });
  Object.defineProperty(package$lang, 'UTF16_LE', {
    get: function () {
      return UTF16_LE;
    }
  });
  Object.defineProperty(package$lang, 'UTF16_BE', {
    get: function () {
      return UTF16_BE;
    }
  });
  package$lang.toByteArray_7jlb4b$ = toByteArray;
  package$lang.toString_5kit73$ = toString_0;
  package$lang.toUtf8String_964n91$ = toUtf8String;
  package$lang.readStringz_h34x81$ = readStringz;
  package$lang.readStringz_josu3n$ = readStringz_0;
  package$lang.readString_h34x81$ = readString;
  package$lang.get_portableSimpleName_1yb8b7$ = get_portableSimpleName;
  package$lang.Disposable = Disposable;
  package$lang.Closeable = Closeable;
  Object.defineProperty(package$lang, 'DummyCloseable', {
    get: DummyCloseable_getInstance
  });
  package$lang.OptionalCloseable = OptionalCloseable;
  package$lang.use_jgrjek$ = use;
  Cancellable.Listener = Cancellable$Listener;
  Object.defineProperty(Cancellable, 'Companion', {
    get: Cancellable$Companion_getInstance
  });
  package$lang.Cancellable = Cancellable;
  package$lang.cancel_8d280p$ = cancel;
  package$lang.cancellable_sb3lga$ = cancellable;
  package$lang.close_n2ytw$ = close;
  package$lang.closeable_n2ytw$ = closeable;
  package$lang.cancellable_6257sj$ = cancellable_0;
  package$lang.closeable_a5y8la$ = closeable_0;
  package$lang.Closeable_o14v8n$ = Closeable_0;
  Object.defineProperty(package$lang, 'Debugger', {
    get: Debugger_getInstance
  });
  Object.defineProperty(package$lang, 'Dynamic', {
    get: Dynamic_getInstance
  });
  package$lang.DynamicContext = DynamicContext;
  Object.defineProperty(package$lang, 'DynamicContextInstance', {
    get: DynamicContextInstance_getInstance
  });
  Object.defineProperty(package$lang, 'DynamicAccess', {
    get: DynamicAccess_getInstance
  });
  Object.defineProperty(package$lang, 'Environment', {
    get: Environment_getInstance
  });
  package$lang.format_e33kwl$ = format;
  package$lang.splitKeep_hjrgf2$ = splitKeep;
  package$lang.replaceNonPrintableCharacters_rjktp$ = replaceNonPrintableCharacters;
  package$lang.toBytez_s1p75v$ = toBytez;
  package$lang.toBytez_7jlb4b$ = toBytez_0;
  package$lang.indexOfOrNull_46w6ck$ = indexOfOrNull;
  package$lang.lastIndexOfOrNull_46w6ck$ = lastIndexOfOrNull;
  package$lang.splitInChunks_6ic1pp$ = splitInChunks;
  package$lang.substr_6ic1pp$ = substr;
  package$lang.substr_qgyqat$ = substr_0;
  package$lang.transform_37eajw$ = transform;
  package$lang.parseInt_pdl1vz$ = parseInt;
  package$lang.get_quoted_pdl1vz$ = get_quoted;
  package$lang.String_fromIntArray_nd5v6f$ = String_fromIntArray;
  package$lang.String_fromCharArray_8chfmy$ = String_fromCharArray;
  package$lang.threadLocal = threadLocal;
  Object.defineProperty(package$lang, 'Undefined', {
    get: Undefined_getInstance
  });
  package$lang.assert_6taknv$ = assert;
  package$lang.lazyVar = lazyVar;
  var package$net = package$korio.net || (package$korio.net = {});
  Object.defineProperty(package$net, 'asyncSocketFactory', {
    get: get_asyncSocketFactory
  });
  package$net.AsyncSocketFactory = AsyncSocketFactory;
  Object.defineProperty(AsyncClient, 'Stats', {
    get: AsyncClient$Stats_getInstance
  });
  Object.defineProperty(AsyncClient, 'Companion', {
    get: AsyncClient$Companion_getInstance
  });
  package$net.AsyncClient = AsyncClient;
  Object.defineProperty(AsyncServer, 'Companion', {
    get: AsyncServer$Companion_getInstance
  });
  package$net.AsyncServer = AsyncServer;
  Object.defineProperty(HostWithPort, 'Companion', {
    get: HostWithPort$Companion_getInstance
  });
  package$net.HostWithPort = HostWithPort;
  Object.defineProperty(MimeType, 'Companion', {
    get: MimeType$Companion_getInstance
  });
  package$net.MimeType = MimeType;
  package$net.mimeType_yirdke$ = mimeType;
  Object.defineProperty(package$net, 'QueryString', {
    get: QueryString_getInstance
  });
  Object.defineProperty(URI, 'Companion', {
    get: URI$Companion_getInstance
  });
  package$net.URI = URI;
  Object.defineProperty(package$net, 'URLDecoder', {
    get: URLDecoder_getInstance
  });
  Object.defineProperty(package$net, 'URLEncoder', {
    get: URLEncoder_getInstance
  });
  Object.defineProperty(Http$Methods, 'ALL', {
    get: Http$Methods$ALL_getInstance
  });
  Object.defineProperty(Http$Methods, 'OPTIONS', {
    get: Http$Methods$OPTIONS_getInstance
  });
  Object.defineProperty(Http$Methods, 'GET', {
    get: Http$Methods$GET_getInstance
  });
  Object.defineProperty(Http$Methods, 'HEAD', {
    get: Http$Methods$HEAD_getInstance
  });
  Object.defineProperty(Http$Methods, 'POST', {
    get: Http$Methods$POST_getInstance
  });
  Object.defineProperty(Http$Methods, 'PUT', {
    get: Http$Methods$PUT_getInstance
  });
  Object.defineProperty(Http$Methods, 'DELETE', {
    get: Http$Methods$DELETE_getInstance
  });
  Object.defineProperty(Http$Methods, 'TRACE', {
    get: Http$Methods$TRACE_getInstance
  });
  Object.defineProperty(Http$Methods, 'CONNECT', {
    get: Http$Methods$CONNECT_getInstance
  });
  Object.defineProperty(Http$Methods, 'PATCH', {
    get: Http$Methods$PATCH_getInstance
  });
  Http.Methods = Http$Methods;
  Object.defineProperty(Http$Method, 'Companion', {
    get: Http$Method$Companion_getInstance
  });
  Http.Method = Http$Method;
  Http.CustomMethod = Http$CustomMethod;
  Object.defineProperty(Http$HttpException, 'Companion', {
    get: Http$HttpException$Companion_getInstance
  });
  Http.HttpException = Http$HttpException;
  Object.defineProperty(Http$Auth, 'Companion', {
    get: Http$Auth$Companion_getInstance
  });
  Http.Auth = Http$Auth;
  Http.Request = Http$Request;
  Http.Response = Http$Response;
  Object.defineProperty(Http$Headers, 'Companion', {
    get: Http$Headers$Companion_getInstance
  });
  Http.Headers_init_9ih0sy$ = Http$Http$Headers_init;
  Http.Headers_init_y0zsll$ = Http$Http$Headers_init_0;
  Http.Headers_init_pdl1vj$ = Http$Http$Headers_init_1;
  Http.Headers = Http$Headers;
  Http.RedirectException = Http$RedirectException;
  Object.defineProperty(Http, 'Companion', {
    get: Http$Companion_getInstance
  });
  var package$http = package$net.http || (package$net.http = {});
  package$http.Http = Http;
  HttpClient.Response = HttpClient$Response;
  HttpClient.CompletedResponse = HttpClient$CompletedResponse;
  HttpClient.RequestConfig = HttpClient$RequestConfig;
  Object.defineProperty(HttpClient, 'Companion', {
    get: HttpClient$Companion_getInstance
  });
  package$http.HttpClient = HttpClient;
  package$http.DelayedHttpClient = DelayedHttpClient;
  package$http.delayed_j2ect5$ = delayed;
  FakeHttpClient.ResponseBuilder = FakeHttpClient$ResponseBuilder;
  FakeHttpClient.Rule = FakeHttpClient$Rule;
  package$http.FakeHttpClient = FakeHttpClient;
  package$http.LogHttpClient = LogHttpClient;
  Object.defineProperty(package$http, 'HttpStatusMessage', {
    get: HttpStatusMessage_getInstance
  });
  Object.defineProperty(package$http, 'HttpStats', {
    get: HttpStats_getInstance
  });
  package$http.HttpFactory = HttpFactory;
  package$http.ProxiedHttpFactory = ProxiedHttpFactory;
  Object.defineProperty(package$http, '_defaultHttpFactory', {
    get: get__defaultHttpFactory
  });
  Object.defineProperty(package$http, 'defaultHttpFactory', {
    get: get_defaultHttpFactory
  });
  package$http.setDefaultHttpFactory_7abgn7$ = setDefaultHttpFactory;
  package$http.createClientEndpoint_o4v2s4$ = createClientEndpoint;
  package$http.createHttpClient = createHttpClient;
  package$http.createHttpServer = createHttpServer;
  package$http.createHttpClientEndpoint_61zpoe$ = createHttpClientEndpoint;
  package$http.httpError_19mbxw$ = httpError;
  package$http.HttpClientEndpoint = HttpClientEndpoint;
  Object.defineProperty(Request, 'Companion', {
    get: Request$Companion_getInstance
  });
  package$http.Request = Request;
  package$http.FakeHttpClientEndpoint = FakeHttpClientEndpoint;
  package$http.endpoint_fa4p7d$ = endpoint;
  Object.defineProperty(package$http, 'HttpDate', {
    get: function () {
      return HttpDate;
    }
  });
  Object.defineProperty(HttpServer, 'Companion', {
    get: HttpServer$Companion_getInstance
  });
  HttpServer.BaseRequest = HttpServer$BaseRequest;
  HttpServer.WsRequest = HttpServer$WsRequest;
  HttpServer.RequestConfig = HttpServer$RequestConfig;
  HttpServer.Request = HttpServer$Request;
  package$http.HttpServer = HttpServer;
  package$http.FakeRequest = FakeRequest;
  var package$rest = package$http.rest || (package$http.rest = {});
  package$rest.HttpRestClient = HttpRestClient;
  package$rest.rest_jh038e$ = rest;
  package$rest.rest_fa4p7d$ = rest_0;
  package$rest.createRestClient_69ojwy$ = createRestClient;
  var package$ws = package$net.ws || (package$net.ws = {});
  package$ws.WebSocketClient = WebSocketClient;
  package$ws.WebSocketClient_5y1boz$ = WebSocketClient_0;
  Object.defineProperty(package$ws, 'websockets', {
    get: get_websockets
  });
  package$ws.WebSocketClientFactory = WebSocketClientFactory;
  package$ws.WebSocketException = WebSocketException;
  var package$serialization = package$korio.serialization || (package$korio.serialization = {});
  package$serialization.AsyncFun = AsyncFun;
  Object.defineProperty(ClassReflect, 'Gen', {
    get: ClassReflect$Gen_getInstance
  });
  package$serialization.ClassReflect = ClassReflect;
  package$serialization.register_bc6472$ = register;
  package$serialization.asyncCaptureStdout_g2bo5h$ = asyncCaptureStdout;
  $$importsForInline$$['kds-js'] = $module$kds_js;
  ObjectMapper.TypeContext = ObjectMapper$TypeContext;
  ObjectMapper.UntypeContext = ObjectMapper$UntypeContext;
  package$serialization.ObjectMapper = ObjectMapper;
  Object.defineProperty(package$serialization, 'Mapper', {
    get: function () {
      return Mapper;
    }
  });
  var package$json = package$serialization.json || (package$serialization.json = {});
  Object.defineProperty(package$json, 'Json', {
    get: Json_getInstance
  });
  package$json.CustomJsonSerializer = CustomJsonSerializer;
  package$json.toJson_oge3zv$ = toJson;
  package$json.toJsonUntyped_3huzfx$ = toJsonUntyped;
  Object.defineProperty(Xml, 'Companion', {
    get: Xml$Companion_getInstance
  });
  Object.defineProperty(Xml$Type, 'NODE', {
    get: Xml$Type$NODE_getInstance
  });
  Object.defineProperty(Xml$Type, 'TEXT', {
    get: Xml$Type$TEXT_getInstance
  });
  Object.defineProperty(Xml$Type, 'COMMENT', {
    get: Xml$Type$COMMENT_getInstance
  });
  Xml.Type = Xml$Type;
  var package$xml = package$serialization.xml || (package$serialization.xml = {});
  package$xml.Xml = Xml;
  package$xml.get_isText_byavcz$ = get_isText;
  package$xml.get_isComment_byavcz$ = get_isComment;
  package$xml.get_isNode_byavcz$ = get_isNode;
  package$xml.str_dzd596$ = str;
  package$xml.children_h00kq4$ = children;
  package$xml.get_allChildren_ibjdnu$ = get_allChildren;
  package$xml.get_h00kq4$ = get_1;
  package$xml.toXml_pdl1vz$ = toXml;
  package$xml.Xml_61zpoe$ = Xml_0;
  package$xml.readXml_yirdke$ = readXml;
  Object.defineProperty(package$xml, 'XmlEntities', {
    get: XmlEntities_getInstance
  });
  XmlStream.prototype.Xml2Iterator = XmlStream$Xml2Iterator;
  XmlStream.prototype.Xml2Iterable = XmlStream$Xml2Iterable;
  XmlStream$Element.ProcessingInstructionTag = XmlStream$Element$ProcessingInstructionTag;
  XmlStream$Element.OpenCloseTag = XmlStream$Element$OpenCloseTag;
  XmlStream$Element.OpenTag = XmlStream$Element$OpenTag;
  XmlStream$Element.CommentTag = XmlStream$Element$CommentTag;
  XmlStream$Element.CloseTag = XmlStream$Element$CloseTag;
  XmlStream$Element.Text = XmlStream$Element$Text;
  XmlStream.prototype.Element = XmlStream$Element;
  Object.defineProperty(package$xml, 'XmlStream', {
    get: XmlStream_getInstance
  });
  Yaml$Token.LINE = Yaml$Token$LINE;
  Yaml$Token.ID = Yaml$Token$ID;
  Yaml$Token.STR = Yaml$Token$STR;
  Yaml$Token.SYMBOL = Yaml$Token$SYMBOL;
  Yaml.prototype.Token = Yaml$Token;
  var package$yaml = package$serialization.yaml || (package$serialization.yaml = {});
  Object.defineProperty(package$yaml, 'Yaml', {
    get: Yaml_getInstance
  });
  var package$stream = package$korio.stream || (package$korio.stream = {});
  package$stream.AsyncBufferedInputStream = AsyncBufferedInputStream;
  package$stream.readBufferedLine_dejqr0$ = readBufferedLine;
  package$stream.toBuffered_a0g59h$ = toBuffered;
  Object.defineProperty(AsyncProduceConsumerByteBuffer, 'Companion', {
    get: AsyncProduceConsumerByteBuffer$Companion_getInstance
  });
  package$stream.AsyncProduceConsumerByteBuffer = AsyncProduceConsumerByteBuffer;
  package$stream.AsyncBaseStream = AsyncBaseStream;
  package$stream.AsyncInputOpenable = AsyncInputOpenable;
  package$stream.AsyncInputStream = AsyncInputStream;
  package$stream.AsyncOutputStream = AsyncOutputStream;
  package$stream.AsyncGetPositionStream = AsyncGetPositionStream;
  package$stream.AsyncPositionStream = AsyncPositionStream;
  package$stream.AsyncGetLengthStream = AsyncGetLengthStream;
  package$stream.AsyncLengthStream = AsyncLengthStream;
  package$stream.AsyncPositionLengthStream = AsyncPositionLengthStream;
  package$stream.AsyncInputWithLengthStream = AsyncInputWithLengthStream;
  package$stream.getAvailable_u1dzr$ = getAvailable;
  package$stream.hasAvailable_u1dzr$ = hasAvailable;
  package$stream.AsyncRAInputStream = AsyncRAInputStream;
  package$stream.AsyncRAOutputStream = AsyncRAOutputStream;
  package$stream.toAsyncStream_iwjsyo$ = toAsyncStream;
  package$stream.AsyncStreamBase = AsyncStreamBase;
  package$stream.readBytes_w2vns5$ = readBytes;
  package$stream.toAsyncStream_ejtyh5$ = toAsyncStream_0;
  package$stream.AsyncStream = AsyncStream;
  package$stream.getAvailable_2q4ayq$ = getAvailable_0;
  package$stream.eof_2q4ayq$ = eof;
  package$stream.SliceAsyncStreamBase = SliceAsyncStreamBase;
  package$stream.buffered_5vys4l$ = buffered;
  package$stream.BufferedStreamBase = BufferedStreamBase;
  package$stream.sliceWithSize_i9mzv9$ = sliceWithSize;
  package$stream.sliceWithSize_5vys4l$ = sliceWithSize_0;
  package$stream.slice_e518qy$ = slice_0;
  package$stream.slice_f000it$ = slice_1;
  package$stream.sliceWithBounds_i9mzv9$ = sliceWithBounds;
  package$stream.slice_g5ykjz$ = slice_2;
  package$stream.sliceWithStart_dqczag$ = sliceWithStart;
  package$stream.sliceStart_g5ykjz$ = sliceStart;
  package$stream.sliceHere_g5ykjz$ = sliceHere;
  package$stream.readSlice_dqczag$ = readSlice;
  package$stream.readStream_50x9bh$ = readStream;
  package$stream.readStream_dqczag$ = readStream_0;
  package$stream.readStringz_j4n3eh$ = readStringz_1;
  package$stream.readStringz_4xit9n$ = readStringz_2;
  package$stream.readString_4xit9n$ = readString_0;
  package$stream.writeStringz_wczyte$ = writeStringz;
  package$stream.writeStringz_ne9hyo$ = writeStringz_0;
  package$stream.writeString_wczyte$ = writeString;
  package$stream.readExact_8rokfb$ = readExact;
  package$stream.read_30vnfr$ = read;
  package$stream.read_lok0mr$ = read_0;
  package$stream.readBytes_a0g59h$ = readBytes_0;
  Object.defineProperty(package$stream, 'EMPTY_BYTE_ARRAY', {
    get: function () {
      return EMPTY_BYTE_ARRAY;
    }
  });
  package$stream.readBytesUpToFirst_a0g59h$ = readBytesUpToFirst;
  package$stream.readBytesUpTo_a0g59h$ = readBytesUpTo;
  package$stream.readBytesExact_a0g59h$ = readBytesExact;
  package$stream.readU8_yjldv$ = readU8_0;
  package$stream.readS8_yjldv$ = readS8_0;
  package$stream.readU16_le_yjldv$ = readU16_le_0;
  package$stream.readU24_le_yjldv$ = readU24_le_0;
  package$stream.readU32_le_yjldv$ = readU32_le_0;
  package$stream.readS16_le_yjldv$ = readS16_le_0;
  package$stream.readS24_le_yjldv$ = readS24_le_0;
  package$stream.readS32_le_yjldv$ = readS32_le_0;
  package$stream.readS64_le_yjldv$ = readS64_le_0;
  package$stream.readF32_le_yjldv$ = readF32_le_0;
  package$stream.readF64_le_yjldv$ = readF64_le_0;
  package$stream.readU16_be_yjldv$ = readU16_be_0;
  package$stream.readU24_be_yjldv$ = readU24_be_0;
  package$stream.readU32_be_yjldv$ = readU32_be_0;
  package$stream.readS16_be_yjldv$ = readS16_be_0;
  package$stream.readS24_be_yjldv$ = readS24_be_0;
  package$stream.readS32_be_yjldv$ = readS32_be_0;
  package$stream.readS64_be_yjldv$ = readS64_be_0;
  package$stream.readF32_be_yjldv$ = readF32_be_0;
  package$stream.readF64_be_yjldv$ = readF64_be_0;
  package$stream.hasLength_g5ykjz$ = hasLength;
  package$stream.hasAvailable_g5ykjz$ = hasAvailable_0;
  package$stream.readAll_yjldv$ = readAll;
  package$stream.readAvailable_yjldv$ = readAvailable;
  package$stream.skip_a0g59h$ = skip;
  package$stream.readUByteArray_a0g59h$ = readUByteArray;
  package$stream.readShortArray_le_a0g59h$ = readShortArray_le_0;
  package$stream.readShortArray_be_a0g59h$ = readShortArray_be_0;
  package$stream.readCharArray_le_a0g59h$ = readCharArray_le_0;
  package$stream.readCharArray_be_a0g59h$ = readCharArray_be_0;
  package$stream.readIntArray_le_a0g59h$ = readIntArray_le_0;
  package$stream.readIntArray_be_a0g59h$ = readIntArray_be_0;
  package$stream.readLongArray_le_a0g59h$ = readLongArray_le_0;
  package$stream.readLongArray_be_a0g59h$ = readLongArray_be_0;
  package$stream.readFloatArray_le_a0g59h$ = readFloatArray_le_0;
  package$stream.readFloatArray_be_a0g59h$ = readFloatArray_be_0;
  package$stream.readDoubleArray_le_a0g59h$ = readDoubleArray_le_0;
  package$stream.readDoubleArray_be_a0g59h$ = readDoubleArray_be_0;
  package$stream.writeBytes_rz40do$ = writeBytes;
  package$stream.writeBytes_77rfa9$ = writeBytes_0;
  package$stream.write8_1j05bi$ = write8_0;
  package$stream.write16_le_1j05bi$ = write16_le_0;
  package$stream.write24_le_1j05bi$ = write24_le_0;
  package$stream.write32_le_1j05bi$ = write32_le_1;
  package$stream.write32_le_no1epl$ = write32_le_2;
  package$stream.write64_le_no1epl$ = write64_le_0;
  package$stream.writeF32_le_naqgfz$ = writeF32_le_0;
  package$stream.writeF64_le_b1blji$ = writeF64_le_0;
  package$stream.write16_be_1j05bi$ = write16_be_0;
  package$stream.write24_be_1j05bi$ = write24_be_0;
  package$stream.write32_be_1j05bi$ = write32_be_1;
  package$stream.write32_be_no1epl$ = write32_be_2;
  package$stream.write64_be_no1epl$ = write64_be_0;
  package$stream.writeF32_be_naqgfz$ = writeF32_be_0;
  package$stream.writeF64_be_b1blji$ = writeF64_be_0;
  package$stream.toAsync_ucmi9i$ = toAsync_1;
  package$stream.toAsync_37wh45$ = toAsync_2;
  package$stream.toAsyncInWorker_ucmi9i$ = toAsyncInWorker;
  package$stream.toAsyncInWorker_37wh45$ = toAsyncInWorker_0;
  package$stream.SyncAsyncStreamBase = SyncAsyncStreamBase;
  package$stream.SyncAsyncStreamBaseInWorker = SyncAsyncStreamBaseInWorker;
  package$stream.writeStream_b7n8o4$ = writeStream;
  package$stream.writeFile_bvymwj$ = writeFile;
  package$stream.copyTo_xwtoy$ = copyTo;
  package$stream.writeToAlign_5vys4l$ = writeToAlign;
  package$stream.skip_50x9bh$ = skip_0;
  package$stream.skipToAlign_50x9bh$ = skipToAlign;
  package$stream.truncate_g5ykjz$ = truncate;
  package$stream.writeCharArray_le_vsk9dy$ = writeCharArray_le;
  package$stream.writeShortArray_le_axfcu2$ = writeShortArray_le;
  package$stream.writeIntArray_le_9396cn$ = writeIntArray_le;
  package$stream.writeLongArray_le_82d4bk$ = writeLongArray_le;
  package$stream.writeFloatArray_le_vsbrxi$ = writeFloatArray_le;
  package$stream.writeDoubleArray_le_k5yo8b$ = writeDoubleArray_le;
  package$stream.writeCharArray_be_vsk9dy$ = writeCharArray_be;
  package$stream.writeShortArray_be_axfcu2$ = writeShortArray_be;
  package$stream.writeIntArray_be_9396cn$ = writeIntArray_be;
  package$stream.writeLongArray_be_82d4bk$ = writeLongArray_be;
  package$stream.writeFloatArray_be_vsbrxi$ = writeFloatArray_be;
  package$stream.writeDoubleArray_be_k5yo8b$ = writeDoubleArray_be;
  package$stream.readUntil_zf0ym4$ = readUntil;
  package$stream.readLine_kt587k$ = readLine;
  package$stream.toAsyncInputStream_p2awyq$ = toAsyncInputStream_0;
  package$stream.toAsyncOutputStream_tjlpjf$ = toAsyncOutputStream_0;
  package$stream.asVfsFile_igl5gt$ = asVfsFile;
  package$stream.readAllAsFastStream_50x9bh$ = readAllAsFastStream;
  package$stream.getWrittenRange_rj0k6g$ = getWrittenRange;
  package$stream.writeU_VL_50x9bh$ = writeU_VL;
  package$stream.writeStringVL_djs7ml$ = writeStringVL;
  package$stream.withLength_q9i8w6$ = withLength;
  package$stream.MemoryAsyncStreamBase_init_za3lpa$ = MemoryAsyncStreamBase_init;
  package$stream.MemoryAsyncStreamBase = MemoryAsyncStreamBase;
  package$stream.ByteArrayBuilder_init_fqrh44$ = ByteArrayBuilder_init;
  package$stream.ByteArrayBuilder_init_1kepcl$ = ByteArrayBuilder_init_0;
  package$stream.ByteArrayBuilder_init_frbc4z$ = ByteArrayBuilder_init_1;
  package$stream.ByteArrayBuilder = ByteArrayBuilder;
  package$stream.ByteArrayBuilderSmall_init_za3lpa$ = ByteArrayBuilderSmall_init;
  package$stream.ByteArrayBuilderSmall = ByteArrayBuilderSmall;
  package$stream.FastByteArrayInputStream = FastByteArrayInputStream;
  package$stream.openFastStream_mrm5p$ = openFastStream;
  Object.defineProperty(SyncProduceConsumerByteBuffer, 'Companion', {
    get: SyncProduceConsumerByteBuffer$Companion_getInstance
  });
  package$stream.SyncProduceConsumerByteBuffer = SyncProduceConsumerByteBuffer;
  package$stream.SyncInputStream = SyncInputStream;
  package$stream.SyncOutputStream = SyncOutputStream;
  package$stream.flush_tjlpjf$ = flush;
  package$stream.write_o1e1if$ = write;
  package$stream.SyncPositionStream = SyncPositionStream;
  package$stream.SyncLengthStream = SyncLengthStream;
  package$stream.SyncRAInputStream = SyncRAInputStream;
  package$stream.SyncRAOutputStream = SyncRAOutputStream;
  package$stream.SyncStreamBase = SyncStreamBase;
  package$stream.SyncStream = SyncStream;
  package$stream.keepPosition_1v0ofm$ = keepPosition;
  package$stream.SliceSyncStreamBase = SliceSyncStreamBase;
  package$stream.FillSyncStreamBase = FillSyncStreamBase;
  package$stream.FillSyncStream_6svq3l$ = FillSyncStream;
  package$stream.MemorySyncStream_fqrh44$ = MemorySyncStream;
  package$stream.MemorySyncStream_yyklod$ = MemorySyncStream_0;
  package$stream.MemorySyncStreamToByteArray_l6bp58$ = MemorySyncStreamToByteArray;
  package$stream.MemorySyncStreamToByteArraySuspend_5gy4q2$ = MemorySyncStreamToByteArraySuspend;
  package$stream.get_hasLength_ucmi9i$ = get_hasLength;
  package$stream.get_hasAvailable_ucmi9i$ = get_hasAvailable;
  package$stream.toByteArray_ucmi9i$ = toByteArray_0;
  package$stream.MemorySyncStreamBase_init_za3lpa$ = MemorySyncStreamBase_init;
  package$stream.MemorySyncStreamBase = MemorySyncStreamBase;
  package$stream.slice_ucmi9i$ = slice_3;
  package$stream.sliceWithStart_gezhyr$ = sliceWithStart_0;
  package$stream.sliceStart_ucmi9i$ = sliceStart_0;
  package$stream.sliceStart_gezhyr$ = sliceStart_1;
  package$stream.sliceHere_ucmi9i$ = sliceHere_0;
  package$stream.slice_i2r7m7$ = slice_4;
  package$stream.slice_50v2io$ = slice_5;
  package$stream.sliceWithBounds_1r8368$ = sliceWithBounds_0;
  package$stream.sliceWithSize_1r8368$ = sliceWithSize_1;
  package$stream.sliceWithSize_acdave$ = sliceWithSize_2;
  package$stream.readSlice_gezhyr$ = readSlice_0;
  package$stream.readStream_hsu5ns$ = readStream_1;
  package$stream.readStream_gezhyr$ = readStream_2;
  package$stream.readStringz_4zsegu$ = readStringz_3;
  package$stream.readStringz_6ey4ts$ = readStringz_4;
  package$stream.readString_6ey4ts$ = readString_1;
  package$stream.writeString_61lhbb$ = writeString_0;
  package$stream.readExact_hz4ta6$ = readExact_0;
  package$stream.read_1fivb2$ = read_1;
  package$stream.read_os0bs8$ = read_2;
  package$stream.readBytesExact_xpzb7k$ = readBytesExact_0;
  package$stream.writeStringz_61lhbb$ = writeStringz_1;
  package$stream.writeStringz_5iah4l$ = writeStringz_2;
  package$stream.readBytes_xpzb7k$ = readBytes_1;
  package$stream.writeBytes_o1e1if$ = writeBytes_1;
  package$stream.writeBytes_nukjz0$ = writeBytes_2;
  Object.defineProperty(package$stream, 'smallTemp', {
    get: get_smallTemp
  });
  package$stream.read_p2awyq$ = read_3;
  package$stream.get_eof_ucmi9i$ = get_eof;
  package$stream.fastReadU8_p2awyq$ = fastReadU8;
  package$stream.fastReadS8_p2awyq$ = fastReadS8;
  package$stream.readU8_p2awyq$ = readU8_1;
  package$stream.readS8_p2awyq$ = readS8_1;
  package$stream.readU16_le_p2awyq$ = readU16_le_1;
  package$stream.readU24_le_p2awyq$ = readU24_le_1;
  package$stream.readU32_le_p2awyq$ = readU32_le_1;
  package$stream.readS16_le_p2awyq$ = readS16_le_1;
  package$stream.readS24_le_p2awyq$ = readS24_le_1;
  package$stream.readS32_le_p2awyq$ = readS32_le_1;
  package$stream.readS64_le_p2awyq$ = readS64_le_1;
  package$stream.readF32_le_p2awyq$ = readF32_le_1;
  package$stream.readF64_le_p2awyq$ = readF64_le_1;
  package$stream.readU16_be_p2awyq$ = readU16_be_1;
  package$stream.readU24_be_p2awyq$ = readU24_be_1;
  package$stream.readU32_be_p2awyq$ = readU32_be_1;
  package$stream.readS16_be_p2awyq$ = readS16_be_1;
  package$stream.readS24_be_p2awyq$ = readS24_be_1;
  package$stream.readS32_be_p2awyq$ = readS32_be_1;
  package$stream.readS64_be_p2awyq$ = readS64_be_1;
  package$stream.readF32_be_p2awyq$ = readF32_be_1;
  package$stream.readF64_be_p2awyq$ = readF64_be_1;
  package$stream.readAvailable_ucmi9i$ = readAvailable_0;
  package$stream.readAll_ucmi9i$ = readAll_0;
  package$stream.readUByteArray_xpzb7k$ = readUByteArray_0;
  package$stream.readShortArray_le_xpzb7k$ = readShortArray_le_1;
  package$stream.readShortArray_be_xpzb7k$ = readShortArray_be_1;
  package$stream.readCharArray_le_xpzb7k$ = readCharArray_le_1;
  package$stream.readCharArray_be_xpzb7k$ = readCharArray_be_1;
  package$stream.readIntArray_le_xpzb7k$ = readIntArray_le_1;
  package$stream.readIntArray_be_xpzb7k$ = readIntArray_be_1;
  package$stream.readLongArray_le_xpzb7k$ = readLongArray_le_1;
  package$stream.readLongArray_be_xpzb7k$ = readLongArray_be_1;
  package$stream.readFloatArray_le_xpzb7k$ = readFloatArray_le_1;
  package$stream.readFloatArray_be_xpzb7k$ = readFloatArray_be_1;
  package$stream.readDoubleArray_le_xpzb7k$ = readDoubleArray_le_1;
  package$stream.readDoubleArray_be_xpzb7k$ = readDoubleArray_be_1;
  package$stream.write8_n5df9z$ = write8_1;
  package$stream.write16_le_n5df9z$ = write16_le_1;
  package$stream.write24_le_n5df9z$ = write24_le_1;
  package$stream.write32_le_n5df9z$ = write32_le_3;
  package$stream.write32_le_7bhjh0$ = write32_le_4;
  package$stream.write64_le_7bhjh0$ = write64_le_1;
  package$stream.writeF32_le_dpexvo$ = writeF32_le_1;
  package$stream.writeF64_le_27561j$ = writeF64_le_1;
  package$stream.write16_be_n5df9z$ = write16_be_1;
  package$stream.write24_be_n5df9z$ = write24_be_1;
  package$stream.write32_be_n5df9z$ = write32_be_3;
  package$stream.write32_be_7bhjh0$ = write32_be_4;
  package$stream.write64_be_7bhjh0$ = write64_be_1;
  package$stream.writeF32_be_dpexvo$ = writeF32_be_1;
  package$stream.writeF64_be_27561j$ = writeF64_be_1;
  package$stream.toSyncStream_wrqxjw$ = toSyncStream;
  package$stream.openSync_m1iwyb$ = openSync;
  package$stream.openAsync_m1iwyb$ = openAsync;
  package$stream.openAsync_7jlb4b$ = openAsync_0;
  package$stream.writeStream_cyjt5w$ = writeStream_0;
  package$stream.copyTo_y2f6oo$ = copyTo_0;
  package$stream.writeToAlign_acdave$ = writeToAlign_0;
  package$stream.skip_hsu5ns$ = skip_1;
  package$stream.skipToAlign_hsu5ns$ = skipToAlign_0;
  package$stream.truncate_ucmi9i$ = truncate_0;
  package$stream.writeCharArray_le_zattpx$ = writeCharArray_le_0;
  package$stream.writeShortArray_le_93fq7f$ = writeShortArray_le_0;
  package$stream.writeIntArray_le_4munlu$ = writeIntArray_le_0;
  package$stream.writeLongArray_le_c0336t$ = writeLongArray_le_0;
  package$stream.writeFloatArray_le_j7x705$ = writeFloatArray_le_0;
  package$stream.writeDoubleArray_le_wbwi8g$ = writeDoubleArray_le_0;
  package$stream.writeCharArray_be_zattpx$ = writeCharArray_be_0;
  package$stream.writeShortArray_be_93fq7f$ = writeShortArray_be_0;
  package$stream.writeIntArray_be_4munlu$ = writeIntArray_be_0;
  package$stream.writeLongArray_be_c0336t$ = writeLongArray_be_0;
  package$stream.writeFloatArray_be_j7x705$ = writeFloatArray_be_0;
  package$stream.writeDoubleArray_be_wbwi8g$ = writeDoubleArray_be_0;
  package$stream.readU_VL_p2awyq$ = readU_VL;
  package$stream.readS_VL_p2awyq$ = readS_VL;
  package$stream.writeU_VL_n5df9z$ = writeU_VL_0;
  package$stream.writeS_VL_n5df9z$ = writeS_VL;
  package$stream.writeStringVL_61lhbb$ = writeStringVL_0;
  package$stream.readStringVL_hpdasm$ = readStringVL;
  package$stream.readExactTo_hz4ta6$ = readExactTo;
  package$util_0.AsyncCache = AsyncCache;
  package$util_0.AsyncCacheItem = AsyncCacheItem;
  Object.defineProperty(AsyncCloseable, 'Companion', {
    get: AsyncCloseable$Companion_getInstance
  });
  package$util_0.AsyncCloseable = AsyncCloseable;
  AsyncInmemoryCache.Entry = AsyncInmemoryCache$Entry;
  package$util_0.AsyncInmemoryCache = AsyncInmemoryCache;
  package$util_0.AsyncInmemoryEntry = AsyncInmemoryEntry;
  Object.defineProperty(package$util_0, 'BYTES_EMPTY', {
    get: function () {
      return BYTES_EMPTY;
    }
  });
  Object.defineProperty(package$util_0, 'BYTES_TEMP_SIZE', {
    get: function () {
      return BYTES_TEMP_SIZE;
    }
  });
  Object.defineProperty(package$util_0, 'BYTES_TEMP', {
    get: get_BYTES_TEMP
  });
  package$util_0.set_ietg8x$ = set;
  package$util_0.set_2iihii$ = set_0;
  package$util_0.getu_mrm5p$ = getu;
  package$util_0.join_q9e4xk$ = join;
  package$util_0.indexOfElse_yp3gck$ = indexOfElse;
  package$util_0.indexOf_2icb7a$ = indexOf_3;
  package$util_0.isDigit_myv2d0$ = isDigit;
  package$util_0.isLetter_myv2d0$ = isLetter;
  package$util_0.isLetterOrDigit_myv2d0$ = isLetterOrDigit;
  package$util_0.isLetterOrUnderscore_myv2d0$ = isLetterOrUnderscore;
  package$util_0.isLetterDigitOrUnderscore_myv2d0$ = isLetterDigitOrUnderscore;
  package$util_0.isLetterOrDigitOrDollar_myv2d0$ = isLetterOrDigitOrDollar;
  package$util_0.get_isNumeric_myv2d0$ = get_isNumeric;
  package$util_0.isPrintable_myv2d0$ = isPrintable;
  package$util_0.firstNotNullOrNull_dvm6j0$ = firstNotNullOrNull;
  package$util_0.compareToChain_ssq1th$ = compareToChain;
  package$util_0.toString_9rbwic$ = toString_1;
  package$util_0.NumericEnum = NumericEnum;
  package$util_0.Flags = Flags;
  IdEnum.SmallCompanion = IdEnum$SmallCompanion;
  package$util_0.IdEnum = IdEnum;
  Object.defineProperty(Indenter, 'INDENTS', {
    get: Indenter$INDENTS_getInstance
  });
  Indenter$Action.Text = Indenter$Action$Text;
  Indenter$Action.Marker = Indenter$Action$Marker;
  Indenter$Action.Inline = Indenter$Action$Inline;
  Indenter$Action.Line = Indenter$Action$Line;
  Indenter$Action.LineDeferred = Indenter$Action$LineDeferred;
  Object.defineProperty(Indenter$Action, 'EmptyLineOnce', {
    get: Indenter$Action$EmptyLineOnce_getInstance
  });
  Object.defineProperty(Indenter$Action, 'Indent', {
    get: Indenter$Action$Indent_getInstance
  });
  Object.defineProperty(Indenter$Action, 'Unindent', {
    get: Indenter$Action$Unindent_getInstance
  });
  Indenter.Action = Indenter$Action;
  Object.defineProperty(Indenter, 'Companion', {
    get: Indenter$Companion_getInstance
  });
  Indenter.IndenterEvaluator = Indenter$IndenterEvaluator;
  package$util_0.Indenter = Indenter;
  package$util_0.get_SEPARATOR_fuuqje$ = get_SEPARATOR;
  package$util_0.EMPTY_LINE_ONCE_fuuqje$ = EMPTY_LINE_ONCE;
  package$util_0.SEPARATOR_1hv01k$ = SEPARATOR;
  package$util_0.XmlIndenter = XmlIndenter;
  package$util_0.xml_hgpmw9$ = xml;
  package$util_0.nonNullMap_96jf0l$ = nonNullMap;
  package$util_0.nullIf_ujn5f2$ = nullIf;
  package$util_0.toString_if0zpk$ = toString_2;
  package$util_0.toString_dqglrj$ = toString_3;
  package$util_0.toStringUnsigned_dqglrj$ = toStringUnsigned;
  package$util_0.toStringUnsigned_if0zpk$ = toStringUnsigned_0;
  Object.defineProperty(package$util_0, 'OS', {
    get: OS_getInstance
  });
  package$util_0.Once = Once;
  package$util_0.AsyncOnce = AsyncOnce;
  Object.defineProperty(package$util_0, 'LONG_ZERO_TO_MAX_RANGE', {
    get: function () {
      return LONG_ZERO_TO_MAX_RANGE;
    }
  });
  package$util_0.toLongRange_9tsm8a$ = toLongRange;
  package$util_0.get_length_9tsm8a$ = get_length;
  package$util_0.get_length_37ivyf$ = get_length_0;
  package$util_0.get_endExclusive_9tsm8a$ = get_endExclusive;
  package$util_0.get_endExclusive_37ivyf$ = get_endExclusive_0;
  package$util_0.RedirectField = RedirectField;
  package$util_0.RedirectMutableField = RedirectMutableField;
  package$util_0.RedirectMutableFieldGen = RedirectMutableFieldGen;
  package$util_0.redirectField_ky7ay8$ = redirectField;
  package$util_0.redirectField_w7kr7o$ = redirectField_0;
  package$util_0.redirectField_7kt5xd$ = redirectField_1;
  package$util_0.redirect_58ahrt$ = redirect;
  package$util_0.redirect_myrrmk$ = redirect_0;
  package$util_0.quote_9fqtcw$ = quote;
  Object.defineProperty(StrReader, 'Companion', {
    get: StrReader$Companion_getInstance
  });
  Object.defineProperty(StrReader$Literals, 'Companion', {
    get: StrReader$Literals$Companion_getInstance
  });
  StrReader.Literals = StrReader$Literals;
  Object.defineProperty(StrReader$TRange, 'Companion', {
    get: StrReader$TRange$Companion_getInstance
  });
  StrReader.TRange = StrReader$TRange;
  package$util_0.StrReader = StrReader;
  package$util_0.readStringLit_834ram$ = readStringLit;
  package$util_0.reader_4hqpxb$ = reader;
  Object.defineProperty(UByteArraySlice, 'Companion', {
    get: UByteArraySlice$Companion_getInstance
  });
  package$util_0.UByteArraySlice = UByteArraySlice;
  package$util_0.toUByteArraySlice_964n91$ = toUByteArraySlice;
  package$util_0.toUnsigned_r1pbmo$ = toUnsigned_0;
  Object.defineProperty(UUID, 'Companion', {
    get: UUID$Companion_getInstance
  });
  package$util_0.UUID = UUID;
  package$util_0.computeRle_3fhhkf$ = computeRle;
  package$util_0.escape_pdl1vz$ = escape;
  package$util_0.uescape_pdl1vz$ = uescape;
  package$util_0.unescape_pdl1vz$ = unescape;
  package$util_0.uquote_5cw0du$ = uquote;
  package$util_0.quote_5cw0du$ = quote_0;
  package$util_0.isQuoted_pdl1vz$ = isQuoted;
  package$util_0.unquote_pdl1vz$ = unquote;
  package$util_0.ExpectedException = ExpectedException;
  package$util_0.generateSync_wz63th$ = generateSync;
  package$util_0.generate_wz63th$ = generate;
  package$util_0.htmlspecialchars_pdl1vz$ = htmlspecialchars;
  package$korio.createURLForData_nwlife$ = createURLForData;
  package$korio.revokeRLForData_61zpoe$ = revokeRLForData;
  package$korio.createTemporalURLForData_y2mrn0$ = createTemporalURLForData;
  Object.defineProperty(package$korio, 'jsLocalStorageVfs', {
    get: get_jsLocalStorageVfs
  });
  package$korio.Synchronized = Synchronized;
  package$korio.JvmField = JvmField;
  package$korio.JvmStatic = JvmStatic;
  package$korio.JvmOverloads = JvmOverloads;
  package$korio.Transient = Transient;
  package$korio.IOException = IOException;
  package$korio.EOFException = EOFException;
  package$korio.FileNotFoundException = FileNotFoundException;
  package$korio.RuntimeException = RuntimeException;
  package$korio.IllegalStateException = IllegalStateException;
  Object.defineProperty(package$korio, 'global', {
    get: function () {
      return global_0;
    }
  });
  package$korio.Semaphore = Semaphore;
  Object.defineProperty(package$korio, 'isNodeJs', {
    get: get_isNodeJs
  });
  KorioNative.prototype.NativeThreadLocal = KorioNative$NativeThreadLocal;
  KorioNative.prototype.SimplerMessageDigest = KorioNative$SimplerMessageDigest;
  KorioNative.prototype.SimplerMac = KorioNative$SimplerMac;
  Object.defineProperty(package$korio, 'KorioNative', {
    get: KorioNative_getInstance
  });
  package$korio.jsNew_za3rmp$ = jsNew;
  package$korio.jsNew_wn2jw4$ = jsNew_0;
  package$korio.jsNew_2br51b$ = jsNew_1;
  package$korio.jsNew_vl6e50$ = jsNew_2;
  package$korio.jsEnsureNumber_za3rmp$ = jsEnsureNumber;
  package$korio.jsEnsureInt_za3rmp$ = jsEnsureInt;
  package$korio.jsEmptyObj = jsEmptyObj;
  package$korio.jsEmptyArray = jsEmptyArray;
  package$korio.jsObjectKeys_za3rmp$ = jsObjectKeys;
  package$korio.jsToArray_za3rmp$ = jsToArray;
  package$korio.jsArray_jiburq$ = jsArray;
  package$korio.jsObject_pyyo18$ = jsObject;
  package$korio.jsToObjectMap_za3rmp$ = jsToObjectMap;
  package$korio.HttpClientBrowserJs = HttpClientBrowserJs;
  package$korio.JsWebSocketClientFactory = JsWebSocketClientFactory;
  package$korio.JsWebSocketClient = JsWebSocketClient;
  package$korio.toByteArray_lye5cv$ = toByteArray_1;
  package$korio.asInt8Array_964n91$ = asInt8Array;
  package$korio.asUint8Array_964n91$ = asUint8Array;
  package$korio.toNodeJsBuffer_964n91$ = toNodeJsBuffer;
  package$korio.toNodeJsBuffer_ietg8x$ = toNodeJsBuffer_0;
  package$korio.HttpClientNodeJs = HttpClientNodeJs;
  package$korio.HttpSeverNodeJs = HttpSeverNodeJs;
  package$korio.NodeJsAsyncClient = NodeJsAsyncClient;
  package$korio.NodeJsAsyncServer = NodeJsAsyncServer;
  NodeJsLocalVfs.FD = NodeJsLocalVfs$FD;
  package$korio.NodeJsLocalVfs = NodeJsLocalVfs;
  package$korio.NodeFDStream = NodeFDStream;
  Object.defineProperty(package$async, 'KorioDefaultDispatcher', {
    get: function () {
      return KorioDefaultDispatcher;
    }
  });
  HttpServer$Request.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  DefaultDelayFrame$ObjectLiteral.prototype.delayFrame_fefoe3$ = DelayFrame.prototype.delayFrame_fefoe3$;
  TestCoroutineDispatcher.prototype.delay_tho5ed$$default = Delay.prototype.delay_tho5ed$$default;
  TestCoroutineDispatcher.prototype.invokeOnTimeout_rvvvjy$ = Delay.prototype.invokeOnTimeout_rvvvjy$;
  TestCoroutineDispatcher.prototype.delay_tho5ed$ = Delay.prototype.delay_tho5ed$;
  ProduceConsumer.prototype.consume_4l50dc$ = Consumer.prototype.consume_4l50dc$;
  AsyncProducerStream.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.delay_tho5ed$$default = Delay.prototype.delay_tho5ed$$default;
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.invokeOnTimeout_rvvvjy$ = Delay.prototype.invokeOnTimeout_rvvvjy$;
  runBlockingNoSuspensions$ObjectLiteral$context$ObjectLiteral.prototype.delay_tho5ed$ = Delay.prototype.delay_tho5ed$;
  Uncompressed.prototype.compress_k0b7q8$ = CompressionMethod.prototype.compress_k0b7q8$;
  Deflate.prototype.compress_k0b7q8$ = CompressionMethod.prototype.compress_k0b7q8$;
  GZIPBase$uncompress$ObjectLiteral.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  AsyncInputWithLengthStream.prototype.getPosition = AsyncGetPositionStream.prototype.getPosition;
  AsyncInputWithLengthStream.prototype.getLength = AsyncGetLengthStream.prototype.getLength;
  GZIPBase.prototype.compress_k0b7q8$ = CompressionMethod.prototype.compress_k0b7q8$;
  ZLib$uncompress$ObjectLiteral.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  ZLib.prototype.compress_k0b7q8$ = CompressionMethod.prototype.compress_k0b7q8$;
  Lzma.prototype.compress_k0b7q8$ = CompressionMethod.prototype.compress_k0b7q8$;
  LimitedOutputStream.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  SimpleChecksum$Companion$DUMMY$ObjectLiteral.prototype.update_3fge6q$ = SimpleChecksum.prototype.update_3fge6q$;
  Adler32.prototype.update_3fge6q$ = SimpleChecksum.prototype.update_3fge6q$;
  CRC32.prototype.update_3fge6q$ = SimpleChecksum.prototype.update_3fge6q$;
  BoolRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  BoolRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  BoolRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  BoolRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  BoolRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  BoolRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  BoolRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  BoolRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  BoolRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  BoolRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  BoolRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  BoolRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  ByteRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  ByteRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  ByteRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  ByteRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  ByteRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  ByteRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  ByteRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  ByteRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  ByteRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  ByteRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  ByteRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  ByteRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  ShortRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  ShortRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  ShortRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  ShortRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  ShortRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  ShortRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  ShortRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  ShortRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  ShortRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  ShortRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  ShortRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  ShortRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  CharRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  CharRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  CharRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  CharRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  CharRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  CharRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  CharRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  CharRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  CharRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  CharRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  CharRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  CharRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  IntRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  IntRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  IntRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  IntRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  IntRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  IntRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  IntRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  IntRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  IntRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  IntRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  IntRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  IntRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  FloatRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  FloatRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  FloatRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  FloatRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  FloatRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  FloatRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  FloatRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  FloatRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  FloatRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  FloatRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  FloatRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  FloatRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  DoubleRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  DoubleRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  DoubleRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  DoubleRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  DoubleRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  DoubleRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  DoubleRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  DoubleRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  DoubleRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  DoubleRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  DoubleRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  DoubleRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  LongRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  LongRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  LongRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  LongRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  LongRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  LongRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  LongRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  LongRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  LongRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  LongRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  DoubleListRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  DoubleListRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  DoubleListRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  DoubleListRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  DoubleListRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  DoubleListRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  DoubleListRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  DoubleListRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  DoubleListRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  DoubleListRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  DoubleListRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  DoubleListRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  IntListRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  IntListRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  IntListRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  IntListRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  IntListRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  IntListRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  IntListRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  IntListRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  IntListRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  IntListRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  IntListRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  IntListRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  NumberList.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  NumberList.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  NumberList.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  NumberList.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  NumberList.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  NumberList.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  NumberList.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  NumberList.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  NumberList.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  NumberList.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  NumberList.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  NumberList.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  Int8BufferRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  Int8BufferRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  Int8BufferRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  Int8BufferRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  Int8BufferRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  Int8BufferRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  Int8BufferRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  Int8BufferRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  Int8BufferRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  Int8BufferRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  Int8BufferRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  Int8BufferRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  Int16BufferRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  Int16BufferRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  Int16BufferRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  Int16BufferRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  Int16BufferRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  Int16BufferRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  Int16BufferRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  Int16BufferRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  Int16BufferRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  Int16BufferRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  Int16BufferRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  Int16BufferRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  Int32BufferRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  Int32BufferRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  Int32BufferRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  Int32BufferRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  Int32BufferRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  Int32BufferRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  Int32BufferRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  Int32BufferRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  Int32BufferRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  Int32BufferRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  Int32BufferRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  Int32BufferRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  Float32BufferRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  Float32BufferRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  Float32BufferRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  Float32BufferRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  Float32BufferRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  Float32BufferRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  Float32BufferRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  Float32BufferRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  Float32BufferRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  Float32BufferRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  Float32BufferRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  Float32BufferRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  Float64BufferRaw.prototype.getBool_za3lpa$ = NumberRawArray.prototype.getBool_za3lpa$;
  Float64BufferRaw.prototype.setBool_fzusl$ = NumberRawArray.prototype.setBool_fzusl$;
  Float64BufferRaw.prototype.getByte_za3lpa$ = NumberRawArray.prototype.getByte_za3lpa$;
  Float64BufferRaw.prototype.setByte_6t1wet$ = NumberRawArray.prototype.setByte_6t1wet$;
  Float64BufferRaw.prototype.getShort_za3lpa$ = NumberRawArray.prototype.getShort_za3lpa$;
  Float64BufferRaw.prototype.setShort_2bqt6h$ = NumberRawArray.prototype.setShort_2bqt6h$;
  Float64BufferRaw.prototype.getInt_za3lpa$ = NumberRawArray.prototype.getInt_za3lpa$;
  Float64BufferRaw.prototype.setInt_vux9f0$ = NumberRawArray.prototype.setInt_vux9f0$;
  Float64BufferRaw.prototype.getFloat_za3lpa$ = NumberRawArray.prototype.getFloat_za3lpa$;
  Float64BufferRaw.prototype.setFloat_24o109$ = NumberRawArray.prototype.setFloat_24o109$;
  Float64BufferRaw.prototype.getLong_za3lpa$ = NumberRawArray.prototype.getLong_za3lpa$;
  Float64BufferRaw.prototype.setLong_6svq3l$ = NumberRawArray.prototype.setLong_6svq3l$;
  AsyncLengthStream.prototype.getLength = AsyncGetLengthStream.prototype.getLength;
  Cancellable$Companion$invoke$ObjectLiteral.prototype.cancel_tcv7n7$ = Cancellable.prototype.cancel_tcv7n7$;
  DynamicContextInstance.prototype.toBool_mzud1t$ = DynamicContext.prototype.toBool_mzud1t$;
  DynamicContextInstance.prototype.toByte_mzud1t$ = DynamicContext.prototype.toByte_mzud1t$;
  DynamicContextInstance.prototype.toChar_mzud1t$ = DynamicContext.prototype.toChar_mzud1t$;
  DynamicContextInstance.prototype.toShort_mzud1t$ = DynamicContext.prototype.toShort_mzud1t$;
  DynamicContextInstance.prototype.toInt_mzud1t$ = DynamicContext.prototype.toInt_mzud1t$;
  DynamicContextInstance.prototype.toLong_mzud1t$ = DynamicContext.prototype.toLong_mzud1t$;
  DynamicContextInstance.prototype.toFloat_mzud1t$ = DynamicContext.prototype.toFloat_mzud1t$;
  DynamicContextInstance.prototype.toDouble_mzud1t$ = DynamicContext.prototype.toDouble_mzud1t$;
  DynamicContextInstance.prototype.toNumber_mzud1t$ = DynamicContext.prototype.toNumber_mzud1t$;
  DynamicContextInstance.prototype.toDynamicList_mzud1t$ = DynamicContext.prototype.toDynamicList_mzud1t$;
  DynamicContextInstance.prototype.toDynamicMap_mzud1t$ = DynamicContext.prototype.toDynamicMap_mzud1t$;
  DynamicContextInstance.prototype.get_uozw8h$ = DynamicContext.prototype.get_uozw8h$;
  AsyncClient.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  FakeHttpClientEndpoint.prototype.request_v6tn8p$ = HttpClientEndpoint.prototype.request_v6tn8p$;
  endpoint$ObjectLiteral.prototype.request_v6tn8p$ = HttpClientEndpoint.prototype.request_v6tn8p$;
  ObjectMapper$TypeContext.prototype.toBool_mzud1t$ = DynamicContext.prototype.toBool_mzud1t$;
  ObjectMapper$TypeContext.prototype.toByte_mzud1t$ = DynamicContext.prototype.toByte_mzud1t$;
  ObjectMapper$TypeContext.prototype.toChar_mzud1t$ = DynamicContext.prototype.toChar_mzud1t$;
  ObjectMapper$TypeContext.prototype.toShort_mzud1t$ = DynamicContext.prototype.toShort_mzud1t$;
  ObjectMapper$TypeContext.prototype.toInt_mzud1t$ = DynamicContext.prototype.toInt_mzud1t$;
  ObjectMapper$TypeContext.prototype.toLong_mzud1t$ = DynamicContext.prototype.toLong_mzud1t$;
  ObjectMapper$TypeContext.prototype.toFloat_mzud1t$ = DynamicContext.prototype.toFloat_mzud1t$;
  ObjectMapper$TypeContext.prototype.toDouble_mzud1t$ = DynamicContext.prototype.toDouble_mzud1t$;
  ObjectMapper$TypeContext.prototype.toNumber_mzud1t$ = DynamicContext.prototype.toNumber_mzud1t$;
  ObjectMapper$TypeContext.prototype.toDynamicList_mzud1t$ = DynamicContext.prototype.toDynamicList_mzud1t$;
  ObjectMapper$TypeContext.prototype.toDynamicMap_mzud1t$ = DynamicContext.prototype.toDynamicMap_mzud1t$;
  ObjectMapper$TypeContext.prototype.get_uozw8h$ = DynamicContext.prototype.get_uozw8h$;
  AsyncProduceConsumerByteBuffer.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  AsyncPositionStream.prototype.getPosition = AsyncGetPositionStream.prototype.getPosition;
  AsyncPositionLengthStream.prototype.setPosition_s8cxhz$ = AsyncPositionStream.prototype.setPosition_s8cxhz$;
  AsyncPositionLengthStream.prototype.getPosition = AsyncPositionStream.prototype.getPosition;
  AsyncPositionLengthStream.prototype.setLength_s8cxhz$ = AsyncLengthStream.prototype.setLength_s8cxhz$;
  AsyncPositionLengthStream.prototype.getLength = AsyncLengthStream.prototype.getLength;
  AsyncStream.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  toAsyncOutputStream$ObjectLiteral.prototype.write_mj6st8$ = AsyncOutputStream.prototype.write_mj6st8$;
  SyncOutputStream.prototype.close = OptionalCloseable.prototype.close;
  SyncInputStream.prototype.close = OptionalCloseable.prototype.close;
  SyncProduceConsumerByteBuffer.prototype.close = SyncOutputStream.prototype.close;
  NodeJsAsyncClient.prototype.write_mj6st8$ = AsyncClient.prototype.write_mj6st8$;
  KORIO_VERSION = '0.21.0';
  DefaultDelayFrame = new DefaultDelayFrame$ObjectLiteral();
  GZIP = new GZIPBase(true);
  GZIPNoCrc = new GZIPBase(false);
  resourcesVfs = lazy(resourcesVfs$lambda);
  rootLocalVfs = lazy(rootLocalVfs$lambda);
  applicationVfs = lazy(applicationVfs$lambda);
  cacheVfs = lazy(cacheVfs$lambda);
  externalStorageVfs = lazy(externalStorageVfs$lambda);
  userHomeVfs = lazy(userHomeVfs$lambda);
  localCurrentDirVfs = lazy(localCurrentDirVfs$lambda);
  tempVfs = lazy(tempVfs$lambda);
  defaultUniSchema = UniSchemaProviders_init_0([new UniSchema('http', defaultUniSchema$lambda), new UniSchema('https', defaultUniSchema$lambda_0), new UniSchema('file', defaultUniSchema$lambda_1)]);
  LATIN1 = ISO_8859_1_getInstance();
  UTF16_LE = new UTF16Charset(true);
  UTF16_BE = new UTF16Charset(false);
  formatRegex = Regex_init('%([-]?\\d+)?(\\w)');
  replaceNonPrintableCharactersRegex = lazy(replaceNonPrintableCharactersRegex$lambda);
  _defaultHttpFactory = lazy(_defaultHttpFactory$lambda);
  HttpDate = new SimplerDateFormat('EEE, dd MMM yyyy HH:mm:ss z');
  Mapper = new ObjectMapper();
  EMPTY_BYTE_ARRAY = new Int8Array(0);
  smallTemp = new threadLocal(smallTemp$lambda);
  BYTES_EMPTY = new Int8Array([]);
  BYTES_TEMP_SIZE = 65536;
  BYTES_TEMP = new threadLocal(BYTES_TEMP$lambda);
  DIGITS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  LONG_ZERO_TO_MAX_RANGE = L0.rangeTo(Long$Companion$MAX_VALUE);
  jsLocalStorageVfs = lazy(jsLocalStorageVfs$lambda);
  global_0 = typeof global !== 'undefined' ? global : window;
  isNodeJs = lazy(isNodeJs$lambda);
  KorioDefaultDispatcher = coroutines_0.DefaultDispatcher;
  Kotlin.defineModule('korio-js', _);
  return _;
}));

//# sourceMappingURL=korio-js.js.map
